import type { Pagination } from '../types/message-types.js';
import type { Signer } from '../types/signer.js';
import type { RecordsFilter, RecordsQueryMessage } from '../types/records-types.js';
import { Message } from '../core/message.js';
export declare enum DateSort {
    CreatedAscending = "createdAscending",
    CreatedDescending = "createdDescending",
    PublishedAscending = "publishedAscending",
    PublishedDescending = "publishedDescending"
}
export type RecordsQueryOptions = {
    messageTimestamp?: string;
    filter: RecordsFilter;
    dateSort?: DateSort;
    pagination?: Pagination;
    authorizationSigner?: Signer;
};
export declare class RecordsQuery extends Message<RecordsQueryMessage> {
    static parse(message: RecordsQueryMessage): Promise<RecordsQuery>;
    static create(options: RecordsQueryOptions): Promise<RecordsQuery>;
}
//# sourceMappingURL=records-query.d.ts.map