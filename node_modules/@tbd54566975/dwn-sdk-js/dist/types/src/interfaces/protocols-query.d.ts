import type { MessageStore } from '../types/message-store.js';
import type { SignatureInput } from '../types/jws-types.js';
import type { ProtocolsQueryFilter, ProtocolsQueryMessage } from '../types/protocols-types.js';
import { Message } from '../core/message.js';
export type ProtocolsQueryOptions = {
    messageTimestamp?: string;
    filter?: ProtocolsQueryFilter;
    authorizationSignatureInput?: SignatureInput;
    permissionsGrantId?: string;
};
export declare class ProtocolsQuery extends Message<ProtocolsQueryMessage> {
    static parse(message: ProtocolsQueryMessage): Promise<ProtocolsQuery>;
    static create(options: ProtocolsQueryOptions): Promise<ProtocolsQuery>;
    private static normalizeFilter;
    authorize(tenant: string, messageStore: MessageStore): Promise<void>;
}
//# sourceMappingURL=protocols-query.d.ts.map