var u="(?:%[0-9a-fA-F]{2})",c=`(?:[a-zA-Z0-9._-]|${u})`,a="([a-z0-9]+)",f=`((?:${c}*:)*(${c}+))`,s="[a-zA-Z0-9_.:%-]",l=`;${s}+=${s}*`,p=`((${l})*)`,m="(/[^#?]*)?",y="([?][^#]*)?",D="(#.*)?",h=new RegExp(`^did:${a}:${f}${p}${m}${y}${D}$`);function d(i){if(i===""||!i)return null;let e=i.match(h);if(e){let t={did:`did:${e[1]}:${e[2]}`,method:e[1],id:e[2],didUrl:i};if(e[4]){let n=e[4].slice(1).split(";");t.params={};for(let r of n){let o=r.split("=");t.params[o[0]]=o[1]}}return e[6]&&(t.path=e[6]),e[7]&&(t.query=e[7].slice(1)),e[8]&&(t.fragment=e[8].slice(1)),t}return null}var P=/^did:([a-z0-9]+):((?:(?:[a-zA-Z0-9._-]|(?:%[0-9a-fA-F]{2}))*:)*((?:[a-zA-Z0-9._-]|(?:%[0-9a-fA-F]{2}))+))((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\/[^#?]*)?([?][^#]*)?(#.*)?$/;function R(i){let{didDocument:e,id:t,type:n}=i??{};return e?.service?.filter(r=>!(t&&r.id!==t||n&&r.type!==n))??[]}function A(i){let{didDocument:e,publicKeyJwk:t,publicKeyMultibase:n}=i;if(!e)throw new Error("Required parameter missing: 'didDocument'");if(!e.verificationMethod)throw new Error("Given `didDocument` is missing `verificationMethod` entries.");for(let r of e.verificationMethod)if(n&&"publicKeyMultibase"in r){if(n===r.publicKeyMultibase)return r.id}else if(t&&"crv"in t&&"publicKeyJwk"in r&&"crv"in r.publicKeyJwk&&t.crv===r.publicKeyJwk.crv&&t.x===r.publicKeyJwk.x)return r.id}function g(i){let{didDocument:e}=i,t=[];for(let n in e)typeof e[n]=="object"?t=t.concat(g({didDocument:e[n]})):n==="type"&&t.push(e[n]);return[...new Set(t)]}function w(i){return i!==void 0&&typeof i!="string"&&!Array.isArray(i)&&"nodes"in i&&"signingKeys"in i}function E({didUrl:i}){return d(i)}export{P as DID_REGEX,R as getServices,A as getVerificationMethodIds,g as getVerificationMethodTypes,w as isDwnServiceEndpoint,E as parseDid};
//# sourceMappingURL=utils.js.map
