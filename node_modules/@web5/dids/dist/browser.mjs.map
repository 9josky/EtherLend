{
  "version": 3,
  "sources": ["../../../node_modules/base64-js/index.js", "../../../node_modules/ieee754/index.js", "../../../node_modules/buffer/index.js", "../build/buffer-polyfill.cjs", "../../../node_modules/level-supports/index.js", "../../../node_modules/module-error/index.js", "../../../node_modules/level-transcoder/lib/text-endec.js", "../../../node_modules/level-transcoder/lib/encoding.js", "../../../node_modules/level-transcoder/lib/formats.js", "../../../node_modules/level-transcoder/lib/encodings.js", "../../../node_modules/level-transcoder/index.js", "../../../node_modules/events/events.js", "../../../node_modules/catering/next-tick-browser.js", "../../../node_modules/catering/index.js", "../../../node_modules/abstract-level/lib/common.js", "../../../node_modules/abstract-level/abstract-iterator.js", "../../../node_modules/abstract-level/lib/default-kv-iterator.js", "../../../node_modules/abstract-level/lib/deferred-iterator.js", "../../../node_modules/abstract-level/abstract-chained-batch.js", "../../../node_modules/abstract-level/lib/default-chained-batch.js", "../../../node_modules/abstract-level/lib/range-options.js", "../../../node_modules/queue-microtask/index.js", "../../../node_modules/abstract-level/lib/next-tick-browser.js", "../../../node_modules/abstract-level/lib/abstract-sublevel-iterator.js", "../../../node_modules/abstract-level/lib/abstract-sublevel.js", "../../../node_modules/abstract-level/abstract-level.js", "../../../node_modules/abstract-level/index.js", "../../../node_modules/run-parallel-limit/index.js", "../../../node_modules/browser-level/util/key-range.js", "../../../node_modules/browser-level/util/deserialize.js", "../../../node_modules/browser-level/iterator.js", "../../../node_modules/browser-level/util/clear.js", "../../../node_modules/browser-level/index.js", "../../../node_modules/level/browser.js", "../../../node_modules/b4a/lib/ascii.js", "../../../node_modules/b4a/lib/base64.js", "../../../node_modules/b4a/lib/hex.js", "../../../node_modules/b4a/lib/utf8.js", "../../../node_modules/b4a/lib/utf16le.js", "../../../node_modules/b4a/browser.js", "../../../node_modules/z32/index.js", "../../../node_modules/dns-packet/types.js", "../../../node_modules/dns-packet/rcodes.js", "../../../node_modules/dns-packet/opcodes.js", "../../../node_modules/dns-packet/classes.js", "../../../node_modules/dns-packet/optioncodes.js", "../../../node_modules/@leichtgewicht/ip-codec/index.cjs", "../../../node_modules/dns-packet/index.js", "../../../node_modules/nanoassert/index.js", "../../../node_modules/sodium-javascript/randombytes.js", "../../../node_modules/sodium-javascript/memory.js", "../../../node_modules/sodium-javascript/crypto_verify.js", "../../../node_modules/sodium-javascript/helpers.js", "../../../node_modules/sha512-universal/sha512.js", "../../../node_modules/sha512-wasm/sha512.js", "../../../node_modules/sha512-wasm/index.js", "../../../node_modules/sha512-universal/index.js", "../../../node_modules/sodium-javascript/crypto_auth.js", "../../../node_modules/sodium-javascript/crypto_hash.js", "../../../node_modules/sodium-javascript/internal/ed25519.js", "../../../node_modules/sodium-javascript/crypto_scalarmult.js", "../../../node_modules/blake2b-wasm/blake2b.js", "../../../node_modules/blake2b-wasm/index.js", "../../../node_modules/blake2b/index.js", "../../../node_modules/sodium-javascript/crypto_generichash.js", "../../../node_modules/xsalsa20/xsalsa20.js", "../../../node_modules/xsalsa20/index.js", "../../../node_modules/sodium-javascript/crypto_stream.js", "../../../node_modules/sodium-javascript/internal/poly1305.js", "../../../node_modules/sodium-javascript/crypto_onetimeauth.js", "../../../node_modules/sodium-javascript/crypto_secretbox.js", "../../../node_modules/sodium-javascript/crypto_box.js", "../../../node_modules/sha256-universal/sha256.js", "../../../node_modules/sha256-wasm/sha256.js", "../../../node_modules/sha256-wasm/index.js", "../../../node_modules/sha256-universal/index.js", "../../../node_modules/sodium-javascript/crypto_hash_sha256.js", "../../../node_modules/sodium-javascript/crypto_kdf.js", "../../../node_modules/sodium-javascript/crypto_kx.js", "../../../node_modules/chacha20-universal/index.js", "../../../node_modules/sodium-javascript/crypto_stream_chacha20.js", "../../../node_modules/sodium-javascript/crypto_aead.js", "../../../node_modules/sodium-javascript/internal/hchacha20.js", "../../../node_modules/sodium-javascript/crypto_secretstream.js", "../../../node_modules/siphash24/siphash24.js", "../../../node_modules/siphash24/fallback.js", "../../../node_modules/siphash24/index.js", "../../../node_modules/sodium-javascript/crypto_shorthash.js", "../../../node_modules/sodium-javascript/crypto_sign.js", "../../../node_modules/sodium-javascript/index.js", "../../../node_modules/sodium-universal/index.js", "../../../node_modules/cross-fetch/dist/browser-ponyfill.js", "../../../node_modules/hash-wasm/dist/index.umd.js", "../../../node_modules/@decentralized-identity/ion-pow-sdk/src/index.js", "../../../node_modules/uri-js/src/index.ts", "../../../node_modules/uri-js/src/schemes/urn-uuid.ts", "../../../node_modules/uri-js/src/schemes/urn.ts", "../../../node_modules/uri-js/src/schemes/mailto.ts", "../../../node_modules/uri-js/src/schemes/wss.ts", "../../../node_modules/uri-js/src/schemes/ws.ts", "../../../node_modules/uri-js/src/schemes/https.ts", "../../../node_modules/uri-js/src/schemes/http.ts", "../../../node_modules/uri-js/src/uri.ts", "../../../node_modules/uri-js/node_modules/punycode/punycode.es6.js", "../../../node_modules/uri-js/src/regexps-iri.ts", "../../../node_modules/uri-js/src/regexps-uri.ts", "../../../node_modules/uri-js/src/util.ts", "../../../node_modules/canonicalize/lib/canonicalize.js", "../../../node_modules/@multiformats/base-x/src/index.js", "../../../node_modules/multibase/src/util.js", "../../../node_modules/multibase/src/base.js", "../../../node_modules/multibase/src/rfc4648.js", "../../../node_modules/multibase/src/constants.js", "../../../node_modules/multibase/src/index.js", "../../../node_modules/multihashes/node_modules/varint/encode.js", "../../../node_modules/multihashes/node_modules/varint/decode.js", "../../../node_modules/multihashes/node_modules/varint/length.js", "../../../node_modules/multihashes/node_modules/varint/index.js", "../../../node_modules/multihashes/src/constants.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/vendor/base-x.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/bytes.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/bases/base.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/bases/identity.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/bases/base2.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/bases/base8.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/bases/base10.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/bases/base16.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/bases/base32.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/bases/base36.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/bases/base58.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/bases/base64.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/bases/base256emoji.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/vendor/varint.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/varint.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/hashes/digest.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/hashes/hasher.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/hashes/sha2-browser.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/hashes/identity.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/codecs/raw.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/codecs/json.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/cid.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/index.js", "../../../node_modules/multihashes/node_modules/multiformats/esm/src/basics.js", "../../../node_modules/multihashes/node_modules/uint8arrays/esm/src/util/as-uint8array.js", "../../../node_modules/multihashes/node_modules/uint8arrays/esm/src/alloc.js", "../../../node_modules/multihashes/node_modules/uint8arrays/esm/src/util/bases.js", "../../../node_modules/multihashes/node_modules/uint8arrays/esm/src/to-string.js", "../../../node_modules/multihashes/node_modules/uint8arrays/esm/src/from-string.js", "../../../node_modules/multihashes/node_modules/uint8arrays/esm/src/concat.js", "../../../node_modules/multihashes/src/index.js", "../../../node_modules/ms/index.js", "../src/index.ts", "../src/dht.ts", "../../crypto/dist/esm/index.js", "../../crypto/dist/esm/algorithms-api/index.js", "../../crypto/dist/esm/algorithms-api/errors.js", "../../crypto/dist/esm/algorithms-api/ec/index.js", "../../crypto/dist/esm/algorithms-api/ec/base.js", "../../crypto/dist/esm/algorithms-api/crypto-algorithm.js", "../../crypto/dist/esm/utils.js", "../../common/src/index.ts", "../../common/src/convert.ts", "../../../node_modules/multiformats/src/bases/base58.js", "../../../node_modules/multiformats/src/bases/base.js", "../../../node_modules/multiformats/vendor/base-x.js", "../../../node_modules/multiformats/src/bytes.js", "../../../node_modules/multiformats/src/bases/interface.js", "../../../node_modules/multiformats/src/bases/base64.js", "../../common/src/type-utils.ts", "../../common/src/multicodec.ts", "../../../node_modules/multiformats/src/index.js", "../../../node_modules/multiformats/src/cid.js", "../../../node_modules/multiformats/src/varint.js", "../../../node_modules/multiformats/vendor/varint.js", "../../../node_modules/multiformats/src/hashes/digest.js", "../../../node_modules/multiformats/src/bases/base32.js", "../../../node_modules/multiformats/src/link/interface.js", "../../../node_modules/multiformats/src/hashes/hasher.js", "../../../node_modules/multiformats/src/interface.js", "../../common/src/object.ts", "../../common/src/stores.ts", "../../../node_modules/@noble/hashes/src/utils.ts", "../../../node_modules/@noble/hashes/src/crypto.ts", "../../crypto/dist/esm/algorithms-api/ec/ecdh.js", "../../crypto/dist/esm/algorithms-api/ec/ecdsa.js", "../../crypto/dist/esm/algorithms-api/ec/eddsa.js", "../../crypto/dist/esm/algorithms-api/aes/index.js", "../../crypto/dist/esm/algorithms-api/aes/ctr.js", "../../crypto/dist/esm/algorithms-api/aes/base.js", "../../crypto/dist/esm/algorithms-api/crypto-key.js", "../../crypto/dist/esm/algorithms-api/pbkdf/index.js", "../../crypto/dist/esm/algorithms-api/pbkdf/pbkdf2.js", "../../crypto/dist/esm/crypto-algorithms/index.js", "../../crypto/dist/esm/crypto-algorithms/ecdh.js", "../../crypto/dist/esm/crypto-primitives/index.js", "../../crypto/dist/esm/crypto-primitives/pbkdf2.js", "../../crypto/dist/esm/crypto-primitives/x25519.js", "../../../node_modules/@noble/curves/src/ed25519.ts", "../../../node_modules/@noble/hashes/src/sha512.ts", "../../../node_modules/@noble/hashes/src/_sha2.ts", "../../../node_modules/@noble/hashes/src/_assert.ts", "../../../node_modules/@noble/hashes/src/_u64.ts", "../../../node_modules/@noble/curves/src/abstract/edwards.ts", "../../../node_modules/@noble/curves/src/abstract/modular.ts", "../../../node_modules/@noble/curves/src/abstract/utils.ts", "../../../node_modules/@noble/curves/src/abstract/curve.ts", "../../../node_modules/@noble/curves/src/abstract/montgomery.ts", "../../../node_modules/@noble/curves/src/abstract/hash-to-curve.ts", "../../crypto/dist/esm/crypto-primitives/aes-ctr.js", "../../crypto/dist/esm/crypto-primitives/aes-gcm.js", "../../crypto/dist/esm/crypto-primitives/ed25519.js", "../../crypto/dist/esm/crypto-primitives/concat-kdf.js", "../../../node_modules/@noble/hashes/src/sha256.ts", "../../crypto/dist/esm/crypto-primitives/secp256k1.js", "../../../node_modules/@noble/curves/src/secp256k1.ts", "../../../node_modules/@noble/curves/src/abstract/weierstrass.ts", "../../../node_modules/@noble/curves/src/_shortw_utils.ts", "../../../node_modules/@noble/hashes/src/hmac.ts", "../../crypto/dist/esm/crypto-primitives/xchacha20.js", "../../../node_modules/@noble/ciphers/src/chacha.ts", "../../../node_modules/@noble/ciphers/src/utils.ts", "../../../node_modules/@noble/ciphers/src/_poly1305.ts", "../../../node_modules/@noble/ciphers/src/_assert.ts", "../../../node_modules/@noble/ciphers/src/_salsa.ts", "../../crypto/dist/esm/crypto-primitives/xchacha20-poly1305.js", "../../crypto/dist/esm/crypto-algorithms/ecdsa.js", "../../crypto/dist/esm/crypto-algorithms/eddsa.js", "../../crypto/dist/esm/crypto-algorithms/pbkdf2.js", "../../crypto/dist/esm/crypto-algorithms/aes-ctr.js", "../../crypto/dist/esm/jose.js", "../../../node_modules/pkarr/index.js", "../../../node_modules/pkarr/lib/dht.browser.js", "../../../node_modules/pkarr/lib/tools.js", "../../../node_modules/bencode/index.js", "../../../node_modules/bencode/lib/encode.js", "../../../node_modules/uint8-util/browser.js", "../../../node_modules/uint8-util/util.js", "../../../node_modules/src/index.ts", "../../../node_modules/bencode/lib/util.js", "../../../node_modules/bencode/lib/decode.js", "../../../node_modules/bencode/lib/encoding-length.js", "../../../node_modules/pkarr/lib/signed_packet.js", "../src/did-dht.ts", "../src/utils.ts", "../../../node_modules/did-resolver/src/resolver.ts", "../src/did-ion.ts", "../../../node_modules/@decentralized-identity/ion-sdk/lib/index.ts", "../../../node_modules/@decentralized-identity/ion-sdk/lib/Encoder.ts", "../../../node_modules/@decentralized-identity/ion-sdk/lib/ErrorCode.ts", "../../../node_modules/@decentralized-identity/ion-sdk/lib/IonError.ts", "../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/src/bases/base64.js", "../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/src/bases/base.js", "../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/vendor/base-x.js", "../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/src/bytes.js", "../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/src/bases/interface.js", "../../../node_modules/@decentralized-identity/ion-sdk/lib/IonRequest.ts", "../../../node_modules/@decentralized-identity/ion-sdk/lib/InputValidator.ts", "../../../node_modules/@decentralized-identity/ion-sdk/lib/enums/OperationKeyType.ts", "../../../node_modules/@decentralized-identity/ion-sdk/lib/IonSdkConfig.ts", "../../../node_modules/@decentralized-identity/ion-sdk/lib/JsonCanonicalizer.ts", "../../../node_modules/@decentralized-identity/ion-sdk/lib/Multihash.ts", "../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/src/hashes/sha2-browser.js", "../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/src/hashes/hasher.js", "../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/src/hashes/digest.js", "../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/src/varint.js", "../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/vendor/varint.js", "../../../node_modules/@decentralized-identity/ion-sdk/lib/enums/OperationType.ts", "../../../node_modules/@decentralized-identity/ion-sdk/lib/enums/PatchAction.ts", "../../../node_modules/@decentralized-identity/ion-sdk/lib/IonDid.ts", "../../../node_modules/@noble/ed25519/index.js", "../../../node_modules/@noble/secp256k1/index.js", "../../../node_modules/@decentralized-identity/ion-sdk/lib/enums/IonNetwork.ts", "../../../node_modules/@decentralized-identity/ion-sdk/lib/enums/IonPublicKeyPurpose.ts", "../src/did-key.ts", "../src/did-resolver.ts", "../src/resolver-cache-noop.ts", "../src/resolver-cache-level.ts", "../src/types.ts"],
  "sourcesContent": ["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n", "/* eslint-disable @typescript-eslint/no-var-requires */\nconst polyfilledBuffer = require('buffer/').Buffer;\nconst { Buffer } = require('buffer');\n\n// monkeypatch writeBigUInt64BE in polyfill bc its borked\n// can remove this if/when this PR is merged: https://github.com/feross/buffer/pull/280\npolyfilledBuffer.prototype.writeBigUInt64BE = Buffer.prototype.writeBigUInt64BE;\nglobalThis.Buffer = polyfilledBuffer;\n", "'use strict'\n\nexports.supports = function supports (...manifests) {\n  const manifest = manifests.reduce((acc, m) => Object.assign(acc, m), {})\n\n  return Object.assign(manifest, {\n    snapshots: manifest.snapshots || false,\n    permanence: manifest.permanence || false,\n    seek: manifest.seek || false,\n    clear: manifest.clear || false,\n    getMany: manifest.getMany || false,\n    keyIterator: manifest.keyIterator || false,\n    valueIterator: manifest.valueIterator || false,\n    iteratorNextv: manifest.iteratorNextv || false,\n    iteratorAll: manifest.iteratorAll || false,\n    status: manifest.status || false,\n    createIfMissing: manifest.createIfMissing || false,\n    errorIfExists: manifest.errorIfExists || false,\n    deferredOpen: manifest.deferredOpen || false,\n    promises: manifest.promises || false,\n    streams: manifest.streams || false,\n    encodings: Object.assign({}, manifest.encodings),\n    events: Object.assign({}, manifest.events),\n    additionalMethods: Object.assign({}, manifest.additionalMethods)\n  })\n}\n", "'use strict'\n\nmodule.exports = class ModuleError extends Error {\n  /**\n   * @param {string} message Error message\n   * @param {{ code?: string, cause?: Error, expected?: boolean, transient?: boolean }} [options]\n   */\n  constructor (message, options) {\n    super(message || '')\n\n    if (typeof options === 'object' && options !== null) {\n      if (options.code) this.code = String(options.code)\n      if (options.expected) this.expected = true\n      if (options.transient) this.transient = true\n      if (options.cause) this.cause = options.cause\n    }\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor)\n    }\n  }\n}\n", "'use strict'\n\n/** @type {{ textEncoder: TextEncoder, textDecoder: TextDecoder }|null} */\nlet lazy = null\n\n/**\n * Get semi-global instances of TextEncoder and TextDecoder.\n * @returns {{ textEncoder: TextEncoder, textDecoder: TextDecoder }}\n */\nmodule.exports = function () {\n  if (lazy === null) {\n    lazy = {\n      textEncoder: new TextEncoder(),\n      textDecoder: new TextDecoder()\n    }\n  }\n\n  return lazy\n}\n", "'use strict'\n\nconst ModuleError = require('module-error')\nconst formats = new Set(['buffer', 'view', 'utf8'])\n\n/**\n * @template TIn, TFormat, TOut\n * @abstract\n */\nclass Encoding {\n  /**\n   * @param {IEncoding<TIn,TFormat,TOut>} options\n   */\n  constructor (options) {\n    /** @type {(data: TIn) => TFormat} */\n    this.encode = options.encode || this.encode\n\n    /** @type {(data: TFormat) => TOut} */\n    this.decode = options.decode || this.decode\n\n    /** @type {string} */\n    this.name = options.name || this.name\n\n    /** @type {string} */\n    this.format = options.format || this.format\n\n    if (typeof this.encode !== 'function') {\n      throw new TypeError(\"The 'encode' property must be a function\")\n    }\n\n    if (typeof this.decode !== 'function') {\n      throw new TypeError(\"The 'decode' property must be a function\")\n    }\n\n    this.encode = this.encode.bind(this)\n    this.decode = this.decode.bind(this)\n\n    if (typeof this.name !== 'string' || this.name === '') {\n      throw new TypeError(\"The 'name' property must be a string\")\n    }\n\n    if (typeof this.format !== 'string' || !formats.has(this.format)) {\n      throw new TypeError(\"The 'format' property must be one of 'buffer', 'view', 'utf8'\")\n    }\n\n    if (options.createViewTranscoder) {\n      this.createViewTranscoder = options.createViewTranscoder\n    }\n\n    if (options.createBufferTranscoder) {\n      this.createBufferTranscoder = options.createBufferTranscoder\n    }\n\n    if (options.createUTF8Transcoder) {\n      this.createUTF8Transcoder = options.createUTF8Transcoder\n    }\n  }\n\n  get commonName () {\n    return /** @type {string} */ (this.name.split('+')[0])\n  }\n\n  /** @return {BufferFormat<TIn,TOut>} */\n  createBufferTranscoder () {\n    throw new ModuleError(`Encoding '${this.name}' cannot be transcoded to 'buffer'`, {\n      code: 'LEVEL_ENCODING_NOT_SUPPORTED'\n    })\n  }\n\n  /** @return {ViewFormat<TIn,TOut>} */\n  createViewTranscoder () {\n    throw new ModuleError(`Encoding '${this.name}' cannot be transcoded to 'view'`, {\n      code: 'LEVEL_ENCODING_NOT_SUPPORTED'\n    })\n  }\n\n  /** @return {UTF8Format<TIn,TOut>} */\n  createUTF8Transcoder () {\n    throw new ModuleError(`Encoding '${this.name}' cannot be transcoded to 'utf8'`, {\n      code: 'LEVEL_ENCODING_NOT_SUPPORTED'\n    })\n  }\n}\n\nexports.Encoding = Encoding\n\n/**\n * @typedef {import('./encoding').IEncoding<TIn,TFormat,TOut>} IEncoding\n * @template TIn, TFormat, TOut\n */\n\n/**\n * @typedef {import('./formats').BufferFormat<TIn,TOut>} BufferFormat\n * @template TIn, TOut\n */\n\n/**\n * @typedef {import('./formats').ViewFormat<TIn,TOut>} ViewFormat\n * @template TIn, TOut\n */\n\n/**\n * @typedef {import('./formats').UTF8Format<TIn,TOut>} UTF8Format\n * @template TIn, TOut\n */\n", "'use strict'\n\nconst { Buffer } = require('buffer') || {}\nconst { Encoding } = require('./encoding')\nconst textEndec = require('./text-endec')\n\n/**\n * @template TIn, TOut\n * @extends {Encoding<TIn,Buffer,TOut>}\n */\nclass BufferFormat extends Encoding {\n  /**\n   * @param {Omit<IEncoding<TIn, Buffer, TOut>, 'format'>} options\n   */\n  constructor (options) {\n    super({ ...options, format: 'buffer' })\n  }\n\n  /** @override */\n  createViewTranscoder () {\n    return new ViewFormat({\n      encode: this.encode, // Buffer is a view (UInt8Array)\n      decode: (data) => this.decode(\n        Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n      ),\n      name: `${this.name}+view`\n    })\n  }\n\n  /** @override */\n  createBufferTranscoder () {\n    return this\n  }\n}\n\n/**\n * @extends {Encoding<TIn,Uint8Array,TOut>}\n * @template TIn, TOut\n */\nclass ViewFormat extends Encoding {\n  /**\n   * @param {Omit<IEncoding<TIn, Uint8Array, TOut>, 'format'>} options\n   */\n  constructor (options) {\n    super({ ...options, format: 'view' })\n  }\n\n  /** @override */\n  createBufferTranscoder () {\n    return new BufferFormat({\n      encode: (data) => {\n        const view = this.encode(data)\n        return Buffer.from(view.buffer, view.byteOffset, view.byteLength)\n      },\n      decode: this.decode, // Buffer is a view (UInt8Array)\n      name: `${this.name}+buffer`\n    })\n  }\n\n  /** @override */\n  createViewTranscoder () {\n    return this\n  }\n}\n\n/**\n * @extends {Encoding<TIn,string,TOut>}\n * @template TIn, TOut\n */\nclass UTF8Format extends Encoding {\n  /**\n   * @param {Omit<IEncoding<TIn, string, TOut>, 'format'>} options\n   */\n  constructor (options) {\n    super({ ...options, format: 'utf8' })\n  }\n\n  /** @override */\n  createBufferTranscoder () {\n    return new BufferFormat({\n      encode: (data) => Buffer.from(this.encode(data), 'utf8'),\n      decode: (data) => this.decode(data.toString('utf8')),\n      name: `${this.name}+buffer`\n    })\n  }\n\n  /** @override */\n  createViewTranscoder () {\n    const { textEncoder, textDecoder } = textEndec()\n\n    return new ViewFormat({\n      encode: (data) => textEncoder.encode(this.encode(data)),\n      decode: (data) => this.decode(textDecoder.decode(data)),\n      name: `${this.name}+view`\n    })\n  }\n\n  /** @override */\n  createUTF8Transcoder () {\n    return this\n  }\n}\n\nexports.BufferFormat = BufferFormat\nexports.ViewFormat = ViewFormat\nexports.UTF8Format = UTF8Format\n\n/**\n * @typedef {import('./encoding').IEncoding<TIn,TFormat,TOut>} IEncoding\n * @template TIn, TFormat, TOut\n */\n", "'use strict'\n\nconst { Buffer } = require('buffer') || { Buffer: { isBuffer: () => false } }\nconst { textEncoder, textDecoder } = require('./text-endec')()\nconst { BufferFormat, ViewFormat, UTF8Format } = require('./formats')\n\n/** @type {<T>(v: T) => v} */\nconst identity = (v) => v\n\n/**\n * @type {typeof import('./encodings').utf8}\n */\nexports.utf8 = new UTF8Format({\n  encode: function (data) {\n    // On node 16.9.1 buffer.toString() is 5x faster than TextDecoder\n    return Buffer.isBuffer(data)\n      ? data.toString('utf8')\n      : ArrayBuffer.isView(data)\n        ? textDecoder.decode(data)\n        : String(data)\n  },\n  decode: identity,\n  name: 'utf8',\n  createViewTranscoder () {\n    return new ViewFormat({\n      encode: function (data) {\n        return ArrayBuffer.isView(data) ? data : textEncoder.encode(data)\n      },\n      decode: function (data) {\n        return textDecoder.decode(data)\n      },\n      name: `${this.name}+view`\n    })\n  },\n  createBufferTranscoder () {\n    return new BufferFormat({\n      encode: function (data) {\n        return Buffer.isBuffer(data)\n          ? data\n          : ArrayBuffer.isView(data)\n            ? Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n            : Buffer.from(String(data), 'utf8')\n      },\n      decode: function (data) {\n        return data.toString('utf8')\n      },\n      name: `${this.name}+buffer`\n    })\n  }\n})\n\n/**\n * @type {typeof import('./encodings').json}\n */\nexports.json = new UTF8Format({\n  encode: JSON.stringify,\n  decode: JSON.parse,\n  name: 'json'\n})\n\n/**\n * @type {typeof import('./encodings').buffer}\n */\nexports.buffer = new BufferFormat({\n  encode: function (data) {\n    return Buffer.isBuffer(data)\n      ? data\n      : ArrayBuffer.isView(data)\n        ? Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n        : Buffer.from(String(data), 'utf8')\n  },\n  decode: identity,\n  name: 'buffer',\n  createViewTranscoder () {\n    return new ViewFormat({\n      encode: function (data) {\n        return ArrayBuffer.isView(data) ? data : Buffer.from(String(data), 'utf8')\n      },\n      decode: function (data) {\n        return Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n      },\n      name: `${this.name}+view`\n    })\n  }\n})\n\n/**\n * @type {typeof import('./encodings').view}\n */\nexports.view = new ViewFormat({\n  encode: function (data) {\n    return ArrayBuffer.isView(data) ? data : textEncoder.encode(data)\n  },\n  decode: identity,\n  name: 'view',\n  createBufferTranscoder () {\n    return new BufferFormat({\n      encode: function (data) {\n        return Buffer.isBuffer(data)\n          ? data\n          : ArrayBuffer.isView(data)\n            ? Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n            : Buffer.from(String(data), 'utf8')\n      },\n      decode: identity,\n      name: `${this.name}+buffer`\n    })\n  }\n})\n\n/**\n * @type {typeof import('./encodings').hex}\n */\nexports.hex = new BufferFormat({\n  encode: function (data) {\n    return Buffer.isBuffer(data) ? data : Buffer.from(String(data), 'hex')\n  },\n  decode: function (buffer) {\n    return buffer.toString('hex')\n  },\n  name: 'hex'\n})\n\n/**\n * @type {typeof import('./encodings').base64}\n */\nexports.base64 = new BufferFormat({\n  encode: function (data) {\n    return Buffer.isBuffer(data) ? data : Buffer.from(String(data), 'base64')\n  },\n  decode: function (buffer) {\n    return buffer.toString('base64')\n  },\n  name: 'base64'\n})\n", "'use strict'\n\nconst ModuleError = require('module-error')\nconst encodings = require('./lib/encodings')\nconst { Encoding } = require('./lib/encoding')\nconst { BufferFormat, ViewFormat, UTF8Format } = require('./lib/formats')\n\nconst kFormats = Symbol('formats')\nconst kEncodings = Symbol('encodings')\nconst validFormats = new Set(['buffer', 'view', 'utf8'])\n\n/** @template T */\nclass Transcoder {\n  /**\n   * @param {Array<'buffer'|'view'|'utf8'>} formats\n   */\n  constructor (formats) {\n    if (!Array.isArray(formats)) {\n      throw new TypeError(\"The first argument 'formats' must be an array\")\n    } else if (!formats.every(f => validFormats.has(f))) {\n      // Note: we only only support aliases in key- and valueEncoding options (where we already did)\n      throw new TypeError(\"Format must be one of 'buffer', 'view', 'utf8'\")\n    }\n\n    /** @type {Map<string|MixedEncoding<any, any, any>, Encoding<any, any, any>>} */\n    this[kEncodings] = new Map()\n    this[kFormats] = new Set(formats)\n\n    // Register encodings (done early in order to populate encodings())\n    for (const k in encodings) {\n      try {\n        this.encoding(k)\n      } catch (err) {\n        /* istanbul ignore if: assertion */\n        if (err.code !== 'LEVEL_ENCODING_NOT_SUPPORTED') throw err\n      }\n    }\n  }\n\n  /**\n   * @returns {Array<Encoding<any,T,any>>}\n   */\n  encodings () {\n    return Array.from(new Set(this[kEncodings].values()))\n  }\n\n  /**\n   * @param {string|MixedEncoding<any, any, any>} encoding\n   * @returns {Encoding<any, T, any>}\n   */\n  encoding (encoding) {\n    let resolved = this[kEncodings].get(encoding)\n\n    if (resolved === undefined) {\n      if (typeof encoding === 'string' && encoding !== '') {\n        resolved = lookup[encoding]\n\n        if (!resolved) {\n          throw new ModuleError(`Encoding '${encoding}' is not found`, {\n            code: 'LEVEL_ENCODING_NOT_FOUND'\n          })\n        }\n      } else if (typeof encoding !== 'object' || encoding === null) {\n        throw new TypeError(\"First argument 'encoding' must be a string or object\")\n      } else {\n        resolved = from(encoding)\n      }\n\n      const { name, format } = resolved\n\n      if (!this[kFormats].has(format)) {\n        if (this[kFormats].has('view')) {\n          resolved = resolved.createViewTranscoder()\n        } else if (this[kFormats].has('buffer')) {\n          resolved = resolved.createBufferTranscoder()\n        } else if (this[kFormats].has('utf8')) {\n          resolved = resolved.createUTF8Transcoder()\n        } else {\n          throw new ModuleError(`Encoding '${name}' cannot be transcoded`, {\n            code: 'LEVEL_ENCODING_NOT_SUPPORTED'\n          })\n        }\n      }\n\n      for (const k of [encoding, name, resolved.name, resolved.commonName]) {\n        this[kEncodings].set(k, resolved)\n      }\n    }\n\n    return resolved\n  }\n}\n\nexports.Transcoder = Transcoder\n\n/**\n * @param {MixedEncoding<any, any, any>} options\n * @returns {Encoding<any, any, any>}\n */\nfunction from (options) {\n  if (options instanceof Encoding) {\n    return options\n  }\n\n  // Loosely typed for ecosystem compatibility\n  const maybeType = 'type' in options && typeof options.type === 'string' ? options.type : undefined\n  const name = options.name || maybeType || `anonymous-${anonymousCount++}`\n\n  switch (detectFormat(options)) {\n    case 'view': return new ViewFormat({ ...options, name })\n    case 'utf8': return new UTF8Format({ ...options, name })\n    case 'buffer': return new BufferFormat({ ...options, name })\n    default: {\n      throw new TypeError(\"Format must be one of 'buffer', 'view', 'utf8'\")\n    }\n  }\n}\n\n/**\n * If format is not provided, fallback to detecting `level-codec`\n * or `multiformats` encodings, else assume a format of buffer.\n * @param {MixedEncoding<any, any, any>} options\n * @returns {string}\n */\nfunction detectFormat (options) {\n  if ('format' in options && options.format !== undefined) {\n    return options.format\n  } else if ('buffer' in options && typeof options.buffer === 'boolean') {\n    return options.buffer ? 'buffer' : 'utf8' // level-codec\n  } else if ('code' in options && Number.isInteger(options.code)) {\n    return 'view' // multiformats\n  } else {\n    return 'buffer'\n  }\n}\n\n/**\n * @typedef {import('./lib/encoding').MixedEncoding<TIn,TFormat,TOut>} MixedEncoding\n * @template TIn, TFormat, TOut\n */\n\n/**\n * @type {Object.<string, Encoding<any, any, any>>}\n */\nconst aliases = {\n  binary: encodings.buffer,\n  'utf-8': encodings.utf8\n}\n\n/**\n * @type {Object.<string, Encoding<any, any, any>>}\n */\nconst lookup = {\n  ...encodings,\n  ...aliases\n}\n\nlet anonymousCount = 0\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "module.exports = typeof queueMicrotask === 'function' ? queueMicrotask : (fn) => Promise.resolve().then(fn)\n", "'use strict'\n\nvar nextTick = require('./next-tick')\n\nexports.fromCallback = function (callback, symbol) {\n  if (callback === undefined) {\n    var promise = new Promise(function (resolve, reject) {\n      callback = function (err, res) {\n        if (err) reject(err)\n        else resolve(res)\n      }\n    })\n\n    callback[symbol !== undefined ? symbol : 'promise'] = promise\n  } else if (typeof callback !== 'function') {\n    throw new TypeError('Callback must be a function')\n  }\n\n  return callback\n}\n\nexports.fromPromise = function (promise, callback) {\n  if (callback === undefined) return promise\n\n  promise\n    .then(function (res) { nextTick(() => callback(null, res)) })\n    .catch(function (err) { nextTick(() => callback(err)) })\n}\n", "'use strict'\n\nexports.getCallback = function (options, callback) {\n  return typeof options === 'function' ? options : callback\n}\n\nexports.getOptions = function (options, def) {\n  if (typeof options === 'object' && options !== null) {\n    return options\n  }\n\n  if (def !== undefined) {\n    return def\n  }\n\n  return {}\n}\n", "'use strict'\n\nconst { fromCallback } = require('catering')\nconst ModuleError = require('module-error')\nconst { getOptions, getCallback } = require('./lib/common')\n\nconst kPromise = Symbol('promise')\nconst kCallback = Symbol('callback')\nconst kWorking = Symbol('working')\nconst kHandleOne = Symbol('handleOne')\nconst kHandleMany = Symbol('handleMany')\nconst kAutoClose = Symbol('autoClose')\nconst kFinishWork = Symbol('finishWork')\nconst kReturnMany = Symbol('returnMany')\nconst kClosing = Symbol('closing')\nconst kHandleClose = Symbol('handleClose')\nconst kClosed = Symbol('closed')\nconst kCloseCallbacks = Symbol('closeCallbacks')\nconst kKeyEncoding = Symbol('keyEncoding')\nconst kValueEncoding = Symbol('valueEncoding')\nconst kAbortOnClose = Symbol('abortOnClose')\nconst kLegacy = Symbol('legacy')\nconst kKeys = Symbol('keys')\nconst kValues = Symbol('values')\nconst kLimit = Symbol('limit')\nconst kCount = Symbol('count')\n\nconst emptyOptions = Object.freeze({})\nconst noop = () => {}\nlet warnedEnd = false\n\n// This class is an internal utility for common functionality between AbstractIterator,\n// AbstractKeyIterator and AbstractValueIterator. It's not exported.\nclass CommonIterator {\n  constructor (db, options, legacy) {\n    if (typeof db !== 'object' || db === null) {\n      const hint = db === null ? 'null' : typeof db\n      throw new TypeError(`The first argument must be an abstract-level database, received ${hint}`)\n    }\n\n    if (typeof options !== 'object' || options === null) {\n      throw new TypeError('The second argument must be an options object')\n    }\n\n    this[kClosed] = false\n    this[kCloseCallbacks] = []\n    this[kWorking] = false\n    this[kClosing] = false\n    this[kAutoClose] = false\n    this[kCallback] = null\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n    this[kHandleClose] = this[kHandleClose].bind(this)\n    this[kKeyEncoding] = options[kKeyEncoding]\n    this[kValueEncoding] = options[kValueEncoding]\n    this[kLegacy] = legacy\n    this[kLimit] = Number.isInteger(options.limit) && options.limit >= 0 ? options.limit : Infinity\n    this[kCount] = 0\n\n    // Undocumented option to abort pending work on close(). Used by the\n    // many-level module as a temporary solution to a blocked close().\n    // TODO (next major): consider making this the default behavior. Native\n    // implementations should have their own logic to safely close iterators.\n    this[kAbortOnClose] = !!options.abortOnClose\n\n    this.db = db\n    this.db.attachResource(this)\n    this.nextTick = db.nextTick\n  }\n\n  get count () {\n    return this[kCount]\n  }\n\n  get limit () {\n    return this[kLimit]\n  }\n\n  next (callback) {\n    let promise\n\n    if (callback === undefined) {\n      promise = new Promise((resolve, reject) => {\n        callback = (err, key, value) => {\n          if (err) reject(err)\n          else if (!this[kLegacy]) resolve(key)\n          else if (key === undefined && value === undefined) resolve()\n          else resolve([key, value])\n        }\n      })\n    } else if (typeof callback !== 'function') {\n      throw new TypeError('Callback must be a function')\n    }\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call next() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call next() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }))\n    } else {\n      this[kWorking] = true\n      this[kCallback] = callback\n\n      if (this[kCount] >= this[kLimit]) this.nextTick(this[kHandleOne], null)\n      else this._next(this[kHandleOne])\n    }\n\n    return promise\n  }\n\n  _next (callback) {\n    this.nextTick(callback)\n  }\n\n  nextv (size, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, emptyOptions)\n\n    if (!Number.isInteger(size)) {\n      this.nextTick(callback, new TypeError(\"The first argument 'size' must be an integer\"))\n      return callback[kPromise]\n    }\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call nextv() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call nextv() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }))\n    } else {\n      if (size < 1) size = 1\n      if (this[kLimit] < Infinity) size = Math.min(size, this[kLimit] - this[kCount])\n\n      this[kWorking] = true\n      this[kCallback] = callback\n\n      if (size <= 0) this.nextTick(this[kHandleMany], null, [])\n      else this._nextv(size, options, this[kHandleMany])\n    }\n\n    return callback[kPromise]\n  }\n\n  _nextv (size, options, callback) {\n    const acc = []\n    const onnext = (err, key, value) => {\n      if (err) {\n        return callback(err)\n      } else if (this[kLegacy] ? key === undefined && value === undefined : key === undefined) {\n        return callback(null, acc)\n      }\n\n      acc.push(this[kLegacy] ? [key, value] : key)\n\n      if (acc.length === size) {\n        callback(null, acc)\n      } else {\n        this._next(onnext)\n      }\n    }\n\n    this._next(onnext)\n  }\n\n  all (options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, emptyOptions)\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call all() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call all() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }))\n    } else {\n      this[kWorking] = true\n      this[kCallback] = callback\n      this[kAutoClose] = true\n\n      if (this[kCount] >= this[kLimit]) this.nextTick(this[kHandleMany], null, [])\n      else this._all(options, this[kHandleMany])\n    }\n\n    return callback[kPromise]\n  }\n\n  _all (options, callback) {\n    // Must count here because we're directly calling _nextv()\n    let count = this[kCount]\n    const acc = []\n\n    const nextv = () => {\n      // Not configurable, because implementations should optimize _all().\n      const size = this[kLimit] < Infinity ? Math.min(1e3, this[kLimit] - count) : 1e3\n\n      if (size <= 0) {\n        this.nextTick(callback, null, acc)\n      } else {\n        this._nextv(size, emptyOptions, onnextv)\n      }\n    }\n\n    const onnextv = (err, items) => {\n      if (err) {\n        callback(err)\n      } else if (items.length === 0) {\n        callback(null, acc)\n      } else {\n        acc.push.apply(acc, items)\n        count += items.length\n        nextv()\n      }\n    }\n\n    nextv()\n  }\n\n  [kFinishWork] () {\n    const cb = this[kCallback]\n\n    // Callback will be null if work was aborted on close\n    if (this[kAbortOnClose] && cb === null) return noop\n\n    this[kWorking] = false\n    this[kCallback] = null\n\n    if (this[kClosing]) this._close(this[kHandleClose])\n\n    return cb\n  }\n\n  [kReturnMany] (cb, err, items) {\n    if (this[kAutoClose]) {\n      this.close(cb.bind(null, err, items))\n    } else {\n      cb(err, items)\n    }\n  }\n\n  seek (target, options) {\n    options = getOptions(options, emptyOptions)\n\n    if (this[kClosing]) {\n      // Don't throw here, to be kind to implementations that wrap\n      // another db and don't necessarily control when the db is closed\n    } else if (this[kWorking]) {\n      throw new ModuleError('Iterator is busy: cannot call seek() until next() has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      })\n    } else {\n      const keyEncoding = this.db.keyEncoding(options.keyEncoding || this[kKeyEncoding])\n      const keyFormat = keyEncoding.format\n\n      if (options.keyEncoding !== keyFormat) {\n        options = { ...options, keyEncoding: keyFormat }\n      }\n\n      const mapped = this.db.prefixKey(keyEncoding.encode(target), keyFormat)\n      this._seek(mapped, options)\n    }\n  }\n\n  _seek (target, options) {\n    throw new ModuleError('Iterator does not support seek()', {\n      code: 'LEVEL_NOT_SUPPORTED'\n    })\n  }\n\n  close (callback) {\n    callback = fromCallback(callback, kPromise)\n\n    if (this[kClosed]) {\n      this.nextTick(callback)\n    } else if (this[kClosing]) {\n      this[kCloseCallbacks].push(callback)\n    } else {\n      this[kClosing] = true\n      this[kCloseCallbacks].push(callback)\n\n      if (!this[kWorking]) {\n        this._close(this[kHandleClose])\n      } else if (this[kAbortOnClose]) {\n        // Don't wait for work to finish. Subsequently ignore the result.\n        const cb = this[kFinishWork]()\n\n        cb(new ModuleError('Aborted on iterator close()', {\n          code: 'LEVEL_ITERATOR_NOT_OPEN'\n        }))\n      }\n    }\n\n    return callback[kPromise]\n  }\n\n  _close (callback) {\n    this.nextTick(callback)\n  }\n\n  [kHandleClose] () {\n    this[kClosed] = true\n    this.db.detachResource(this)\n\n    const callbacks = this[kCloseCallbacks]\n    this[kCloseCallbacks] = []\n\n    for (const cb of callbacks) {\n      cb()\n    }\n  }\n\n  async * [Symbol.asyncIterator] () {\n    try {\n      let item\n\n      while ((item = (await this.next())) !== undefined) {\n        yield item\n      }\n    } finally {\n      if (!this[kClosed]) await this.close()\n    }\n  }\n}\n\n// For backwards compatibility this class is not (yet) called AbstractEntryIterator.\nclass AbstractIterator extends CommonIterator {\n  constructor (db, options) {\n    super(db, options, true)\n    this[kKeys] = options.keys !== false\n    this[kValues] = options.values !== false\n  }\n\n  [kHandleOne] (err, key, value) {\n    const cb = this[kFinishWork]()\n    if (err) return cb(err)\n\n    try {\n      key = this[kKeys] && key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n      value = this[kValues] && value !== undefined ? this[kValueEncoding].decode(value) : undefined\n    } catch (err) {\n      return cb(new IteratorDecodeError('entry', err))\n    }\n\n    if (!(key === undefined && value === undefined)) {\n      this[kCount]++\n    }\n\n    cb(null, key, value)\n  }\n\n  [kHandleMany] (err, entries) {\n    const cb = this[kFinishWork]()\n    if (err) return this[kReturnMany](cb, err)\n\n    try {\n      for (const entry of entries) {\n        const key = entry[0]\n        const value = entry[1]\n\n        entry[0] = this[kKeys] && key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n        entry[1] = this[kValues] && value !== undefined ? this[kValueEncoding].decode(value) : undefined\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('entries', err))\n    }\n\n    this[kCount] += entries.length\n    this[kReturnMany](cb, null, entries)\n  }\n\n  end (callback) {\n    if (!warnedEnd && typeof console !== 'undefined') {\n      warnedEnd = true\n      console.warn(new ModuleError(\n        'The iterator.end() method was renamed to close() and end() is an alias that will be removed in a future version',\n        { code: 'LEVEL_LEGACY' }\n      ))\n    }\n\n    return this.close(callback)\n  }\n}\n\nclass AbstractKeyIterator extends CommonIterator {\n  constructor (db, options) {\n    super(db, options, false)\n  }\n\n  [kHandleOne] (err, key) {\n    const cb = this[kFinishWork]()\n    if (err) return cb(err)\n\n    try {\n      key = key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n    } catch (err) {\n      return cb(new IteratorDecodeError('key', err))\n    }\n\n    if (key !== undefined) this[kCount]++\n    cb(null, key)\n  }\n\n  [kHandleMany] (err, keys) {\n    const cb = this[kFinishWork]()\n    if (err) return this[kReturnMany](cb, err)\n\n    try {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i]\n        keys[i] = key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('keys', err))\n    }\n\n    this[kCount] += keys.length\n    this[kReturnMany](cb, null, keys)\n  }\n}\n\nclass AbstractValueIterator extends CommonIterator {\n  constructor (db, options) {\n    super(db, options, false)\n  }\n\n  [kHandleOne] (err, value) {\n    const cb = this[kFinishWork]()\n    if (err) return cb(err)\n\n    try {\n      value = value !== undefined ? this[kValueEncoding].decode(value) : undefined\n    } catch (err) {\n      return cb(new IteratorDecodeError('value', err))\n    }\n\n    if (value !== undefined) this[kCount]++\n    cb(null, value)\n  }\n\n  [kHandleMany] (err, values) {\n    const cb = this[kFinishWork]()\n    if (err) return this[kReturnMany](cb, err)\n\n    try {\n      for (let i = 0; i < values.length; i++) {\n        const value = values[i]\n        values[i] = value !== undefined ? this[kValueEncoding].decode(value) : undefined\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('values', err))\n    }\n\n    this[kCount] += values.length\n    this[kReturnMany](cb, null, values)\n  }\n}\n\n// Internal utility, not typed or exported\nclass IteratorDecodeError extends ModuleError {\n  constructor (subject, cause) {\n    super(`Iterator could not decode ${subject}`, {\n      code: 'LEVEL_DECODE_ERROR',\n      cause\n    })\n  }\n}\n\n// To help migrating to abstract-level\nfor (const k of ['_ended property', '_nexting property', '_end method']) {\n  Object.defineProperty(AbstractIterator.prototype, k.split(' ')[0], {\n    get () { throw new ModuleError(`The ${k} has been removed`, { code: 'LEVEL_LEGACY' }) },\n    set () { throw new ModuleError(`The ${k} has been removed`, { code: 'LEVEL_LEGACY' }) }\n  })\n}\n\n// Exposed so that AbstractLevel can set these options\nAbstractIterator.keyEncoding = kKeyEncoding\nAbstractIterator.valueEncoding = kValueEncoding\n\nexports.AbstractIterator = AbstractIterator\nexports.AbstractKeyIterator = AbstractKeyIterator\nexports.AbstractValueIterator = AbstractValueIterator\n", "'use strict'\n\nconst { AbstractKeyIterator, AbstractValueIterator } = require('../abstract-iterator')\n\nconst kIterator = Symbol('iterator')\nconst kCallback = Symbol('callback')\nconst kHandleOne = Symbol('handleOne')\nconst kHandleMany = Symbol('handleMany')\n\nclass DefaultKeyIterator extends AbstractKeyIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kIterator] = db.iterator({ ...options, keys: true, values: false })\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n  }\n}\n\nclass DefaultValueIterator extends AbstractValueIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kIterator] = db.iterator({ ...options, keys: false, values: true })\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n  }\n}\n\nfor (const Iterator of [DefaultKeyIterator, DefaultValueIterator]) {\n  const keys = Iterator === DefaultKeyIterator\n  const mapEntry = keys ? (entry) => entry[0] : (entry) => entry[1]\n\n  Iterator.prototype._next = function (callback) {\n    this[kCallback] = callback\n    this[kIterator].next(this[kHandleOne])\n  }\n\n  Iterator.prototype[kHandleOne] = function (err, key, value) {\n    const callback = this[kCallback]\n    if (err) callback(err)\n    else callback(null, keys ? key : value)\n  }\n\n  Iterator.prototype._nextv = function (size, options, callback) {\n    this[kCallback] = callback\n    this[kIterator].nextv(size, options, this[kHandleMany])\n  }\n\n  Iterator.prototype._all = function (options, callback) {\n    this[kCallback] = callback\n    this[kIterator].all(options, this[kHandleMany])\n  }\n\n  Iterator.prototype[kHandleMany] = function (err, entries) {\n    const callback = this[kCallback]\n    if (err) callback(err)\n    else callback(null, entries.map(mapEntry))\n  }\n\n  Iterator.prototype._seek = function (target, options) {\n    this[kIterator].seek(target, options)\n  }\n\n  Iterator.prototype._close = function (callback) {\n    this[kIterator].close(callback)\n  }\n}\n\n// Internal utilities, should be typed as AbstractKeyIterator and AbstractValueIterator\nexports.DefaultKeyIterator = DefaultKeyIterator\nexports.DefaultValueIterator = DefaultValueIterator\n", "'use strict'\n\nconst { AbstractIterator, AbstractKeyIterator, AbstractValueIterator } = require('../abstract-iterator')\nconst ModuleError = require('module-error')\n\nconst kNut = Symbol('nut')\nconst kUndefer = Symbol('undefer')\nconst kFactory = Symbol('factory')\n\nclass DeferredIterator extends AbstractIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kNut] = null\n    this[kFactory] = () => db.iterator(options)\n\n    this.db.defer(() => this[kUndefer]())\n  }\n}\n\nclass DeferredKeyIterator extends AbstractKeyIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kNut] = null\n    this[kFactory] = () => db.keys(options)\n\n    this.db.defer(() => this[kUndefer]())\n  }\n}\n\nclass DeferredValueIterator extends AbstractValueIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kNut] = null\n    this[kFactory] = () => db.values(options)\n\n    this.db.defer(() => this[kUndefer]())\n  }\n}\n\nfor (const Iterator of [DeferredIterator, DeferredKeyIterator, DeferredValueIterator]) {\n  Iterator.prototype[kUndefer] = function () {\n    if (this.db.status === 'open') {\n      this[kNut] = this[kFactory]()\n    }\n  }\n\n  Iterator.prototype._next = function (callback) {\n    if (this[kNut] !== null) {\n      this[kNut].next(callback)\n    } else if (this.db.status === 'opening') {\n      this.db.defer(() => this._next(callback))\n    } else {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call next() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    }\n  }\n\n  Iterator.prototype._nextv = function (size, options, callback) {\n    if (this[kNut] !== null) {\n      this[kNut].nextv(size, options, callback)\n    } else if (this.db.status === 'opening') {\n      this.db.defer(() => this._nextv(size, options, callback))\n    } else {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call nextv() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    }\n  }\n\n  Iterator.prototype._all = function (options, callback) {\n    if (this[kNut] !== null) {\n      this[kNut].all(callback)\n    } else if (this.db.status === 'opening') {\n      this.db.defer(() => this._all(options, callback))\n    } else {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call all() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    }\n  }\n\n  Iterator.prototype._seek = function (target, options) {\n    if (this[kNut] !== null) {\n      // TODO: explain why we need _seek() rather than seek() here\n      this[kNut]._seek(target, options)\n    } else if (this.db.status === 'opening') {\n      this.db.defer(() => this._seek(target, options))\n    }\n  }\n\n  Iterator.prototype._close = function (callback) {\n    if (this[kNut] !== null) {\n      this[kNut].close(callback)\n    } else if (this.db.status === 'opening') {\n      this.db.defer(() => this._close(callback))\n    } else {\n      this.nextTick(callback)\n    }\n  }\n}\n\nexports.DeferredIterator = DeferredIterator\nexports.DeferredKeyIterator = DeferredKeyIterator\nexports.DeferredValueIterator = DeferredValueIterator\n", "'use strict'\n\nconst { fromCallback } = require('catering')\nconst ModuleError = require('module-error')\nconst { getCallback, getOptions } = require('./lib/common')\n\nconst kPromise = Symbol('promise')\nconst kStatus = Symbol('status')\nconst kOperations = Symbol('operations')\nconst kFinishClose = Symbol('finishClose')\nconst kCloseCallbacks = Symbol('closeCallbacks')\n\nclass AbstractChainedBatch {\n  constructor (db) {\n    if (typeof db !== 'object' || db === null) {\n      const hint = db === null ? 'null' : typeof db\n      throw new TypeError(`The first argument must be an abstract-level database, received ${hint}`)\n    }\n\n    this[kOperations] = []\n    this[kCloseCallbacks] = []\n    this[kStatus] = 'open'\n    this[kFinishClose] = this[kFinishClose].bind(this)\n\n    this.db = db\n    this.db.attachResource(this)\n    this.nextTick = db.nextTick\n  }\n\n  get length () {\n    return this[kOperations].length\n  }\n\n  put (key, value, options) {\n    if (this[kStatus] !== 'open') {\n      throw new ModuleError('Batch is not open: cannot call put() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      })\n    }\n\n    const err = this.db._checkKey(key) || this.db._checkValue(value)\n    if (err) throw err\n\n    const db = options && options.sublevel != null ? options.sublevel : this.db\n    const original = options\n    const keyEncoding = db.keyEncoding(options && options.keyEncoding)\n    const valueEncoding = db.valueEncoding(options && options.valueEncoding)\n    const keyFormat = keyEncoding.format\n\n    // Forward encoding options\n    options = { ...options, keyEncoding: keyFormat, valueEncoding: valueEncoding.format }\n\n    // Prevent double prefixing\n    if (db !== this.db) {\n      options.sublevel = null\n    }\n\n    const mappedKey = db.prefixKey(keyEncoding.encode(key), keyFormat)\n    const mappedValue = valueEncoding.encode(value)\n\n    this._put(mappedKey, mappedValue, options)\n    this[kOperations].push({ ...original, type: 'put', key, value })\n\n    return this\n  }\n\n  _put (key, value, options) {}\n\n  del (key, options) {\n    if (this[kStatus] !== 'open') {\n      throw new ModuleError('Batch is not open: cannot call del() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      })\n    }\n\n    const err = this.db._checkKey(key)\n    if (err) throw err\n\n    const db = options && options.sublevel != null ? options.sublevel : this.db\n    const original = options\n    const keyEncoding = db.keyEncoding(options && options.keyEncoding)\n    const keyFormat = keyEncoding.format\n\n    // Forward encoding options\n    options = { ...options, keyEncoding: keyFormat }\n\n    // Prevent double prefixing\n    if (db !== this.db) {\n      options.sublevel = null\n    }\n\n    this._del(db.prefixKey(keyEncoding.encode(key), keyFormat), options)\n    this[kOperations].push({ ...original, type: 'del', key })\n\n    return this\n  }\n\n  _del (key, options) {}\n\n  clear () {\n    if (this[kStatus] !== 'open') {\n      throw new ModuleError('Batch is not open: cannot call clear() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      })\n    }\n\n    this._clear()\n    this[kOperations] = []\n\n    return this\n  }\n\n  _clear () {}\n\n  write (options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options)\n\n    if (this[kStatus] !== 'open') {\n      this.nextTick(callback, new ModuleError('Batch is not open: cannot call write() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      }))\n    } else if (this.length === 0) {\n      this.close(callback)\n    } else {\n      this[kStatus] = 'writing'\n      this._write(options, (err) => {\n        this[kStatus] = 'closing'\n        this[kCloseCallbacks].push(() => callback(err))\n\n        // Emit after setting 'closing' status, because event may trigger a\n        // db close which in turn triggers (idempotently) closing this batch.\n        if (!err) this.db.emit('batch', this[kOperations])\n\n        this._close(this[kFinishClose])\n      })\n    }\n\n    return callback[kPromise]\n  }\n\n  _write (options, callback) {}\n\n  close (callback) {\n    callback = fromCallback(callback, kPromise)\n\n    if (this[kStatus] === 'closing') {\n      this[kCloseCallbacks].push(callback)\n    } else if (this[kStatus] === 'closed') {\n      this.nextTick(callback)\n    } else {\n      this[kCloseCallbacks].push(callback)\n\n      if (this[kStatus] !== 'writing') {\n        this[kStatus] = 'closing'\n        this._close(this[kFinishClose])\n      }\n    }\n\n    return callback[kPromise]\n  }\n\n  _close (callback) {\n    this.nextTick(callback)\n  }\n\n  [kFinishClose] () {\n    this[kStatus] = 'closed'\n    this.db.detachResource(this)\n\n    const callbacks = this[kCloseCallbacks]\n    this[kCloseCallbacks] = []\n\n    for (const cb of callbacks) {\n      cb()\n    }\n  }\n}\n\nexports.AbstractChainedBatch = AbstractChainedBatch\n", "'use strict'\n\nconst { AbstractChainedBatch } = require('../abstract-chained-batch')\nconst ModuleError = require('module-error')\nconst kEncoded = Symbol('encoded')\n\n// Functional default for chained batch, with support of deferred open\nclass DefaultChainedBatch extends AbstractChainedBatch {\n  constructor (db) {\n    super(db)\n    this[kEncoded] = []\n  }\n\n  _put (key, value, options) {\n    this[kEncoded].push({ ...options, type: 'put', key, value })\n  }\n\n  _del (key, options) {\n    this[kEncoded].push({ ...options, type: 'del', key })\n  }\n\n  _clear () {\n    this[kEncoded] = []\n  }\n\n  // Assumes this[kEncoded] cannot change after write()\n  _write (options, callback) {\n    if (this.db.status === 'opening') {\n      this.db.defer(() => this._write(options, callback))\n    } else if (this.db.status === 'open') {\n      if (this[kEncoded].length === 0) this.nextTick(callback)\n      else this.db._batch(this[kEncoded], options, callback)\n    } else {\n      this.nextTick(callback, new ModuleError('Batch is not open: cannot call write() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      }))\n    }\n  }\n}\n\nexports.DefaultChainedBatch = DefaultChainedBatch\n", "'use strict'\n\nconst ModuleError = require('module-error')\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nconst rangeOptions = new Set(['lt', 'lte', 'gt', 'gte'])\n\nmodule.exports = function (options, keyEncoding) {\n  const result = {}\n\n  for (const k in options) {\n    if (!hasOwnProperty.call(options, k)) continue\n    if (k === 'keyEncoding' || k === 'valueEncoding') continue\n\n    if (k === 'start' || k === 'end') {\n      throw new ModuleError(`The legacy range option '${k}' has been removed`, {\n        code: 'LEVEL_LEGACY'\n      })\n    } else if (k === 'encoding') {\n      // To help migrating to abstract-level\n      throw new ModuleError(\"The levelup-style 'encoding' alias has been removed, use 'valueEncoding' instead\", {\n        code: 'LEVEL_LEGACY'\n      })\n    }\n\n    if (rangeOptions.has(k)) {\n      // Note that we don't reject nullish and empty options here. While\n      // those types are invalid as keys, they are valid as range options.\n      result[k] = keyEncoding.encode(options[k])\n    } else {\n      result[k] = options[k]\n    }\n  }\n\n  result.reverse = !!result.reverse\n  result.limit = Number.isInteger(result.limit) && result.limit >= 0 ? result.limit : -1\n\n  return result\n}\n", "/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n", "'use strict'\n\nconst queueMicrotask = require('queue-microtask')\n\nmodule.exports = function (fn, ...args) {\n  if (args.length === 0) {\n    queueMicrotask(fn)\n  } else {\n    queueMicrotask(() => fn(...args))\n  }\n}\n", "'use strict'\n\nconst { AbstractIterator, AbstractKeyIterator, AbstractValueIterator } = require('../abstract-iterator')\n\nconst kUnfix = Symbol('unfix')\nconst kIterator = Symbol('iterator')\nconst kHandleOne = Symbol('handleOne')\nconst kHandleMany = Symbol('handleMany')\nconst kCallback = Symbol('callback')\n\n// TODO: unfix natively if db supports it\nclass AbstractSublevelIterator extends AbstractIterator {\n  constructor (db, options, iterator, unfix) {\n    super(db, options)\n\n    this[kIterator] = iterator\n    this[kUnfix] = unfix\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n    this[kCallback] = null\n  }\n\n  [kHandleOne] (err, key, value) {\n    const callback = this[kCallback]\n    if (err) return callback(err)\n    if (key !== undefined) key = this[kUnfix](key)\n    callback(err, key, value)\n  }\n\n  [kHandleMany] (err, entries) {\n    const callback = this[kCallback]\n    if (err) return callback(err)\n\n    for (const entry of entries) {\n      const key = entry[0]\n      if (key !== undefined) entry[0] = this[kUnfix](key)\n    }\n\n    callback(err, entries)\n  }\n}\n\nclass AbstractSublevelKeyIterator extends AbstractKeyIterator {\n  constructor (db, options, iterator, unfix) {\n    super(db, options)\n\n    this[kIterator] = iterator\n    this[kUnfix] = unfix\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n    this[kCallback] = null\n  }\n\n  [kHandleOne] (err, key) {\n    const callback = this[kCallback]\n    if (err) return callback(err)\n    if (key !== undefined) key = this[kUnfix](key)\n    callback(err, key)\n  }\n\n  [kHandleMany] (err, keys) {\n    const callback = this[kCallback]\n    if (err) return callback(err)\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      if (key !== undefined) keys[i] = this[kUnfix](key)\n    }\n\n    callback(err, keys)\n  }\n}\n\nclass AbstractSublevelValueIterator extends AbstractValueIterator {\n  constructor (db, options, iterator) {\n    super(db, options)\n    this[kIterator] = iterator\n  }\n}\n\nfor (const Iterator of [AbstractSublevelIterator, AbstractSublevelKeyIterator]) {\n  Iterator.prototype._next = function (callback) {\n    this[kCallback] = callback\n    this[kIterator].next(this[kHandleOne])\n  }\n\n  Iterator.prototype._nextv = function (size, options, callback) {\n    this[kCallback] = callback\n    this[kIterator].nextv(size, options, this[kHandleMany])\n  }\n\n  Iterator.prototype._all = function (options, callback) {\n    this[kCallback] = callback\n    this[kIterator].all(options, this[kHandleMany])\n  }\n}\n\nfor (const Iterator of [AbstractSublevelValueIterator]) {\n  Iterator.prototype._next = function (callback) {\n    this[kIterator].next(callback)\n  }\n\n  Iterator.prototype._nextv = function (size, options, callback) {\n    this[kIterator].nextv(size, options, callback)\n  }\n\n  Iterator.prototype._all = function (options, callback) {\n    this[kIterator].all(options, callback)\n  }\n}\n\nfor (const Iterator of [AbstractSublevelIterator, AbstractSublevelKeyIterator, AbstractSublevelValueIterator]) {\n  Iterator.prototype._seek = function (target, options) {\n    this[kIterator].seek(target, options)\n  }\n\n  Iterator.prototype._close = function (callback) {\n    this[kIterator].close(callback)\n  }\n}\n\nexports.AbstractSublevelIterator = AbstractSublevelIterator\nexports.AbstractSublevelKeyIterator = AbstractSublevelKeyIterator\nexports.AbstractSublevelValueIterator = AbstractSublevelValueIterator\n", "'use strict'\n\nconst ModuleError = require('module-error')\nconst { Buffer } = require('buffer') || {}\nconst {\n  AbstractSublevelIterator,\n  AbstractSublevelKeyIterator,\n  AbstractSublevelValueIterator\n} = require('./abstract-sublevel-iterator')\n\nconst kPrefix = Symbol('prefix')\nconst kUpperBound = Symbol('upperBound')\nconst kPrefixRange = Symbol('prefixRange')\nconst kParent = Symbol('parent')\nconst kUnfix = Symbol('unfix')\n\nconst textEncoder = new TextEncoder()\nconst defaults = { separator: '!' }\n\n// Wrapped to avoid circular dependency\nmodule.exports = function ({ AbstractLevel }) {\n  class AbstractSublevel extends AbstractLevel {\n    static defaults (options) {\n      // To help migrating from subleveldown to abstract-level\n      if (typeof options === 'string') {\n        throw new ModuleError('The subleveldown string shorthand for { separator } has been removed', {\n          code: 'LEVEL_LEGACY'\n        })\n      } else if (options && options.open) {\n        throw new ModuleError('The subleveldown open option has been removed', {\n          code: 'LEVEL_LEGACY'\n        })\n      }\n\n      if (options == null) {\n        return defaults\n      } else if (!options.separator) {\n        return { ...options, separator: '!' }\n      } else {\n        return options\n      }\n    }\n\n    // TODO: add autoClose option, which if true, does parent.attachResource(this)\n    constructor (db, name, options) {\n      // Don't forward AbstractSublevel options to AbstractLevel\n      const { separator, manifest, ...forward } = AbstractSublevel.defaults(options)\n      name = trim(name, separator)\n\n      // Reserve one character between separator and name to give us an upper bound\n      const reserved = separator.charCodeAt(0) + 1\n      const parent = db[kParent] || db\n\n      // Keys should sort like ['!a!', '!a!!a!', '!a\"', '!aa!', '!b!'].\n      // Use ASCII for consistent length between string, Buffer and Uint8Array\n      if (!textEncoder.encode(name).every(x => x > reserved && x < 127)) {\n        throw new ModuleError(`Prefix must use bytes > ${reserved} < ${127}`, {\n          code: 'LEVEL_INVALID_PREFIX'\n        })\n      }\n\n      super(mergeManifests(parent, manifest), forward)\n\n      const prefix = (db.prefix || '') + separator + name + separator\n      const upperBound = prefix.slice(0, -1) + String.fromCharCode(reserved)\n\n      this[kParent] = parent\n      this[kPrefix] = new MultiFormat(prefix)\n      this[kUpperBound] = new MultiFormat(upperBound)\n      this[kUnfix] = new Unfixer()\n\n      this.nextTick = parent.nextTick\n    }\n\n    prefixKey (key, keyFormat) {\n      if (keyFormat === 'utf8') {\n        return this[kPrefix].utf8 + key\n      } else if (key.byteLength === 0) {\n        // Fast path for empty key (no copy)\n        return this[kPrefix][keyFormat]\n      } else if (keyFormat === 'view') {\n        const view = this[kPrefix].view\n        const result = new Uint8Array(view.byteLength + key.byteLength)\n\n        result.set(view, 0)\n        result.set(key, view.byteLength)\n\n        return result\n      } else {\n        const buffer = this[kPrefix].buffer\n        return Buffer.concat([buffer, key], buffer.byteLength + key.byteLength)\n      }\n    }\n\n    // Not exposed for now.\n    [kPrefixRange] (range, keyFormat) {\n      if (range.gte !== undefined) {\n        range.gte = this.prefixKey(range.gte, keyFormat)\n      } else if (range.gt !== undefined) {\n        range.gt = this.prefixKey(range.gt, keyFormat)\n      } else {\n        range.gte = this[kPrefix][keyFormat]\n      }\n\n      if (range.lte !== undefined) {\n        range.lte = this.prefixKey(range.lte, keyFormat)\n      } else if (range.lt !== undefined) {\n        range.lt = this.prefixKey(range.lt, keyFormat)\n      } else {\n        range.lte = this[kUpperBound][keyFormat]\n      }\n    }\n\n    get prefix () {\n      return this[kPrefix].utf8\n    }\n\n    get db () {\n      return this[kParent]\n    }\n\n    _open (options, callback) {\n      // The parent db must open itself or be (re)opened by the user because\n      // a sublevel should not initiate state changes on the rest of the db.\n      this[kParent].open({ passive: true }, callback)\n    }\n\n    _put (key, value, options, callback) {\n      this[kParent].put(key, value, options, callback)\n    }\n\n    _get (key, options, callback) {\n      this[kParent].get(key, options, callback)\n    }\n\n    _getMany (keys, options, callback) {\n      this[kParent].getMany(keys, options, callback)\n    }\n\n    _del (key, options, callback) {\n      this[kParent].del(key, options, callback)\n    }\n\n    _batch (operations, options, callback) {\n      this[kParent].batch(operations, options, callback)\n    }\n\n    _clear (options, callback) {\n      // TODO (refactor): move to AbstractLevel\n      this[kPrefixRange](options, options.keyEncoding)\n      this[kParent].clear(options, callback)\n    }\n\n    _iterator (options) {\n      // TODO (refactor): move to AbstractLevel\n      this[kPrefixRange](options, options.keyEncoding)\n      const iterator = this[kParent].iterator(options)\n      const unfix = this[kUnfix].get(this[kPrefix].utf8.length, options.keyEncoding)\n      return new AbstractSublevelIterator(this, options, iterator, unfix)\n    }\n\n    _keys (options) {\n      this[kPrefixRange](options, options.keyEncoding)\n      const iterator = this[kParent].keys(options)\n      const unfix = this[kUnfix].get(this[kPrefix].utf8.length, options.keyEncoding)\n      return new AbstractSublevelKeyIterator(this, options, iterator, unfix)\n    }\n\n    _values (options) {\n      this[kPrefixRange](options, options.keyEncoding)\n      const iterator = this[kParent].values(options)\n      return new AbstractSublevelValueIterator(this, options, iterator)\n    }\n  }\n\n  return { AbstractSublevel }\n}\n\nconst mergeManifests = function (parent, manifest) {\n  return {\n    // Inherit manifest of parent db\n    ...parent.supports,\n\n    // Disable unsupported features\n    createIfMissing: false,\n    errorIfExists: false,\n\n    // Unset additional events because we're not forwarding them\n    events: {},\n\n    // Unset additional methods (like approximateSize) which we can't support here unless\n    // the AbstractSublevel class is overridden by an implementation of `abstract-level`.\n    additionalMethods: {},\n\n    // Inherit manifest of custom AbstractSublevel subclass. Such a class is not\n    // allowed to override encodings.\n    ...manifest,\n\n    encodings: {\n      utf8: supportsEncoding(parent, 'utf8'),\n      buffer: supportsEncoding(parent, 'buffer'),\n      view: supportsEncoding(parent, 'view')\n    }\n  }\n}\n\nconst supportsEncoding = function (parent, encoding) {\n  // Prefer a non-transcoded encoding for optimal performance\n  return parent.supports.encodings[encoding]\n    ? parent.keyEncoding(encoding).name === encoding\n    : false\n}\n\nclass MultiFormat {\n  constructor (key) {\n    this.utf8 = key\n    this.view = textEncoder.encode(key)\n    this.buffer = Buffer ? Buffer.from(this.view.buffer, 0, this.view.byteLength) : {}\n  }\n}\n\nclass Unfixer {\n  constructor () {\n    this.cache = new Map()\n  }\n\n  get (prefixLength, keyFormat) {\n    let unfix = this.cache.get(keyFormat)\n\n    if (unfix === undefined) {\n      if (keyFormat === 'view') {\n        unfix = function (prefixLength, key) {\n          // Avoid Uint8Array#slice() because it copies\n          return key.subarray(prefixLength)\n        }.bind(null, prefixLength)\n      } else {\n        unfix = function (prefixLength, key) {\n          // Avoid Buffer#subarray() because it's slow\n          return key.slice(prefixLength)\n        }.bind(null, prefixLength)\n      }\n\n      this.cache.set(keyFormat, unfix)\n    }\n\n    return unfix\n  }\n}\n\nconst trim = function (str, char) {\n  let start = 0\n  let end = str.length\n\n  while (start < end && str[start] === char) start++\n  while (end > start && str[end - 1] === char) end--\n\n  return str.slice(start, end)\n}\n", "'use strict'\n\nconst { supports } = require('level-supports')\nconst { Transcoder } = require('level-transcoder')\nconst { EventEmitter } = require('events')\nconst { fromCallback } = require('catering')\nconst ModuleError = require('module-error')\nconst { AbstractIterator } = require('./abstract-iterator')\nconst { DefaultKeyIterator, DefaultValueIterator } = require('./lib/default-kv-iterator')\nconst { DeferredIterator, DeferredKeyIterator, DeferredValueIterator } = require('./lib/deferred-iterator')\nconst { DefaultChainedBatch } = require('./lib/default-chained-batch')\nconst { getCallback, getOptions } = require('./lib/common')\nconst rangeOptions = require('./lib/range-options')\n\nconst kPromise = Symbol('promise')\nconst kLanded = Symbol('landed')\nconst kResources = Symbol('resources')\nconst kCloseResources = Symbol('closeResources')\nconst kOperations = Symbol('operations')\nconst kUndefer = Symbol('undefer')\nconst kDeferOpen = Symbol('deferOpen')\nconst kOptions = Symbol('options')\nconst kStatus = Symbol('status')\nconst kDefaultOptions = Symbol('defaultOptions')\nconst kTranscoder = Symbol('transcoder')\nconst kKeyEncoding = Symbol('keyEncoding')\nconst kValueEncoding = Symbol('valueEncoding')\nconst noop = () => {}\n\nclass AbstractLevel extends EventEmitter {\n  constructor (manifest, options) {\n    super()\n\n    if (typeof manifest !== 'object' || manifest === null) {\n      throw new TypeError(\"The first argument 'manifest' must be an object\")\n    }\n\n    options = getOptions(options)\n    const { keyEncoding, valueEncoding, passive, ...forward } = options\n\n    this[kResources] = new Set()\n    this[kOperations] = []\n    this[kDeferOpen] = true\n    this[kOptions] = forward\n    this[kStatus] = 'opening'\n\n    this.supports = supports(manifest, {\n      status: true,\n      promises: true,\n      clear: true,\n      getMany: true,\n      deferredOpen: true,\n\n      // TODO (next major): add seek\n      snapshots: manifest.snapshots !== false,\n      permanence: manifest.permanence !== false,\n\n      // TODO: remove from level-supports because it's always supported\n      keyIterator: true,\n      valueIterator: true,\n      iteratorNextv: true,\n      iteratorAll: true,\n\n      encodings: manifest.encodings || {},\n      events: Object.assign({}, manifest.events, {\n        opening: true,\n        open: true,\n        closing: true,\n        closed: true,\n        put: true,\n        del: true,\n        batch: true,\n        clear: true\n      })\n    })\n\n    this[kTranscoder] = new Transcoder(formats(this))\n    this[kKeyEncoding] = this[kTranscoder].encoding(keyEncoding || 'utf8')\n    this[kValueEncoding] = this[kTranscoder].encoding(valueEncoding || 'utf8')\n\n    // Add custom and transcoder encodings to manifest\n    for (const encoding of this[kTranscoder].encodings()) {\n      if (!this.supports.encodings[encoding.commonName]) {\n        this.supports.encodings[encoding.commonName] = true\n      }\n    }\n\n    this[kDefaultOptions] = {\n      empty: Object.freeze({}),\n      entry: Object.freeze({\n        keyEncoding: this[kKeyEncoding].commonName,\n        valueEncoding: this[kValueEncoding].commonName\n      }),\n      key: Object.freeze({\n        keyEncoding: this[kKeyEncoding].commonName\n      })\n    }\n\n    // Let subclass finish its constructor\n    this.nextTick(() => {\n      if (this[kDeferOpen]) {\n        this.open({ passive: false }, noop)\n      }\n    })\n  }\n\n  get status () {\n    return this[kStatus]\n  }\n\n  keyEncoding (encoding) {\n    return this[kTranscoder].encoding(encoding != null ? encoding : this[kKeyEncoding])\n  }\n\n  valueEncoding (encoding) {\n    return this[kTranscoder].encoding(encoding != null ? encoding : this[kValueEncoding])\n  }\n\n  open (options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n\n    options = { ...this[kOptions], ...getOptions(options) }\n\n    options.createIfMissing = options.createIfMissing !== false\n    options.errorIfExists = !!options.errorIfExists\n\n    const maybeOpened = (err) => {\n      if (this[kStatus] === 'closing' || this[kStatus] === 'opening') {\n        // Wait until pending state changes are done\n        this.once(kLanded, err ? () => maybeOpened(err) : maybeOpened)\n      } else if (this[kStatus] !== 'open') {\n        callback(new ModuleError('Database is not open', {\n          code: 'LEVEL_DATABASE_NOT_OPEN',\n          cause: err\n        }))\n      } else {\n        callback()\n      }\n    }\n\n    if (options.passive) {\n      if (this[kStatus] === 'opening') {\n        this.once(kLanded, maybeOpened)\n      } else {\n        this.nextTick(maybeOpened)\n      }\n    } else if (this[kStatus] === 'closed' || this[kDeferOpen]) {\n      this[kDeferOpen] = false\n      this[kStatus] = 'opening'\n      this.emit('opening')\n\n      this._open(options, (err) => {\n        if (err) {\n          this[kStatus] = 'closed'\n\n          // Resources must be safe to close in any db state\n          this[kCloseResources](() => {\n            this.emit(kLanded)\n            maybeOpened(err)\n          })\n\n          this[kUndefer]()\n          return\n        }\n\n        this[kStatus] = 'open'\n        this[kUndefer]()\n        this.emit(kLanded)\n\n        // Only emit public event if pending state changes are done\n        if (this[kStatus] === 'open') this.emit('open')\n\n        // TODO (next major): remove this alias\n        if (this[kStatus] === 'open') this.emit('ready')\n\n        maybeOpened()\n      })\n    } else if (this[kStatus] === 'open') {\n      this.nextTick(maybeOpened)\n    } else {\n      this.once(kLanded, () => this.open(options, callback))\n    }\n\n    return callback[kPromise]\n  }\n\n  _open (options, callback) {\n    this.nextTick(callback)\n  }\n\n  close (callback) {\n    callback = fromCallback(callback, kPromise)\n\n    const maybeClosed = (err) => {\n      if (this[kStatus] === 'opening' || this[kStatus] === 'closing') {\n        // Wait until pending state changes are done\n        this.once(kLanded, err ? maybeClosed(err) : maybeClosed)\n      } else if (this[kStatus] !== 'closed') {\n        callback(new ModuleError('Database is not closed', {\n          code: 'LEVEL_DATABASE_NOT_CLOSED',\n          cause: err\n        }))\n      } else {\n        callback()\n      }\n    }\n\n    if (this[kStatus] === 'open') {\n      this[kStatus] = 'closing'\n      this.emit('closing')\n\n      const cancel = (err) => {\n        this[kStatus] = 'open'\n        this[kUndefer]()\n        this.emit(kLanded)\n        maybeClosed(err)\n      }\n\n      this[kCloseResources](() => {\n        this._close((err) => {\n          if (err) return cancel(err)\n\n          this[kStatus] = 'closed'\n          this[kUndefer]()\n          this.emit(kLanded)\n\n          // Only emit public event if pending state changes are done\n          if (this[kStatus] === 'closed') this.emit('closed')\n\n          maybeClosed()\n        })\n      })\n    } else if (this[kStatus] === 'closed') {\n      this.nextTick(maybeClosed)\n    } else {\n      this.once(kLanded, () => this.close(callback))\n    }\n\n    return callback[kPromise]\n  }\n\n  [kCloseResources] (callback) {\n    if (this[kResources].size === 0) {\n      return this.nextTick(callback)\n    }\n\n    let pending = this[kResources].size\n    let sync = true\n\n    const next = () => {\n      if (--pending === 0) {\n        // We don't have tests for generic resources, so dezalgo\n        if (sync) this.nextTick(callback)\n        else callback()\n      }\n    }\n\n    // In parallel so that all resources know they are closed\n    for (const resource of this[kResources]) {\n      resource.close(next)\n    }\n\n    sync = false\n    this[kResources].clear()\n  }\n\n  _close (callback) {\n    this.nextTick(callback)\n  }\n\n  get (key, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].entry)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.get(key, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    const err = this._checkKey(key)\n\n    if (err) {\n      this.nextTick(callback, err)\n      return callback[kPromise]\n    }\n\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options.valueEncoding)\n    const keyFormat = keyEncoding.format\n    const valueFormat = valueEncoding.format\n\n    // Forward encoding options to the underlying store\n    if (options.keyEncoding !== keyFormat || options.valueEncoding !== valueFormat) {\n      // Avoid spread operator because of https://bugs.chromium.org/p/chromium/issues/detail?id=1204540\n      options = Object.assign({}, options, { keyEncoding: keyFormat, valueEncoding: valueFormat })\n    }\n\n    this._get(this.prefixKey(keyEncoding.encode(key), keyFormat), options, (err, value) => {\n      if (err) {\n        // Normalize not found error for backwards compatibility with abstract-leveldown and level(up)\n        if (err.code === 'LEVEL_NOT_FOUND' || err.notFound || /NotFound/i.test(err)) {\n          if (!err.code) err.code = 'LEVEL_NOT_FOUND' // Preferred way going forward\n          if (!err.notFound) err.notFound = true // Same as level-errors\n          if (!err.status) err.status = 404 // Same as level-errors\n        }\n\n        return callback(err)\n      }\n\n      try {\n        value = valueEncoding.decode(value)\n      } catch (err) {\n        return callback(new ModuleError('Could not decode value', {\n          code: 'LEVEL_DECODE_ERROR',\n          cause: err\n        }))\n      }\n\n      callback(null, value)\n    })\n\n    return callback[kPromise]\n  }\n\n  _get (key, options, callback) {\n    this.nextTick(callback, new Error('NotFound'))\n  }\n\n  getMany (keys, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].entry)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.getMany(keys, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    if (!Array.isArray(keys)) {\n      this.nextTick(callback, new TypeError(\"The first argument 'keys' must be an array\"))\n      return callback[kPromise]\n    }\n\n    if (keys.length === 0) {\n      this.nextTick(callback, null, [])\n      return callback[kPromise]\n    }\n\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options.valueEncoding)\n    const keyFormat = keyEncoding.format\n    const valueFormat = valueEncoding.format\n\n    // Forward encoding options\n    if (options.keyEncoding !== keyFormat || options.valueEncoding !== valueFormat) {\n      options = Object.assign({}, options, { keyEncoding: keyFormat, valueEncoding: valueFormat })\n    }\n\n    const mappedKeys = new Array(keys.length)\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      const err = this._checkKey(key)\n\n      if (err) {\n        this.nextTick(callback, err)\n        return callback[kPromise]\n      }\n\n      mappedKeys[i] = this.prefixKey(keyEncoding.encode(key), keyFormat)\n    }\n\n    this._getMany(mappedKeys, options, (err, values) => {\n      if (err) return callback(err)\n\n      try {\n        for (let i = 0; i < values.length; i++) {\n          if (values[i] !== undefined) {\n            values[i] = valueEncoding.decode(values[i])\n          }\n        }\n      } catch (err) {\n        return callback(new ModuleError(`Could not decode one or more of ${values.length} value(s)`, {\n          code: 'LEVEL_DECODE_ERROR',\n          cause: err\n        }))\n      }\n\n      callback(null, values)\n    })\n\n    return callback[kPromise]\n  }\n\n  _getMany (keys, options, callback) {\n    this.nextTick(callback, null, new Array(keys.length).fill(undefined))\n  }\n\n  put (key, value, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].entry)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.put(key, value, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    const err = this._checkKey(key) || this._checkValue(value)\n\n    if (err) {\n      this.nextTick(callback, err)\n      return callback[kPromise]\n    }\n\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options.valueEncoding)\n    const keyFormat = keyEncoding.format\n    const valueFormat = valueEncoding.format\n\n    // Forward encoding options\n    if (options.keyEncoding !== keyFormat || options.valueEncoding !== valueFormat) {\n      options = Object.assign({}, options, { keyEncoding: keyFormat, valueEncoding: valueFormat })\n    }\n\n    const mappedKey = this.prefixKey(keyEncoding.encode(key), keyFormat)\n    const mappedValue = valueEncoding.encode(value)\n\n    this._put(mappedKey, mappedValue, options, (err) => {\n      if (err) return callback(err)\n      this.emit('put', key, value)\n      callback()\n    })\n\n    return callback[kPromise]\n  }\n\n  _put (key, value, options, callback) {\n    this.nextTick(callback)\n  }\n\n  del (key, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].key)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.del(key, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    const err = this._checkKey(key)\n\n    if (err) {\n      this.nextTick(callback, err)\n      return callback[kPromise]\n    }\n\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n    const keyFormat = keyEncoding.format\n\n    // Forward encoding options\n    if (options.keyEncoding !== keyFormat) {\n      options = Object.assign({}, options, { keyEncoding: keyFormat })\n    }\n\n    this._del(this.prefixKey(keyEncoding.encode(key), keyFormat), options, (err) => {\n      if (err) return callback(err)\n      this.emit('del', key)\n      callback()\n    })\n\n    return callback[kPromise]\n  }\n\n  _del (key, options, callback) {\n    this.nextTick(callback)\n  }\n\n  batch (operations, options, callback) {\n    if (!arguments.length) {\n      if (this[kStatus] === 'opening') return new DefaultChainedBatch(this)\n      if (this[kStatus] !== 'open') {\n        throw new ModuleError('Database is not open', {\n          code: 'LEVEL_DATABASE_NOT_OPEN'\n        })\n      }\n      return this._chainedBatch()\n    }\n\n    if (typeof operations === 'function') callback = operations\n    else callback = getCallback(options, callback)\n\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].empty)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.batch(operations, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    if (!Array.isArray(operations)) {\n      this.nextTick(callback, new TypeError(\"The first argument 'operations' must be an array\"))\n      return callback[kPromise]\n    }\n\n    if (operations.length === 0) {\n      this.nextTick(callback)\n      return callback[kPromise]\n    }\n\n    const mapped = new Array(operations.length)\n    const { keyEncoding: ke, valueEncoding: ve, ...forward } = options\n\n    for (let i = 0; i < operations.length; i++) {\n      if (typeof operations[i] !== 'object' || operations[i] === null) {\n        this.nextTick(callback, new TypeError('A batch operation must be an object'))\n        return callback[kPromise]\n      }\n\n      const op = Object.assign({}, operations[i])\n\n      if (op.type !== 'put' && op.type !== 'del') {\n        this.nextTick(callback, new TypeError(\"A batch operation must have a type property that is 'put' or 'del'\"))\n        return callback[kPromise]\n      }\n\n      const err = this._checkKey(op.key)\n\n      if (err) {\n        this.nextTick(callback, err)\n        return callback[kPromise]\n      }\n\n      const db = op.sublevel != null ? op.sublevel : this\n      const keyEncoding = db.keyEncoding(op.keyEncoding || ke)\n      const keyFormat = keyEncoding.format\n\n      op.key = db.prefixKey(keyEncoding.encode(op.key), keyFormat)\n      op.keyEncoding = keyFormat\n\n      if (op.type === 'put') {\n        const valueErr = this._checkValue(op.value)\n\n        if (valueErr) {\n          this.nextTick(callback, valueErr)\n          return callback[kPromise]\n        }\n\n        const valueEncoding = db.valueEncoding(op.valueEncoding || ve)\n\n        op.value = valueEncoding.encode(op.value)\n        op.valueEncoding = valueEncoding.format\n      }\n\n      // Prevent double prefixing\n      if (db !== this) {\n        op.sublevel = null\n      }\n\n      mapped[i] = op\n    }\n\n    this._batch(mapped, forward, (err) => {\n      if (err) return callback(err)\n      this.emit('batch', operations)\n      callback()\n    })\n\n    return callback[kPromise]\n  }\n\n  _batch (operations, options, callback) {\n    this.nextTick(callback)\n  }\n\n  sublevel (name, options) {\n    return this._sublevel(name, AbstractSublevel.defaults(options))\n  }\n\n  _sublevel (name, options) {\n    return new AbstractSublevel(this, name, options)\n  }\n\n  prefixKey (key, keyFormat) {\n    return key\n  }\n\n  clear (options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].empty)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.clear(options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    const original = options\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n\n    options = rangeOptions(options, keyEncoding)\n    options.keyEncoding = keyEncoding.format\n\n    if (options.limit === 0) {\n      this.nextTick(callback)\n    } else {\n      this._clear(options, (err) => {\n        if (err) return callback(err)\n        this.emit('clear', original)\n        callback()\n      })\n    }\n\n    return callback[kPromise]\n  }\n\n  _clear (options, callback) {\n    this.nextTick(callback)\n  }\n\n  iterator (options) {\n    const keyEncoding = this.keyEncoding(options && options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options && options.valueEncoding)\n\n    options = rangeOptions(options, keyEncoding)\n    options.keys = options.keys !== false\n    options.values = options.values !== false\n\n    // We need the original encoding options in AbstractIterator in order to decode data\n    options[AbstractIterator.keyEncoding] = keyEncoding\n    options[AbstractIterator.valueEncoding] = valueEncoding\n\n    // Forward encoding options to private API\n    options.keyEncoding = keyEncoding.format\n    options.valueEncoding = valueEncoding.format\n\n    if (this[kStatus] === 'opening') {\n      return new DeferredIterator(this, options)\n    } else if (this[kStatus] !== 'open') {\n      throw new ModuleError('Database is not open', {\n        code: 'LEVEL_DATABASE_NOT_OPEN'\n      })\n    }\n\n    return this._iterator(options)\n  }\n\n  _iterator (options) {\n    return new AbstractIterator(this, options)\n  }\n\n  keys (options) {\n    // Also include valueEncoding (though unused) because we may fallback to _iterator()\n    const keyEncoding = this.keyEncoding(options && options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options && options.valueEncoding)\n\n    options = rangeOptions(options, keyEncoding)\n\n    // We need the original encoding options in AbstractKeyIterator in order to decode data\n    options[AbstractIterator.keyEncoding] = keyEncoding\n    options[AbstractIterator.valueEncoding] = valueEncoding\n\n    // Forward encoding options to private API\n    options.keyEncoding = keyEncoding.format\n    options.valueEncoding = valueEncoding.format\n\n    if (this[kStatus] === 'opening') {\n      return new DeferredKeyIterator(this, options)\n    } else if (this[kStatus] !== 'open') {\n      throw new ModuleError('Database is not open', {\n        code: 'LEVEL_DATABASE_NOT_OPEN'\n      })\n    }\n\n    return this._keys(options)\n  }\n\n  _keys (options) {\n    return new DefaultKeyIterator(this, options)\n  }\n\n  values (options) {\n    const keyEncoding = this.keyEncoding(options && options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options && options.valueEncoding)\n\n    options = rangeOptions(options, keyEncoding)\n\n    // We need the original encoding options in AbstractValueIterator in order to decode data\n    options[AbstractIterator.keyEncoding] = keyEncoding\n    options[AbstractIterator.valueEncoding] = valueEncoding\n\n    // Forward encoding options to private API\n    options.keyEncoding = keyEncoding.format\n    options.valueEncoding = valueEncoding.format\n\n    if (this[kStatus] === 'opening') {\n      return new DeferredValueIterator(this, options)\n    } else if (this[kStatus] !== 'open') {\n      throw new ModuleError('Database is not open', {\n        code: 'LEVEL_DATABASE_NOT_OPEN'\n      })\n    }\n\n    return this._values(options)\n  }\n\n  _values (options) {\n    return new DefaultValueIterator(this, options)\n  }\n\n  defer (fn) {\n    if (typeof fn !== 'function') {\n      throw new TypeError('The first argument must be a function')\n    }\n\n    this[kOperations].push(fn)\n  }\n\n  [kUndefer] () {\n    if (this[kOperations].length === 0) {\n      return\n    }\n\n    const operations = this[kOperations]\n    this[kOperations] = []\n\n    for (const op of operations) {\n      op()\n    }\n  }\n\n  // TODO: docs and types\n  attachResource (resource) {\n    if (typeof resource !== 'object' || resource === null ||\n      typeof resource.close !== 'function') {\n      throw new TypeError('The first argument must be a resource object')\n    }\n\n    this[kResources].add(resource)\n  }\n\n  // TODO: docs and types\n  detachResource (resource) {\n    this[kResources].delete(resource)\n  }\n\n  _chainedBatch () {\n    return new DefaultChainedBatch(this)\n  }\n\n  _checkKey (key) {\n    if (key === null || key === undefined) {\n      return new ModuleError('Key cannot be null or undefined', {\n        code: 'LEVEL_INVALID_KEY'\n      })\n    }\n  }\n\n  _checkValue (value) {\n    if (value === null || value === undefined) {\n      return new ModuleError('Value cannot be null or undefined', {\n        code: 'LEVEL_INVALID_VALUE'\n      })\n    }\n  }\n}\n\n// Expose browser-compatible nextTick for dependents\n// TODO: after we drop node 10, also use queueMicrotask in node\nAbstractLevel.prototype.nextTick = require('./lib/next-tick')\n\nconst { AbstractSublevel } = require('./lib/abstract-sublevel')({ AbstractLevel })\n\nexports.AbstractLevel = AbstractLevel\nexports.AbstractSublevel = AbstractSublevel\n\nconst maybeError = function (db, callback) {\n  if (db[kStatus] !== 'open') {\n    db.nextTick(callback, new ModuleError('Database is not open', {\n      code: 'LEVEL_DATABASE_NOT_OPEN'\n    }))\n    return true\n  }\n\n  return false\n}\n\nconst formats = function (db) {\n  return Object.keys(db.supports.encodings)\n    .filter(k => !!db.supports.encodings[k])\n}\n", "'use strict'\n\nexports.AbstractLevel = require('./abstract-level').AbstractLevel\nexports.AbstractSublevel = require('./abstract-level').AbstractSublevel\nexports.AbstractIterator = require('./abstract-iterator').AbstractIterator\nexports.AbstractKeyIterator = require('./abstract-iterator').AbstractKeyIterator\nexports.AbstractValueIterator = require('./abstract-iterator').AbstractValueIterator\nexports.AbstractChainedBatch = require('./abstract-chained-batch').AbstractChainedBatch\n", "/*! run-parallel-limit. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = runParallelLimit\n\nconst queueMicrotask = require('queue-microtask')\n\nfunction runParallelLimit (tasks, limit, cb) {\n  if (typeof limit !== 'number') throw new Error('second argument must be a Number')\n  let results, len, pending, keys, isErrored\n  let isSync = true\n  let next\n\n  if (Array.isArray(tasks)) {\n    results = []\n    pending = len = tasks.length\n  } else {\n    keys = Object.keys(tasks)\n    results = {}\n    pending = len = keys.length\n  }\n\n  function done (err) {\n    function end () {\n      if (cb) cb(err, results)\n      cb = null\n    }\n    if (isSync) queueMicrotask(end)\n    else end()\n  }\n\n  function each (i, err, result) {\n    results[i] = result\n    if (err) isErrored = true\n    if (--pending === 0 || err) {\n      done(err)\n    } else if (!isErrored && next < len) {\n      let key\n      if (keys) {\n        key = keys[next]\n        next += 1\n        tasks[key](function (err, result) { each(key, err, result) })\n      } else {\n        key = next\n        next += 1\n        tasks[key](function (err, result) { each(key, err, result) })\n      }\n    }\n  }\n\n  next = limit\n  if (!pending) {\n    // empty\n    done(null)\n  } else if (keys) {\n    // object\n    keys.some(function (key, i) {\n      tasks[key](function (err, result) { each(key, err, result) })\n      if (i === limit - 1) return true // early return\n      return false\n    })\n  } else {\n    // array\n    tasks.some(function (task, i) {\n      task(function (err, result) { each(i, err, result) })\n      if (i === limit - 1) return true // early return\n      return false\n    })\n  }\n\n  isSync = false\n}\n", "/* global IDBKeyRange */\n\n'use strict'\n\nmodule.exports = function createKeyRange (options) {\n  const lower = options.gte !== undefined ? options.gte : options.gt !== undefined ? options.gt : undefined\n  const upper = options.lte !== undefined ? options.lte : options.lt !== undefined ? options.lt : undefined\n  const lowerExclusive = options.gte === undefined\n  const upperExclusive = options.lte === undefined\n\n  if (lower !== undefined && upper !== undefined) {\n    return IDBKeyRange.bound(lower, upper, lowerExclusive, upperExclusive)\n  } else if (lower !== undefined) {\n    return IDBKeyRange.lowerBound(lower, lowerExclusive)\n  } else if (upper !== undefined) {\n    return IDBKeyRange.upperBound(upper, upperExclusive)\n  } else {\n    return null\n  }\n}\n", "'use strict'\n\nconst textEncoder = new TextEncoder()\n\nmodule.exports = function (data) {\n  if (data instanceof Uint8Array) {\n    return data\n  } else if (data instanceof ArrayBuffer) {\n    return new Uint8Array(data)\n  } else {\n    // Non-binary data stored with an old version (level-js < 5.0.0)\n    return textEncoder.encode(data)\n  }\n}\n", "'use strict'\n\nconst { AbstractIterator } = require('abstract-level')\nconst createKeyRange = require('./util/key-range')\nconst deserialize = require('./util/deserialize')\n\nconst kCache = Symbol('cache')\nconst kFinished = Symbol('finished')\nconst kOptions = Symbol('options')\nconst kCurrentOptions = Symbol('currentOptions')\nconst kPosition = Symbol('position')\nconst kLocation = Symbol('location')\nconst kFirst = Symbol('first')\nconst emptyOptions = {}\n\nclass Iterator extends AbstractIterator {\n  constructor (db, location, options) {\n    super(db, options)\n\n    this[kCache] = []\n    this[kFinished] = this.limit === 0\n    this[kOptions] = options\n    this[kCurrentOptions] = { ...options }\n    this[kPosition] = undefined\n    this[kLocation] = location\n    this[kFirst] = true\n  }\n\n  // Note: if called by _all() then size can be Infinity. This is an internal\n  // detail; by design AbstractIterator.nextv() does not support Infinity.\n  _nextv (size, options, callback) {\n    this[kFirst] = false\n\n    if (this[kFinished]) {\n      return this.nextTick(callback, null, [])\n    } else if (this[kCache].length > 0) {\n      // TODO: mixing next and nextv is not covered by test suite\n      size = Math.min(size, this[kCache].length)\n      return this.nextTick(callback, null, this[kCache].splice(0, size))\n    }\n\n    // Adjust range by what we already visited\n    if (this[kPosition] !== undefined) {\n      if (this[kOptions].reverse) {\n        this[kCurrentOptions].lt = this[kPosition]\n        this[kCurrentOptions].lte = undefined\n      } else {\n        this[kCurrentOptions].gt = this[kPosition]\n        this[kCurrentOptions].gte = undefined\n      }\n    }\n\n    let keyRange\n\n    try {\n      keyRange = createKeyRange(this[kCurrentOptions])\n    } catch (_) {\n      // The lower key is greater than the upper key.\n      // IndexedDB throws an error, but we'll just return 0 results.\n      this[kFinished] = true\n      return this.nextTick(callback, null, [])\n    }\n\n    const transaction = this.db.db.transaction([this[kLocation]], 'readonly')\n    const store = transaction.objectStore(this[kLocation])\n    const entries = []\n\n    if (!this[kOptions].reverse) {\n      let keys\n      let values\n\n      const complete = () => {\n        // Wait for both requests to complete\n        if (keys === undefined || values === undefined) return\n\n        const length = Math.max(keys.length, values.length)\n\n        if (length === 0 || size === Infinity) {\n          this[kFinished] = true\n        } else {\n          this[kPosition] = keys[length - 1]\n        }\n\n        // Resize\n        entries.length = length\n\n        // Merge keys and values\n        for (let i = 0; i < length; i++) {\n          const key = keys[i]\n          const value = values[i]\n\n          entries[i] = [\n            this[kOptions].keys && key !== undefined ? deserialize(key) : undefined,\n            this[kOptions].values && value !== undefined ? deserialize(value) : undefined\n          ]\n        }\n\n        maybeCommit(transaction)\n      }\n\n      // If keys were not requested and size is Infinity, we don't have to keep\n      // track of position and can thus skip getting keys.\n      if (this[kOptions].keys || size < Infinity) {\n        store.getAllKeys(keyRange, size < Infinity ? size : undefined).onsuccess = (ev) => {\n          keys = ev.target.result\n          complete()\n        }\n      } else {\n        keys = []\n        this.nextTick(complete)\n      }\n\n      if (this[kOptions].values) {\n        store.getAll(keyRange, size < Infinity ? size : undefined).onsuccess = (ev) => {\n          values = ev.target.result\n          complete()\n        }\n      } else {\n        values = []\n        this.nextTick(complete)\n      }\n    } else {\n      // Can't use getAll() in reverse, so use a slower cursor that yields one item at a time\n      // TODO: test if all target browsers support openKeyCursor\n      const method = !this[kOptions].values && store.openKeyCursor ? 'openKeyCursor' : 'openCursor'\n\n      store[method](keyRange, 'prev').onsuccess = (ev) => {\n        const cursor = ev.target.result\n\n        if (cursor) {\n          const { key, value } = cursor\n          this[kPosition] = key\n\n          entries.push([\n            this[kOptions].keys && key !== undefined ? deserialize(key) : undefined,\n            this[kOptions].values && value !== undefined ? deserialize(value) : undefined\n          ])\n\n          if (entries.length < size) {\n            cursor.continue()\n          } else {\n            maybeCommit(transaction)\n          }\n        } else {\n          this[kFinished] = true\n        }\n      }\n    }\n\n    // If an error occurs (on the request), the transaction will abort.\n    transaction.onabort = () => {\n      callback(transaction.error || new Error('aborted by user'))\n      callback = null\n    }\n\n    transaction.oncomplete = () => {\n      callback(null, entries)\n      callback = null\n    }\n  }\n\n  _next (callback) {\n    if (this[kCache].length > 0) {\n      const [key, value] = this[kCache].shift()\n      this.nextTick(callback, null, key, value)\n    } else if (this[kFinished]) {\n      this.nextTick(callback)\n    } else {\n      let size = Math.min(100, this.limit - this.count)\n\n      if (this[kFirst]) {\n        // It's common to only want one entry initially or after a seek()\n        this[kFirst] = false\n        size = 1\n      }\n\n      this._nextv(size, emptyOptions, (err, entries) => {\n        if (err) return callback(err)\n        this[kCache] = entries\n        this._next(callback)\n      })\n    }\n  }\n\n  _all (options, callback) {\n    this[kFirst] = false\n\n    // TODO: mixing next and all is not covered by test suite\n    const cache = this[kCache].splice(0, this[kCache].length)\n    const size = this.limit - this.count - cache.length\n\n    if (size <= 0) {\n      return this.nextTick(callback, null, cache)\n    }\n\n    this._nextv(size, emptyOptions, (err, entries) => {\n      if (err) return callback(err)\n      if (cache.length > 0) entries = cache.concat(entries)\n      callback(null, entries)\n    })\n  }\n\n  _seek (target, options) {\n    this[kFirst] = true\n    this[kCache] = []\n    this[kFinished] = false\n    this[kPosition] = undefined\n\n    // TODO: not covered by test suite\n    this[kCurrentOptions] = { ...this[kOptions] }\n\n    let keyRange\n\n    try {\n      keyRange = createKeyRange(this[kOptions])\n    } catch (_) {\n      this[kFinished] = true\n      return\n    }\n\n    if (keyRange !== null && !keyRange.includes(target)) {\n      this[kFinished] = true\n    } else if (this[kOptions].reverse) {\n      this[kCurrentOptions].lte = target\n    } else {\n      this[kCurrentOptions].gte = target\n    }\n  }\n}\n\nexports.Iterator = Iterator\n\nfunction maybeCommit (transaction) {\n  // Commit (meaning close) now instead of waiting for auto-commit\n  if (typeof transaction.commit === 'function') {\n    transaction.commit()\n  }\n}\n", "'use strict'\n\nmodule.exports = function clear (db, location, keyRange, options, callback) {\n  if (options.limit === 0) return db.nextTick(callback)\n\n  const transaction = db.db.transaction([location], 'readwrite')\n  const store = transaction.objectStore(location)\n  let count = 0\n\n  transaction.oncomplete = function () {\n    callback()\n  }\n\n  transaction.onabort = function () {\n    callback(transaction.error || new Error('aborted by user'))\n  }\n\n  // A key cursor is faster (skips reading values) but not supported by IE\n  // TODO: we no longer support IE. Test others\n  const method = store.openKeyCursor ? 'openKeyCursor' : 'openCursor'\n  const direction = options.reverse ? 'prev' : 'next'\n\n  store[method](keyRange, direction).onsuccess = function (ev) {\n    const cursor = ev.target.result\n\n    if (cursor) {\n      // Wait for a request to complete before continuing, saving CPU.\n      store.delete(cursor.key).onsuccess = function () {\n        if (options.limit <= 0 || ++count < options.limit) {\n          cursor.continue()\n        }\n      }\n    }\n  }\n}\n", "/* global indexedDB */\n\n'use strict'\n\nconst { AbstractLevel } = require('abstract-level')\nconst ModuleError = require('module-error')\nconst parallel = require('run-parallel-limit')\nconst { fromCallback } = require('catering')\nconst { Iterator } = require('./iterator')\nconst deserialize = require('./util/deserialize')\nconst clear = require('./util/clear')\nconst createKeyRange = require('./util/key-range')\n\n// Keep as-is for compatibility with existing level-js databases\nconst DEFAULT_PREFIX = 'level-js-'\n\nconst kIDB = Symbol('idb')\nconst kNamePrefix = Symbol('namePrefix')\nconst kLocation = Symbol('location')\nconst kVersion = Symbol('version')\nconst kStore = Symbol('store')\nconst kOnComplete = Symbol('onComplete')\nconst kPromise = Symbol('promise')\n\nclass BrowserLevel extends AbstractLevel {\n  constructor (location, options, _) {\n    // To help migrating to abstract-level\n    if (typeof options === 'function' || typeof _ === 'function') {\n      throw new ModuleError('The levelup-style callback argument has been removed', {\n        code: 'LEVEL_LEGACY'\n      })\n    }\n\n    const { prefix, version, ...forward } = options || {}\n\n    super({\n      encodings: { view: true },\n      snapshots: false,\n      createIfMissing: false,\n      errorIfExists: false,\n      seek: true\n    }, forward)\n\n    if (typeof location !== 'string') {\n      throw new Error('constructor requires a location string argument')\n    }\n\n    // TODO (next major): remove default prefix\n    this[kLocation] = location\n    this[kNamePrefix] = prefix == null ? DEFAULT_PREFIX : prefix\n    this[kVersion] = parseInt(version || 1, 10)\n    this[kIDB] = null\n  }\n\n  get location () {\n    return this[kLocation]\n  }\n\n  get namePrefix () {\n    return this[kNamePrefix]\n  }\n\n  get version () {\n    return this[kVersion]\n  }\n\n  // Exposed for backwards compat and unit tests\n  get db () {\n    return this[kIDB]\n  }\n\n  get type () {\n    return 'browser-level'\n  }\n\n  _open (options, callback) {\n    const req = indexedDB.open(this[kNamePrefix] + this[kLocation], this[kVersion])\n\n    req.onerror = function () {\n      callback(req.error || new Error('unknown error'))\n    }\n\n    req.onsuccess = () => {\n      this[kIDB] = req.result\n      callback()\n    }\n\n    req.onupgradeneeded = (ev) => {\n      const db = ev.target.result\n\n      if (!db.objectStoreNames.contains(this[kLocation])) {\n        db.createObjectStore(this[kLocation])\n      }\n    }\n  }\n\n  [kStore] (mode) {\n    const transaction = this[kIDB].transaction([this[kLocation]], mode)\n    return transaction.objectStore(this[kLocation])\n  }\n\n  [kOnComplete] (request, callback) {\n    const transaction = request.transaction\n\n    // Take advantage of the fact that a non-canceled request error aborts\n    // the transaction. I.e. no need to listen for \"request.onerror\".\n    transaction.onabort = function () {\n      callback(transaction.error || new Error('aborted by user'))\n    }\n\n    transaction.oncomplete = function () {\n      callback(null, request.result)\n    }\n  }\n\n  _get (key, options, callback) {\n    const store = this[kStore]('readonly')\n    let req\n\n    try {\n      req = store.get(key)\n    } catch (err) {\n      return this.nextTick(callback, err)\n    }\n\n    this[kOnComplete](req, function (err, value) {\n      if (err) return callback(err)\n\n      if (value === undefined) {\n        return callback(new ModuleError('Entry not found', {\n          code: 'LEVEL_NOT_FOUND'\n        }))\n      }\n\n      callback(null, deserialize(value))\n    })\n  }\n\n  _getMany (keys, options, callback) {\n    const store = this[kStore]('readonly')\n    const tasks = keys.map((key) => (next) => {\n      let request\n\n      try {\n        request = store.get(key)\n      } catch (err) {\n        return next(err)\n      }\n\n      request.onsuccess = () => {\n        const value = request.result\n        next(null, value === undefined ? value : deserialize(value))\n      }\n\n      request.onerror = (ev) => {\n        ev.stopPropagation()\n        next(request.error)\n      }\n    })\n\n    parallel(tasks, 16, callback)\n  }\n\n  _del (key, options, callback) {\n    const store = this[kStore]('readwrite')\n    let req\n\n    try {\n      req = store.delete(key)\n    } catch (err) {\n      return this.nextTick(callback, err)\n    }\n\n    this[kOnComplete](req, callback)\n  }\n\n  _put (key, value, options, callback) {\n    const store = this[kStore]('readwrite')\n    let req\n\n    try {\n      // Will throw a DataError or DataCloneError if the environment\n      // does not support serializing the key or value respectively.\n      req = store.put(value, key)\n    } catch (err) {\n      return this.nextTick(callback, err)\n    }\n\n    this[kOnComplete](req, callback)\n  }\n\n  // TODO: implement key and value iterators\n  _iterator (options) {\n    return new Iterator(this, this[kLocation], options)\n  }\n\n  _batch (operations, options, callback) {\n    const store = this[kStore]('readwrite')\n    const transaction = store.transaction\n    let index = 0\n    let error\n\n    transaction.onabort = function () {\n      callback(error || transaction.error || new Error('aborted by user'))\n    }\n\n    transaction.oncomplete = function () {\n      callback()\n    }\n\n    // Wait for a request to complete before making the next, saving CPU.\n    function loop () {\n      const op = operations[index++]\n      const key = op.key\n\n      let req\n\n      try {\n        req = op.type === 'del' ? store.delete(key) : store.put(op.value, key)\n      } catch (err) {\n        error = err\n        transaction.abort()\n        return\n      }\n\n      if (index < operations.length) {\n        req.onsuccess = loop\n      } else if (typeof transaction.commit === 'function') {\n        // Commit now instead of waiting for auto-commit\n        transaction.commit()\n      }\n    }\n\n    loop()\n  }\n\n  _clear (options, callback) {\n    let keyRange\n    let req\n\n    try {\n      keyRange = createKeyRange(options)\n    } catch (e) {\n      // The lower key is greater than the upper key.\n      // IndexedDB throws an error, but we'll just do nothing.\n      return this.nextTick(callback)\n    }\n\n    if (options.limit >= 0) {\n      // IDBObjectStore#delete(range) doesn't have such an option.\n      // Fall back to cursor-based implementation.\n      return clear(this, this[kLocation], keyRange, options, callback)\n    }\n\n    try {\n      const store = this[kStore]('readwrite')\n      req = keyRange ? store.delete(keyRange) : store.clear()\n    } catch (err) {\n      return this.nextTick(callback, err)\n    }\n\n    this[kOnComplete](req, callback)\n  }\n\n  _close (callback) {\n    this[kIDB].close()\n    this.nextTick(callback)\n  }\n}\n\nBrowserLevel.destroy = function (location, prefix, callback) {\n  if (typeof prefix === 'function') {\n    callback = prefix\n    prefix = DEFAULT_PREFIX\n  }\n\n  callback = fromCallback(callback, kPromise)\n  const request = indexedDB.deleteDatabase(prefix + location)\n\n  request.onsuccess = function () {\n    callback()\n  }\n\n  request.onerror = function (err) {\n    callback(err)\n  }\n\n  return callback[kPromise]\n}\n\nexports.BrowserLevel = BrowserLevel\n", "exports.Level = require('browser-level').BrowserLevel\n", "function byteLength (string) {\n  return string.length\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  let result = ''\n\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buffer[i])\n  }\n\n  return result\n}\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  for (let i = 0; i < len; i++) {\n    buffer[offset + i] = string.charCodeAt(i)\n  }\n\n  return len\n}\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n", "const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\nconst codes = new Uint8Array(256)\n\nfor (let i = 0; i < alphabet.length; i++) {\n  codes[alphabet.charCodeAt(i)] = i\n}\n\ncodes[/* - */ 0x2d] = 62\ncodes[/* _ */ 0x5f] = 63\n\nfunction byteLength (string) {\n  let len = string.length\n\n  if (string.charCodeAt(len - 1) === 0x3d) len--\n  if (len > 1 && string.charCodeAt(len - 1) === 0x3d) len--\n\n  return (len * 3) >>> 2\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  let result = ''\n\n  for (let i = 0; i < len; i += 3) {\n    result += (\n      alphabet[buffer[i] >> 2] +\n      alphabet[((buffer[i] & 3) << 4) | (buffer[i + 1] >> 4)] +\n      alphabet[((buffer[i + 1] & 15) << 2) | (buffer[i + 2] >> 6)] +\n      alphabet[buffer[i + 2] & 63]\n    )\n  }\n\n  if (len % 3 === 2) {\n    result = result.substring(0, result.length - 1) + '='\n  } else if (len % 3 === 1) {\n    result = result.substring(0, result.length - 2) + '=='\n  }\n\n  return result\n};\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  for (let i = 0, j = 0; j < len; i += 4) {\n    const a = codes[string.charCodeAt(i)]\n    const b = codes[string.charCodeAt(i + 1)]\n    const c = codes[string.charCodeAt(i + 2)]\n    const d = codes[string.charCodeAt(i + 3)]\n\n    buffer[j++] = (a << 2) | (b >> 4)\n    buffer[j++] = ((b & 15) << 4) | (c >> 2)\n    buffer[j++] = ((c & 3) << 6) | (d & 63)\n  }\n\n  return len\n};\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n", "function byteLength (string) {\n  return string.length >>> 1\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  buffer = new DataView(buffer.buffer, buffer.byteOffset, len)\n\n  let result = ''\n  let i = 0\n\n  for (let n = len - (len % 4); i < n; i += 4) {\n    result += buffer.getUint32(i).toString(16).padStart(8, '0')\n  }\n\n  for (; i < len; i++) {\n    result += buffer.getUint8(i).toString(16).padStart(2, '0')\n  }\n\n  return result\n}\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  for (let i = 0; i < len; i++) {\n    const a = hexValue(string.charCodeAt(i * 2))\n    const b = hexValue(string.charCodeAt(i * 2 + 1))\n\n    if (a === undefined || b === undefined) {\n      return buffer.subarray(0, i)\n    }\n\n    buffer[offset + i] = (a << 4) | b\n  }\n\n  return len\n}\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n\nfunction hexValue (char) {\n  if (char >= 0x30 && char <= 0x39) return char - 0x30\n  if (char >= 0x41 && char <= 0x46) return char - 0x41 + 10\n  if (char >= 0x61 && char <= 0x66) return char - 0x61 + 10\n}\n", "function byteLength (string) {\n  let length = 0\n\n  for (let i = 0, n = string.length; i < n; i++) {\n    const code = string.charCodeAt(i)\n\n    if (code >= 0xd800 && code <= 0xdbff && i + 1 < n) {\n      const code = string.charCodeAt(i + 1)\n\n      if (code >= 0xdc00 && code <= 0xdfff) {\n        length += 4\n        i++\n        continue\n      }\n    }\n\n    if (code <= 0x7f) length += 1\n    else if (code <= 0x7ff) length += 2\n    else length += 3\n  }\n\n  return length\n}\n\nlet toString\n\nif (typeof TextDecoder !== 'undefined') {\n  const decoder = new TextDecoder()\n\n  toString = function toString (buffer) {\n    return decoder.decode(buffer)\n  }\n} else {\n  toString = function toString (buffer) {\n    const len = buffer.byteLength\n\n    let output = ''\n    let i = 0\n\n    while (i < len) {\n      let byte = buffer[i]\n\n      if (byte <= 0x7f) {\n        output += String.fromCharCode(byte)\n        i++\n        continue\n      }\n\n      let bytesNeeded = 0\n      let codePoint = 0\n\n      if (byte <= 0xdf) {\n        bytesNeeded = 1\n        codePoint = byte & 0x1f\n      } else if (byte <= 0xef) {\n        bytesNeeded = 2\n        codePoint = byte & 0x0f\n      } else if (byte <= 0xf4) {\n        bytesNeeded = 3\n        codePoint = byte & 0x07\n      }\n\n      if (len - i - bytesNeeded > 0) {\n        let k = 0\n\n        while (k < bytesNeeded) {\n          byte = buffer[i + k + 1]\n          codePoint = (codePoint << 6) | (byte & 0x3f)\n          k += 1\n        }\n      } else {\n        codePoint = 0xfffd\n        bytesNeeded = len - i\n      }\n\n      output += String.fromCodePoint(codePoint)\n      i += bytesNeeded + 1\n    }\n\n    return output\n  }\n}\n\nlet write\n\nif (typeof TextEncoder !== 'undefined') {\n  const encoder = new TextEncoder()\n\n  write = function write (buffer, string, offset = 0, length = byteLength(string)) {\n    const len = Math.min(length, buffer.byteLength - offset)\n    encoder.encodeInto(string, buffer.subarray(offset, offset + len))\n    return len\n  }\n} else {\n  write = function write (buffer, string, offset = 0, length = byteLength(string)) {\n    const len = Math.min(length, buffer.byteLength - offset)\n\n    buffer = buffer.subarray(offset, offset + len)\n\n    let i = 0\n    let j = 0\n\n    while (i < string.length) {\n      const code = string.codePointAt(i)\n\n      if (code <= 0x7f) {\n        buffer[j++] = code\n        i++\n        continue\n      }\n\n      let count = 0\n      let bits = 0\n\n      if (code <= 0x7ff) {\n        count = 6\n        bits = 0xc0\n      } else if (code <= 0xffff) {\n        count = 12\n        bits = 0xe0\n      } else if (code <= 0x1fffff) {\n        count = 18\n        bits = 0xf0\n      }\n\n      buffer[j++] = bits | (code >> count)\n      count -= 6\n\n      while (count >= 0) {\n        buffer[j++] = 0x80 | ((code >> count) & 0x3f)\n        count -= 6\n      }\n\n      i += code >= 0x10000 ? 2 : 1\n    }\n\n    return len\n  }\n}\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n", "function byteLength (string) {\n  return string.length * 2\n}\n\nfunction toString (buffer) {\n  const len = buffer.byteLength\n\n  let result = ''\n\n  for (let i = 0; i < len - 1; i += 2) {\n    result += String.fromCharCode(buffer[i] + (buffer[i + 1] * 256))\n  }\n\n  return result\n}\n\nfunction write (buffer, string, offset = 0, length = byteLength(string)) {\n  const len = Math.min(length, buffer.byteLength - offset)\n\n  let units = len\n\n  for (let i = 0; i < string.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    const c = string.charCodeAt(i)\n    const hi = c >> 8\n    const lo = c % 256\n\n    buffer[offset + i * 2] = lo\n    buffer[offset + i * 2 + 1] = hi\n  }\n\n  return len\n}\n\nmodule.exports = {\n  byteLength,\n  toString,\n  write\n}\n", "const ascii = require('./lib/ascii')\nconst base64 = require('./lib/base64')\nconst hex = require('./lib/hex')\nconst utf8 = require('./lib/utf8')\nconst utf16le = require('./lib/utf16le')\n\nconst LE = new Uint8Array(Uint16Array.of(0xff).buffer)[0] === 0xff\n\nfunction codecFor (encoding) {\n  switch (encoding) {\n    case 'ascii':\n      return ascii\n    case 'base64':\n      return base64\n    case 'hex':\n      return hex\n    case 'utf8':\n    case 'utf-8':\n    case undefined:\n      return utf8\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return utf16le\n    default:\n      throw new Error(`Unknown encoding: ${encoding}`)\n  }\n}\n\nfunction isBuffer (value) {\n  return value instanceof Uint8Array\n}\n\nfunction isEncoding (encoding) {\n  try {\n    codecFor(encoding)\n    return true\n  } catch {\n    return false\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  const buffer = new Uint8Array(size)\n  if (fill !== undefined) exports.fill(buffer, fill, 0, buffer.byteLength, encoding)\n  return buffer\n}\n\nfunction allocUnsafe (size) {\n  return new Uint8Array(size)\n}\n\nfunction allocUnsafeSlow (size) {\n  return new Uint8Array(size)\n}\n\nfunction byteLength (string, encoding) {\n  return codecFor(encoding).byteLength(string)\n}\n\nfunction compare (a, b) {\n  if (a === b) return 0\n\n  const len = Math.min(a.byteLength, b.byteLength)\n\n  a = new DataView(a.buffer, a.byteOffset, a.byteLength)\n  b = new DataView(b.buffer, b.byteOffset, b.byteLength)\n\n  let i = 0\n\n  for (let n = len - (len % 4); i < n; i += 4) {\n    const x = a.getUint32(i, LE)\n    const y = b.getUint32(i, LE)\n    if (x !== y) break\n  }\n\n  for (; i < len; i++) {\n    const x = a.getUint8(i)\n    const y = b.getUint8(i)\n    if (x < y) return -1\n    if (x > y) return 1\n  }\n\n  return a.byteLength > b.byteLength ? 1 : a.byteLength < b.byteLength ? -1 : 0\n}\n\nfunction concat (buffers, totalLength) {\n  if (totalLength === undefined) {\n    totalLength = buffers.reduce((len, buffer) => len + buffer.byteLength, 0)\n  }\n\n  const result = new Uint8Array(totalLength)\n\n  let offset = 0\n  for (const buffer of buffers) {\n    if (offset + buffer.byteLength > result.byteLength) {\n      const sub = buffer.subarray(0, result.byteLength - offset)\n      result.set(sub, offset)\n      return result\n    }\n    result.set(buffer, offset)\n    offset += buffer.byteLength\n  }\n\n  return result\n}\n\nfunction copy (source, target, targetStart = 0, start = 0, end = source.byteLength) {\n  if (end > 0 && end < start) return 0\n  if (end === start) return 0\n  if (source.byteLength === 0 || target.byteLength === 0) return 0\n\n  if (targetStart < 0) throw new RangeError('targetStart is out of range')\n  if (start < 0 || start >= source.byteLength) throw new RangeError('sourceStart is out of range')\n  if (end < 0) throw new RangeError('sourceEnd is out of range')\n\n  if (targetStart >= target.byteLength) targetStart = target.byteLength\n  if (end > source.byteLength) end = source.byteLength\n  if (target.byteLength - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (source === target) {\n    target.copyWithin(targetStart, start, end)\n  } else {\n    target.set(source.subarray(start, end), targetStart)\n  }\n\n  return len\n}\n\nfunction equals (a, b) {\n  if (a === b) return true\n  if (a.byteLength !== b.byteLength) return false\n\n  const len = a.byteLength\n\n  a = new DataView(a.buffer, a.byteOffset, a.byteLength)\n  b = new DataView(b.buffer, b.byteOffset, b.byteLength)\n\n  let i = 0\n\n  for (let n = len - (len % 4); i < n; i += 4) {\n    if (a.getUint32(i, LE) !== b.getUint32(i, LE)) return false\n  }\n\n  for (; i < len; i++) {\n    if (a.getUint8(i) !== b.getUint8(i)) return false\n  }\n\n  return true\n}\n\nfunction fill (buffer, value, offset, end, encoding) {\n  if (typeof value === 'string') {\n    // fill(buffer, string, encoding)\n    if (typeof offset === 'string') {\n      encoding = offset\n      offset = 0\n      end = buffer.byteLength\n\n    // fill(buffer, string, offset, encoding)\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = buffer.byteLength\n    }\n  } else if (typeof value === 'number') {\n    value = value & 0xff\n  } else if (typeof value === 'boolean') {\n    value = +value\n  }\n\n  if (offset < 0 || buffer.byteLength < offset || buffer.byteLength < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (offset === undefined) offset = 0\n  if (end === undefined) end = buffer.byteLength\n\n  if (end <= offset) return buffer\n\n  if (!value) value = 0\n\n  if (typeof value === 'number') {\n    for (let i = offset; i < end; ++i) {\n      buffer[i] = value\n    }\n  } else {\n    value = isBuffer(value) ? value : from(value, encoding)\n\n    const len = value.byteLength\n\n    for (let i = 0; i < end - offset; ++i) {\n      buffer[i + offset] = value[i % len]\n    }\n  }\n\n  return buffer\n}\n\nfunction from (value, encodingOrOffset, length) {\n  // from(string, encoding)\n  if (typeof value === 'string') return fromString(value, encodingOrOffset)\n\n  // from(array)\n  if (Array.isArray(value)) return fromArray(value)\n\n  // from(buffer)\n  if (ArrayBuffer.isView(value)) return fromBuffer(value)\n\n  // from(arrayBuffer[, byteOffset[, length]])\n  return fromArrayBuffer(value, encodingOrOffset, length)\n}\n\nfunction fromString (string, encoding) {\n  const codec = codecFor(encoding)\n  const buffer = new Uint8Array(codec.byteLength(string))\n  codec.write(buffer, string, 0, buffer.byteLength)\n  return buffer\n}\n\nfunction fromArray (array) {\n  const buffer = new Uint8Array(array.length)\n  buffer.set(array)\n  return buffer\n}\n\nfunction fromBuffer (buffer) {\n  const copy = new Uint8Array(buffer.byteLength)\n  copy.set(buffer)\n  return copy\n}\n\nfunction fromArrayBuffer (arrayBuffer, byteOffset, length) {\n  return new Uint8Array(arrayBuffer, byteOffset, length)\n}\n\nfunction includes (buffer, value, byteOffset, encoding) {\n  return indexOf(buffer, value, byteOffset, encoding) !== -1\n}\n\nfunction bidirectionalIndexOf (buffer, value, byteOffset, encoding, first) {\n  if (buffer.byteLength === 0) return -1\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset === undefined) {\n    byteOffset = first ? 0 : (buffer.length - 1)\n  } else if (byteOffset < 0) {\n    byteOffset += buffer.byteLength\n  }\n\n  if (byteOffset >= buffer.byteLength) {\n    if (first) return -1\n    else byteOffset = buffer.byteLength - 1\n  } else if (byteOffset < 0) {\n    if (first) byteOffset = 0\n    else return -1\n  }\n\n  if (typeof value === 'string') {\n    value = from(value, encoding)\n  } else if (typeof value === 'number') {\n    value = value & 0xff\n\n    if (first) {\n      return buffer.indexOf(value, byteOffset)\n    } else {\n      return buffer.lastIndexOf(value, byteOffset)\n    }\n  }\n\n  if (value.byteLength === 0) return -1\n\n  if (first) {\n    let foundIndex = -1\n\n    for (let i = byteOffset; i < buffer.byteLength; i++) {\n      if (buffer[i] === value[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === value.byteLength) return foundIndex\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + value.byteLength > buffer.byteLength) {\n      byteOffset = buffer.byteLength - value.byteLength\n    }\n\n    for (let i = byteOffset; i >= 0; i--) {\n      let found = true\n\n      for (let j = 0; j < value.byteLength; j++) {\n        if (buffer[i + j] !== value[j]) {\n          found = false\n          break\n        }\n      }\n\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nfunction indexOf (buffer, value, byteOffset, encoding) {\n  return bidirectionalIndexOf(buffer, value, byteOffset, encoding, true /* first */)\n}\n\nfunction lastIndexOf (buffer, value, byteOffset, encoding) {\n  return bidirectionalIndexOf(buffer, value, byteOffset, encoding, false /* last */)\n}\n\nfunction swap (buffer, n, m) {\n  const i = buffer[n]\n  buffer[n] = buffer[m]\n  buffer[m] = i\n}\n\nfunction swap16 (buffer) {\n  const len = buffer.byteLength\n\n  if (len % 2 !== 0) throw new RangeError('Buffer size must be a multiple of 16-bits')\n\n  for (let i = 0; i < len; i += 2) swap(buffer, i, i + 1)\n\n  return buffer\n}\n\nfunction swap32 (buffer) {\n  const len = buffer.byteLength\n\n  if (len % 4 !== 0) throw new RangeError('Buffer size must be a multiple of 32-bits')\n\n  for (let i = 0; i < len; i += 4) {\n    swap(buffer, i, i + 3)\n    swap(buffer, i + 1, i + 2)\n  }\n\n  return buffer\n}\n\nfunction swap64 (buffer) {\n  const len = buffer.byteLength\n\n  if (len % 8 !== 0) throw new RangeError('Buffer size must be a multiple of 64-bits')\n\n  for (let i = 0; i < len; i += 8) {\n    swap(buffer, i, i + 7)\n    swap(buffer, i + 1, i + 6)\n    swap(buffer, i + 2, i + 5)\n    swap(buffer, i + 3, i + 4)\n  }\n\n  return buffer\n}\n\nfunction toBuffer (buffer) {\n  return buffer\n}\n\nfunction toString (buffer, encoding, start = 0, end = buffer.byteLength) {\n  const len = buffer.byteLength\n\n  if (start >= len) return ''\n  if (end <= start) return ''\n  if (start < 0) start = 0\n  if (end > len) end = len\n\n  if (start !== 0 || end < len) buffer = buffer.subarray(start, end)\n\n  return codecFor(encoding).toString(buffer)\n}\n\nfunction write (buffer, string, offset, length, encoding) {\n  // write(buffer, string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n\n  // write(buffer, string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    offset = undefined\n\n  // write(buffer, string, offset, encoding)\n  } else if (encoding === undefined && typeof length === 'string') {\n    encoding = length\n    length = undefined\n  }\n\n  return codecFor(encoding).write(buffer, string, offset, length)\n}\n\nfunction writeDoubleLE (buffer, value, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n  view.setFloat64(offset, value, true)\n\n  return offset + 8\n}\n\nfunction writeFloatLE (buffer, value, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n  view.setFloat32(offset, value, true)\n\n  return offset + 4\n}\n\nfunction writeUInt32LE (buffer, value, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n  view.setUint32(offset, value, true)\n\n  return offset + 4\n}\n\nfunction writeInt32LE (buffer, value, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n  view.setInt32(offset, value, true)\n\n  return offset + 4\n}\n\nfunction readDoubleLE (buffer, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n  return view.getFloat64(offset, true)\n}\n\nfunction readFloatLE (buffer, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n  return view.getFloat32(offset, true)\n}\n\nfunction readUInt32LE (buffer, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n  return view.getUint32(offset, true)\n}\n\nfunction readInt32LE (buffer, offset) {\n  if (offset === undefined) offset = 0\n\n  const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\n  return view.getInt32(offset, true)\n}\n\nmodule.exports = exports = {\n  isBuffer,\n  isEncoding,\n  alloc,\n  allocUnsafe,\n  allocUnsafeSlow,\n  byteLength,\n  compare,\n  concat,\n  copy,\n  equals,\n  fill,\n  from,\n  includes,\n  indexOf,\n  lastIndexOf,\n  swap16,\n  swap32,\n  swap64,\n  toBuffer,\n  toString,\n  write,\n  writeDoubleLE,\n  writeFloatLE,\n  writeUInt32LE,\n  writeInt32LE,\n  readDoubleLE,\n  readFloatLE,\n  readUInt32LE,\n  readInt32LE\n}\n", "const b4a = require('b4a')\n\nconst ALPHABET = 'ybndrfg8ejkmcpqxot1uwisza345h769'\nconst MIN = 0x31 // 1\nconst MAX = 0x7a // z\nconst REVERSE = new Int8Array(1 + MAX - MIN)\n\nREVERSE.fill(-1)\n\nfor (let i = 0; i < ALPHABET.length; i++) {\n  const v = ALPHABET.charCodeAt(i) - MIN\n  REVERSE[v] = i\n}\n\nexports.encode = encode\nexports.decode = decode\n\nfunction decode (s, out) {\n  let pb = 0\n  let ps = 0\n\n  const r = s.length & 7\n  const q = (s.length - r) / 8\n\n  if (!out) out = b4a.allocUnsafe(Math.ceil(s.length * 5 / 8))\n\n  // 0 5 2 7 4 1 6 3 (+5 mod 8)\n  for (let i = 0; i < q; i++) {\n    const a = quintet(s, ps++)\n    const b = quintet(s, ps++)\n    const c = quintet(s, ps++)\n    const d = quintet(s, ps++)\n    const e = quintet(s, ps++)\n    const f = quintet(s, ps++)\n    const g = quintet(s, ps++)\n    const h = quintet(s, ps++)\n\n    out[pb++] = (a << 3) | (b >>> 2)\n    out[pb++] = ((b & 0b11) << 6) | (c << 1) | (d >>> 4)\n    out[pb++] = ((d & 0b1111) << 4) | (e >>> 1)\n    out[pb++] = ((e & 0b1) << 7) | (f << 2) | (g >>> 3)\n    out[pb++] = ((g & 0b111) << 5) | h\n  }\n\n  if (r === 0) return out.subarray(0, pb)\n\n  const a = quintet(s, ps++)\n  const b = quintet(s, ps++)\n\n  out[pb++] = (a << 3) | (b >>> 2)\n\n  if (r <= 2) return out.subarray(0, pb)\n\n  const c = quintet(s, ps++)\n  const d = quintet(s, ps++)\n\n  out[pb++] = ((b & 0b11) << 6) | (c << 1) | (d >>> 4)\n\n  if (r <= 4) return out.subarray(0, pb)\n\n  const e = quintet(s, ps++)\n\n  out[pb++] = ((d & 0b1111) << 4) | (e >>> 1)\n\n  if (r <= 5) return out.subarray(0, pb)\n\n  const f = quintet(s, ps++)\n  const g = quintet(s, ps++)\n\n  out[pb++] = ((e & 0b1) << 7) | (f << 2) | (g >>> 3)\n\n  if (r <= 7) return out.subarray(0, pb)\n\n  const h = quintet(s, ps++)\n\n  out[pb++] = ((g & 0b111) << 5) | h\n\n  return out.subarray(0, pb)\n}\n\nfunction encode (buf) {\n  if (typeof buf === 'string') buf = b4a.from(buf)\n\n  const max = buf.byteLength * 8\n\n  let s = ''\n\n  for (let p = 0; p < max; p += 5) {\n    const i = p >>> 3\n    const j = p & 7\n\n    if (j <= 3) {\n      s += ALPHABET[(buf[i] >>> (3 - j)) & 0b11111]\n      continue\n    }\n\n    const of = j - 3\n    const h = (buf[i] << of) & 0b11111\n    const l = (i >= buf.byteLength ? 0 : buf[i + 1]) >>> (8 - of)\n\n    s += ALPHABET[h | l]\n  }\n\n  return s\n}\n\nfunction quintet (s, i) {\n  if (i > s.length) {\n    return 0\n  }\n\n  const v = s.charCodeAt(i)\n\n  if (v < MIN || v > MAX) {\n    throw Error('Invalid character in base32 input: \"' + s[i] + '\" at position ' + i)\n  }\n\n  const bits = REVERSE[v - MIN]\n\n  if (bits === -1) {\n    throw Error('Invalid character in base32 input: \"' + s[i] + '\" at position ' + i)\n  }\n\n  return bits\n}\n", "'use strict'\n\nexports.toString = function (type) {\n  switch (type) {\n    case 1: return 'A'\n    case 10: return 'NULL'\n    case 28: return 'AAAA'\n    case 18: return 'AFSDB'\n    case 42: return 'APL'\n    case 257: return 'CAA'\n    case 60: return 'CDNSKEY'\n    case 59: return 'CDS'\n    case 37: return 'CERT'\n    case 5: return 'CNAME'\n    case 49: return 'DHCID'\n    case 32769: return 'DLV'\n    case 39: return 'DNAME'\n    case 48: return 'DNSKEY'\n    case 43: return 'DS'\n    case 55: return 'HIP'\n    case 13: return 'HINFO'\n    case 45: return 'IPSECKEY'\n    case 25: return 'KEY'\n    case 36: return 'KX'\n    case 29: return 'LOC'\n    case 15: return 'MX'\n    case 35: return 'NAPTR'\n    case 2: return 'NS'\n    case 47: return 'NSEC'\n    case 50: return 'NSEC3'\n    case 51: return 'NSEC3PARAM'\n    case 12: return 'PTR'\n    case 46: return 'RRSIG'\n    case 17: return 'RP'\n    case 24: return 'SIG'\n    case 6: return 'SOA'\n    case 99: return 'SPF'\n    case 33: return 'SRV'\n    case 44: return 'SSHFP'\n    case 32768: return 'TA'\n    case 249: return 'TKEY'\n    case 52: return 'TLSA'\n    case 250: return 'TSIG'\n    case 16: return 'TXT'\n    case 252: return 'AXFR'\n    case 251: return 'IXFR'\n    case 41: return 'OPT'\n    case 255: return 'ANY'\n  }\n  return 'UNKNOWN_' + type\n}\n\nexports.toType = function (name) {\n  switch (name.toUpperCase()) {\n    case 'A': return 1\n    case 'NULL': return 10\n    case 'AAAA': return 28\n    case 'AFSDB': return 18\n    case 'APL': return 42\n    case 'CAA': return 257\n    case 'CDNSKEY': return 60\n    case 'CDS': return 59\n    case 'CERT': return 37\n    case 'CNAME': return 5\n    case 'DHCID': return 49\n    case 'DLV': return 32769\n    case 'DNAME': return 39\n    case 'DNSKEY': return 48\n    case 'DS': return 43\n    case 'HIP': return 55\n    case 'HINFO': return 13\n    case 'IPSECKEY': return 45\n    case 'KEY': return 25\n    case 'KX': return 36\n    case 'LOC': return 29\n    case 'MX': return 15\n    case 'NAPTR': return 35\n    case 'NS': return 2\n    case 'NSEC': return 47\n    case 'NSEC3': return 50\n    case 'NSEC3PARAM': return 51\n    case 'PTR': return 12\n    case 'RRSIG': return 46\n    case 'RP': return 17\n    case 'SIG': return 24\n    case 'SOA': return 6\n    case 'SPF': return 99\n    case 'SRV': return 33\n    case 'SSHFP': return 44\n    case 'TA': return 32768\n    case 'TKEY': return 249\n    case 'TLSA': return 52\n    case 'TSIG': return 250\n    case 'TXT': return 16\n    case 'AXFR': return 252\n    case 'IXFR': return 251\n    case 'OPT': return 41\n    case 'ANY': return 255\n    case '*': return 255\n  }\n  if (name.toUpperCase().startsWith('UNKNOWN_')) return parseInt(name.slice(8))\n  return 0\n}\n", "'use strict'\n\n/*\n * Traditional DNS header RCODEs (4-bits) defined by IANA in\n * https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml\n */\n\nexports.toString = function (rcode) {\n  switch (rcode) {\n    case 0: return 'NOERROR'\n    case 1: return 'FORMERR'\n    case 2: return 'SERVFAIL'\n    case 3: return 'NXDOMAIN'\n    case 4: return 'NOTIMP'\n    case 5: return 'REFUSED'\n    case 6: return 'YXDOMAIN'\n    case 7: return 'YXRRSET'\n    case 8: return 'NXRRSET'\n    case 9: return 'NOTAUTH'\n    case 10: return 'NOTZONE'\n    case 11: return 'RCODE_11'\n    case 12: return 'RCODE_12'\n    case 13: return 'RCODE_13'\n    case 14: return 'RCODE_14'\n    case 15: return 'RCODE_15'\n  }\n  return 'RCODE_' + rcode\n}\n\nexports.toRcode = function (code) {\n  switch (code.toUpperCase()) {\n    case 'NOERROR': return 0\n    case 'FORMERR': return 1\n    case 'SERVFAIL': return 2\n    case 'NXDOMAIN': return 3\n    case 'NOTIMP': return 4\n    case 'REFUSED': return 5\n    case 'YXDOMAIN': return 6\n    case 'YXRRSET': return 7\n    case 'NXRRSET': return 8\n    case 'NOTAUTH': return 9\n    case 'NOTZONE': return 10\n    case 'RCODE_11': return 11\n    case 'RCODE_12': return 12\n    case 'RCODE_13': return 13\n    case 'RCODE_14': return 14\n    case 'RCODE_15': return 15\n  }\n  return 0\n}\n", "'use strict'\n\n/*\n * Traditional DNS header OPCODEs (4-bits) defined by IANA in\n * https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-5\n */\n\nexports.toString = function (opcode) {\n  switch (opcode) {\n    case 0: return 'QUERY'\n    case 1: return 'IQUERY'\n    case 2: return 'STATUS'\n    case 3: return 'OPCODE_3'\n    case 4: return 'NOTIFY'\n    case 5: return 'UPDATE'\n    case 6: return 'OPCODE_6'\n    case 7: return 'OPCODE_7'\n    case 8: return 'OPCODE_8'\n    case 9: return 'OPCODE_9'\n    case 10: return 'OPCODE_10'\n    case 11: return 'OPCODE_11'\n    case 12: return 'OPCODE_12'\n    case 13: return 'OPCODE_13'\n    case 14: return 'OPCODE_14'\n    case 15: return 'OPCODE_15'\n  }\n  return 'OPCODE_' + opcode\n}\n\nexports.toOpcode = function (code) {\n  switch (code.toUpperCase()) {\n    case 'QUERY': return 0\n    case 'IQUERY': return 1\n    case 'STATUS': return 2\n    case 'OPCODE_3': return 3\n    case 'NOTIFY': return 4\n    case 'UPDATE': return 5\n    case 'OPCODE_6': return 6\n    case 'OPCODE_7': return 7\n    case 'OPCODE_8': return 8\n    case 'OPCODE_9': return 9\n    case 'OPCODE_10': return 10\n    case 'OPCODE_11': return 11\n    case 'OPCODE_12': return 12\n    case 'OPCODE_13': return 13\n    case 'OPCODE_14': return 14\n    case 'OPCODE_15': return 15\n  }\n  return 0\n}\n", "'use strict'\n\nexports.toString = function (klass) {\n  switch (klass) {\n    case 1: return 'IN'\n    case 2: return 'CS'\n    case 3: return 'CH'\n    case 4: return 'HS'\n    case 255: return 'ANY'\n  }\n  return 'UNKNOWN_' + klass\n}\n\nexports.toClass = function (name) {\n  switch (name.toUpperCase()) {\n    case 'IN': return 1\n    case 'CS': return 2\n    case 'CH': return 3\n    case 'HS': return 4\n    case 'ANY': return 255\n  }\n  return 0\n}\n", "'use strict'\n\nexports.toString = function (type) {\n  switch (type) {\n    // list at\n    // https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11\n    case 1: return 'LLQ'\n    case 2: return 'UL'\n    case 3: return 'NSID'\n    case 5: return 'DAU'\n    case 6: return 'DHU'\n    case 7: return 'N3U'\n    case 8: return 'CLIENT_SUBNET'\n    case 9: return 'EXPIRE'\n    case 10: return 'COOKIE'\n    case 11: return 'TCP_KEEPALIVE'\n    case 12: return 'PADDING'\n    case 13: return 'CHAIN'\n    case 14: return 'KEY_TAG'\n    case 26946: return 'DEVICEID'\n  }\n  if (type < 0) {\n    return null\n  }\n  return `OPTION_${type}`\n}\n\nexports.toCode = function (name) {\n  if (typeof name === 'number') {\n    return name\n  }\n  if (!name) {\n    return -1\n  }\n  switch (name.toUpperCase()) {\n    case 'OPTION_0': return 0\n    case 'LLQ': return 1\n    case 'UL': return 2\n    case 'NSID': return 3\n    case 'OPTION_4': return 4\n    case 'DAU': return 5\n    case 'DHU': return 6\n    case 'N3U': return 7\n    case 'CLIENT_SUBNET': return 8\n    case 'EXPIRE': return 9\n    case 'COOKIE': return 10\n    case 'TCP_KEEPALIVE': return 11\n    case 'PADDING': return 12\n    case 'CHAIN': return 13\n    case 'KEY_TAG': return 14\n    case 'DEVICEID': return 26946\n    case 'OPTION_65535': return 65535\n  }\n  const m = name.match(/_(\\d+)$/)\n  if (m) {\n    return parseInt(m[1], 10)\n  }\n  return -1\n}\n", "// GENERATED FILE. DO NOT EDIT.\nvar ipCodec = (function(exports) {\n  \"use strict\";\n  \n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.decode = decode;\n  exports.encode = encode;\n  exports.familyOf = familyOf;\n  exports.name = void 0;\n  exports.sizeOf = sizeOf;\n  exports.v6 = exports.v4 = void 0;\n  const v4Regex = /^(\\d{1,3}\\.){3,3}\\d{1,3}$/;\n  const v4Size = 4;\n  const v6Regex = /^(::)?(((\\d{1,3}\\.){3}(\\d{1,3}){1})?([0-9a-f]){0,4}:{0,2}){1,8}(::)?$/i;\n  const v6Size = 16;\n  const v4 = {\n    name: 'v4',\n    size: v4Size,\n    isFormat: ip => v4Regex.test(ip),\n  \n    encode(ip, buff, offset) {\n      offset = ~~offset;\n      buff = buff || new Uint8Array(offset + v4Size);\n      const max = ip.length;\n      let n = 0;\n  \n      for (let i = 0; i < max;) {\n        const c = ip.charCodeAt(i++);\n  \n        if (c === 46) {\n          // \".\"\n          buff[offset++] = n;\n          n = 0;\n        } else {\n          n = n * 10 + (c - 48);\n        }\n      }\n  \n      buff[offset] = n;\n      return buff;\n    },\n  \n    decode(buff, offset) {\n      offset = ~~offset;\n      return `${buff[offset++]}.${buff[offset++]}.${buff[offset++]}.${buff[offset]}`;\n    }\n  \n  };\n  exports.v4 = v4;\n  const v6 = {\n    name: 'v6',\n    size: v6Size,\n    isFormat: ip => ip.length > 0 && v6Regex.test(ip),\n  \n    encode(ip, buff, offset) {\n      offset = ~~offset;\n      let end = offset + v6Size;\n      let fill = -1;\n      let hexN = 0;\n      let decN = 0;\n      let prevColon = true;\n      let useDec = false;\n      buff = buff || new Uint8Array(offset + v6Size); // Note: This algorithm needs to check if the offset\n      // could exceed the buffer boundaries as it supports\n      // non-standard compliant encodings that may go beyond\n      // the boundary limits. if (offset < end) checks should\n      // not be necessary...\n  \n      for (let i = 0; i < ip.length; i++) {\n        let c = ip.charCodeAt(i);\n  \n        if (c === 58) {\n          // :\n          if (prevColon) {\n            if (fill !== -1) {\n              // Not Standard! (standard doesn't allow multiple ::)\n              // We need to treat\n              if (offset < end) buff[offset] = 0;\n              if (offset < end - 1) buff[offset + 1] = 0;\n              offset += 2;\n            } else if (offset < end) {\n              // :: in the middle\n              fill = offset;\n            }\n          } else {\n            // : ends the previous number\n            if (useDec === true) {\n              // Non-standard! (ipv4 should be at end only)\n              // A ipv4 address should not be found anywhere else but at\n              // the end. This codec also support putting characters\n              // after the ipv4 address..\n              if (offset < end) buff[offset] = decN;\n              offset++;\n            } else {\n              if (offset < end) buff[offset] = hexN >> 8;\n              if (offset < end - 1) buff[offset + 1] = hexN & 0xff;\n              offset += 2;\n            }\n  \n            hexN = 0;\n            decN = 0;\n          }\n  \n          prevColon = true;\n          useDec = false;\n        } else if (c === 46) {\n          // . indicates IPV4 notation\n          if (offset < end) buff[offset] = decN;\n          offset++;\n          decN = 0;\n          hexN = 0;\n          prevColon = false;\n          useDec = true;\n        } else {\n          prevColon = false;\n  \n          if (c >= 97) {\n            c -= 87; // a-f ... 97~102 -87 => 10~15\n          } else if (c >= 65) {\n            c -= 55; // A-F ... 65~70 -55 => 10~15\n          } else {\n            c -= 48; // 0-9 ... starting from charCode 48\n  \n            decN = decN * 10 + c;\n          } // We don't know yet if its a dec or hex number\n  \n  \n          hexN = (hexN << 4) + c;\n        }\n      }\n  \n      if (prevColon === false) {\n        // Commiting last number\n        if (useDec === true) {\n          if (offset < end) buff[offset] = decN;\n          offset++;\n        } else {\n          if (offset < end) buff[offset] = hexN >> 8;\n          if (offset < end - 1) buff[offset + 1] = hexN & 0xff;\n          offset += 2;\n        }\n      } else if (fill === 0) {\n        // Not Standard! (standard doesn't allow multiple ::)\n        // This means that a : was found at the start AND end which means the\n        // end needs to be treated as 0 entry...\n        if (offset < end) buff[offset] = 0;\n        if (offset < end - 1) buff[offset + 1] = 0;\n        offset += 2;\n      } else if (fill !== -1) {\n        // Non-standard! (standard doens't allow multiple ::)\n        // Here we find that there has been a :: somewhere in the middle\n        // and the end. To treat the end with priority we need to move all\n        // written data two bytes to the right.\n        offset += 2;\n  \n        for (let i = Math.min(offset - 1, end - 1); i >= fill + 2; i--) {\n          buff[i] = buff[i - 2];\n        }\n  \n        buff[fill] = 0;\n        buff[fill + 1] = 0;\n        fill = offset;\n      }\n  \n      if (fill !== offset && fill !== -1) {\n        // Move the written numbers to the end while filling the everything\n        // \"fill\" to the bytes with zeros.\n        if (offset > end - 2) {\n          // Non Standard support, when the cursor exceeds bounds.\n          offset = end - 2;\n        }\n  \n        while (end > fill) {\n          buff[--end] = offset < end && offset > fill ? buff[--offset] : 0;\n        }\n      } else {\n        // Fill the rest with zeros\n        while (offset < end) {\n          buff[offset++] = 0;\n        }\n      }\n  \n      return buff;\n    },\n  \n    decode(buff, offset) {\n      offset = ~~offset;\n      let result = '';\n  \n      for (let i = 0; i < v6Size; i += 2) {\n        if (i !== 0) {\n          result += ':';\n        }\n  \n        result += (buff[offset + i] << 8 | buff[offset + i + 1]).toString(16);\n      }\n  \n      return result.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3').replace(/:{3,4}/, '::');\n    }\n  \n  };\n  exports.v6 = v6;\n  const name = 'ip';\n  exports.name = name;\n  \n  function sizeOf(ip) {\n    if (v4.isFormat(ip)) return v4.size;\n    if (v6.isFormat(ip)) return v6.size;\n    throw Error(`Invalid ip address: ${ip}`);\n  }\n  \n  function familyOf(string) {\n    return sizeOf(string) === v4.size ? 1 : 2;\n  }\n  \n  function encode(ip, buff, offset) {\n    offset = ~~offset;\n    const size = sizeOf(ip);\n  \n    if (typeof buff === 'function') {\n      buff = buff(offset + size);\n    }\n  \n    if (size === v4.size) {\n      return v4.encode(ip, buff, offset);\n    }\n  \n    return v6.encode(ip, buff, offset);\n  }\n  \n  function decode(buff, offset, length) {\n    offset = ~~offset;\n    length = length || buff.length - offset;\n  \n    if (length === v4.size) {\n      return v4.decode(buff, offset, length);\n    }\n  \n    if (length === v6.size) {\n      return v6.decode(buff, offset, length);\n    }\n  \n    throw Error(`Invalid buffer size needs to be ${v4.size} for v4 or ${v6.size} for v6.`);\n  }\n  return \"default\" in exports ? exports.default : exports;\n})({});\nif (typeof define === 'function' && define.amd) define([], function() { return ipCodec; });\nelse if (typeof module === 'object' && typeof exports==='object') module.exports = ipCodec;\n", "'use strict'\n\nconst Buffer = require('buffer').Buffer\nconst types = require('./types')\nconst rcodes = require('./rcodes')\nconst opcodes = require('./opcodes')\nconst classes = require('./classes')\nconst optioncodes = require('./optioncodes')\nconst ip = require('@leichtgewicht/ip-codec')\n\nconst QUERY_FLAG = 0\nconst RESPONSE_FLAG = 1 << 15\nconst FLUSH_MASK = 1 << 15\nconst NOT_FLUSH_MASK = ~FLUSH_MASK\nconst QU_MASK = 1 << 15\nconst NOT_QU_MASK = ~QU_MASK\n\nconst name = exports.name = {}\n\nname.encode = function (str, buf, offset, { mail = false } = {}) {\n  if (!buf) buf = Buffer.alloc(name.encodingLength(str))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  // strip leading and trailing .\n  const n = str.replace(/^\\.|\\.$/gm, '')\n  if (n.length) {\n    let list = []\n    if (mail) {\n      let localPart = ''\n      n.split('.').forEach(label => {\n        if (label.endsWith('\\\\')) {\n          localPart += (localPart.length ? '.' : '') + label.slice(0, -1)\n        } else {\n          if (list.length === 0 && localPart.length) {\n            list.push(localPart + '.' + label)\n          } else {\n            list.push(label)\n          }\n        }\n      })\n    } else {\n      list = n.split('.')\n    }\n\n    for (let i = 0; i < list.length; i++) {\n      const len = buf.write(list[i], offset + 1)\n      buf[offset] = len\n      offset += len + 1\n    }\n  }\n\n  buf[offset++] = 0\n\n  name.encode.bytes = offset - oldOffset\n  return buf\n}\n\nname.encode.bytes = 0\n\nname.decode = function (buf, offset, { mail = false } = {}) {\n  if (!offset) offset = 0\n\n  const list = []\n  let oldOffset = offset\n  let totalLength = 0\n  let consumedBytes = 0\n  let jumped = false\n\n  while (true) {\n    if (offset >= buf.length) {\n      throw new Error('Cannot decode name (buffer overflow)')\n    }\n    const len = buf[offset++]\n    consumedBytes += jumped ? 0 : 1\n\n    if (len === 0) {\n      break\n    } else if ((len & 0xc0) === 0) {\n      if (offset + len > buf.length) {\n        throw new Error('Cannot decode name (buffer overflow)')\n      }\n      totalLength += len + 1\n      if (totalLength > 254) {\n        throw new Error('Cannot decode name (name too long)')\n      }\n      let label = buf.toString('utf-8', offset, offset + len)\n      if (mail) {\n        label = label.replace(/\\./g, '\\\\.')\n      }\n      list.push(label)\n      offset += len\n      consumedBytes += jumped ? 0 : len\n    } else if ((len & 0xc0) === 0xc0) {\n      if (offset + 1 > buf.length) {\n        throw new Error('Cannot decode name (buffer overflow)')\n      }\n      const jumpOffset = buf.readUInt16BE(offset - 1) - 0xc000\n      if (jumpOffset >= oldOffset) {\n        // Allow only pointers to prior data. RFC 1035, section 4.1.4 states:\n        // \"[...] an entire domain name or a list of labels at the end of a domain name\n        // is replaced with a pointer to a prior occurance (sic) of the same name.\"\n        throw new Error('Cannot decode name (bad pointer)')\n      }\n      offset = jumpOffset\n      oldOffset = jumpOffset\n      consumedBytes += jumped ? 0 : 1\n      jumped = true\n    } else {\n      throw new Error('Cannot decode name (bad label)')\n    }\n  }\n\n  name.decode.bytes = consumedBytes\n  return list.length === 0 ? '.' : list.join('.')\n}\n\nname.decode.bytes = 0\n\nname.encodingLength = function (n) {\n  if (n === '.' || n === '..') return 1\n  return Buffer.byteLength(n.replace(/^\\.|\\.$/gm, '')) + 2\n}\n\nconst string = {}\n\nstring.encode = function (s, buf, offset) {\n  if (!buf) buf = Buffer.alloc(string.encodingLength(s))\n  if (!offset) offset = 0\n\n  const len = buf.write(s, offset + 1)\n  buf[offset] = len\n  string.encode.bytes = len + 1\n  return buf\n}\n\nstring.encode.bytes = 0\n\nstring.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const len = buf[offset]\n  const s = buf.toString('utf-8', offset + 1, offset + 1 + len)\n  string.decode.bytes = len + 1\n  return s\n}\n\nstring.decode.bytes = 0\n\nstring.encodingLength = function (s) {\n  return Buffer.byteLength(s) + 1\n}\n\nconst header = {}\n\nheader.encode = function (h, buf, offset) {\n  if (!buf) buf = header.encodingLength(h)\n  if (!offset) offset = 0\n\n  const flags = (h.flags || 0) & 32767\n  const type = h.type === 'response' ? RESPONSE_FLAG : QUERY_FLAG\n\n  buf.writeUInt16BE(h.id || 0, offset)\n  buf.writeUInt16BE(flags | type, offset + 2)\n  buf.writeUInt16BE(h.questions.length, offset + 4)\n  buf.writeUInt16BE(h.answers.length, offset + 6)\n  buf.writeUInt16BE(h.authorities.length, offset + 8)\n  buf.writeUInt16BE(h.additionals.length, offset + 10)\n\n  return buf\n}\n\nheader.encode.bytes = 12\n\nheader.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  if (buf.length < 12) throw new Error('Header must be 12 bytes')\n  const flags = buf.readUInt16BE(offset + 2)\n\n  return {\n    id: buf.readUInt16BE(offset),\n    type: flags & RESPONSE_FLAG ? 'response' : 'query',\n    flags: flags & 32767,\n    flag_qr: ((flags >> 15) & 0x1) === 1,\n    opcode: opcodes.toString((flags >> 11) & 0xf),\n    flag_aa: ((flags >> 10) & 0x1) === 1,\n    flag_tc: ((flags >> 9) & 0x1) === 1,\n    flag_rd: ((flags >> 8) & 0x1) === 1,\n    flag_ra: ((flags >> 7) & 0x1) === 1,\n    flag_z: ((flags >> 6) & 0x1) === 1,\n    flag_ad: ((flags >> 5) & 0x1) === 1,\n    flag_cd: ((flags >> 4) & 0x1) === 1,\n    rcode: rcodes.toString(flags & 0xf),\n    questions: new Array(buf.readUInt16BE(offset + 4)),\n    answers: new Array(buf.readUInt16BE(offset + 6)),\n    authorities: new Array(buf.readUInt16BE(offset + 8)),\n    additionals: new Array(buf.readUInt16BE(offset + 10))\n  }\n}\n\nheader.decode.bytes = 12\n\nheader.encodingLength = function () {\n  return 12\n}\n\nconst runknown = exports.unknown = {}\n\nrunknown.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(runknown.encodingLength(data))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(data.length, offset)\n  data.copy(buf, offset + 2)\n\n  runknown.encode.bytes = data.length + 2\n  return buf\n}\n\nrunknown.encode.bytes = 0\n\nrunknown.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const len = buf.readUInt16BE(offset)\n  const data = buf.slice(offset + 2, offset + 2 + len)\n  runknown.decode.bytes = len + 2\n  return data\n}\n\nrunknown.decode.bytes = 0\n\nrunknown.encodingLength = function (data) {\n  return data.length + 2\n}\n\nconst rns = exports.ns = {}\n\nrns.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rns.encodingLength(data))\n  if (!offset) offset = 0\n\n  name.encode(data, buf, offset + 2)\n  buf.writeUInt16BE(name.encode.bytes, offset)\n  rns.encode.bytes = name.encode.bytes + 2\n  return buf\n}\n\nrns.encode.bytes = 0\n\nrns.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const len = buf.readUInt16BE(offset)\n  const dd = name.decode(buf, offset + 2)\n\n  rns.decode.bytes = len + 2\n  return dd\n}\n\nrns.decode.bytes = 0\n\nrns.encodingLength = function (data) {\n  return name.encodingLength(data) + 2\n}\n\nconst rsoa = exports.soa = {}\n\nrsoa.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rsoa.encodingLength(data))\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n  offset += 2\n  name.encode(data.mname, buf, offset)\n  offset += name.encode.bytes\n  name.encode(data.rname, buf, offset, { mail: true })\n  offset += name.encode.bytes\n  buf.writeUInt32BE(data.serial || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.refresh || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.retry || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.expire || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.minimum || 0, offset)\n  offset += 4\n\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rsoa.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrsoa.encode.bytes = 0\n\nrsoa.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n\n  const data = {}\n  offset += 2\n  data.mname = name.decode(buf, offset)\n  offset += name.decode.bytes\n  data.rname = name.decode(buf, offset, { mail: true })\n  offset += name.decode.bytes\n  data.serial = buf.readUInt32BE(offset)\n  offset += 4\n  data.refresh = buf.readUInt32BE(offset)\n  offset += 4\n  data.retry = buf.readUInt32BE(offset)\n  offset += 4\n  data.expire = buf.readUInt32BE(offset)\n  offset += 4\n  data.minimum = buf.readUInt32BE(offset)\n  offset += 4\n\n  rsoa.decode.bytes = offset - oldOffset\n  return data\n}\n\nrsoa.decode.bytes = 0\n\nrsoa.encodingLength = function (data) {\n  return 22 + name.encodingLength(data.mname) + name.encodingLength(data.rname)\n}\n\nconst rtxt = exports.txt = {}\n\nrtxt.encode = function (data, buf, offset) {\n  if (!Array.isArray(data)) data = [data]\n  for (let i = 0; i < data.length; i++) {\n    if (typeof data[i] === 'string') {\n      data[i] = Buffer.from(data[i])\n    }\n    if (!Buffer.isBuffer(data[i])) {\n      throw new Error('Must be a Buffer')\n    }\n  }\n\n  if (!buf) buf = Buffer.alloc(rtxt.encodingLength(data))\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n  offset += 2\n\n  data.forEach(function (d) {\n    buf[offset++] = d.length\n    d.copy(buf, offset, 0, d.length)\n    offset += d.length\n  })\n\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rtxt.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrtxt.encode.bytes = 0\n\nrtxt.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n  let remaining = buf.readUInt16BE(offset)\n  offset += 2\n\n  let data = []\n  while (remaining > 0) {\n    const len = buf[offset++]\n    --remaining\n    if (remaining < len) {\n      throw new Error('Buffer overflow')\n    }\n    data.push(buf.slice(offset, offset + len))\n    offset += len\n    remaining -= len\n  }\n\n  rtxt.decode.bytes = offset - oldOffset\n  return data\n}\n\nrtxt.decode.bytes = 0\n\nrtxt.encodingLength = function (data) {\n  if (!Array.isArray(data)) data = [data]\n  let length = 2\n  data.forEach(function (buf) {\n    if (typeof buf === 'string') {\n      length += Buffer.byteLength(buf) + 1\n    } else {\n      length += buf.length + 1\n    }\n  })\n  return length\n}\n\nconst rnull = exports.null = {}\n\nrnull.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rnull.encodingLength(data))\n  if (!offset) offset = 0\n\n  if (typeof data === 'string') data = Buffer.from(data)\n  if (!data) data = Buffer.alloc(0)\n\n  const oldOffset = offset\n  offset += 2\n\n  const len = data.length\n  data.copy(buf, offset, 0, len)\n  offset += len\n\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rnull.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrnull.encode.bytes = 0\n\nrnull.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n  const len = buf.readUInt16BE(offset)\n\n  offset += 2\n\n  const data = buf.slice(offset, offset + len)\n  offset += len\n\n  rnull.decode.bytes = offset - oldOffset\n  return data\n}\n\nrnull.decode.bytes = 0\n\nrnull.encodingLength = function (data) {\n  if (!data) return 2\n  return (Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data)) + 2\n}\n\nconst rhinfo = exports.hinfo = {}\n\nrhinfo.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rhinfo.encodingLength(data))\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n  offset += 2\n  string.encode(data.cpu, buf, offset)\n  offset += string.encode.bytes\n  string.encode(data.os, buf, offset)\n  offset += string.encode.bytes\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rhinfo.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrhinfo.encode.bytes = 0\n\nrhinfo.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n\n  const data = {}\n  offset += 2\n  data.cpu = string.decode(buf, offset)\n  offset += string.decode.bytes\n  data.os = string.decode(buf, offset)\n  offset += string.decode.bytes\n  rhinfo.decode.bytes = offset - oldOffset\n  return data\n}\n\nrhinfo.decode.bytes = 0\n\nrhinfo.encodingLength = function (data) {\n  return string.encodingLength(data.cpu) + string.encodingLength(data.os) + 2\n}\n\nconst rptr = exports.ptr = {}\nconst rcname = exports.cname = rptr\nconst rdname = exports.dname = rptr\n\nrptr.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rptr.encodingLength(data))\n  if (!offset) offset = 0\n\n  name.encode(data, buf, offset + 2)\n  buf.writeUInt16BE(name.encode.bytes, offset)\n  rptr.encode.bytes = name.encode.bytes + 2\n  return buf\n}\n\nrptr.encode.bytes = 0\n\nrptr.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const data = name.decode(buf, offset + 2)\n  rptr.decode.bytes = name.decode.bytes + 2\n  return data\n}\n\nrptr.decode.bytes = 0\n\nrptr.encodingLength = function (data) {\n  return name.encodingLength(data) + 2\n}\n\nconst rsrv = exports.srv = {}\n\nrsrv.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rsrv.encodingLength(data))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(data.priority || 0, offset + 2)\n  buf.writeUInt16BE(data.weight || 0, offset + 4)\n  buf.writeUInt16BE(data.port || 0, offset + 6)\n  name.encode(data.target, buf, offset + 8)\n\n  const len = name.encode.bytes + 6\n  buf.writeUInt16BE(len, offset)\n\n  rsrv.encode.bytes = len + 2\n  return buf\n}\n\nrsrv.encode.bytes = 0\n\nrsrv.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const len = buf.readUInt16BE(offset)\n\n  const data = {}\n  data.priority = buf.readUInt16BE(offset + 2)\n  data.weight = buf.readUInt16BE(offset + 4)\n  data.port = buf.readUInt16BE(offset + 6)\n  data.target = name.decode(buf, offset + 8)\n\n  rsrv.decode.bytes = len + 2\n  return data\n}\n\nrsrv.decode.bytes = 0\n\nrsrv.encodingLength = function (data) {\n  return 8 + name.encodingLength(data.target)\n}\n\nconst rcaa = exports.caa = {}\n\nrcaa.ISSUER_CRITICAL = 1 << 7\n\nrcaa.encode = function (data, buf, offset) {\n  const len = rcaa.encodingLength(data)\n\n  if (!buf) buf = Buffer.alloc(rcaa.encodingLength(data))\n  if (!offset) offset = 0\n\n  if (data.issuerCritical) {\n    data.flags = rcaa.ISSUER_CRITICAL\n  }\n\n  buf.writeUInt16BE(len - 2, offset)\n  offset += 2\n  buf.writeUInt8(data.flags || 0, offset)\n  offset += 1\n  string.encode(data.tag, buf, offset)\n  offset += string.encode.bytes\n  buf.write(data.value, offset)\n  offset += Buffer.byteLength(data.value)\n\n  rcaa.encode.bytes = len\n  return buf\n}\n\nrcaa.encode.bytes = 0\n\nrcaa.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const len = buf.readUInt16BE(offset)\n  offset += 2\n\n  const oldOffset = offset\n  const data = {}\n  data.flags = buf.readUInt8(offset)\n  offset += 1\n  data.tag = string.decode(buf, offset)\n  offset += string.decode.bytes\n  data.value = buf.toString('utf-8', offset, oldOffset + len)\n\n  data.issuerCritical = !!(data.flags & rcaa.ISSUER_CRITICAL)\n\n  rcaa.decode.bytes = len + 2\n\n  return data\n}\n\nrcaa.decode.bytes = 0\n\nrcaa.encodingLength = function (data) {\n  return string.encodingLength(data.tag) + string.encodingLength(data.value) + 2\n}\n\nconst rmx = exports.mx = {}\n\nrmx.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rmx.encodingLength(data))\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n  offset += 2\n  buf.writeUInt16BE(data.preference || 0, offset)\n  offset += 2\n  name.encode(data.exchange, buf, offset)\n  offset += name.encode.bytes\n\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rmx.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrmx.encode.bytes = 0\n\nrmx.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n\n  const data = {}\n  offset += 2\n  data.preference = buf.readUInt16BE(offset)\n  offset += 2\n  data.exchange = name.decode(buf, offset)\n  offset += name.decode.bytes\n\n  rmx.decode.bytes = offset - oldOffset\n  return data\n}\n\nrmx.encodingLength = function (data) {\n  return 4 + name.encodingLength(data.exchange)\n}\n\nconst ra = exports.a = {}\n\nra.encode = function (host, buf, offset) {\n  if (!buf) buf = Buffer.alloc(ra.encodingLength(host))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(4, offset)\n  offset += 2\n  ip.v4.encode(host, buf, offset)\n  ra.encode.bytes = 6\n  return buf\n}\n\nra.encode.bytes = 0\n\nra.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  offset += 2\n  const host = ip.v4.decode(buf, offset)\n  ra.decode.bytes = 6\n  return host\n}\n\nra.decode.bytes = 0\n\nra.encodingLength = function () {\n  return 6\n}\n\nconst raaaa = exports.aaaa = {}\n\nraaaa.encode = function (host, buf, offset) {\n  if (!buf) buf = Buffer.alloc(raaaa.encodingLength(host))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(16, offset)\n  offset += 2\n  ip.v6.encode(host, buf, offset)\n  raaaa.encode.bytes = 18\n  return buf\n}\n\nraaaa.encode.bytes = 0\n\nraaaa.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  offset += 2\n  const host = ip.v6.decode(buf, offset)\n  raaaa.decode.bytes = 18\n  return host\n}\n\nraaaa.decode.bytes = 0\n\nraaaa.encodingLength = function () {\n  return 18\n}\n\nconst roption = exports.option = {}\n\nroption.encode = function (option, buf, offset) {\n  if (!buf) buf = Buffer.alloc(roption.encodingLength(option))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const code = optioncodes.toCode(option.code)\n  buf.writeUInt16BE(code, offset)\n  offset += 2\n  if (option.data) {\n    buf.writeUInt16BE(option.data.length, offset)\n    offset += 2\n    option.data.copy(buf, offset)\n    offset += option.data.length\n  } else {\n    switch (code) {\n      // case 3: NSID.  No encode makes sense.\n      // case 5,6,7: Not implementable\n      case 8: // ECS\n        // note: do IP math before calling\n        const spl = option.sourcePrefixLength || 0\n        const fam = option.family || ip.familyOf(option.ip)\n        const ipBuf = ip.encode(option.ip, Buffer.alloc)\n        const ipLen = Math.ceil(spl / 8)\n        buf.writeUInt16BE(ipLen + 4, offset)\n        offset += 2\n        buf.writeUInt16BE(fam, offset)\n        offset += 2\n        buf.writeUInt8(spl, offset++)\n        buf.writeUInt8(option.scopePrefixLength || 0, offset++)\n\n        ipBuf.copy(buf, offset, 0, ipLen)\n        offset += ipLen\n        break\n      // case 9: EXPIRE (experimental)\n      // case 10: COOKIE.  No encode makes sense.\n      case 11: // KEEP-ALIVE\n        if (option.timeout) {\n          buf.writeUInt16BE(2, offset)\n          offset += 2\n          buf.writeUInt16BE(option.timeout, offset)\n          offset += 2\n        } else {\n          buf.writeUInt16BE(0, offset)\n          offset += 2\n        }\n        break\n      case 12: // PADDING\n        const len = option.length || 0\n        buf.writeUInt16BE(len, offset)\n        offset += 2\n        buf.fill(0, offset, offset + len)\n        offset += len\n        break\n      // case 13:  CHAIN.  Experimental.\n      case 14: // KEY-TAG\n        const tagsLen = option.tags.length * 2\n        buf.writeUInt16BE(tagsLen, offset)\n        offset += 2\n        for (const tag of option.tags) {\n          buf.writeUInt16BE(tag, offset)\n          offset += 2\n        }\n        break\n      default:\n        throw new Error(`Unknown roption code: ${option.code}`)\n    }\n  }\n\n  roption.encode.bytes = offset - oldOffset\n  return buf\n}\n\nroption.encode.bytes = 0\n\nroption.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const option = {}\n  option.code = buf.readUInt16BE(offset)\n  option.type = optioncodes.toString(option.code)\n  offset += 2\n  const len = buf.readUInt16BE(offset)\n  offset += 2\n  option.data = buf.slice(offset, offset + len)\n  switch (option.code) {\n    // case 3: NSID.  No decode makes sense.\n    case 8: // ECS\n      option.family = buf.readUInt16BE(offset)\n      offset += 2\n      option.sourcePrefixLength = buf.readUInt8(offset++)\n      option.scopePrefixLength = buf.readUInt8(offset++)\n      const padded = Buffer.alloc((option.family === 1) ? 4 : 16)\n      buf.copy(padded, 0, offset, offset + len - 4)\n      option.ip = ip.decode(padded)\n      break\n    // case 12: Padding.  No decode makes sense.\n    case 11: // KEEP-ALIVE\n      if (len > 0) {\n        option.timeout = buf.readUInt16BE(offset)\n        offset += 2\n      }\n      break\n    case 14:\n      option.tags = []\n      for (let i = 0; i < len; i += 2) {\n        option.tags.push(buf.readUInt16BE(offset))\n        offset += 2\n      }\n    // don't worry about default.  caller will use data if desired\n  }\n\n  roption.decode.bytes = len + 4\n  return option\n}\n\nroption.decode.bytes = 0\n\nroption.encodingLength = function (option) {\n  if (option.data) {\n    return option.data.length + 4\n  }\n  const code = optioncodes.toCode(option.code)\n  switch (code) {\n    case 8: // ECS\n      const spl = option.sourcePrefixLength || 0\n      return Math.ceil(spl / 8) + 8\n    case 11: // KEEP-ALIVE\n      return (typeof option.timeout === 'number') ? 6 : 4\n    case 12: // PADDING\n      return option.length + 4\n    case 14: // KEY-TAG\n      return 4 + (option.tags.length * 2)\n  }\n  throw new Error(`Unknown roption code: ${option.code}`)\n}\n\nconst ropt = exports.opt = {}\n\nropt.encode = function (options, buf, offset) {\n  if (!buf) buf = Buffer.alloc(ropt.encodingLength(options))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const rdlen = encodingLengthList(options, roption)\n  buf.writeUInt16BE(rdlen, offset)\n  offset = encodeList(options, roption, buf, offset + 2)\n\n  ropt.encode.bytes = offset - oldOffset\n  return buf\n}\n\nropt.encode.bytes = 0\n\nropt.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const options = []\n  let rdlen = buf.readUInt16BE(offset)\n  offset += 2\n  let o = 0\n  while (rdlen > 0) {\n    options[o++] = roption.decode(buf, offset)\n    offset += roption.decode.bytes\n    rdlen -= roption.decode.bytes\n  }\n  ropt.decode.bytes = offset - oldOffset\n  return options\n}\n\nropt.decode.bytes = 0\n\nropt.encodingLength = function (options) {\n  return 2 + encodingLengthList(options || [], roption)\n}\n\nconst rdnskey = exports.dnskey = {}\n\nrdnskey.PROTOCOL_DNSSEC = 3\nrdnskey.ZONE_KEY = 0x80\nrdnskey.SECURE_ENTRYPOINT = 0x8000\n\nrdnskey.encode = function (key, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rdnskey.encodingLength(key))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const keydata = key.key\n  if (!Buffer.isBuffer(keydata)) {\n    throw new Error('Key must be a Buffer')\n  }\n\n  offset += 2 // Leave space for length\n  buf.writeUInt16BE(key.flags, offset)\n  offset += 2\n  buf.writeUInt8(rdnskey.PROTOCOL_DNSSEC, offset)\n  offset += 1\n  buf.writeUInt8(key.algorithm, offset)\n  offset += 1\n  keydata.copy(buf, offset, 0, keydata.length)\n  offset += keydata.length\n\n  rdnskey.encode.bytes = offset - oldOffset\n  buf.writeUInt16BE(rdnskey.encode.bytes - 2, oldOffset)\n  return buf\n}\n\nrdnskey.encode.bytes = 0\n\nrdnskey.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  var key = {}\n  var length = buf.readUInt16BE(offset)\n  offset += 2\n  key.flags = buf.readUInt16BE(offset)\n  offset += 2\n  if (buf.readUInt8(offset) !== rdnskey.PROTOCOL_DNSSEC) {\n    throw new Error('Protocol must be 3')\n  }\n  offset += 1\n  key.algorithm = buf.readUInt8(offset)\n  offset += 1\n  key.key = buf.slice(offset, oldOffset + length + 2)\n  offset += key.key.length\n  rdnskey.decode.bytes = offset - oldOffset\n  return key\n}\n\nrdnskey.decode.bytes = 0\n\nrdnskey.encodingLength = function (key) {\n  return 6 + Buffer.byteLength(key.key)\n}\n\nconst rrrsig = exports.rrsig = {}\n\nrrrsig.encode = function (sig, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rrrsig.encodingLength(sig))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const signature = sig.signature\n  if (!Buffer.isBuffer(signature)) {\n    throw new Error('Signature must be a Buffer')\n  }\n\n  offset += 2 // Leave space for length\n  buf.writeUInt16BE(types.toType(sig.typeCovered), offset)\n  offset += 2\n  buf.writeUInt8(sig.algorithm, offset)\n  offset += 1\n  buf.writeUInt8(sig.labels, offset)\n  offset += 1\n  buf.writeUInt32BE(sig.originalTTL, offset)\n  offset += 4\n  buf.writeUInt32BE(sig.expiration, offset)\n  offset += 4\n  buf.writeUInt32BE(sig.inception, offset)\n  offset += 4\n  buf.writeUInt16BE(sig.keyTag, offset)\n  offset += 2\n  name.encode(sig.signersName, buf, offset)\n  offset += name.encode.bytes\n  signature.copy(buf, offset, 0, signature.length)\n  offset += signature.length\n\n  rrrsig.encode.bytes = offset - oldOffset\n  buf.writeUInt16BE(rrrsig.encode.bytes - 2, oldOffset)\n  return buf\n}\n\nrrrsig.encode.bytes = 0\n\nrrrsig.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  var sig = {}\n  var length = buf.readUInt16BE(offset)\n  offset += 2\n  sig.typeCovered = types.toString(buf.readUInt16BE(offset))\n  offset += 2\n  sig.algorithm = buf.readUInt8(offset)\n  offset += 1\n  sig.labels = buf.readUInt8(offset)\n  offset += 1\n  sig.originalTTL = buf.readUInt32BE(offset)\n  offset += 4\n  sig.expiration = buf.readUInt32BE(offset)\n  offset += 4\n  sig.inception = buf.readUInt32BE(offset)\n  offset += 4\n  sig.keyTag = buf.readUInt16BE(offset)\n  offset += 2\n  sig.signersName = name.decode(buf, offset)\n  offset += name.decode.bytes\n  sig.signature = buf.slice(offset, oldOffset + length + 2)\n  offset += sig.signature.length\n  rrrsig.decode.bytes = offset - oldOffset\n  return sig\n}\n\nrrrsig.decode.bytes = 0\n\nrrrsig.encodingLength = function (sig) {\n  return 20 +\n    name.encodingLength(sig.signersName) +\n    Buffer.byteLength(sig.signature)\n}\n\nconst rrp = exports.rp = {}\n\nrrp.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rrp.encodingLength(data))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  offset += 2 // Leave space for length\n  name.encode(data.mbox || '.', buf, offset, { mail: true })\n  offset += name.encode.bytes\n  name.encode(data.txt || '.', buf, offset)\n  offset += name.encode.bytes\n  rrp.encode.bytes = offset - oldOffset\n  buf.writeUInt16BE(rrp.encode.bytes - 2, oldOffset)\n  return buf\n}\n\nrrp.encode.bytes = 0\n\nrrp.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const data = {}\n  offset += 2\n  data.mbox = name.decode(buf, offset, { mail: true }) || '.'\n  offset += name.decode.bytes\n  data.txt = name.decode(buf, offset) || '.'\n  offset += name.decode.bytes\n  rrp.decode.bytes = offset - oldOffset\n  return data\n}\n\nrrp.decode.bytes = 0\n\nrrp.encodingLength = function (data) {\n  return 2 + name.encodingLength(data.mbox || '.') + name.encodingLength(data.txt || '.')\n}\n\nconst typebitmap = {}\n\ntypebitmap.encode = function (typelist, buf, offset) {\n  if (!buf) buf = Buffer.alloc(typebitmap.encodingLength(typelist))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  var typesByWindow = []\n  for (var i = 0; i < typelist.length; i++) {\n    var typeid = types.toType(typelist[i])\n    if (typesByWindow[typeid >> 8] === undefined) {\n      typesByWindow[typeid >> 8] = []\n    }\n    typesByWindow[typeid >> 8][(typeid >> 3) & 0x1F] |= 1 << (7 - (typeid & 0x7))\n  }\n\n  for (i = 0; i < typesByWindow.length; i++) {\n    if (typesByWindow[i] !== undefined) {\n      var windowBuf = Buffer.from(typesByWindow[i])\n      buf.writeUInt8(i, offset)\n      offset += 1\n      buf.writeUInt8(windowBuf.length, offset)\n      offset += 1\n      windowBuf.copy(buf, offset)\n      offset += windowBuf.length\n    }\n  }\n\n  typebitmap.encode.bytes = offset - oldOffset\n  return buf\n}\n\ntypebitmap.encode.bytes = 0\n\ntypebitmap.decode = function (buf, offset, length) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  var typelist = []\n  while (offset - oldOffset < length) {\n    var window = buf.readUInt8(offset)\n    offset += 1\n    var windowLength = buf.readUInt8(offset)\n    offset += 1\n    for (var i = 0; i < windowLength; i++) {\n      var b = buf.readUInt8(offset + i)\n      for (var j = 0; j < 8; j++) {\n        if (b & (1 << (7 - j))) {\n          var typeid = types.toString((window << 8) | (i << 3) | j)\n          typelist.push(typeid)\n        }\n      }\n    }\n    offset += windowLength\n  }\n\n  typebitmap.decode.bytes = offset - oldOffset\n  return typelist\n}\n\ntypebitmap.decode.bytes = 0\n\ntypebitmap.encodingLength = function (typelist) {\n  var extents = []\n  for (var i = 0; i < typelist.length; i++) {\n    var typeid = types.toType(typelist[i])\n    extents[typeid >> 8] = Math.max(extents[typeid >> 8] || 0, typeid & 0xFF)\n  }\n\n  var len = 0\n  for (i = 0; i < extents.length; i++) {\n    if (extents[i] !== undefined) {\n      len += 2 + Math.ceil((extents[i] + 1) / 8)\n    }\n  }\n\n  return len\n}\n\nconst rnsec = exports.nsec = {}\n\nrnsec.encode = function (record, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rnsec.encodingLength(record))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  offset += 2 // Leave space for length\n  name.encode(record.nextDomain, buf, offset)\n  offset += name.encode.bytes\n  typebitmap.encode(record.rrtypes, buf, offset)\n  offset += typebitmap.encode.bytes\n\n  rnsec.encode.bytes = offset - oldOffset\n  buf.writeUInt16BE(rnsec.encode.bytes - 2, oldOffset)\n  return buf\n}\n\nrnsec.encode.bytes = 0\n\nrnsec.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  var record = {}\n  var length = buf.readUInt16BE(offset)\n  offset += 2\n  record.nextDomain = name.decode(buf, offset)\n  offset += name.decode.bytes\n  record.rrtypes = typebitmap.decode(buf, offset, length - (offset - oldOffset))\n  offset += typebitmap.decode.bytes\n\n  rnsec.decode.bytes = offset - oldOffset\n  return record\n}\n\nrnsec.decode.bytes = 0\n\nrnsec.encodingLength = function (record) {\n  return 2 +\n    name.encodingLength(record.nextDomain) +\n    typebitmap.encodingLength(record.rrtypes)\n}\n\nconst rnsec3 = exports.nsec3 = {}\n\nrnsec3.encode = function (record, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rnsec3.encodingLength(record))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const salt = record.salt\n  if (!Buffer.isBuffer(salt)) {\n    throw new Error('salt must be a Buffer')\n  }\n\n  const nextDomain = record.nextDomain\n  if (!Buffer.isBuffer(nextDomain)) {\n    throw new Error('nextDomain must be a Buffer')\n  }\n\n  offset += 2 // Leave space for length\n  buf.writeUInt8(record.algorithm, offset)\n  offset += 1\n  buf.writeUInt8(record.flags, offset)\n  offset += 1\n  buf.writeUInt16BE(record.iterations, offset)\n  offset += 2\n  buf.writeUInt8(salt.length, offset)\n  offset += 1\n  salt.copy(buf, offset, 0, salt.length)\n  offset += salt.length\n  buf.writeUInt8(nextDomain.length, offset)\n  offset += 1\n  nextDomain.copy(buf, offset, 0, nextDomain.length)\n  offset += nextDomain.length\n  typebitmap.encode(record.rrtypes, buf, offset)\n  offset += typebitmap.encode.bytes\n\n  rnsec3.encode.bytes = offset - oldOffset\n  buf.writeUInt16BE(rnsec3.encode.bytes - 2, oldOffset)\n  return buf\n}\n\nrnsec3.encode.bytes = 0\n\nrnsec3.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  var record = {}\n  var length = buf.readUInt16BE(offset)\n  offset += 2\n  record.algorithm = buf.readUInt8(offset)\n  offset += 1\n  record.flags = buf.readUInt8(offset)\n  offset += 1\n  record.iterations = buf.readUInt16BE(offset)\n  offset += 2\n  const saltLength = buf.readUInt8(offset)\n  offset += 1\n  record.salt = buf.slice(offset, offset + saltLength)\n  offset += saltLength\n  const hashLength = buf.readUInt8(offset)\n  offset += 1\n  record.nextDomain = buf.slice(offset, offset + hashLength)\n  offset += hashLength\n  record.rrtypes = typebitmap.decode(buf, offset, length - (offset - oldOffset))\n  offset += typebitmap.decode.bytes\n\n  rnsec3.decode.bytes = offset - oldOffset\n  return record\n}\n\nrnsec3.decode.bytes = 0\n\nrnsec3.encodingLength = function (record) {\n  return 8 +\n    record.salt.length +\n    record.nextDomain.length +\n    typebitmap.encodingLength(record.rrtypes)\n}\n\nconst rds = exports.ds = {}\n\nrds.encode = function (digest, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rds.encodingLength(digest))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const digestdata = digest.digest\n  if (!Buffer.isBuffer(digestdata)) {\n    throw new Error('Digest must be a Buffer')\n  }\n\n  offset += 2 // Leave space for length\n  buf.writeUInt16BE(digest.keyTag, offset)\n  offset += 2\n  buf.writeUInt8(digest.algorithm, offset)\n  offset += 1\n  buf.writeUInt8(digest.digestType, offset)\n  offset += 1\n  digestdata.copy(buf, offset, 0, digestdata.length)\n  offset += digestdata.length\n\n  rds.encode.bytes = offset - oldOffset\n  buf.writeUInt16BE(rds.encode.bytes - 2, oldOffset)\n  return buf\n}\n\nrds.encode.bytes = 0\n\nrds.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  var digest = {}\n  var length = buf.readUInt16BE(offset)\n  offset += 2\n  digest.keyTag = buf.readUInt16BE(offset)\n  offset += 2\n  digest.algorithm = buf.readUInt8(offset)\n  offset += 1\n  digest.digestType = buf.readUInt8(offset)\n  offset += 1\n  digest.digest = buf.slice(offset, oldOffset + length + 2)\n  offset += digest.digest.length\n  rds.decode.bytes = offset - oldOffset\n  return digest\n}\n\nrds.decode.bytes = 0\n\nrds.encodingLength = function (digest) {\n  return 6 + Buffer.byteLength(digest.digest)\n}\n\nconst rsshfp = exports.sshfp = {}\n\nrsshfp.getFingerprintLengthForHashType = function getFingerprintLengthForHashType (hashType) {\n  switch (hashType) {\n    case 1: return 20\n    case 2: return 32\n  }\n}\n\nrsshfp.encode = function encode (record, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rsshfp.encodingLength(record))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  offset += 2 // The function call starts with the offset pointer at the RDLENGTH field, not the RDATA one\n  buf[offset] = record.algorithm\n  offset += 1\n  buf[offset] = record.hash\n  offset += 1\n\n  const fingerprintBuf = Buffer.from(record.fingerprint.toUpperCase(), 'hex')\n  if (fingerprintBuf.length !== rsshfp.getFingerprintLengthForHashType(record.hash)) {\n    throw new Error('Invalid fingerprint length')\n  }\n  fingerprintBuf.copy(buf, offset)\n  offset += fingerprintBuf.byteLength\n\n  rsshfp.encode.bytes = offset - oldOffset\n  buf.writeUInt16BE(rsshfp.encode.bytes - 2, oldOffset)\n\n  return buf\n}\n\nrsshfp.encode.bytes = 0\n\nrsshfp.decode = function decode (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const record = {}\n  offset += 2 // Account for the RDLENGTH field\n  record.algorithm = buf[offset]\n  offset += 1\n  record.hash = buf[offset]\n  offset += 1\n\n  const fingerprintLength = rsshfp.getFingerprintLengthForHashType(record.hash)\n  record.fingerprint = buf.slice(offset, offset + fingerprintLength).toString('hex').toUpperCase()\n  offset += fingerprintLength\n  rsshfp.decode.bytes = offset - oldOffset\n  return record\n}\n\nrsshfp.decode.bytes = 0\n\nrsshfp.encodingLength = function (record) {\n  return 4 + Buffer.from(record.fingerprint, 'hex').byteLength\n}\n\nconst rnaptr = exports.naptr = {}\n\nrnaptr.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rnaptr.encodingLength(data))\n  if (!offset) offset = 0\n  const oldOffset = offset\n  offset += 2\n  buf.writeUInt16BE(data.order || 0, offset)\n  offset += 2\n  buf.writeUInt16BE(data.preference || 0, offset)\n  offset += 2\n  string.encode(data.flags, buf, offset)\n  offset += string.encode.bytes\n  string.encode(data.services, buf, offset)\n  offset += string.encode.bytes\n  string.encode(data.regexp, buf, offset)\n  offset += string.encode.bytes\n  name.encode(data.replacement, buf, offset)\n  offset += name.encode.bytes\n  rnaptr.encode.bytes = offset - oldOffset\n  buf.writeUInt16BE(rnaptr.encode.bytes - 2, oldOffset)\n  return buf\n}\n\nrnaptr.encode.bytes = 0\n\nrnaptr.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n  const data = {}\n  offset += 2\n  data.order = buf.readUInt16BE(offset)\n  offset += 2\n  data.preference = buf.readUInt16BE(offset)\n  offset += 2\n  data.flags = string.decode(buf, offset)\n  offset += string.decode.bytes\n  data.services = string.decode(buf, offset)\n  offset += string.decode.bytes\n  data.regexp = string.decode(buf, offset)\n  offset += string.decode.bytes\n  data.replacement = name.decode(buf, offset)\n  offset += name.decode.bytes\n  rnaptr.decode.bytes = offset - oldOffset\n  return data\n}\n\nrnaptr.decode.bytes = 0\n\nrnaptr.encodingLength = function (data) {\n  return string.encodingLength(data.flags) +\n    string.encodingLength(data.services) +\n    string.encodingLength(data.regexp) +\n    name.encodingLength(data.replacement) + 6\n}\n\nconst rtlsa = exports.tlsa = {}\n\nrtlsa.encode = function (cert, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rtlsa.encodingLength(cert))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const certdata = cert.certificate\n  if (!Buffer.isBuffer(certdata)) {\n    throw new Error('Certificate must be a Buffer')\n  }\n\n  offset += 2 // Leave space for length\n  buf.writeUInt8(cert.usage, offset)\n  offset += 1\n  buf.writeUInt8(cert.selector, offset)\n  offset += 1\n  buf.writeUInt8(cert.matchingType, offset)\n  offset += 1\n  certdata.copy(buf, offset, 0, certdata.length)\n  offset += certdata.length\n\n  rtlsa.encode.bytes = offset - oldOffset\n  buf.writeUInt16BE(rtlsa.encode.bytes - 2, oldOffset)\n  return buf\n}\n\nrtlsa.encode.bytes = 0\n\nrtlsa.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const cert = {}\n  const length = buf.readUInt16BE(offset)\n  offset += 2\n  cert.usage = buf.readUInt8(offset)\n  offset += 1\n  cert.selector = buf.readUInt8(offset)\n  offset += 1\n  cert.matchingType = buf.readUInt8(offset)\n  offset += 1\n  cert.certificate = buf.slice(offset, oldOffset + length + 2)\n  offset += cert.certificate.length\n  rtlsa.decode.bytes = offset - oldOffset\n  return cert\n}\n\nrtlsa.decode.bytes = 0\n\nrtlsa.encodingLength = function (cert) {\n  return 5 + Buffer.byteLength(cert.certificate)\n}\n\nconst renc = exports.record = function (type) {\n  switch (type.toUpperCase()) {\n    case 'A': return ra\n    case 'PTR': return rptr\n    case 'CNAME': return rcname\n    case 'DNAME': return rdname\n    case 'TXT': return rtxt\n    case 'NULL': return rnull\n    case 'AAAA': return raaaa\n    case 'SRV': return rsrv\n    case 'HINFO': return rhinfo\n    case 'CAA': return rcaa\n    case 'NS': return rns\n    case 'SOA': return rsoa\n    case 'MX': return rmx\n    case 'OPT': return ropt\n    case 'DNSKEY': return rdnskey\n    case 'RRSIG': return rrrsig\n    case 'RP': return rrp\n    case 'NSEC': return rnsec\n    case 'NSEC3': return rnsec3\n    case 'SSHFP': return rsshfp\n    case 'DS': return rds\n    case 'NAPTR': return rnaptr\n    case 'TLSA': return rtlsa\n  }\n  return runknown\n}\n\nconst answer = exports.answer = {}\n\nanswer.encode = function (a, buf, offset) {\n  if (!buf) buf = Buffer.alloc(answer.encodingLength(a))\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n\n  name.encode(a.name, buf, offset)\n  offset += name.encode.bytes\n\n  buf.writeUInt16BE(types.toType(a.type), offset)\n\n  if (a.type.toUpperCase() === 'OPT') {\n    if (a.name !== '.') {\n      throw new Error('OPT name must be root.')\n    }\n    buf.writeUInt16BE(a.udpPayloadSize || 4096, offset + 2)\n    buf.writeUInt8(a.extendedRcode || 0, offset + 4)\n    buf.writeUInt8(a.ednsVersion || 0, offset + 5)\n    buf.writeUInt16BE(a.flags || 0, offset + 6)\n\n    offset += 8\n    ropt.encode(a.options || [], buf, offset)\n    offset += ropt.encode.bytes\n  } else {\n    let klass = classes.toClass(a.class === undefined ? 'IN' : a.class)\n    if (a.flush) klass |= FLUSH_MASK // the 1st bit of the class is the flush bit\n    buf.writeUInt16BE(klass, offset + 2)\n    buf.writeUInt32BE(a.ttl || 0, offset + 4)\n\n    offset += 8\n    const enc = renc(a.type)\n    enc.encode(a.data, buf, offset)\n    offset += enc.encode.bytes\n  }\n\n  answer.encode.bytes = offset - oldOffset\n  return buf\n}\n\nanswer.encode.bytes = 0\n\nanswer.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const a = {}\n  const oldOffset = offset\n\n  a.name = name.decode(buf, offset)\n  offset += name.decode.bytes\n  a.type = types.toString(buf.readUInt16BE(offset))\n  if (a.type === 'OPT') {\n    a.udpPayloadSize = buf.readUInt16BE(offset + 2)\n    a.extendedRcode = buf.readUInt8(offset + 4)\n    a.ednsVersion = buf.readUInt8(offset + 5)\n    a.flags = buf.readUInt16BE(offset + 6)\n    a.flag_do = ((a.flags >> 15) & 0x1) === 1\n    a.options = ropt.decode(buf, offset + 8)\n    offset += 8 + ropt.decode.bytes\n  } else {\n    const klass = buf.readUInt16BE(offset + 2)\n    a.ttl = buf.readUInt32BE(offset + 4)\n\n    a.class = classes.toString(klass & NOT_FLUSH_MASK)\n    a.flush = !!(klass & FLUSH_MASK)\n\n    const enc = renc(a.type)\n    a.data = enc.decode(buf, offset + 8)\n    offset += 8 + enc.decode.bytes\n  }\n\n  answer.decode.bytes = offset - oldOffset\n  return a\n}\n\nanswer.decode.bytes = 0\n\nanswer.encodingLength = function (a) {\n  const data = (a.data !== null && a.data !== undefined) ? a.data : a.options\n  return name.encodingLength(a.name) + 8 + renc(a.type).encodingLength(data)\n}\n\nconst question = exports.question = {}\n\nquestion.encode = function (q, buf, offset) {\n  if (!buf) buf = Buffer.alloc(question.encodingLength(q))\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n\n  name.encode(q.name, buf, offset)\n  offset += name.encode.bytes\n\n  buf.writeUInt16BE(types.toType(q.type), offset)\n  offset += 2\n\n  buf.writeUInt16BE(classes.toClass(q.class === undefined ? 'IN' : q.class), offset)\n  offset += 2\n\n  question.encode.bytes = offset - oldOffset\n  return q\n}\n\nquestion.encode.bytes = 0\n\nquestion.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n  const q = {}\n\n  q.name = name.decode(buf, offset)\n  offset += name.decode.bytes\n\n  q.type = types.toString(buf.readUInt16BE(offset))\n  offset += 2\n\n  q.class = classes.toString(buf.readUInt16BE(offset))\n  offset += 2\n\n  const qu = !!(q.class & QU_MASK)\n  if (qu) q.class &= NOT_QU_MASK\n\n  question.decode.bytes = offset - oldOffset\n  return q\n}\n\nquestion.decode.bytes = 0\n\nquestion.encodingLength = function (q) {\n  return name.encodingLength(q.name) + 4\n}\n\nexports.AUTHORITATIVE_ANSWER = 1 << 10\nexports.TRUNCATED_RESPONSE = 1 << 9\nexports.RECURSION_DESIRED = 1 << 8\nexports.RECURSION_AVAILABLE = 1 << 7\nexports.AUTHENTIC_DATA = 1 << 5\nexports.CHECKING_DISABLED = 1 << 4\nexports.DNSSEC_OK = 1 << 15\n\nexports.encode = function (result, buf, offset) {\n  const allocing = !buf\n\n  if (allocing) buf = Buffer.alloc(exports.encodingLength(result))\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n\n  if (!result.questions) result.questions = []\n  if (!result.answers) result.answers = []\n  if (!result.authorities) result.authorities = []\n  if (!result.additionals) result.additionals = []\n\n  header.encode(result, buf, offset)\n  offset += header.encode.bytes\n\n  offset = encodeList(result.questions, question, buf, offset)\n  offset = encodeList(result.answers, answer, buf, offset)\n  offset = encodeList(result.authorities, answer, buf, offset)\n  offset = encodeList(result.additionals, answer, buf, offset)\n\n  exports.encode.bytes = offset - oldOffset\n\n  // just a quick sanity check\n  if (allocing && exports.encode.bytes !== buf.length) {\n    return buf.slice(0, exports.encode.bytes)\n  }\n\n  return buf\n}\n\nexports.encode.bytes = 0\n\nexports.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n  const result = header.decode(buf, offset)\n  offset += header.decode.bytes\n\n  offset = decodeList(result.questions, question, buf, offset)\n  offset = decodeList(result.answers, answer, buf, offset)\n  offset = decodeList(result.authorities, answer, buf, offset)\n  offset = decodeList(result.additionals, answer, buf, offset)\n\n  exports.decode.bytes = offset - oldOffset\n\n  return result\n}\n\nexports.decode.bytes = 0\n\nexports.encodingLength = function (result) {\n  return header.encodingLength(result) +\n    encodingLengthList(result.questions || [], question) +\n    encodingLengthList(result.answers || [], answer) +\n    encodingLengthList(result.authorities || [], answer) +\n    encodingLengthList(result.additionals || [], answer)\n}\n\nexports.streamEncode = function (result) {\n  const buf = exports.encode(result)\n  const sbuf = Buffer.alloc(2)\n  sbuf.writeUInt16BE(buf.byteLength)\n  const combine = Buffer.concat([sbuf, buf])\n  exports.streamEncode.bytes = combine.byteLength\n  return combine\n}\n\nexports.streamEncode.bytes = 0\n\nexports.streamDecode = function (sbuf) {\n  const len = sbuf.readUInt16BE(0)\n  if (sbuf.byteLength < len + 2) {\n    // not enough data\n    return null\n  }\n  const result = exports.decode(sbuf.slice(2))\n  exports.streamDecode.bytes = exports.decode.bytes\n  return result\n}\n\nexports.streamDecode.bytes = 0\n\nfunction encodingLengthList (list, enc) {\n  let len = 0\n  for (let i = 0; i < list.length; i++) len += enc.encodingLength(list[i])\n  return len\n}\n\nfunction encodeList (list, enc, buf, offset) {\n  for (let i = 0; i < list.length; i++) {\n    enc.encode(list[i], buf, offset)\n    offset += enc.encode.bytes\n  }\n  return offset\n}\n\nfunction decodeList (list, enc, buf, offset) {\n  for (let i = 0; i < list.length; i++) {\n    list[i] = enc.decode(buf, offset)\n    offset += enc.decode.bytes\n  }\n  return offset\n}\n", "module.exports = assert\n\nclass AssertionError extends Error {}\nAssertionError.prototype.name = 'AssertionError'\n\n/**\n * Minimal assert function\n * @param  {any} t Value to check if falsy\n * @param  {string=} m Optional assertion error message\n * @throws {AssertionError}\n */\nfunction assert (t, m) {\n  if (!t) {\n    var err = new AssertionError(m)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, assert)\n    throw err\n  }\n}\n", "var assert = require('nanoassert')\n\nvar randombytes = (function () {\n  var QUOTA = 65536 // limit for QuotaExceededException\n  var crypto = globalThis.crypto || globalThis.msCrypto\n\n  function browserBytes (out, n) {\n    for (let i = 0; i < n; i += QUOTA) {\n      crypto.getRandomValues(new Uint8Array(out.buffer, i + out.byteOffset, Math.min(n - i, QUOTA)))\n    }\n  }\n\n  function nodeBytes (out, n) {\n    new Uint8Array(out.buffer, out.byteOffset, n).set(crypto.randomBytes(n))\n  }\n\n  function noImpl () {\n    throw new Error('No secure random number generator available')\n  }\n\n  if (crypto && crypto.getRandomValues) return browserBytes\n\n  if (require != null) {\n    // Node.js. Bust Browserify\n    crypto = require('cry' + 'pto')\n    if (crypto && crypto.randomBytes) return nodeBytes\n  }\n\n  return noImpl\n})()\n\n// Make non enumerable as this is an internal function\nObject.defineProperty(module.exports, 'randombytes', {\n  value: randombytes\n})\n\nmodule.exports.randombytes_buf = function (out) {\n  assert(out, 'out must be given')\n  randombytes(out, out.byteLength)\n}\n", "/* eslint-disable camelcase */\n\nfunction sodium_malloc (n) {\n  return new Uint8Array(n)\n}\n\nfunction sodium_free (n) {\n  sodium_memzero(n)\n  loadSink().port1.postMessage(n.buffer, [n.buffer])\n}\n\nfunction sodium_memzero (arr) {\n  arr.fill(0)\n}\n\nvar sink\n\nfunction loadSink () {\n  if (sink) return sink\n  var MessageChannel = globalThis.MessageChannel\n  if (MessageChannel == null) ({ MessageChannel } = require('worker' + '_threads'))\n  sink = new MessageChannel()\n  return sink\n}\n\nmodule.exports = {\n  sodium_malloc,\n  sodium_free,\n  sodium_memzero\n}\n", "/* eslint-disable camelcase */\nmodule.exports = {\n  crypto_verify_16,\n  crypto_verify_32,\n  crypto_verify_64\n}\n\nfunction vn (x, xi, y, yi, n) {\n  var d = 0\n  for (let i = 0; i < n; i++) d |= x[xi + i] ^ y[yi + i]\n  return (1 & ((d - 1) >>> 8)) - 1\n}\n\n// Make non enumerable as this is an internal function\nObject.defineProperty(module.exports, 'vn', {\n  value: vn\n})\n\nfunction crypto_verify_16 (x, xi, y, yi) {\n  return vn(x, xi, y, yi, 16) === 0\n}\n\nfunction crypto_verify_32 (x, xi, y, yi) {\n  return vn(x, xi, y, yi, 32) === 0\n}\n\nfunction crypto_verify_64 (x, xi, y, yi) {\n  return vn(x, xi, y, yi, 64) === 0\n}\n", "/* eslint-disable camelcase */\nconst assert = require('nanoassert')\nconst { vn } = require('./crypto_verify')\n\nfunction sodium_increment (n) {\n  const nlen = n.byteLength\n  var c = 1\n  for (var i = 0; i < nlen; i++) {\n    c += n[i]\n    n[i] = c\n    c >>= 8\n  }\n}\n\nfunction sodium_memcmp (a, b) {\n  assert(a.byteLength === b.byteLength, 'buffers must be the same size')\n\n  return vn(a, 0, b, 0, a.byteLength) === 0\n}\n\nfunction sodium_is_zero (arr) {\n  var d = 0\n  for (let i = 0; i < arr.length; i++) d |= arr[i]\n  return d === 0\n}\n\nmodule.exports = {\n  sodium_increment,\n  sodium_memcmp,\n  sodium_is_zero\n}\n", "const assert = require('nanoassert')\nconst b4a = require('b4a')\n\nmodule.exports = Sha512\n\nconst BLOCKSIZE = 128\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nfunction Sha512 () {\n  if (!(this instanceof Sha512)) return new Sha512()\n\n  this.hh = new Int32Array(8)\n  this.hl = new Int32Array(8)\n  this.buffer = new Uint8Array(128)\n  this.finalised = false\n  this.bytesRead = 0\n  this.pos = 0\n\n  this.hh[0] = 0x6a09e667\n  this.hh[1] = 0xbb67ae85\n  this.hh[2] = 0x3c6ef372\n  this.hh[3] = 0xa54ff53a\n  this.hh[4] = 0x510e527f\n  this.hh[5] = 0x9b05688c\n  this.hh[6] = 0x1f83d9ab\n  this.hh[7] = 0x5be0cd19\n\n  this.hl[0] = 0xf3bcc908\n  this.hl[1] = 0x84caa73b\n  this.hl[2] = 0xfe94f82b\n  this.hl[3] = 0x5f1d36f1\n  this.hl[4] = 0xade682d1\n  this.hl[5] = 0x2b3e6c1f\n  this.hl[6] = 0xfb41bd6b\n  this.hl[7] = 0x137e2179\n\n  return this\n}\n\nSha512.prototype.update = function (input, enc) {\n  assert(this.finalised === false, 'Hash instance finalised')\n\n  var [inputBuf, len] = formatInput(input, enc)\n  this.bytesRead += len\n\n  const full = (len + this.pos) & -128\n\n  this.buffer.set(inputBuf.subarray(0, BLOCKSIZE - this.pos), this.pos)\n  const pos = this.pos\n  len -= BLOCKSIZE - this.pos\n\n  if (len >= 0) {\n    compress(this.hh, this.hl, this.buffer, 128)\n    this.pos = 0\n  }\n\n  if (len > 127) {\n    compress(this.hh, this.hl, inputBuf.subarray(BLOCKSIZE - pos, full - pos), full - BLOCKSIZE)\n    len %= 128\n  }\n\n  this.buffer.set(inputBuf.subarray(inputBuf.byteLength - len))\n  this.pos = this.bytesRead & 0x7f\n  this.buffer.fill(0, this.pos)\n\n  return this\n}\n\nSha512.prototype.digest = function (enc, offset = 0) {\n  assert(this.finalised === false, 'Hash instance finalised')\n  this.finalised = true\n\n  this.buffer.fill(0, this.pos)\n  this.buffer[this.pos] = 128\n\n  if (this.pos > 111) {\n    compress(this.hh, this.hl, this.buffer, 128)\n\n    this.buffer.fill(0)\n    this.pos = 0\n  }\n\n  ts64(this.buffer, 120, (this.bytesRead / 0x20000000) | 0, this.bytesRead << 3)\n  compress(this.hh, this.hl, this.buffer, 128)\n\n  if (enc instanceof Uint8Array && enc.byteLength > 63) {\n    for (let i = 0; i < 8; i++) ts64(enc, 8 * i + offset, this.hh[i], this.hl[i])\n    return enc\n  }\n\n  const resultBuf = new Uint8Array(64)\n  for (let i = 0; i < 8; i++) ts64(resultBuf, 8 * i, this.hh[i], this.hl[i])\n\n  if (typeof enc === 'string') {\n    return b4a.toString(resultBuf, enc)\n  }\n\n  return resultBuf\n}\n\nfunction ts64 (x, i, h, l) {\n  x[i] = (h >> 24) & 0xff\n  x[i + 1] = (h >> 16) & 0xff\n  x[i + 2] = (h >> 8) & 0xff\n  x[i + 3] = h & 0xff\n  x[i + 4] = (l >> 24) & 0xff\n  x[i + 5] = (l >> 16) & 0xff\n  x[i + 6] = (l >> 8) & 0xff\n  x[i + 7] = l & 0xff\n}\n\nfunction formatInput (input, enc) {\n  var result = b4a.from(input, enc)\n\n  return [result, result.byteLength]\n}\n\nfunction compress(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n}\n\nfunction HMAC (key) {\n  if (!(this instanceof HMAC)) return new HMAC(key)\n\n  this.pad = b4a.alloc(128)\n  this.inner = Sha512()\n  this.outer = Sha512()\n\n  const keyhash = b4a.alloc(64)\n  if (key.byteLength > 128) {\n    Sha512().update(key).digest(keyhash)\n    key = keyhash\n  }\n\n  this.pad.fill(0x36)\n  for (let i = 0; i < key.byteLength; i++) {\n    this.pad[i] ^= key[i]\n  }\n  this.inner.update(this.pad)\n\n  this.pad.fill(0x5c)\n  for (let i = 0; i < key.byteLength; i++) {\n    this.pad[i] ^= key[i]\n  }\n  this.outer.update(this.pad)\n\n  this.pad.fill(0)\n  keyhash.fill(0)\n}\n\nHMAC.prototype.update = function (input, enc) {\n  this.inner.update(input, enc)\n  return this\n}\n\nHMAC.prototype.digest = function (enc, offset = 0) {\n  this.outer.update(this.inner.digest())\n  return this.outer.digest(enc, offset)\n}\n\nSha512.HMAC = HMAC\n", "var __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __toBinary = /* @__PURE__ */ (() => {\n  var table = new Uint8Array(128);\n  for (var i = 0; i < 64; i++)\n    table[i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i * 4 - 205] = i;\n  return (base64) => {\n    var n = base64.length, bytes2 = new Uint8Array((n - (base64[n - 1] == \"=\") - (base64[n - 2] == \"=\")) * 3 / 4 | 0);\n    for (var i2 = 0, j = 0; i2 < n; ) {\n      var c0 = table[base64.charCodeAt(i2++)], c1 = table[base64.charCodeAt(i2++)];\n      var c2 = table[base64.charCodeAt(i2++)], c3 = table[base64.charCodeAt(i2++)];\n      bytes2[j++] = c0 << 2 | c1 >> 4;\n      bytes2[j++] = c1 << 4 | c2 >> 2;\n      bytes2[j++] = c2 << 6 | c3;\n    }\n    return bytes2;\n  };\n})();\n\n// wasm-binary:./sha512.wat\nvar require_sha512 = __commonJS({\n  \"wasm-binary:./sha512.wat\"(exports2, module2) {\n    module2.exports = __toBinary(\"AGFzbQEAAAABNAVgAX4BfmAIfn5+fn5+fn4AYAR+fn5+AX5gEX9+fn5+fn5+fn5+fn5+fn5+AGAEf39/fwADBgUAAQIDBAUDAQABBikIfgFCAAt+AUIAC34BQgALfgFCAAt+AUIAC34BQgALfgFCAAt+AUIACwcTAgZtZW1vcnkCAAZzaGE1MTIABAqZHgVCACAAQoCA/P+PgECDQhCJIABC//+DgPD/P4NCEIqEIQAgAEL/gfyH8J/A/wCDQgiJIABCgP6D+I/gv4B/g0IIioQLvAMBBn4jBCMFgyMEQn+FIwaDhSEKIwAjAYMjACMCg4UjASMCg4UhCyMAQhyKIwBCIoqFIwBCJ4qFIQwjBEIOiiMEQhKKhSMEQimKhSENIwcgCnwgDXwgAHwgBHwhCCAMIAt8IQkjAyAIfCQHIAggCXwkAyMHIwSDIwdCf4UjBYOFIQojAyMAgyMDIwGDhSMAIwGDhSELIwNCHIojA0IiioUjA0InioUhDCMHQg6KIwdCEoqFIwdCKYqFIQ0jBiAKfCANfCABfCAFfCEIIAwgC3whCSMCIAh8JAYgCCAJfCQCIwYjB4MjBkJ/hSMEg4UhCiMCIwODIwIjAIOFIwMjAIOFIQsjAkIciiMCQiKKhSMCQieKhSEMIwZCDoojBkISioUjBkIpioUhDSMFIAp8IA18IAJ8IAZ8IQggDCALfCEJIwEgCHwkBSAIIAl8JAEjBSMGgyMFQn+FIweDhSEKIwEjAoMjASMDg4UjAyMCg4UhCyMBQhyKIwFCIoqFIwFCJ4qFIQwjBUIOiiMFQhKKhSMFQimKhSENIwQgCnwgDXwgA3wgB3whCCAMIAt8IQkjACAIfCQEIAggCXwkAAsrACAAQhOKIABCPYqFIABCBoiFIAF8IAJCAYogAkIIioUgAkIHiIUgA3x8C6QRACAAKQPQAUIAUQRAIABCiJLznf/M+YTqADcDACAAQrvOqqbY0Ouzu383AwggAEKr8NP0r+68tzw3AxAgAELx7fT4paf9p6V/NwMYIABC0YWa7/rPlIfRADcDICAAQp/Y+dnCkdqCm383AyggAELr+obav7X2wR83AzAgAEL5wvibkaOz8NsANwM4IABCATcD0AELIAApAwAkACAAKQMIJAEgACkDECQCIAApAxgkAyAAKQMgJAQgACkDKCQFIAApAzAkBiAAKQM4JAcgARAAIQEgAhAAIQIgAxAAIQMgBBAAIQQgBRAAIQUgBhAAIQYgBxAAIQcgCBAAIQggCRAAIQkgChAAIQogCxAAIQsgDBAAIQwgDRAAIQ0gDhAAIQ4gDxAAIQ8gEBAAIRAgASACIAMgBEKi3KK5jfOLxcIAQs3LvZ+SktGb8QBCr/a04v75vuC1f0K8t6eM2PT22mkQASAFIAYgByAIQrjqopq/y7CrOUKZoJewm77E+NkAQpuf5fjK1OCfkn9CmIK2093al46rfxABIAkgCiALIAxCwoSMmIrT6oNYQr7fwauU4NbBEkKM5ZL35LfhmCRC4un+r724n4bVABABIA0gDiAPIBBC75Luk8+ul9/yAEKxrdrY47+s74B/QrWknK7y1IHum39ClM2k+8yu/M1BEAEgDyAKIAIgARACIQEgECALIAMgAhACIQIgASAMIAQgAxACIQMgAiANIAUgBBACIQQgAyAOIAYgBRACIQUgBCAPIAcgBhACIQYgBSAQIAggBxACIQcgBiABIAkgCBACIQggByACIAogCRACIQkgCCADIAsgChACIQogCSAEIAwgCxACIQsgCiAFIA0gDBACIQwgCyAGIA4gDRACIQ0gDCAHIA8gDhACIQ4gDSAIIBAgDxACIQ8gDiAJIAEgEBACIRAgASACIAMgBELSlcX3mbjazWRC48u8wuPwkd9vQrWrs9zouOfgD0LluLK9x7mohiQQASAFIAYgByAIQvWErMn1jcv0LUKDyZv1ppWhusoAQtT3h+rLu6rY3ABCtafFmKib4vz2ABABIAkgCiALIAxCq7+b866qlJ+Yf0KQ5NDt0s3xmKh/Qr/C7MeJ+cmBsH9C5J289/v436y/fxABIA0gDiAPIBBCwp+i7bP+gvBGQqXOqpj5qOTTVULvhI6AnuqY5QZC8Ny50PCsypQUEAEgDyAKIAIgARACIQEgECALIAMgAhACIQIgASAMIAQgAxACIQMgAiANIAUgBBACIQQgAyAOIAYgBRACIQUgBCAPIAcgBhACIQYgBSAQIAggBxACIQcgBiABIAkgCBACIQggByACIAogCRACIQkgCCADIAsgChACIQogCSAEIAwgCxACIQsgCiAFIA0gDBACIQwgCyAGIA4gDRACIQ0gDCAHIA8gDhACIQ4gDSAIIBAgDxACIQ8gDiAJIAEgEBACIRAgASACIAMgBEL838i21NDC2ydCppKb4YWnyI0uQu3VkNbFv5uWzQBC3+fW7Lmig5zTABABIAUgBiAHIAhC3se93cjqnIXlAEKo5d7js9eCtfYAQubdtr/kpbLhgX9Cu+qIpNGQi7mSfxABIAkgCiALIAxC5IbE55SU+t+if0KB4Ijiu8mZjah/QpGv4oeN7uKlQkKw/NKysLSUtkcQASANIA4gDyAQQpikvbedg7rJUUKQ0parxcTBzFZCqsDEu9WwjYd0Qrij75WDjqi1EBABIA8gCiACIAEQAiEBIBAgCyADIAIQAiECIAEgDCAEIAMQAiEDIAIgDSAFIAQQAiEEIAMgDiAGIAUQAiEFIAQgDyAHIAYQAiEGIAUgECAIIAcQAiEHIAYgASAJIAgQAiEIIAcgAiAKIAkQAiEJIAggAyALIAoQAiEKIAkgBCAMIAsQAiELIAogBSANIAwQAiEMIAsgBiAOIA0QAiENIAwgByAPIA4QAiEOIA0gCCAQIA8QAiEPIA4gCSABIBAQAiEQIAEgAiADIARCyKHLxuuisNIZQtPWhoqFgdubHkKZ17v8zemdpCdCqJHtjN6Wr9g0EAEgBSAGIAcgCELjtKWuvJaDjjlCy5WGmq7JquzOAELzxo+798myztsAQqPxyrW9/puX6AAQASAJIAogCyAMQvzlvu/l3eDH9ABC4N7cmPTt2NL4AELy1sKPyoKe5IR/QuzzkNOBwcDjjH8QASANIA4gDyAQQqi8jJui/7/fkH9C6fuK9L2dm6ikf0KV8pmW+/7o/L5/QqumyZuunt64RhABIA8gCiACIAEQAiEBIBAgCyADIAIQAiECIAEgDCAEIAMQAiEDIAIgDSAFIAQQAiEEIAMgDiAGIAUQAiEFIAQgDyAHIAYQAiEGIAUgECAIIAcQAiEHIAYgASAJIAgQAiEIIAcgAiAKIAkQAiEJIAggAyALIAoQAiEKIAkgBCAMIAsQAiELIAogBSANIAwQAiEMIAsgBiAOIA0QAiENIAwgByAPIA4QAiEOIA0gCCAQIA8QAiEPIA4gCSABIBAQAiEQIAEgAiADIARCnMOZ0e7Zz5NKQoeEg47ymK7DUUKe1oPv7Lqf7WpC+KK78/7v0751EAEgBSAGIAcgCEK6392Qp/WZ+AZCprGiltq437EKQq6b5PfLgOafEUKbjvGY0ebCuBsQASAJIAogCyAMQoT7kZjS/t3tKEKTyZyGtO+q5TJCvP2mrqHBr888QsyawODJ+NmOwwAQASANIA4gDyAQQraF+dnsl/XizABCqvyV48+zyr/ZAELs9dvWs/Xb5d8AQpewndLEsYai7AAQASAAIAApAwAjAHw3AwAgACAAKQMIIwF8NwMIIAAgACkDECMCfDcDECAAIAApAxgjA3w3AxggACAAKQMgIwR8NwMgIAAgACkDKCMFfDcDKCAAIAApAzAjBnw3AzAgACAAKQM4Iwd8NwM4C8MIARV+IAApA0AhBCAAKQNIIQUgBEL/AIMgAq18IQggBCEGIAQgAq18IQQgACAENwNAIAQgBlQEQCAFQgF8IQUgACAFNwNICwJAIAApA1AhCSAAKQNYIQogACkDYCELIAApA2ghDCAAKQNwIQ0gACkDeCEOIAApA4ABIQ8gACkDiAEhECAAKQOQASERIAApA5gBIRIgACkDoAEhEyAAKQOoASEUIAApA7ABIRUgACkDuAEhFiAAKQPAASEXIAApA8gBIRggCEKAAX0iCEIAUw0AIAAgCSAKIAsgDCANIA4gDyAQIBEgEiATIBQgFSAWIBcgGBADA0AgASkDACEJIAEpAwghCiABKQMQIQsgASkDGCEMIAEpAyAhDSABKQMoIQ4gASkDMCEPIAEpAzghECABKQNAIREgASkDSCESIAEpA1AhEyABKQNYIRQgASkDYCEVIAEpA2ghFiABKQNwIRcgASkDeCEYIAFBgAFqIQEgCEKAAX0iCEIAUwRAIAAgCTcDUCAAIAo3A1ggACALNwNgIAAgDDcDaCAAIA03A3AgACAONwN4IAAgDzcDgAEgACAQNwOIASAAIBE3A5ABIAAgEjcDmAEgACATNwOgASAAIBQ3A6gBIAAgFTcDsAEgACAWNwO4ASAAIBc3A8ABIAAgGDcDyAEMAgsgACAJIAogCyAMIA0gDiAPIBAgESASIBMgFCAVIBYgFyAYEAMMAAsLIANBAUYEQCAEQv8AgyEIQoABIAhCB4NCA4aGIQcCQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAgCKdBA3YODwMEBQYHCAkKCwwNDg8QAQILCyAHIBeEIRdCACEHCyAHIBiEIRhCACEHIAAgCSAKIAsgDCANIA4gDyAQIBEgEiATIBQgFSAWIBcgGBADIAAgBDcDQEIAIQlCACEKQgAhC0IAIQxCACENQgAhDkIAIQ9CACEQQgAhEUIAIRJCACETQgAhFEIAIRVCACEWQgAhF0IAIRgLIAcgCYQhCUIAIQcLIAcgCoQhCkIAIQcLIAcgC4QhC0IAIQcLIAcgDIQhDEIAIQcLIAcgDYQhDUIAIQcLIAcgDoQhDkIAIQcLIAcgD4QhD0IAIQcLIAcgEIQhEEIAIQcLIAcgEYQhEUIAIQcLIAcgEoQhEkIAIQcLIAcgE4QhE0IAIQcLIAcgFIQhFEIAIQcLIAcgFYQhFUIAIQcLIAcgFoQhFkIAIQcLIARCPYggBUIDiHwQACEXIARCCH4QACEYIAAgCSAKIAsgDCANIA4gDyAQIBEgEiATIBQgFSAWIBcgGBADIAAgACkDABAANwMAIAAgACkDCBAANwMIIAAgACkDEBAANwMQIAAgACkDGBAANwMYIAAgACkDIBAANwMgIAAgACkDKBAANwMoIAAgACkDMBAANwMwIAAgACkDOBAANwM4Cws=\");\n  }\n});\n\n// wasm-module:./sha512.wat\nvar bytes = require_sha512();\nvar compiled = new WebAssembly.Module(bytes);\nmodule.exports = (imports) => {\n  const instance = new WebAssembly.Instance(compiled, imports);\n  return instance.exports;\n};\n", "const assert = require('nanoassert')\nconst b4a = require('b4a')\n\nconst wasm = typeof WebAssembly !== 'undefined' && require('./sha512.js')({\n  imports: {\n    debug: {\n      log (...args) {\n        console.log(...args.map(int => (int >>> 0).toString(16).padStart(8, '0')))\n      },\n      log_tee (arg) {\n        console.log((arg >>> 0).toString(16).padStart(8, '0'))\n        return arg\n      }\n    }\n  }\n})\n\nlet head = 0\n// assetrt head % 8 === 0 to guarantee alignment\nconst freeList = []\n\nmodule.exports = Sha512\nconst SHA512_BYTES = module.exports.SHA512_BYTES = 64\nconst INPUT_OFFSET = 80\nconst STATEBYTES = 216\nconst BLOCKSIZE = 128\n\nfunction Sha512 () {\n  if (!(this instanceof Sha512)) return new Sha512()\n  if (!(wasm)) throw new Error('WASM not loaded. Wait for Sha512.ready(cb)')\n\n  if (!freeList.length) {\n    freeList.push(head)\n    head += STATEBYTES\n  }\n\n  this.finalized = false\n  this.digestLength = SHA512_BYTES\n  this.pointer = freeList.pop()\n  this.pos = 0\n  this.wasm = wasm\n\n  this._memory = new Uint8Array(wasm.memory.buffer)\n  this._memory.fill(0, this.pointer, this.pointer + STATEBYTES)\n\n  if (this.pointer + this.digestLength > this._memory.length) this._realloc(this.pointer + STATEBYTES)\n}\n\nSha512.prototype._realloc = function (size) {\n  wasm.memory.grow(Math.max(0, Math.ceil(Math.abs(size - this._memory.length) / 65536)))\n  this._memory = new Uint8Array(wasm.memory.buffer)\n}\n\nSha512.prototype.update = function (input, enc) {\n  assert(this.finalized === false, 'Hash instance finalized')\n\n  if (head % 8 !== 0) head += 8 - head % 8\n  assert(head % 8 === 0, 'input should be aligned for int64')\n\n  const [inputBuf, length] = formatInput(input, enc)\n\n  assert(inputBuf instanceof Uint8Array, 'input must be Uint8Array or Buffer')\n\n  if (head + input.length > this._memory.length) this._realloc(head + input.length)\n\n  this._memory.fill(0, head, head + roundUp(length, BLOCKSIZE) - BLOCKSIZE)\n  this._memory.set(inputBuf.subarray(0, BLOCKSIZE - this.pos), this.pointer + INPUT_OFFSET + this.pos)\n  this._memory.set(inputBuf.subarray(BLOCKSIZE - this.pos), head)\n\n  this.pos = (this.pos + length) & 0x7f\n  wasm.sha512(this.pointer, head, length, 0)\n\n  return this\n}\n\nSha512.prototype.digest = function (enc, offset = 0) {\n  assert(this.finalized === false, 'Hash instance finalized')\n\n  this.finalized = true\n  freeList.push(this.pointer)\n\n  const paddingStart = this.pointer + INPUT_OFFSET + this.pos\n  this._memory.fill(0, paddingStart, this.pointer + INPUT_OFFSET + BLOCKSIZE)\n  wasm.sha512(this.pointer, head, 0, 1)\n\n  const resultBuf = this._memory.subarray(this.pointer, this.pointer + this.digestLength)\n\n  if (!enc) {\n    return resultBuf\n  }\n\n  if (typeof enc === 'string') {\n    return b4a.toString(resultBuf, enc)\n  }\n\n  assert(enc instanceof Uint8Array, 'output must be Uint8Array or Buffer')\n  assert(enc.byteLength >= this.digestLength + offset,\n    \"output must have at least 'SHA512_BYTES' bytes remaining\")\n\n  for (let i = 0; i < this.digestLength; i++) {\n    enc[i + offset] = resultBuf[i]\n  }\n\n  return enc\n}\n\nSha512.WASM = wasm\nSha512.WASM_SUPPORTED = typeof WebAssembly !== 'undefined'\n\nSha512.ready = function (cb) {\n  if (!cb) cb = noop\n  if (!wasm) return cb(new Error('WebAssembly not supported'))\n  cb()\n  return Promise.resolve()\n}\n\nSha512.prototype.ready = Sha512.ready\n\nfunction HMAC (key) {\n  if (!(this instanceof HMAC)) return new HMAC(key)\n\n  this.pad = b4a.alloc(128)\n  this.inner = Sha512()\n  this.outer = Sha512()\n\n  const keyhash = b4a.alloc(64)\n  if (key.byteLength > 128) {\n    Sha512().update(key).digest(keyhash)\n    key = keyhash\n  }\n\n  this.pad.fill(0x36)\n  for (let i = 0; i < key.byteLength; i++) {\n    this.pad[i] ^= key[i]\n  }\n  this.inner.update(this.pad)\n\n  this.pad.fill(0x5c)\n  for (let i = 0; i < key.byteLength; i++) {\n    this.pad[i] ^= key[i]\n  }\n  this.outer.update(this.pad)\n\n  this.pad.fill(0)\n  keyhash.fill(0)\n}\n\nHMAC.prototype.update = function (input, enc) {\n  this.inner.update(input, enc)\n  return this\n}\n\nHMAC.prototype.digest = function (enc, offset = 0) {\n  this.outer.update(this.inner.digest())\n  return this.outer.digest(enc, offset)\n}\n\nSha512.HMAC = HMAC\n\nfunction noop () {}\n\nfunction formatInput (input, enc) {\n  var result = b4a.from(input, enc)\n\n  return [result, result.byteLength]\n}\n\n// only works for base that is power of 2\nfunction roundUp (n, base) {\n  return (n + base - 1) & -base\n}\n", "const js = require('./sha512.js')\nconst wasm = require('sha512-wasm')\n\nvar Proto = js\n\nmodule.exports = function () {\n  return new Proto()\n}\n\nmodule.exports.ready = function (cb) {\n  wasm.ready(function () { // ignore errors\n    cb()\n  })\n}\n\nmodule.exports.WASM_SUPPORTED = wasm.SUPPORTED\nmodule.exports.WASM_LOADED = false\n\nvar SHA512_BYTES = module.exports.SHA512_BYTES = 64\n\nwasm.ready(function (err) {\n  if (!err) {\n    module.exports.WASM_LOADED = true\n    module.exports = Proto = wasm\n  }\n})\n", "/* eslint-disable camelcase */\nconst { crypto_verify_32 } = require('./crypto_verify')\nconst Sha512 = require('sha512-universal')\nconst assert = require('nanoassert')\n\nconst crypto_auth_BYTES = 32\nconst crypto_auth_KEYBYTES = 32\n\nfunction crypto_auth (out, input, k) {\n  assert(out.byteLength === crypto_auth_BYTES, \"out should be 'crypto_auth_BYTES' in length\")\n  assert(k.byteLength === crypto_auth_KEYBYTES, \"key should be 'crypto_auth_KEYBYTES' in length\")\n\n  const out0 = new Uint8Array(64)\n  const hmac = Sha512.HMAC(k)\n  hmac.update(input)\n  hmac.digest(out0)\n\n  out.set(out0.subarray(0, 32))\n}\n\nfunction crypto_auth_verify (h, input, k) {\n  assert(h.byteLength === crypto_auth_BYTES, \"h should be 'crypto_auth_BYTES' in length\")\n  assert(k.byteLength === crypto_auth_KEYBYTES, \"key should be 'crypto_auth_KEYBYTES' in length\")\n\n  const correct = Sha512.HMAC(k).update(input).digest()\n\n  return crypto_verify_32(h, 0, correct, 0)\n}\n\nmodule.exports = {\n  crypto_auth_BYTES,\n  crypto_auth_KEYBYTES,\n  crypto_auth,\n  crypto_auth_verify\n}\n", "/* eslint-disable camelcase */\nconst sha512 = require('sha512-universal')\nconst assert = require('nanoassert')\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nconst crypto_hash_sha512_BYTES = 64\nconst crypto_hash_BYTES = crypto_hash_sha512_BYTES\n\nfunction crypto_hash_sha512 (out, m, n) {\n  assert(out.byteLength === crypto_hash_sha512_BYTES, \"out must be 'crypto_hash_sha512_BYTES' bytes long\")\n\n  sha512().update(m.subarray(0, n)).digest(out)\n  return 0\n}\n\nfunction crypto_hash (out, m, n) {\n  return crypto_hash_sha512(out, m, n)\n}\n\nmodule.exports = {\n  crypto_hash,\n  crypto_hash_sha512,\n  crypto_hash_sha512_BYTES,\n  crypto_hash_BYTES\n}\n", "if (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n}\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n    t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n    t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nmodule.exports = {\n  gf,\n  A,\n  Z,\n  M,\n  S,\n  sel25519,\n  pack25519,\n  unpack25519,\n  inv25519,\n  gf0,\n  gf1,\n  _9,\n  _121665,\n  D,\n  D2,\n  X,\n  Y,\n  I\n}\n", "/* eslint-disable camelcase, one-var */\nconst { _9, _121665, gf, inv25519, pack25519, unpack25519, sel25519, A, M, Z, S } = require('./internal/ed25519')\n\nconst crypto_scalarmult_BYTES = 32\nconst crypto_scalarmult_SCALARBYTES = 32\n\nmodule.exports = {\n  crypto_scalarmult,\n  crypto_scalarmult_base,\n  crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES\n}\n\nfunction crypto_scalarmult (q, n, p) {\n  check(q, crypto_scalarmult_BYTES)\n  check(n, crypto_scalarmult_SCALARBYTES)\n  check(p, crypto_scalarmult_BYTES)\n  var z = new Uint8Array(32)\n  var x = new Float64Array(80), r, i\n  var a = gf(), b = gf(), c = gf(),\n    d = gf(), e = gf(), f = gf()\n  for (i = 0; i < 31; i++) z[i] = n[i]\n  z[31] = (n[31] & 127) | 64\n  z[0] &= 248\n  unpack25519(x, p)\n  for (i = 0; i < 16; i++) {\n    b[i] = x[i]\n    d[i] = a[i] = c[i] = 0\n  }\n  a[0] = d[0] = 1\n  for (i = 254; i >= 0; --i) {\n    r = (z[i >>> 3] >>> (i & 7)) & 1\n    sel25519(a, b, r)\n    sel25519(c, d, r)\n    A(e, a, c)\n    Z(a, a, c)\n    A(c, b, d)\n    Z(b, b, d)\n    S(d, e)\n    S(f, a)\n    M(a, c, a)\n    M(c, b, e)\n    A(e, a, c)\n    Z(a, a, c)\n    S(b, a)\n    Z(c, d, f)\n    M(a, c, _121665)\n    A(a, a, d)\n    M(c, c, a)\n    M(a, d, f)\n    M(d, b, x)\n    S(b, e)\n    sel25519(a, b, r)\n    sel25519(c, d, r)\n  }\n  for (i = 0; i < 16; i++) {\n    x[i + 16] = a[i]\n    x[i + 32] = c[i]\n    x[i + 48] = b[i]\n    x[i + 64] = d[i]\n  }\n  var x32 = x.subarray(32)\n  var x16 = x.subarray(16)\n  inv25519(x32, x32)\n  M(x16, x16, x32)\n  pack25519(q, x16)\n  return 0\n}\n\nfunction crypto_scalarmult_base (q, n) {\n  return crypto_scalarmult(q, n, _9)\n}\n\nfunction check (buf, len) {\n  if (!buf || (len && buf.length < len)) throw new Error('Argument must be a buffer' + (len ? ' of length ' + len : ''))\n}\n", "var __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __toBinary = /* @__PURE__ */ (() => {\n  var table = new Uint8Array(128);\n  for (var i = 0; i < 64; i++)\n    table[i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i * 4 - 205] = i;\n  return (base64) => {\n    var n = base64.length, bytes2 = new Uint8Array((n - (base64[n - 1] == \"=\") - (base64[n - 2] == \"=\")) * 3 / 4 | 0);\n    for (var i2 = 0, j = 0; i2 < n; ) {\n      var c0 = table[base64.charCodeAt(i2++)], c1 = table[base64.charCodeAt(i2++)];\n      var c2 = table[base64.charCodeAt(i2++)], c3 = table[base64.charCodeAt(i2++)];\n      bytes2[j++] = c0 << 2 | c1 >> 4;\n      bytes2[j++] = c1 << 4 | c2 >> 2;\n      bytes2[j++] = c2 << 6 | c3;\n    }\n    return bytes2;\n  };\n})();\n\n// wasm-binary:./blake2b.wat\nvar require_blake2b = __commonJS({\n  \"wasm-binary:./blake2b.wat\"(exports2, module2) {\n    module2.exports = __toBinary(\"\");\n  }\n});\n\n// wasm-module:./blake2b.wat\nvar bytes = require_blake2b();\nvar compiled = WebAssembly.compile(bytes);\nmodule.exports = async (imports) => {\n  const instance = await WebAssembly.instantiate(await compiled, imports);\n  return instance.exports;\n};\n", "var assert = require('nanoassert')\nvar b4a = require('b4a')\n\nvar wasm = null\nvar wasmPromise = typeof WebAssembly !== \"undefined\" && require('./blake2b')().then(mod => {\n  wasm = mod\n})\n\nvar head = 64\nvar freeList = []\n\nmodule.exports = Blake2b\nvar BYTES_MIN = module.exports.BYTES_MIN = 16\nvar BYTES_MAX = module.exports.BYTES_MAX = 64\nvar BYTES = module.exports.BYTES = 32\nvar KEYBYTES_MIN = module.exports.KEYBYTES_MIN = 16\nvar KEYBYTES_MAX = module.exports.KEYBYTES_MAX = 64\nvar KEYBYTES = module.exports.KEYBYTES = 32\nvar SALTBYTES = module.exports.SALTBYTES = 16\nvar PERSONALBYTES = module.exports.PERSONALBYTES = 16\n\nfunction Blake2b (digestLength, key, salt, personal, noAssert) {\n  if (!(this instanceof Blake2b)) return new Blake2b(digestLength, key, salt, personal, noAssert)\n  if (!wasm) throw new Error('WASM not loaded. Wait for Blake2b.ready(cb)')\n  if (!digestLength) digestLength = 32\n\n  if (noAssert !== true) {\n    assert(digestLength >= BYTES_MIN, 'digestLength must be at least ' + BYTES_MIN + ', was given ' + digestLength)\n    assert(digestLength <= BYTES_MAX, 'digestLength must be at most ' + BYTES_MAX + ', was given ' + digestLength)\n    if (key != null) {\n      assert(key instanceof Uint8Array, 'key must be Uint8Array or Buffer')\n      assert(key.length >= KEYBYTES_MIN, 'key must be at least ' + KEYBYTES_MIN + ', was given ' + key.length)\n      assert(key.length <= KEYBYTES_MAX, 'key must be at least ' + KEYBYTES_MAX + ', was given ' + key.length)\n    }\n    if (salt != null) {\n      assert(salt instanceof Uint8Array, 'salt must be Uint8Array or Buffer')\n      assert(salt.length === SALTBYTES, 'salt must be exactly ' + SALTBYTES + ', was given ' + salt.length)\n    }\n    if (personal != null) {\n      assert(personal instanceof Uint8Array, 'personal must be Uint8Array or Buffer')\n      assert(personal.length === PERSONALBYTES, 'personal must be exactly ' + PERSONALBYTES + ', was given ' + personal.length)\n    }\n  }\n\n  if (!freeList.length) {\n    freeList.push(head)\n    head += 216\n  }\n\n  this.digestLength = digestLength\n  this.finalized = false\n  this.pointer = freeList.pop()\n  this._memory = new Uint8Array(wasm.memory.buffer)\n\n  this._memory.fill(0, 0, 64)\n  this._memory[0] = this.digestLength\n  this._memory[1] = key ? key.length : 0\n  this._memory[2] = 1 // fanout\n  this._memory[3] = 1 // depth\n\n  if (salt) this._memory.set(salt, 32)\n  if (personal) this._memory.set(personal, 48)\n\n  if (this.pointer + 216 > this._memory.length) this._realloc(this.pointer + 216) // we need 216 bytes for the state\n  wasm.blake2b_init(this.pointer, this.digestLength)\n\n  if (key) {\n    this.update(key)\n    this._memory.fill(0, head, head + key.length) // whiteout key\n    this._memory[this.pointer + 200] = 128\n  }\n}\n\nBlake2b.prototype._realloc = function (size) {\n  wasm.memory.grow(Math.max(0, Math.ceil(Math.abs(size - this._memory.length) / 65536)))\n  this._memory = new Uint8Array(wasm.memory.buffer)\n}\n\nBlake2b.prototype.update = function (input) {\n  assert(this.finalized === false, 'Hash instance finalized')\n  assert(input instanceof Uint8Array, 'input must be Uint8Array or Buffer')\n\n  if (head + input.length > this._memory.length) this._realloc(head + input.length)\n  this._memory.set(input, head)\n  wasm.blake2b_update(this.pointer, head, head + input.length)\n  return this\n}\n\nBlake2b.prototype.digest = function (enc) {\n  assert(this.finalized === false, 'Hash instance finalized')\n  this.finalized = true\n\n  freeList.push(this.pointer)\n  wasm.blake2b_final(this.pointer)\n\n  if (!enc || enc === 'binary') {\n    return this._memory.slice(this.pointer + 128, this.pointer + 128 + this.digestLength)\n  }\n\n  if (typeof enc === 'string') {\n    return b4a.toString(this._memory, enc, this.pointer + 128, this.pointer + 128 + this.digestLength)\n  }\n\n  assert(enc instanceof Uint8Array && enc.length >= this.digestLength, 'input must be Uint8Array or Buffer')\n  for (var i = 0; i < this.digestLength; i++) {\n    enc[i] = this._memory[this.pointer + 128 + i]\n  }\n\n  return enc\n}\n\n// libsodium compat\nBlake2b.prototype.final = Blake2b.prototype.digest\n\nBlake2b.WASM = wasm\nBlake2b.SUPPORTED = typeof WebAssembly !== 'undefined'\n\nBlake2b.ready = function (cb) {\n  if (!cb) cb = noop\n  if (!wasmPromise) return cb(new Error('WebAssembly not supported'))\n  return wasmPromise.then(() => cb(), cb)\n}\n\nBlake2b.prototype.ready = Blake2b.ready\n\nBlake2b.prototype.getPartialHash = function () {\n  return this._memory.slice(this.pointer, this.pointer + 216);\n}\n\nBlake2b.prototype.setPartialHash = function (ph) {\n  this._memory.set(ph, this.pointer);\n}\n\nfunction noop () {}\n", "var assert = require('nanoassert')\nvar b2wasm = require('blake2b-wasm')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  for (i = 0; i < 12; i++) {\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n}\n\n// reusable parameter_block\nvar parameter_block = new Uint8Array([\n  0, 0, 0, 0,      //  0: outlen, keylen, fanout, depth\n  0, 0, 0, 0,      //  4: leaf length, sequential mode\n  0, 0, 0, 0,      //  8: node offset\n  0, 0, 0, 0,      // 12: node offset\n  0, 0, 0, 0,      // 16: node depth, inner length, rfu\n  0, 0, 0, 0,      // 20: rfu\n  0, 0, 0, 0,      // 24: rfu\n  0, 0, 0, 0,      // 28: rfu\n  0, 0, 0, 0,      // 32: salt\n  0, 0, 0, 0,      // 36: salt\n  0, 0, 0, 0,      // 40: salt\n  0, 0, 0, 0,      // 44: salt\n  0, 0, 0, 0,      // 48: personal\n  0, 0, 0, 0,      // 52: personal\n  0, 0, 0, 0,      // 56: personal\n  0, 0, 0, 0       // 60: personal\n])\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction Blake2b (outlen, key, salt, personal) {\n  // zero out parameter_block before usage\n  parameter_block.fill(0)\n  // state, 'param block'\n\n  this.b = new Uint8Array(128)\n  this.h = new Uint32Array(16)\n  this.t = 0 // input count\n  this.c = 0 // pointer within buffer\n  this.outlen = outlen // output length in bytes\n\n  parameter_block[0] = outlen\n  if (key) parameter_block[1] = key.length\n  parameter_block[2] = 1 // fanout\n  parameter_block[3] = 1 // depth\n\n  if (salt) parameter_block.set(salt, 32)\n  if (personal) parameter_block.set(personal, 48)\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    this.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameter_block, i * 4)\n  }\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(this, key)\n    // at the end\n    this.c = 128\n  }\n}\n\nBlake2b.prototype.update = function (input) {\n  assert(input instanceof Uint8Array, 'input must be Uint8Array or Buffer')\n  blake2bUpdate(this, input)\n  return this\n}\n\nBlake2b.prototype.digest = function (out) {\n  var buf = (!out || out === 'binary' || out === 'hex') ? new Uint8Array(this.outlen) : out\n  assert(buf instanceof Uint8Array, 'out must be \"binary\", \"hex\", Uint8Array, or Buffer')\n  assert(buf.length >= this.outlen, 'out must have at least outlen bytes of space')\n  blake2bFinal(this, buf)\n  if (out === 'hex') return hexSlice(buf)\n  return buf\n}\n\nBlake2b.prototype.final = Blake2b.prototype.digest\n\nBlake2b.ready = function (cb) {\n  b2wasm.ready(function () {\n    cb() // ignore the error\n  })\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx, out) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\nfunction hexSlice (buf) {\n  var str = ''\n  for (var i = 0; i < buf.length; i++) str += toHex(buf[i])\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nvar Proto = Blake2b\n\nmodule.exports = function createHash (outlen, key, salt, personal, noAssert) {\n  if (noAssert !== true) {\n    assert(outlen >= BYTES_MIN, 'outlen must be at least ' + BYTES_MIN + ', was given ' + outlen)\n    assert(outlen <= BYTES_MAX, 'outlen must be at most ' + BYTES_MAX + ', was given ' + outlen)\n    if (key != null) {\n      assert(key instanceof Uint8Array, 'key must be Uint8Array or Buffer')\n      assert(key.length >= KEYBYTES_MIN, 'key must be at least ' + KEYBYTES_MIN + ', was given ' + key.length)\n      assert(key.length <= KEYBYTES_MAX, 'key must be at most ' + KEYBYTES_MAX + ', was given ' + key.length)\n    }\n    if (salt != null) {\n      assert(salt instanceof Uint8Array, 'salt must be Uint8Array or Buffer')\n      assert(salt.length === SALTBYTES, 'salt must be exactly ' + SALTBYTES + ', was given ' + salt.length)\n    }\n    if (personal != null) {\n      assert(personal instanceof Uint8Array, 'personal must be Uint8Array or Buffer')\n      assert(personal.length === PERSONALBYTES, 'personal must be exactly ' + PERSONALBYTES + ', was given ' + personal.length)\n    }\n  }\n\n  return new Proto(outlen, key, salt, personal)\n}\n\nmodule.exports.ready = function (cb) {\n  b2wasm.ready(function () { // ignore errors\n    cb()\n  })\n}\n\nmodule.exports.WASM_SUPPORTED = b2wasm.SUPPORTED\nmodule.exports.WASM_LOADED = false\n\nvar BYTES_MIN = module.exports.BYTES_MIN = 16\nvar BYTES_MAX = module.exports.BYTES_MAX = 64\nvar BYTES = module.exports.BYTES = 32\nvar KEYBYTES_MIN = module.exports.KEYBYTES_MIN = 16\nvar KEYBYTES_MAX = module.exports.KEYBYTES_MAX = 64\nvar KEYBYTES = module.exports.KEYBYTES = 32\nvar SALTBYTES = module.exports.SALTBYTES = 16\nvar PERSONALBYTES = module.exports.PERSONALBYTES = 16\n\nb2wasm.ready(function (err) {\n  if (!err) {\n    module.exports.WASM_LOADED = true\n    module.exports = b2wasm\n  }\n})\n", "var blake2b = require('blake2b')\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nmodule.exports.crypto_generichash_PRIMITIVE = 'blake2b'\nmodule.exports.crypto_generichash_BYTES_MIN = blake2b.BYTES_MIN\nmodule.exports.crypto_generichash_BYTES_MAX = blake2b.BYTES_MAX\nmodule.exports.crypto_generichash_BYTES = blake2b.BYTES\nmodule.exports.crypto_generichash_KEYBYTES_MIN = blake2b.KEYBYTES_MIN\nmodule.exports.crypto_generichash_KEYBYTES_MAX = blake2b.KEYBYTES_MAX\nmodule.exports.crypto_generichash_KEYBYTES = blake2b.KEYBYTES\nmodule.exports.crypto_generichash_WASM_SUPPORTED = blake2b.WASM_SUPPORTED\nmodule.exports.crypto_generichash_WASM_LOADED = false\n\nmodule.exports.crypto_generichash = function (output, input, key) {\n  blake2b(output.length, key).update(input).final(output)\n}\n\nmodule.exports.crypto_generichash_ready = blake2b.ready\n\nmodule.exports.crypto_generichash_batch = function (output, inputArray, key) {\n  var ctx = blake2b(output.length, key)\n  for (var i = 0; i < inputArray.length; i++) {\n    ctx.update(inputArray[i])\n  }\n  ctx.final(output)\n}\n\nmodule.exports.crypto_generichash_instance = function (key, outlen) {\n  if (outlen == null) outlen = module.exports.crypto_generichash_BYTES\n  return blake2b(outlen, key)\n}\n\nblake2b.ready(function (_) {\n  module.exports.crypto_generichash_WASM_LOADED = blake2b.WASM_LOADED\n})\n", "var __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __toBinary = /* @__PURE__ */ (() => {\n  var table = new Uint8Array(128);\n  for (var i = 0; i < 64; i++)\n    table[i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i * 4 - 205] = i;\n  return (base64) => {\n    var n = base64.length, bytes2 = new Uint8Array((n - (base64[n - 1] == \"=\") - (base64[n - 2] == \"=\")) * 3 / 4 | 0);\n    for (var i2 = 0, j = 0; i2 < n; ) {\n      var c0 = table[base64.charCodeAt(i2++)], c1 = table[base64.charCodeAt(i2++)];\n      var c2 = table[base64.charCodeAt(i2++)], c3 = table[base64.charCodeAt(i2++)];\n      bytes2[j++] = c0 << 2 | c1 >> 4;\n      bytes2[j++] = c1 << 4 | c2 >> 2;\n      bytes2[j++] = c2 << 6 | c3;\n    }\n    return bytes2;\n  };\n})();\n\n// wasm-binary:./xsalsa20.wat\nvar require_xsalsa20 = __commonJS({\n  \"wasm-binary:./xsalsa20.wat\"(exports2, module2) {\n    module2.exports = __toBinary(\"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\");\n  }\n});\n\n// wasm-module:./xsalsa20.wat\nvar bytes = require_xsalsa20();\nvar compiled = new WebAssembly.Module(bytes);\nmodule.exports = (imports) => {\n  const instance = new WebAssembly.Instance(compiled, imports);\n  return instance.exports;\n};\n", "var xsalsa20 = typeof WebAssembly !== \"undefined\" && require('./xsalsa20')()\n\nvar SIGMA = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107])\nvar head = 144\nvar top = head\nvar free = []\n\nmodule.exports = XSalsa20\n\nXSalsa20.NONCEBYTES = 24\nXSalsa20.KEYBYTES = 32\n\nXSalsa20.core_hsalsa20 = core_hsalsa20\nXSalsa20.SIGMA = SIGMA\n\nfunction XSalsa20 (nonce, key) {\n  if (!(this instanceof XSalsa20)) return new XSalsa20(nonce, key)\n  if (!nonce || nonce.length < 24) throw new Error('nonce must be at least 24 bytes')\n  if (!key || key.length < 32) throw new Error('key must be at least 32 bytes')\n  this._xor = xsalsa20 ? new WASM(nonce, key) : new Fallback(nonce, key)\n}\n\nXSalsa20.prototype.update = function (input, output) {\n  if (!input) throw new Error('input must be Uint8Array or Buffer')\n  if (!output) output = new Uint8Array(input.length)\n  if (input.length) this._xor.update(input, output)\n  return output\n}\n\nXSalsa20.prototype.final =\nXSalsa20.prototype.finalize = function () {\n  this._xor.finalize()\n  this._xor = null\n}\n\nfunction WASM (nonce, key) {\n  if (!free.length) {\n    free.push(head)\n    head += 64\n  }\n\n  this._pointer = free.pop()\n  this._nonce = this._pointer + 8\n  this._key = this._nonce + 24\n  this._overflow = 0\n  this._memory = new Uint8Array(xsalsa20.memory.buffer)\n\n  this._memory.fill(0, this._pointer, this._pointer + 8)\n  this._memory.set(nonce, this._nonce)\n  this._memory.set(key, this._key)\n}\n\nWASM.prototype.realloc = function (size) {\n  xsalsa20.memory.grow(Math.ceil(Math.abs(size - this._memory.length) / 65536))\n  this._memory = new Uint8Array(xsalsa20.memory.buffer)\n}\n\nWASM.prototype.update = function (input, output) {\n  var len = this._overflow + input.length\n  var start = head + this._overflow\n\n  top = head + len\n  if (top >= this._memory.length) this.realloc(top)\n\n  this._memory.set(input, start)\n  xsalsa20.xsalsa20_xor(this._pointer, head, head, len, this._nonce, this._key)\n  output.set(this._memory.subarray(start, head + len))\n\n  this._overflow = len & 63\n}\n\nWASM.prototype.finalize = function () {\n  this._memory.fill(0, this._pointer, this._key + 32)\n  if (top > head) {\n    this._memory.fill(0, head, top)\n    top = 0\n  }\n  free.push(this._pointer)\n}\n\nfunction Fallback (nonce, key) {\n  this._s = new Uint8Array(32)\n  this._z = new Uint8Array(16)\n  this._overflow = 0\n  core_hsalsa20(this._s, nonce, key, SIGMA)\n  for (var i = 0; i < 8; i++) this._z[i] = nonce[i + 16]\n}\n\nFallback.prototype.update = function (input, output) {\n  var x = new Uint8Array(64)\n  var u = 0\n  var i = this._overflow\n  var b = input.length + this._overflow\n  var z = this._z\n  var mpos = -this._overflow\n  var cpos = -this._overflow\n\n  while (b >= 64) {\n    core_salsa20(x, z, this._s, SIGMA)\n    for (; i < 64; i++) output[cpos + i] = input[mpos + i] ^ x[i]\n    u = 1\n    for (i = 8; i < 16; i++) {\n      u += (z[i] & 0xff) | 0\n      z[i] = u & 0xff\n      u >>>= 8\n    }\n    b -= 64\n    cpos += 64\n    mpos += 64\n    i = 0\n  }\n  if (b > 0) {\n    core_salsa20(x, z, this._s, SIGMA)\n    for (; i < b; i++) output[cpos + i] = input[mpos + i] ^ x[i]\n  }\n\n  this._overflow = b & 63\n}\n\nFallback.prototype.finalize = function () {\n  this._s.fill(0)\n  this._z.fill(0)\n}\n\n// below methods are ported from tweet nacl\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff) << 8 | (c[ 2] & 0xff) << 16 | (c[ 3] & 0xff) << 24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff) << 8 | (k[ 2] & 0xff) << 16 | (k[ 3] & 0xff) << 24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff) << 8 | (k[ 6] & 0xff) << 16 | (k[ 7] & 0xff) << 24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff) << 8 | (k[10] & 0xff) << 16 | (k[11] & 0xff) << 24,\n      j4  = k[12] & 0xff | (k[13] & 0xff) << 8 | (k[14] & 0xff) << 16 | (k[15] & 0xff) << 24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff) << 8 | (c[ 6] & 0xff) << 16 | (c[ 7] & 0xff) << 24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff) << 8 | (p[ 2] & 0xff) << 16 | (p[ 3] & 0xff) << 24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff) << 8 | (p[ 6] & 0xff) << 16 | (p[ 7] & 0xff) << 24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff) << 8 | (p[10] & 0xff) << 16 | (p[11] & 0xff) << 24,\n      j9  = p[12] & 0xff | (p[13] & 0xff) << 8 | (p[14] & 0xff) << 16 | (p[15] & 0xff) << 24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff) << 8 | (c[10] & 0xff) << 16 | (c[11] & 0xff) << 24,\n      j11 = k[16] & 0xff | (k[17] & 0xff) << 8 | (k[18] & 0xff) << 16 | (k[19] & 0xff) << 24,\n      j12 = k[20] & 0xff | (k[21] & 0xff) << 8 | (k[22] & 0xff) << 16 | (k[23] & 0xff) << 24,\n      j13 = k[24] & 0xff | (k[25] & 0xff) << 8 | (k[26] & 0xff) << 16 | (k[27] & 0xff) << 24,\n      j14 = k[28] & 0xff | (k[29] & 0xff) << 8 | (k[30] & 0xff) << 16 | (k[31] & 0xff) << 24,\n      j15 = c[12] & 0xff | (c[13] & 0xff) << 8 | (c[14] & 0xff) << 16 | (c[15] & 0xff) << 24\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0\n    x4 ^= u << 7 | u >>> 25\n    u = x4 + x0 | 0\n    x8 ^= u << 9 | u >>> 23\n    u = x8 + x4 | 0\n    x12 ^= u << 13 | u >>> 19\n    u = x12 + x8 | 0\n    x0 ^= u << 18 | u >>> 14\n\n    u = x5 + x1 | 0\n    x9 ^= u << 7 | u >>> 25\n    u = x9 + x5 | 0\n    x13 ^= u << 9 | u >>> 23\n    u = x13 + x9 | 0\n    x1 ^= u << 13 | u >>> 19\n    u = x1 + x13 | 0\n    x5 ^= u << 18 | u >>> 14\n\n    u = x10 + x6 | 0\n    x14 ^= u << 7 | u >>> 25\n    u = x14 + x10 | 0\n    x2 ^= u << 9 | u >>> 23\n    u = x2 + x14 | 0\n    x6 ^= u << 13 | u >>> 19\n    u = x6 + x2 | 0\n    x10 ^= u << 18 | u >>> 14\n\n    u = x15 + x11 | 0\n    x3 ^= u << 7 | u >>> 25\n    u = x3 + x15 | 0\n    x7 ^= u << 9 | u >>> 23\n    u = x7 + x3 | 0\n    x11 ^= u << 13 | u >>> 19\n    u = x11 + x7 | 0\n    x15 ^= u << 18 | u >>> 14\n\n    u = x0 + x3 | 0\n    x1 ^= u << 7 | u >>> 25\n    u = x1 + x0 | 0\n    x2 ^= u << 9 | u >>> 23\n    u = x2 + x1 | 0\n    x3 ^= u << 13 | u >>> 19\n    u = x3 + x2 | 0\n    x0 ^= u << 18 | u >>> 14\n\n    u = x5 + x4 | 0\n    x6 ^= u << 7 | u >>> 25\n    u = x6 + x5 | 0\n    x7 ^= u << 9 | u >>> 23\n    u = x7 + x6 | 0\n    x4 ^= u << 13 | u >>> 19\n    u = x4 + x7 | 0\n    x5 ^= u << 18 | u >>> 14\n\n    u = x10 + x9 | 0\n    x11 ^= u << 7 | u >>> 25\n    u = x11 + x10 | 0\n    x8 ^= u << 9 | u >>> 23\n    u = x8 + x11 | 0\n    x9 ^= u << 13 | u >>> 19\n    u = x9 + x8 | 0\n    x10 ^= u << 18 | u >>> 14\n\n    u = x15 + x14 | 0\n    x12 ^= u << 7 | u >>> 25\n    u = x12 + x15 | 0\n    x13 ^= u << 9 | u >>> 23\n    u = x13 + x12 | 0\n    x14 ^= u << 13 | u >>> 19\n    u = x14 + x13 | 0\n    x15 ^= u << 18 | u >>> 14\n  }\n   x0 =  x0 +  j0 | 0\n   x1 =  x1 +  j1 | 0\n   x2 =  x2 +  j2 | 0\n   x3 =  x3 +  j3 | 0\n   x4 =  x4 +  j4 | 0\n   x5 =  x5 +  j5 | 0\n   x6 =  x6 +  j6 | 0\n   x7 =  x7 +  j7 | 0\n   x8 =  x8 +  j8 | 0\n   x9 =  x9 +  j9 | 0\n  x10 = x10 + j10 | 0\n  x11 = x11 + j11 | 0\n  x12 = x12 + j12 | 0\n  x13 = x13 + j13 | 0\n  x14 = x14 + j14 | 0\n  x15 = x15 + j15 | 0\n\n  o[ 0] = x0 >>>  0 & 0xff\n  o[ 1] = x0 >>>  8 & 0xff\n  o[ 2] = x0 >>> 16 & 0xff\n  o[ 3] = x0 >>> 24 & 0xff\n\n  o[ 4] = x1 >>>  0 & 0xff\n  o[ 5] = x1 >>>  8 & 0xff\n  o[ 6] = x1 >>> 16 & 0xff\n  o[ 7] = x1 >>> 24 & 0xff\n\n  o[ 8] = x2 >>>  0 & 0xff\n  o[ 9] = x2 >>>  8 & 0xff\n  o[10] = x2 >>> 16 & 0xff\n  o[11] = x2 >>> 24 & 0xff\n\n  o[12] = x3 >>>  0 & 0xff\n  o[13] = x3 >>>  8 & 0xff\n  o[14] = x3 >>> 16 & 0xff\n  o[15] = x3 >>> 24 & 0xff\n\n  o[16] = x4 >>>  0 & 0xff\n  o[17] = x4 >>>  8 & 0xff\n  o[18] = x4 >>> 16 & 0xff\n  o[19] = x4 >>> 24 & 0xff\n\n  o[20] = x5 >>>  0 & 0xff\n  o[21] = x5 >>>  8 & 0xff\n  o[22] = x5 >>> 16 & 0xff\n  o[23] = x5 >>> 24 & 0xff\n\n  o[24] = x6 >>>  0 & 0xff\n  o[25] = x6 >>>  8 & 0xff\n  o[26] = x6 >>> 16 & 0xff\n  o[27] = x6 >>> 24 & 0xff\n\n  o[28] = x7 >>>  0 & 0xff\n  o[29] = x7 >>>  8 & 0xff\n  o[30] = x7 >>> 16 & 0xff\n  o[31] = x7 >>> 24 & 0xff\n\n  o[32] = x8 >>>  0 & 0xff\n  o[33] = x8 >>>  8 & 0xff\n  o[34] = x8 >>> 16 & 0xff\n  o[35] = x8 >>> 24 & 0xff\n\n  o[36] = x9 >>>  0 & 0xff\n  o[37] = x9 >>>  8 & 0xff\n  o[38] = x9 >>> 16 & 0xff\n  o[39] = x9 >>> 24 & 0xff\n\n  o[40] = x10 >>>  0 & 0xff\n  o[41] = x10 >>>  8 & 0xff\n  o[42] = x10 >>> 16 & 0xff\n  o[43] = x10 >>> 24 & 0xff\n\n  o[44] = x11 >>>  0 & 0xff\n  o[45] = x11 >>>  8 & 0xff\n  o[46] = x11 >>> 16 & 0xff\n  o[47] = x11 >>> 24 & 0xff\n\n  o[48] = x12 >>>  0 & 0xff\n  o[49] = x12 >>>  8 & 0xff\n  o[50] = x12 >>> 16 & 0xff\n  o[51] = x12 >>> 24 & 0xff\n\n  o[52] = x13 >>>  0 & 0xff\n  o[53] = x13 >>>  8 & 0xff\n  o[54] = x13 >>> 16 & 0xff\n  o[55] = x13 >>> 24 & 0xff\n\n  o[56] = x14 >>>  0 & 0xff\n  o[57] = x14 >>>  8 & 0xff\n  o[58] = x14 >>> 16 & 0xff\n  o[59] = x14 >>> 24 & 0xff\n\n  o[60] = x15 >>>  0 & 0xff\n  o[61] = x15 >>>  8 & 0xff\n  o[62] = x15 >>> 16 & 0xff\n  o[63] = x15 >>> 24 & 0xff\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff) << 8 | (c[ 2] & 0xff) << 16 | (c[ 3] & 0xff) << 24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff) << 8 | (k[ 2] & 0xff) << 16 | (k[ 3] & 0xff) << 24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff) << 8 | (k[ 6] & 0xff) << 16 | (k[ 7] & 0xff) << 24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff) << 8 | (k[10] & 0xff) << 16 | (k[11] & 0xff) << 24,\n      j4  = k[12] & 0xff | (k[13] & 0xff) << 8 | (k[14] & 0xff) << 16 | (k[15] & 0xff) << 24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff) << 8 | (c[ 6] & 0xff) << 16 | (c[ 7] & 0xff) << 24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff) << 8 | (p[ 2] & 0xff) << 16 | (p[ 3] & 0xff) << 24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff) << 8 | (p[ 6] & 0xff) << 16 | (p[ 7] & 0xff) << 24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff) << 8 | (p[10] & 0xff) << 16 | (p[11] & 0xff) << 24,\n      j9  = p[12] & 0xff | (p[13] & 0xff) << 8 | (p[14] & 0xff) << 16 | (p[15] & 0xff) << 24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff) << 8 | (c[10] & 0xff) << 16 | (c[11] & 0xff) << 24,\n      j11 = k[16] & 0xff | (k[17] & 0xff) << 8 | (k[18] & 0xff) << 16 | (k[19] & 0xff) << 24,\n      j12 = k[20] & 0xff | (k[21] & 0xff) << 8 | (k[22] & 0xff) << 16 | (k[23] & 0xff) << 24,\n      j13 = k[24] & 0xff | (k[25] & 0xff) << 8 | (k[26] & 0xff) << 16 | (k[27] & 0xff) << 24,\n      j14 = k[28] & 0xff | (k[29] & 0xff) << 8 | (k[30] & 0xff) << 16 | (k[31] & 0xff) << 24,\n      j15 = c[12] & 0xff | (c[13] & 0xff) << 8 | (c[14] & 0xff) << 16 | (c[15] & 0xff) << 24\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0\n    x4 ^= u << 7 | u >>> 25\n    u = x4 + x0 | 0\n    x8 ^= u << 9 | u >>> 23\n    u = x8 + x4 | 0\n    x12 ^= u << 13 | u >>> 19\n    u = x12 + x8 | 0\n    x0 ^= u << 18 | u >>> 14\n\n    u = x5 + x1 | 0\n    x9 ^= u << 7 | u >>> 25\n    u = x9 + x5 | 0\n    x13 ^= u << 9 | u >>> 23\n    u = x13 + x9 | 0\n    x1 ^= u << 13 | u >>> 19\n    u = x1 + x13 | 0\n    x5 ^= u << 18 | u >>> 14\n\n    u = x10 + x6 | 0\n    x14 ^= u << 7 | u >>> 25\n    u = x14 + x10 | 0\n    x2 ^= u << 9 | u >>> 23\n    u = x2 + x14 | 0\n    x6 ^= u << 13 | u >>> 19\n    u = x6 + x2 | 0\n    x10 ^= u << 18 | u >>> 14\n\n    u = x15 + x11 | 0\n    x3 ^= u << 7 | u >>> 25\n    u = x3 + x15 | 0\n    x7 ^= u << 9 | u >>> 23\n    u = x7 + x3 | 0\n    x11 ^= u << 13 | u >>> 19\n    u = x11 + x7 | 0\n    x15 ^= u << 18 | u >>> 14\n\n    u = x0 + x3 | 0\n    x1 ^= u << 7 | u >>> 25\n    u = x1 + x0 | 0\n    x2 ^= u << 9 | u >>> 23\n    u = x2 + x1 | 0\n    x3 ^= u << 13 | u >>> 19\n    u = x3 + x2 | 0\n    x0 ^= u << 18 | u >>> 14\n\n    u = x5 + x4 | 0\n    x6 ^= u << 7 | u >>> 25\n    u = x6 + x5 | 0\n    x7 ^= u << 9 | u >>> 23\n    u = x7 + x6 | 0\n    x4 ^= u << 13 | u >>> 19\n    u = x4 + x7 | 0\n    x5 ^= u << 18 | u >>> 14\n\n    u = x10 + x9 | 0\n    x11 ^= u << 7 | u >>> 25\n    u = x11 + x10 | 0\n    x8 ^= u << 9 | u >>> 23\n    u = x8 + x11 | 0\n    x9 ^= u << 13 | u >>> 19\n    u = x9 + x8 | 0\n    x10 ^= u << 18 | u >>> 14\n\n    u = x15 + x14 | 0\n    x12 ^= u << 7 | u >>> 25\n    u = x12 + x15 | 0\n    x13 ^= u << 9 | u >>> 23\n    u = x13 + x12 | 0\n    x14 ^= u << 13 | u >>> 19\n    u = x14 + x13 | 0\n    x15 ^= u << 18 | u >>> 14\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff\n  o[ 1] = x0 >>>  8 & 0xff\n  o[ 2] = x0 >>> 16 & 0xff\n  o[ 3] = x0 >>> 24 & 0xff\n\n  o[ 4] = x5 >>>  0 & 0xff\n  o[ 5] = x5 >>>  8 & 0xff\n  o[ 6] = x5 >>> 16 & 0xff\n  o[ 7] = x5 >>> 24 & 0xff\n\n  o[ 8] = x10 >>>  0 & 0xff\n  o[ 9] = x10 >>>  8 & 0xff\n  o[10] = x10 >>> 16 & 0xff\n  o[11] = x10 >>> 24 & 0xff\n\n  o[12] = x15 >>>  0 & 0xff\n  o[13] = x15 >>>  8 & 0xff\n  o[14] = x15 >>> 16 & 0xff\n  o[15] = x15 >>> 24 & 0xff\n\n  o[16] = x6 >>>  0 & 0xff\n  o[17] = x6 >>>  8 & 0xff\n  o[18] = x6 >>> 16 & 0xff\n  o[19] = x6 >>> 24 & 0xff\n\n  o[20] = x7 >>>  0 & 0xff\n  o[21] = x7 >>>  8 & 0xff\n  o[22] = x7 >>> 16 & 0xff\n  o[23] = x7 >>> 24 & 0xff\n\n  o[24] = x8 >>>  0 & 0xff\n  o[25] = x8 >>>  8 & 0xff\n  o[26] = x8 >>> 16 & 0xff\n  o[27] = x8 >>> 24 & 0xff\n\n  o[28] = x9 >>>  0 & 0xff\n  o[29] = x9 >>>  8 & 0xff\n  o[30] = x9 >>> 16 & 0xff\n  o[31] = x9 >>> 24 & 0xff\n}\n", "/* eslint-disable camelcase */\nconst xsalsa20 = require('xsalsa20')\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nexports.crypto_stream_KEYBYTES = 32\nexports.crypto_stream_NONCEBYTES = 24\nexports.crypto_stream_PRIMITIVE = 'xsalsa20'\nexports.crypto_stream_xsalsa20_MESSAGEBYTES_MAX = Number.MAX_SAFE_INTEGER\n\nexports.crypto_stream = function (c, nonce, key) {\n  c.fill(0)\n  exports.crypto_stream_xor(c, c, nonce, key)\n}\n\nexports.crypto_stream_xor = function (c, m, nonce, key) {\n  const xor = xsalsa20(nonce, key)\n\n  xor.update(m, c)\n  xor.final()\n}\n\nexports.crypto_stream_xor_instance = function (nonce, key) {\n  return new XOR(nonce, key)\n}\n\nfunction XOR (nonce, key) {\n  this._instance = xsalsa20(nonce, key)\n}\n\nXOR.prototype.update = function (out, inp) {\n  this._instance.update(inp, out)\n}\n\nXOR.prototype.final = function () {\n  this._instance.finalize()\n  this._instance = null\n}\n", "/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nmodule.exports = poly1305\n", "/* eslint-disable camelcase */\nconst assert = require('nanoassert')\nconst Poly1305 = require('./internal/poly1305')\nconst { crypto_verify_16 } = require('./crypto_verify')\n\nconst crypto_onetimeauth_BYTES = 16\nconst crypto_onetimeauth_KEYBYTES = 32\nconst crypto_onetimeauth_PRIMITIVE = 'poly1305'\n\nmodule.exports = {\n  crypto_onetimeauth,\n  crypto_onetimeauth_verify,\n  crypto_onetimeauth_BYTES,\n  crypto_onetimeauth_KEYBYTES,\n  crypto_onetimeauth_PRIMITIVE\n}\n\nfunction crypto_onetimeauth (mac, msg, key) {\n  assert(mac.byteLength === crypto_onetimeauth_BYTES, \"mac must be 'crypto_onetimeauth_BYTES' bytes\")\n  assert(msg.byteLength != null, 'msg must be buffer')\n  assert(key.byteLength === crypto_onetimeauth_KEYBYTES, \"key must be 'crypto_onetimeauth_KEYBYTES' bytes\")\n\n  var s = new Poly1305(key)\n  s.update(msg, 0, msg.byteLength)\n  s.finish(mac, 0)\n}\n\nfunction crypto_onetimeauth_verify (mac, msg, key) {\n  assert(mac.byteLength === crypto_onetimeauth_BYTES, \"mac must be 'crypto_onetimeauth_BYTES' bytes\")\n  assert(msg.byteLength != null, 'msg must be buffer')\n  assert(key.byteLength === crypto_onetimeauth_KEYBYTES, \"key must be 'crypto_onetimeauth_KEYBYTES' bytes\")\n\n  var tmp = new Uint8Array(16)\n  crypto_onetimeauth(tmp, msg, key)\n  return crypto_verify_16(mac, 0, tmp, 0)\n}\n", "/* eslint-disable camelcase */\nconst assert = require('nanoassert')\nconst { crypto_stream, crypto_stream_xor } = require('./crypto_stream')\nconst { crypto_onetimeauth, crypto_onetimeauth_verify, crypto_onetimeauth_BYTES, crypto_onetimeauth_KEYBYTES } = require('./crypto_onetimeauth')\n\nconst crypto_secretbox_KEYBYTES = 32\nconst crypto_secretbox_NONCEBYTES = 24\nconst crypto_secretbox_ZEROBYTES = 32\nconst crypto_secretbox_BOXZEROBYTES = 16\nconst crypto_secretbox_MACBYTES = 16\n\nmodule.exports = {\n  crypto_secretbox,\n  crypto_secretbox_open,\n  crypto_secretbox_detached,\n  crypto_secretbox_open_detached,\n  crypto_secretbox_easy,\n  crypto_secretbox_open_easy,\n  crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES,\n  crypto_secretbox_MACBYTES\n}\n\nfunction crypto_secretbox (c, m, n, k) {\n  assert(c.byteLength === m.byteLength, \"c must be 'm.byteLength' bytes\")\n  const mlen = m.byteLength\n  assert(mlen >= crypto_secretbox_ZEROBYTES, \"mlen must be at least 'crypto_secretbox_ZEROBYTES'\")\n  assert(n.byteLength === crypto_secretbox_NONCEBYTES, \"n must be 'crypto_secretbox_NONCEBYTES' bytes\")\n  assert(k.byteLength === crypto_secretbox_KEYBYTES, \"k must be 'crypto_secretbox_KEYBYTES' bytes\")\n\n  crypto_stream_xor(c, m, n, k)\n  crypto_onetimeauth(\n    c.subarray(crypto_secretbox_BOXZEROBYTES, crypto_secretbox_BOXZEROBYTES + crypto_onetimeauth_BYTES),\n    c.subarray(crypto_secretbox_BOXZEROBYTES + crypto_onetimeauth_BYTES, c.byteLength),\n    c.subarray(0, crypto_onetimeauth_KEYBYTES)\n  )\n  c.fill(0, 0, crypto_secretbox_BOXZEROBYTES)\n}\n\nfunction crypto_secretbox_open (m, c, n, k) {\n  assert(c.byteLength === m.byteLength, \"c must be 'm.byteLength' bytes\")\n  const mlen = m.byteLength\n  assert(mlen >= crypto_secretbox_ZEROBYTES, \"mlen must be at least 'crypto_secretbox_ZEROBYTES'\")\n  assert(n.byteLength === crypto_secretbox_NONCEBYTES, \"n must be 'crypto_secretbox_NONCEBYTES' bytes\")\n  assert(k.byteLength === crypto_secretbox_KEYBYTES, \"k must be 'crypto_secretbox_KEYBYTES' bytes\")\n\n  const x = new Uint8Array(crypto_onetimeauth_KEYBYTES)\n  crypto_stream(x, n, k)\n  const validMac = crypto_onetimeauth_verify(\n    c.subarray(crypto_secretbox_BOXZEROBYTES, crypto_secretbox_BOXZEROBYTES + crypto_onetimeauth_BYTES),\n    c.subarray(crypto_secretbox_BOXZEROBYTES + crypto_onetimeauth_BYTES, c.byteLength),\n    x\n  )\n\n  if (validMac === false) return false\n  crypto_stream_xor(m, c, n, k)\n  m.fill(0, 0, 32)\n  return true\n}\n\nfunction crypto_secretbox_detached (o, mac, msg, n, k) {\n  assert(o.byteLength === msg.byteLength, \"o must be 'msg.byteLength' bytes\")\n  assert(mac.byteLength === crypto_secretbox_MACBYTES, \"mac must be 'crypto_secretbox_MACBYTES' bytes\")\n  assert(n.byteLength === crypto_secretbox_NONCEBYTES, \"n must be 'crypto_secretbox_NONCEBYTES' bytes\")\n  assert(k.byteLength === crypto_secretbox_KEYBYTES, \"k must be 'crypto_secretbox_KEYBYTES' bytes\")\n\n  const tmp = new Uint8Array(msg.byteLength + mac.byteLength)\n  crypto_secretbox_easy(tmp, msg, n, k)\n  mac.set(tmp.subarray(0, mac.byteLength))\n  o.set(tmp.subarray(mac.byteLength))\n  return true\n}\n\nfunction crypto_secretbox_open_detached (msg, o, mac, n, k) {\n  assert(o.byteLength === msg.byteLength, \"o must be 'msg.byteLength' bytes\")\n  assert(mac.byteLength === crypto_secretbox_MACBYTES, \"mac must be 'crypto_secretbox_MACBYTES' bytes\")\n  assert(n.byteLength === crypto_secretbox_NONCEBYTES, \"n must be 'crypto_secretbox_NONCEBYTES' bytes\")\n  assert(k.byteLength === crypto_secretbox_KEYBYTES, \"k must be 'crypto_secretbox_KEYBYTES' bytes\")\n\n  const tmp = new Uint8Array(o.byteLength + mac.byteLength)\n  tmp.set(mac)\n  tmp.set(o, mac.byteLength)\n  return crypto_secretbox_open_easy(msg, tmp, n, k)\n}\n\nfunction crypto_secretbox_easy (o, msg, n, k) {\n  assert(o.byteLength === msg.byteLength + crypto_secretbox_MACBYTES, \"o must be 'msg.byteLength + crypto_secretbox_MACBYTES' bytes\")\n  assert(n.byteLength === crypto_secretbox_NONCEBYTES, \"n must be 'crypto_secretbox_NONCEBYTES' bytes\")\n  assert(k.byteLength === crypto_secretbox_KEYBYTES, \"k must be 'crypto_secretbox_KEYBYTES' bytes\")\n\n  const m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.byteLength)\n  const c = new Uint8Array(m.byteLength)\n  m.set(msg, crypto_secretbox_ZEROBYTES)\n  crypto_secretbox(c, m, n, k)\n  o.set(c.subarray(crypto_secretbox_BOXZEROBYTES))\n}\n\nfunction crypto_secretbox_open_easy (msg, box, n, k) {\n  assert(box.byteLength === msg.byteLength + crypto_secretbox_MACBYTES, \"box must be 'msg.byteLength + crypto_secretbox_MACBYTES' bytes\")\n  assert(n.byteLength === crypto_secretbox_NONCEBYTES, \"n must be 'crypto_secretbox_NONCEBYTES' bytes\")\n  assert(k.byteLength === crypto_secretbox_KEYBYTES, \"k must be 'crypto_secretbox_KEYBYTES' bytes\")\n\n  const c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.byteLength)\n  const m = new Uint8Array(c.byteLength)\n  c.set(box, crypto_secretbox_BOXZEROBYTES)\n  if (crypto_secretbox_open(m, c, n, k) === false) return false\n  msg.set(m.subarray(crypto_secretbox_ZEROBYTES))\n  return true\n}\n", "/* eslint-disable camelcase */\nconst { crypto_hash_sha512 } = require('./crypto_hash')\nconst { crypto_scalarmult, crypto_scalarmult_base } = require('./crypto_scalarmult')\nconst { randombytes } = require('./randombytes')\nconst { crypto_generichash_batch } = require('./crypto_generichash')\nconst { crypto_stream_xsalsa20_MESSAGEBYTES_MAX } = require('./crypto_stream')\nconst {\n  crypto_secretbox_open_easy,\n  crypto_secretbox_easy,\n  crypto_secretbox_detached,\n  crypto_secretbox_open_detached\n} = require('./crypto_secretbox')\nconst xsalsa20 = require('xsalsa20')\nconst assert = require('nanoassert')\n\nconst crypto_box_PUBLICKEYBYTES = 32\nconst crypto_box_SECRETKEYBYTES = 32\nconst crypto_box_NONCEBYTES = 24\nconst crypto_box_ZEROBYTES = 32\nconst crypto_box_BOXZEROBYTES = 16\nconst crypto_box_SEALBYTES = 48\nconst crypto_box_SEEDBYTES = 32\nconst crypto_box_BEFORENMBYTES = 32\nconst crypto_box_MACBYTES = 16\n\nconst crypto_box_curve25519xsalsa20poly1305_MACBYTES = 16\n\nconst crypto_box_MESSAGEBYTES_MAX =\n  crypto_stream_xsalsa20_MESSAGEBYTES_MAX -\n  crypto_box_curve25519xsalsa20poly1305_MACBYTES\n\nmodule.exports = {\n  crypto_box_easy,\n  crypto_box_open_easy,\n  crypto_box_keypair,\n  crypto_box_seed_keypair,\n  crypto_box_seal,\n  crypto_box_seal_open,\n  crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES,\n  crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES,\n  crypto_box_SEALBYTES,\n  crypto_box_SEEDBYTES,\n  crypto_box_BEFORENMBYTES,\n  crypto_box_MACBYTES\n}\n\nfunction crypto_box_keypair (pk, sk) {\n  check(pk, crypto_box_PUBLICKEYBYTES)\n  check(sk, crypto_box_SECRETKEYBYTES)\n  randombytes(sk, 32)\n  return crypto_scalarmult_base(pk, sk)\n}\nfunction crypto_box_seed_keypair (pk, sk, seed) {\n  assert(pk.byteLength === crypto_box_PUBLICKEYBYTES, \"pk should be 'crypto_box_PUBLICKEYBYTES' bytes\")\n  assert(sk.byteLength === crypto_box_SECRETKEYBYTES, \"sk should be 'crypto_box_SECRETKEYBYTES' bytes\")\n  assert(sk.byteLength === crypto_box_SEEDBYTES, \"sk should be 'crypto_box_SEEDBYTES' bytes\")\n\n  const hash = new Uint8Array(64)\n  crypto_hash_sha512(hash, seed, 32)\n  sk.set(hash.subarray(0, 32))\n  hash.fill(0)\n\n  return crypto_scalarmult_base(pk, sk)\n}\n\nfunction crypto_box_seal (c, m, pk) {\n  check(c, crypto_box_SEALBYTES + m.length)\n  check(pk, crypto_box_PUBLICKEYBYTES)\n\n  var epk = c.subarray(0, crypto_box_PUBLICKEYBYTES)\n  var esk = new Uint8Array(crypto_box_SECRETKEYBYTES)\n  crypto_box_keypair(epk, esk)\n\n  var n = new Uint8Array(crypto_box_NONCEBYTES)\n  crypto_generichash_batch(n, [epk, pk])\n\n  var s = new Uint8Array(crypto_box_PUBLICKEYBYTES)\n  crypto_scalarmult(s, esk, pk)\n\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES)\n  var zero = new Uint8Array(16)\n  xsalsa20.core_hsalsa20(k, zero, s, xsalsa20.SIGMA)\n\n  crypto_secretbox_easy(c.subarray(epk.length), m, n, k)\n\n  cleanup(esk)\n}\n\nfunction crypto_box_seal_open (m, c, pk, sk) {\n  check(c, crypto_box_SEALBYTES)\n  check(m, c.length - crypto_box_SEALBYTES)\n  check(pk, crypto_box_PUBLICKEYBYTES)\n  check(sk, crypto_box_SECRETKEYBYTES)\n\n  var epk = c.subarray(0, crypto_box_PUBLICKEYBYTES)\n\n  var n = new Uint8Array(crypto_box_NONCEBYTES)\n  crypto_generichash_batch(n, [epk, pk])\n\n  var s = new Uint8Array(crypto_box_PUBLICKEYBYTES)\n  crypto_scalarmult(s, sk, epk)\n\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES)\n  var zero = new Uint8Array(16)\n  xsalsa20.core_hsalsa20(k, zero, s, xsalsa20.SIGMA)\n\n  return crypto_secretbox_open_easy(m, c.subarray(epk.length), n, k)\n}\n\nfunction crypto_box_beforenm (k, pk, sk) {\n  const zero = new Uint8Array(16)\n  const s = new Uint8Array(32)\n\n  assert(crypto_scalarmult(s, sk, pk) === 0)\n\n  xsalsa20.core_hsalsa20(k, zero, s, xsalsa20.SIGMA)\n\n  return true\n}\n\nfunction crypto_box_detached_afternm (c, mac, m, n, k) {\n  return crypto_secretbox_detached(c, mac, m, n, k)\n}\n\nfunction crypto_box_detached (c, mac, m, n, pk, sk) {\n  check(mac, crypto_box_MACBYTES)\n  check(n, crypto_box_NONCEBYTES)\n  check(pk, crypto_box_PUBLICKEYBYTES)\n  check(sk, crypto_box_SECRETKEYBYTES)\n\n  const k = new Uint8Array(crypto_box_BEFORENMBYTES)\n\n  assert(crypto_box_beforenm(k, pk, sk))\n\n  const ret = crypto_box_detached_afternm(c, mac, m, n, k)\n  cleanup(k)\n\n  return ret\n}\n\nfunction crypto_box_easy (c, m, n, pk, sk) {\n  assert(\n    c.length >= m.length + crypto_box_MACBYTES,\n    \"c should be at least 'm.length + crypto_box_MACBYTES' bytes\"\n  )\n  assert(\n    m.length <= crypto_box_MESSAGEBYTES_MAX,\n    \"m should be at most 'crypto_box_MESSAGEBYTES_MAX' bytes\"\n  )\n\n  return crypto_box_detached(\n    c.subarray(crypto_box_MACBYTES, m.length + crypto_box_MACBYTES),\n    c.subarray(0, crypto_box_MACBYTES),\n    m,\n    n,\n    pk,\n    sk\n  )\n}\n\nfunction crypto_box_open_detached_afternm (m, c, mac, n, k) {\n  return crypto_secretbox_open_detached(m, c, mac, n, k)\n}\n\nfunction crypto_box_open_detached (m, c, mac, n, pk, sk) {\n  const k = new Uint8Array(crypto_box_BEFORENMBYTES)\n  assert(crypto_box_beforenm(k, pk, sk))\n\n  const ret = crypto_box_open_detached_afternm(m, c, mac, n, k)\n  cleanup(k)\n\n  return ret\n}\n\nfunction crypto_box_open_easy (m, c, n, pk, sk) {\n  assert(\n    c.length >= m.length + crypto_box_MACBYTES,\n    \"c should be at least 'm.length + crypto_box_MACBYTES' bytes\"\n  )\n\n  return crypto_box_open_detached(\n    m,\n    c.subarray(crypto_box_MACBYTES, m.length + crypto_box_MACBYTES),\n    c.subarray(0, crypto_box_MACBYTES),\n    n,\n    pk,\n    sk\n  )\n}\n\nfunction check (buf, len) {\n  if (!buf || (len && buf.length < len)) throw new Error('Argument must be a buffer' + (len ? ' of length ' + len : ''))\n}\n\nfunction cleanup (arr) {\n  for (let i = 0; i < arr.length; i++) arr[i] = 0\n}\n", "const assert = require('nanoassert')\nconst b4a = require('b4a')\n\nmodule.exports = Sha256\nconst SHA256_BYTES = module.exports.SHA256_BYTES = 32\nconst BLOCKSIZE = 64\n\nconst K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]\n\nfunction expand (a, b, c, d) {\n  var b_ = (((a >>> 17) | (a << 15)) ^ ((a >>> 19) | (a << 13)) ^ (a >>> 10)) + b\n  var d_ = (((c >>> 7) | (c << 25)) ^ ((c >>> 18) | (c << 14)) ^ (c >>> 3)) + d\n\n  return (b_ + d_) << 0\n}\n\nfunction compress (state, words) {\n  // initialise registers\n  var ch, maj, s0, s1, T1, T2\n  var [a, b, c, d, e, f, g, h] = state\n\n  // expand message schedule\n  const w = new Uint32Array(64)\n  for (let i = 0; i < 16; i++) w[i] = bswap(words[i])\n  for (let i = 16; i < 64; i++) w[i] = expand(w[i - 2], w[i - 7], w[i - 15], w[i - 16])\n  for (let i = 0; i < 64; i += 4) round(i)\n\n  state[0] = state[0] + a\n  state[1] = state[1] + b\n  state[2] = state[2] + c\n  state[3] = state[3] + d\n  state[4] = state[4] + e\n  state[5] = state[5] + f\n  state[6] = state[6] + g\n  state[7] = state[7] + h\n\n  function round (n) {\n    ch = (e & f) ^ (~e & g)\n    maj = (a & b) ^ (a & c) ^ (b & c)\n    s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10))\n    s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7))\n    T1 = h + ch + s1 + w[n] + K[n]\n    T2 = s0 + maj\n    h = d + T1\n    d = T1 + T2\n\n    ch = (h & e) ^ (~h & f)\n    maj = (d & a) ^ (d & b) ^ (a & b)\n    s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10))\n    s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7))\n    T1 = g + ch + s1 + w[n + 1] + K[n + 1]\n    T2 = s0 + maj\n    g = c + T1\n    c = T1 + T2\n\n    ch = (g & h) ^ (~g & e)\n    maj = (c & d) ^ (c & a) ^ (d & a)\n    s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10))\n    s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7))\n    T1 = f + ch + s1 + w[n + 2] + K[n + 2]\n    T2 = s0 + maj\n    f = b + T1\n    b = T1 + T2\n\n    ch = (f & g) ^ (~f & h)\n    maj = (b & c) ^ (b & d) ^ (c & d)\n    s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10))\n    s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7))\n    T1 = e + ch + s1 + w[n + 3] + K[n + 3]\n    T2 = s0 + maj\n    e = a + T1\n    a = T1 + T2\n  }\n}\n\nfunction Sha256 () {\n  if (!(this instanceof Sha256)) return new Sha256()\n\n  this.buffer = new ArrayBuffer(64)\n  this.bytesRead = 0\n  this.pos = 0\n  this.digestLength = SHA256_BYTES\n  this.finalised = false\n\n  this.load = new Uint8Array(this.buffer)\n  this.words = new Uint32Array(this.buffer)\n\n  this.state = new Uint32Array([\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19\n  ])\n\n  return this\n}\n\nSha256.prototype.update = function (input, enc) {\n  assert(this.finalised === false, 'Hash instance finalised')\n\n  var [inputBuf, len] = formatInput(input, enc)\n  var i = 0\n  this.bytesRead += len\n\n  while (len > 0) {\n    this.load.set(inputBuf.subarray(i, i + BLOCKSIZE - this.pos), this.pos)\n    i += BLOCKSIZE - this.pos\n    len -= BLOCKSIZE - this.pos\n\n    if (len < 0) break\n\n    this.pos = 0\n    compress(this.state, this.words)\n  }\n\n  this.pos = this.bytesRead & 0x3f\n  this.load.fill(0, this.pos)\n\n  return this\n}\n\nSha256.prototype.digest = function (enc, offset = 0) {\n  assert(this.finalised === false, 'Hash instance finalised')\n  this.finalised = true\n\n  this.load.fill(0, this.pos)\n  this.load[this.pos] = 0x80\n\n  if (this.pos > 55) {\n    compress(this.state, this.words)\n\n    this.words.fill(0)\n    this.pos = 0\n  }\n\n  const view = new DataView(this.buffer)\n  view.setUint32(56, this.bytesRead / 2 ** 29)\n  view.setUint32(60, this.bytesRead << 3)\n\n  compress(this.state, this.words)\n\n  const resultBuf = new Uint8Array(this.state.map(bswap).buffer)\n\n  if (!enc) {\n    return new Uint8Array(resultBuf)\n  }\n\n  if (typeof enc === 'string') {\n    return b4a.toString(resultBuf, enc)\n  }\n\n  assert(enc instanceof Uint8Array, 'input must be Uint8Array or Buffer')\n  assert(enc.byteLength >= this.digestLength + offset, 'input not large enough for digest')\n\n  for (let i = 0; i < this.digestLength; i++) {\n    enc[i + offset] = resultBuf[i]\n  }\n\n  return enc\n}\n\nfunction HMAC (key) {\n  if (!(this instanceof HMAC)) return new HMAC(key)\n\n  this.pad = b4a.alloc(64)\n  this.inner = Sha256()\n  this.outer = Sha256()\n\n  const keyhash = b4a.alloc(32)\n  if (key.byteLength > 64) {\n    Sha256().update(key).digest(keyhash)\n    key = keyhash\n  }\n\n  this.pad.fill(0x36)\n  for (let i = 0; i < key.byteLength; i++) {\n    this.pad[i] ^= key[i]\n  }\n  this.inner.update(this.pad)\n\n  this.pad.fill(0x5c)\n  for (let i = 0; i < key.byteLength; i++) {\n    this.pad[i] ^= key[i]\n  }\n  this.outer.update(this.pad)\n\n  this.pad.fill(0)\n  keyhash.fill(0)\n}\n\nHMAC.prototype.update = function (input, enc) {\n  this.inner.update(input, enc)\n  return this\n}\n\nHMAC.prototype.digest = function (enc, offset = 0) {\n  this.outer.update(this.inner.digest())\n  return this.outer.digest(enc, offset)\n}\n\nSha256.HMAC = HMAC\n\nfunction formatInput (input, enc) {\n  var result = b4a.from(input, enc)\n\n  return [result, result.byteLength]\n}\n\nfunction bswap (a) {\n  var r = ((a & 0x00ff00ff) >>> 8) | ((a & 0x00ff00ff) << 24)\n  var l = ((a & 0xff00ff00) << 8) | ((a & 0xff00ff00) >>> 24)\n\n  return r | l\n}\n", "var __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __toBinary = /* @__PURE__ */ (() => {\n  var table = new Uint8Array(128);\n  for (var i = 0; i < 64; i++)\n    table[i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i * 4 - 205] = i;\n  return (base64) => {\n    var n = base64.length, bytes2 = new Uint8Array((n - (base64[n - 1] == \"=\") - (base64[n - 2] == \"=\")) * 3 / 4 | 0);\n    for (var i2 = 0, j = 0; i2 < n; ) {\n      var c0 = table[base64.charCodeAt(i2++)], c1 = table[base64.charCodeAt(i2++)];\n      var c2 = table[base64.charCodeAt(i2++)], c3 = table[base64.charCodeAt(i2++)];\n      bytes2[j++] = c0 << 2 | c1 >> 4;\n      bytes2[j++] = c1 << 4 | c2 >> 2;\n      bytes2[j++] = c2 << 6 | c3;\n    }\n    return bytes2;\n  };\n})();\n\n// wasm-binary:./sha256.wat\nvar require_sha256 = __commonJS({\n  \"wasm-binary:./sha256.wat\"(exports2, module2) {\n    module2.exports = __toBinary(\"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\");\n  }\n});\n\n// wasm-module:./sha256.wat\nvar bytes = require_sha256();\nvar compiled = new WebAssembly.Module(bytes);\nmodule.exports = (imports) => {\n  const instance = new WebAssembly.Instance(compiled, imports);\n  return instance.exports;\n};\n", "const assert = require('nanoassert')\nconst b4a = require('b4a')\n\nconst wasm = typeof WebAssembly !== 'undefined' && require('./sha256.js')({\n  imports: {\n    debug: {\n      log (...args) {\n        console.log(...args.map(int => (int >>> 0).toString(16).padStart(8, '0')))\n      },\n      log_tee (arg) {\n        console.log((arg >>> 0).toString(16).padStart(8, '0'))\n        return arg\n      }\n    }\n  }\n})\n\nlet head = 0\nconst freeList = []\n\nmodule.exports = Sha256\nconst SHA256_BYTES = module.exports.SHA256_BYTES = 32\nconst INPUT_OFFSET = 40\nconst STATEBYTES = 108\nconst BLOCKSIZE = 64\n\nfunction Sha256 () {\n  if (!(this instanceof Sha256)) return new Sha256()\n  if (!(wasm)) throw new Error('WASM not loaded. Wait for Sha256.ready(cb)')\n\n  if (!freeList.length) {\n    freeList.push(head)\n    head += STATEBYTES // need 100 bytes for internal state\n  }\n\n  this.finalized = false\n  this.digestLength = SHA256_BYTES\n  this.pointer = freeList.pop()\n  this.pos = 0\n\n  this._memory = new Uint8Array(wasm.memory.buffer)\n  this._memory.fill(0, this.pointer, this.pointer + STATEBYTES)\n\n  if (this.pointer + this.digestLength > this._memory.length) this._realloc(this.pointer + STATEBYTES)\n}\n\nSha256.prototype._realloc = function (size) {\n  wasm.memory.grow(Math.max(0, Math.ceil(Math.abs(size - this._memory.length) / 65536)))\n  this._memory = new Uint8Array(wasm.memory.buffer)\n}\n\nSha256.prototype.update = function (input, enc) {\n  assert(this.finalized === false, 'Hash instance finalized')\n\n  if (head % 4 !== 0) head += 4 - head % 4\n  assert(head % 4 === 0, 'input shoud be aligned for int32')\n\n  const [inputBuf, length] = formatInput(input, enc)\n\n  assert(inputBuf instanceof Uint8Array, 'input must be Uint8Array or Buffer')\n\n  if (head + length > this._memory.length) this._realloc(head + input.length)\n\n  this._memory.fill(0, head, head + roundUp(length, BLOCKSIZE) - BLOCKSIZE)\n  this._memory.set(inputBuf.subarray(0, BLOCKSIZE - this.pos), this.pointer + INPUT_OFFSET + this.pos)\n  this._memory.set(inputBuf.subarray(BLOCKSIZE - this.pos), head)\n\n  this.pos = (this.pos + length) & 0x3f\n  wasm.sha256(this.pointer, head, length, 0)\n\n  return this\n}\n\nSha256.prototype.digest = function (enc, offset = 0) {\n  assert(this.finalized === false, 'Hash instance finalized')\n\n  this.finalized = true\n  freeList.push(this.pointer)\n\n  const paddingStart = this.pointer + INPUT_OFFSET + this.pos\n  this._memory.fill(0, paddingStart, this.pointer + INPUT_OFFSET + BLOCKSIZE)\n  wasm.sha256(this.pointer, head, 0, 1)\n\n  const resultBuf = this._memory.subarray(this.pointer, this.pointer + this.digestLength)\n\n  if (!enc) {\n    return resultBuf\n  }\n\n  if (typeof enc === 'string') {\n    return b4a.toString(resultBuf, enc)\n  }\n\n  assert(enc instanceof Uint8Array, 'output must be Uint8Array or Buffer')\n  assert(enc.byteLength >= this.digestLength + offset,\n    \"output must have at least 'SHA256_BYTES' bytes remaining\")\n\n  for (let i = 0; i < this.digestLength; i++) {\n    enc[i + offset] = resultBuf[i]\n  }\n\n  return enc\n}\n\nSha256.WASM = wasm\nSha256.WASM_SUPPORTED = typeof WebAssembly !== 'undefined'\n\nSha256.ready = function (cb) {\n  if (!cb) cb = noop\n  if (!wasm) return cb(new Error('WebAssembly not supported'))\n  cb()\n  return Promise.resolve()\n}\n\nSha256.prototype.ready = Sha256.ready\n\nfunction HMAC (key) {\n  if (!(this instanceof HMAC)) return new HMAC(key)\n\n  this.pad = b4a.alloc(64)\n  this.inner = Sha256()\n  this.outer = Sha256()\n\n  const keyhash = b4a.alloc(32)\n  if (key.byteLength > 64) {\n    Sha256().update(key).digest(keyhash)\n    key = keyhash\n  }\n\n  this.pad.fill(0x36)\n  for (let i = 0; i < key.byteLength; i++) {\n    this.pad[i] ^= key[i]\n  }\n  this.inner.update(this.pad)\n\n  this.pad.fill(0x5c)\n  for (let i = 0; i < key.byteLength; i++) {\n    this.pad[i] ^= key[i]\n  }\n  this.outer.update(this.pad)\n\n  this.pad.fill(0)\n  keyhash.fill(0)\n}\n\nHMAC.prototype.update = function (input, enc) {\n  this.inner.update(input, enc)\n  return this\n}\n\nHMAC.prototype.digest = function (enc, offset = 0) {\n  this.outer.update(this.inner.digest())\n  return this.outer.digest(enc, offset)\n}\n\nSha256.HMAC = HMAC\n\nfunction noop () {}\n\nfunction formatInput (input, enc) {\n  var result = b4a.from(input, enc)\n\n  return [result, result.byteLength]\n}\n\n// only works for base that is power of 2\nfunction roundUp (n, base) {\n  return (n + base - 1) & -base\n}\n", "const js = require('./sha256.js')\nconst wasm = require('sha256-wasm')\n\nvar Proto = js\n\nmodule.exports = function () {\n  return new Proto()\n}\n\nmodule.exports.ready = function (cb) {\n  wasm.ready(function () { // ignore errors\n    cb()\n  })\n}\n\nmodule.exports.WASM_SUPPORTED = wasm.WASM_SUPPORTED\nmodule.exports.WASM_LOADED = false\n\nvar SHA256_BYTES = module.exports.SHA256_BYTES = 32\n\nwasm.ready(function (err) {\n  if (!err) {\n    module.exports.WASM_LOADED = true\n    module.exports = Proto = wasm\n  }\n})\n", "/* eslint-disable camelcase */\nconst sha256 = require('sha256-universal')\nconst assert = require('nanoassert')\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nconst crypto_hash_sha256_BYTES = 32\n\nfunction crypto_hash_sha256 (out, m, n) {\n  assert(out.byteLength === crypto_hash_sha256_BYTES, \"out must be 'crypto_hash_sha256_BYTES' bytes long\")\n\n  sha256().update(m.subarray(0, n)).digest(out)\n  return 0\n}\n\nmodule.exports = {\n  crypto_hash_sha256,\n  crypto_hash_sha256_BYTES\n}\n", "/* eslint-disable camelcase */\nconst assert = require('nanoassert')\nconst randombytes_buf = require('./randombytes').randombytes_buf\nconst blake2b = require('blake2b')\n\nmodule.exports.crypto_kdf_PRIMITIVE = 'blake2b'\nmodule.exports.crypto_kdf_BYTES_MIN = 16\nmodule.exports.crypto_kdf_BYTES_MAX = 64\nmodule.exports.crypto_kdf_CONTEXTBYTES = 8\nmodule.exports.crypto_kdf_KEYBYTES = 32\n\nfunction STORE64_LE (dest, int) {\n  var mul = 1\n  var i = 0\n  dest[0] = int & 0xFF\n  while (++i < 8 && (mul *= 0x100)) {\n    dest[i] = (int / mul) & 0xFF\n  }\n}\n\nmodule.exports.crypto_kdf_derive_from_key = function crypto_kdf_derive_from_key (subkey, subkey_id, ctx, key) {\n  assert(subkey.length >= module.exports.crypto_kdf_BYTES_MIN, 'subkey must be at least crypto_kdf_BYTES_MIN')\n  assert(subkey_id >= 0 && subkey_id <= 0x1fffffffffffff, 'subkey_id must be safe integer')\n  assert(ctx.length >= module.exports.crypto_kdf_CONTEXTBYTES, 'context must be at least crypto_kdf_CONTEXTBYTES')\n\n  var ctx_padded = new Uint8Array(blake2b.PERSONALBYTES)\n  var salt = new Uint8Array(blake2b.SALTBYTES)\n\n  ctx_padded.set(ctx, 0, module.exports.crypto_kdf_CONTEXTBYTES)\n  STORE64_LE(salt, subkey_id)\n\n  var outlen = Math.min(subkey.length, module.exports.crypto_kdf_BYTES_MAX)\n  blake2b(outlen, key.subarray(0, module.exports.crypto_kdf_KEYBYTES), salt, ctx_padded, true)\n    .final(subkey)\n}\n\nmodule.exports.crypto_kdf_keygen = function crypto_kdf_keygen (out) {\n  assert(out.length >= module.exports.crypto_kdf_KEYBYTES, 'out.length must be crypto_kdf_KEYBYTES')\n  randombytes_buf(out.subarray(0, module.exports.crypto_kdf_KEYBYTES))\n}\n", "/* eslint-disable camelcase */\nconst { crypto_scalarmult_base } = require('./crypto_scalarmult')\nconst { crypto_generichash } = require('./crypto_generichash')\nconst { randombytes_buf } = require('./randombytes')\nconst assert = require('nanoassert')\n\nconst crypto_kx_SEEDBYTES = 32\nconst crypto_kx_PUBLICKEYBYTES = 32\nconst crypto_kx_SECRETKEYBYTES = 32\n\nfunction crypto_kx_keypair (pk, sk) {\n  assert(pk.byteLength === crypto_kx_PUBLICKEYBYTES, \"pk must be 'crypto_kx_PUBLICKEYBYTES' bytes\")\n  assert(sk.byteLength === crypto_kx_SECRETKEYBYTES, \"sk must be 'crypto_kx_SECRETKEYBYTES' bytes\")\n\n  randombytes_buf(sk, crypto_kx_SECRETKEYBYTES)\n  return crypto_scalarmult_base(pk, sk)\n}\n\nfunction crypto_kx_seed_keypair (pk, sk, seed) {\n  assert(pk.byteLength === crypto_kx_PUBLICKEYBYTES, \"pk must be 'crypto_kx_PUBLICKEYBYTES' bytes\")\n  assert(sk.byteLength === crypto_kx_SECRETKEYBYTES, \"sk must be 'crypto_kx_SECRETKEYBYTES' bytes\")\n  assert(seed.byteLength === crypto_kx_SEEDBYTES, \"seed must be 'crypto_kx_SEEDBYTES' bytes\")\n\n  crypto_generichash(sk, seed)\n  return crypto_scalarmult_base(pk, sk)\n}\n\nmodule.exports = {\n  crypto_kx_keypair,\n  crypto_kx_seed_keypair,\n  crypto_kx_SEEDBYTES,\n  crypto_kx_SECRETKEYBYTES,\n  crypto_kx_PUBLICKEYBYTES\n}\n", "const assert = require('nanoassert')\n\nmodule.exports = Chacha20\n\nconst constant = [1634760805, 857760878, 2036477234, 1797285236]\n\nfunction Chacha20 (nonce, key, counter) {\n  assert(key.byteLength === 32)\n  assert(nonce.byteLength === 8 || nonce.byteLength === 12)\n\n  const n = new Uint32Array(nonce.buffer, nonce.byteOffset, nonce.byteLength / 4)\n  const k = new Uint32Array(key.buffer, key.byteOffset, key.byteLength / 4)\n\n  if (!counter) counter = 0\n  assert(counter < Number.MAX_SAFE_INTEGER)\n\n  this.finalized = false\n  this.pos = 0\n  this.state = new Uint32Array(16)\n\n  for (let i = 0; i < 4; i++) this.state[i] = constant[i]\n  for (let i = 0; i < 8; i++) this.state[4 + i] = k[i]\n\n  this.state[12] = counter & 0xffffffff\n\n  if (n.byteLength === 8) {\n    this.state[13] = (counter && 0xffffffff00000000) >> 32\n    this.state[14] = n[0]\n    this.state[15] = n[1]\n  } else {\n    this.state[13] = n[0]\n    this.state[14] = n[1]\n    this.state[15] = n[2]\n  }\n\n  return this\n}\n\nChacha20.prototype.update = function (output, input) {\n  assert(!this.finalized, 'cipher finalized.')\n  assert(output.byteLength >= input.byteLength,\n    'output cannot be shorter than input.')\n\n  let len = input.length\n  let offset = this.pos % 64\n  this.pos += len\n\n  // input position\n  let j = 0\n\n  let keyStream = chacha20Block(this.state)\n\n  // try to finsih the current block\n  while (offset > 0 && len > 0) {\n    output[j] = input[j++] ^ keyStream[offset]\n    offset = (offset + 1) & 0x3f\n    if (!offset) this.state[12]++\n    len--\n  }\n\n  // encrypt rest block at a time\n  while (len > 0) {\n    keyStream = chacha20Block(this.state)\n\n    // less than a full block remaining\n    if (len < 64) {\n      for (let i = 0; i < len; i++) {\n        output[j] = input[j++] ^ keyStream[offset++]\n        offset &= 0x3f\n      }\n\n      return\n    }\n\n    for (; offset < 64;) {\n      output[j] = input[j++] ^ keyStream[offset++]\n    }\n\n    this.state[12]++\n    offset = 0\n    len -= 64\n  }\n}\n\nChacha20.prototype.final = function () {\n  this.state.fill(0)\n  this.pos = 0\n  this.finalized = true\n}\n\nfunction chacha20Block (state) {\n  // working state\n  const ws = new Uint32Array(16)\n  for (let i = 16; i--;) ws[i] = state[i]\n\n  for (let i = 0; i < 20; i += 2) {\n    QR(ws, 0, 4, 8, 12) // column 0\n    QR(ws, 1, 5, 9, 13) // column 1\n    QR(ws, 2, 6, 10, 14) // column 2\n    QR(ws, 3, 7, 11, 15) // column 3\n\n    QR(ws, 0, 5, 10, 15) // diagonal 1 (main diagonal)\n    QR(ws, 1, 6, 11, 12) // diagonal 2\n    QR(ws, 2, 7, 8, 13) // diagonal 3\n    QR(ws, 3, 4, 9, 14) // diagonal 4\n  }\n\n  for (let i = 0; i < 16; i++) {\n    ws[i] += state[i]\n  }\n\n  return new Uint8Array(ws.buffer, ws.byteOffset, ws.byteLength)\n}\n\nfunction rotl (a, b) {\n  return ((a << b) | (a >>> (32 - b)))\n}\n\nfunction QR (obj, a, b, c, d) {\n  obj[a] += obj[b]\n  obj[d] ^= obj[a]\n  obj[d] = rotl(obj[d], 16)\n\n  obj[c] += obj[d]\n  obj[b] ^= obj[c]\n  obj[b] = rotl(obj[b], 12)\n\n  obj[a] += obj[b]\n  obj[d] ^= obj[a]\n  obj[d] = rotl(obj[d], 8)\n\n  obj[c] += obj[d]\n  obj[b] ^= obj[c]\n  obj[b] = rotl(obj[b], 7)\n}\n", "const assert = require('nanoassert')\nconst Chacha20 = require('chacha20-universal')\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nexports.crypto_stream_chacha20_KEYBYTES = 32\nexports.crypto_stream_chacha20_NONCEBYTES = 8\nexports.crypto_stream_chacha20_MESSAGEBYTES_MAX = Number.MAX_SAFE_INTEGER\n\nexports.crypto_stream_chacha20_ietf_KEYBYTES = 32\nexports.crypto_stream_chacha20_ietf_NONCEBYTES = 12\nexports.crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX = 2 ** 32\n\nexports.crypto_stream_chacha20 = function (c, n, k) {\n  c.fill(0)\n  exports.crypto_stream_chacha20_xor(c, c, n, k)\n}\n\nexports.crypto_stream_chacha20_xor = function (c, m, n, k) {\n  assert(n.byteLength === exports.crypto_stream_chacha20_NONCEBYTES,\n    'n should be crypto_stream_chacha20_NONCEBYTES')\n  assert(k.byteLength === exports.crypto_stream_chacha20_KEYBYTES,\n    'k should be crypto_stream_chacha20_KEYBYTES')\n\n  const xor = new Chacha20(n, k)\n  xor.update(c, m)\n  xor.final()\n}\n\nexports.crypto_stream_chacha20_xor_ic = function (c, m, n, ic, k) {\n  assert(n.byteLength === exports.crypto_stream_chacha20_NONCEBYTES,\n    'n should be crypto_stream_chacha20_NONCEBYTES')\n  assert(k.byteLength === exports.crypto_stream_chacha20_KEYBYTES,\n    'k should be crypto_stream_chacha20_KEYBYTES')\n\n  const xor = new Chacha20(n, k, ic)\n  xor.update(c, m)\n  xor.final()\n}\n\nexports.crypto_stream_chacha20_xor_instance = function (n, k) {\n  assert(n.byteLength === exports.crypto_stream_chacha20_NONCEBYTES,\n    'n should be crypto_stream_chacha20_NONCEBYTES')\n  assert(k.byteLength === exports.crypto_stream_chacha20_KEYBYTES,\n    'k should be crypto_stream_chacha20_KEYBYTES')\n\n  return new Chacha20(n, k)\n}\n\nexports.crypto_stream_chacha20_ietf = function (c, n, k) {\n  c.fill(0)\n  exports.crypto_stream_chacha20_ietf_xor(c, c, n, k)\n}\n\nexports.crypto_stream_chacha20_ietf_xor = function (c, m, n, k) {\n  assert(n.byteLength === exports.crypto_stream_chacha20_ietf_NONCEBYTES,\n    'n should be crypto_stream_chacha20_ietf_NONCEBYTES')\n  assert(k.byteLength === exports.crypto_stream_chacha20_ietf_KEYBYTES,\n    'k should be crypto_stream_chacha20_ietf_KEYBYTES')\n\n  const xor = new Chacha20(n, k)\n  xor.update(c, m)\n  xor.final()\n}\n\nexports.crypto_stream_chacha20_ietf_xor_ic = function (c, m, n, ic, k) {\n  assert(n.byteLength === exports.crypto_stream_chacha20_ietf_NONCEBYTES,\n    'n should be crypto_stream_chacha20_ietf_NONCEBYTES')\n  assert(k.byteLength === exports.crypto_stream_chacha20_ietf_KEYBYTES,\n    'k should be crypto_stream_chacha20_ietf_KEYBYTES')\n\n  const xor = new Chacha20(n, k, ic)\n  xor.update(c, m)\n  xor.final()\n}\n\nexports.crypto_stream_chacha20_ietf_xor_instance = function (n, k) {\n  assert(n.byteLength === exports.crypto_stream_chacha20_ietf_NONCEBYTES,\n    'n should be crypto_stream_chacha20_ietf_NONCEBYTES')\n  assert(k.byteLength === exports.crypto_stream_chacha20_ietf_KEYBYTES,\n    'k should be crypto_stream_chacha20_ietf_KEYBYTES')\n\n  return new Chacha20(n, k)\n}\n", "/* eslint-disable camelcase */\nconst { crypto_stream_chacha20_ietf, crypto_stream_chacha20_ietf_xor_ic } = require('./crypto_stream_chacha20')\nconst { crypto_verify_16 } = require('./crypto_verify')\nconst Poly1305 = require('./internal/poly1305')\nconst assert = require('nanoassert')\n\nconst crypto_aead_chacha20poly1305_ietf_KEYBYTES = 32\nconst crypto_aead_chacha20poly1305_ietf_NSECBYTES = 0\nconst crypto_aead_chacha20poly1305_ietf_NPUBBYTES = 12\nconst crypto_aead_chacha20poly1305_ietf_ABYTES = 16\nconst crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX = Number.MAX_SAFE_INTEGER\n\nconst _pad0 = new Uint8Array(16)\n\nfunction crypto_aead_chacha20poly1305_ietf_encrypt (c, m, ad, nsec, npub, k) {\n  if (ad === null) return crypto_aead_chacha20poly1305_ietf_encrypt(c, m, new Uint8Array(0), nsec, npub, k)\n\n  assert(c.byteLength === m.byteLength + crypto_aead_chacha20poly1305_ietf_ABYTES,\n    \"ciphertext should be 'crypto_aead_chacha20poly1305_ietf_ABYTES' longer than message\")\n  assert(npub.byteLength === crypto_aead_chacha20poly1305_ietf_NPUBBYTES,\n    \"npub should be 'crypto_aead_chacha20poly1305_ietf_NPUBBYTES' long\")\n  assert(k.byteLength === crypto_aead_chacha20poly1305_ietf_KEYBYTES,\n    \"k should be 'crypto_aead_chacha20poly1305_ietf_KEYBYTES' long\")\n  assert(m.byteLength <= crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX, 'message is too large')\n\n  const ret = crypto_aead_chacha20poly1305_ietf_encrypt_detached(c.subarray(0, m.byteLength),\n    c.subarray(m.byteLength), m, ad, nsec, npub, k)\n\n  return m.byteLength + ret\n}\n\nfunction crypto_aead_chacha20poly1305_ietf_encrypt_detached (c, mac, m, ad, nsec, npub, k) {\n  if (ad === null) return crypto_aead_chacha20poly1305_ietf_encrypt_detached(c, mac, m, new Uint8Array(0), nsec, npub, k)\n\n  assert(c.byteLength === m.byteLength, 'ciphertext should be same length than message')\n  assert(npub.byteLength === crypto_aead_chacha20poly1305_ietf_NPUBBYTES,\n    \"npub should be 'crypto_aead_chacha20poly1305_ietf_NPUBBYTES' long\")\n  assert(k.byteLength === crypto_aead_chacha20poly1305_ietf_KEYBYTES,\n    \"k should be 'crypto_aead_chacha20poly1305_ietf_KEYBYTES' long\")\n  assert(m.byteLength <= crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX, 'message is too large')\n  assert(mac.byteLength <= crypto_aead_chacha20poly1305_ietf_ABYTES,\n    \"mac should be 'crypto_aead_chacha20poly1305_ietf_ABYTES' long\")\n\n  const block0 = new Uint8Array(64)\n  var slen = new Uint8Array(8)\n\n  crypto_stream_chacha20_ietf(block0, npub, k)\n  const poly = new Poly1305(block0)\n  block0.fill(0)\n\n  poly.update(ad, 0, ad.byteLength)\n  poly.update(_pad0, 0, (0x10 - ad.byteLength) & 0xf)\n\n  crypto_stream_chacha20_ietf_xor_ic(c, m, npub, 1, k)\n\n  poly.update(c, 0, m.byteLength)\n  poly.update(_pad0, 0, (0x10 - m.byteLength) & 0xf)\n\n  write64LE(slen, 0, ad.byteLength)\n  poly.update(slen, 0, slen.byteLength)\n\n  write64LE(slen, 0, m.byteLength)\n  poly.update(slen, 0, slen.byteLength)\n\n  poly.finish(mac, 0)\n  slen.fill(0)\n\n  return crypto_aead_chacha20poly1305_ietf_ABYTES\n}\n\nfunction crypto_aead_chacha20poly1305_ietf_decrypt (m, nsec, c, ad, npub, k) {\n  if (ad === null) return crypto_aead_chacha20poly1305_ietf_decrypt(m, nsec, c, new Uint8Array(0), npub, k)\n\n  assert(m.byteLength === c.byteLength - crypto_aead_chacha20poly1305_ietf_ABYTES,\n    \"message should be 'crypto_aead_chacha20poly1305_ietf_ABYTES' shorter than ciphertext\")\n  assert(npub.byteLength === crypto_aead_chacha20poly1305_ietf_NPUBBYTES,\n    \"npub should be 'crypto_aead_chacha20poly1305_ietf_NPUBBYTES' long\")\n  assert(k.byteLength === crypto_aead_chacha20poly1305_ietf_KEYBYTES,\n    \"k should be 'crypto_aead_chacha20poly1305_ietf_KEYBYTES' long\")\n  assert(m.byteLength <= crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX, 'message is too large')\n\n  if (c.byteLength < crypto_aead_chacha20poly1305_ietf_ABYTES) throw new Error('could not verify data')\n\n  crypto_aead_chacha20poly1305_ietf_decrypt_detached(\n    m, nsec,\n    c.subarray(0, c.byteLength - crypto_aead_chacha20poly1305_ietf_ABYTES),\n    c.subarray(c.byteLength - crypto_aead_chacha20poly1305_ietf_ABYTES),\n    ad, npub, k)\n\n  return c.byteLength - crypto_aead_chacha20poly1305_ietf_ABYTES\n}\n\nfunction crypto_aead_chacha20poly1305_ietf_decrypt_detached (m, nsec, c, mac, ad, npub, k) {\n  if (ad === null) return crypto_aead_chacha20poly1305_ietf_decrypt_detached(m, nsec, c, mac, new Uint8Array(0), npub, k)\n\n  assert(c.byteLength === m.byteLength, 'message should be same length than ciphertext')\n  assert(npub.byteLength === crypto_aead_chacha20poly1305_ietf_NPUBBYTES,\n    \"npub should be 'crypto_aead_chacha20poly1305_ietf_NPUBBYTES' long\")\n  assert(k.byteLength === crypto_aead_chacha20poly1305_ietf_KEYBYTES,\n    \"k should be 'crypto_aead_chacha20poly1305_ietf_KEYBYTES' long\")\n  assert(m.byteLength <= crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX, 'message is too large')\n  assert(mac.byteLength <= crypto_aead_chacha20poly1305_ietf_ABYTES,\n    \"mac should be 'crypto_aead_chacha20poly1305_ietf_ABYTES' long\")\n\n  const block0 = new Uint8Array(64)\n  const slen = new Uint8Array(8)\n  const computed_mac = new Uint8Array(crypto_aead_chacha20poly1305_ietf_ABYTES)\n\n  crypto_stream_chacha20_ietf(block0, npub, k)\n  const poly = new Poly1305(block0)\n  block0.fill(0)\n\n  poly.update(ad, 0, ad.byteLength)\n  poly.update(_pad0, 0, (0x10 - ad.byteLength) & 0xf)\n\n  const mlen = c.byteLength\n  poly.update(c, 0, mlen)\n  poly.update(_pad0, 0, (0x10 - mlen) & 0xf)\n\n  write64LE(slen, 0, ad.byteLength)\n  poly.update(slen, 0, slen.byteLength)\n\n  write64LE(slen, 0, mlen)\n  poly.update(slen, 0, slen.byteLength)\n\n  poly.finish(computed_mac, 0)\n\n  assert(computed_mac.byteLength === 16)\n  const ret = crypto_verify_16(computed_mac, 0, mac, 0)\n\n  computed_mac.fill(0)\n  slen.fill(0)\n\n  if (!ret) {\n    m.fill(0)\n    throw new Error('could not verify data')\n  }\n\n  crypto_stream_chacha20_ietf_xor_ic(m, c, npub, 1, k)\n}\n\nfunction write64LE (buf, offset, int) {\n  buf.fill(0, 0, 8)\n\n  const view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n  view.setUint32(offset, int & 0xffffffff, true)\n  view.setUint32(offset + 4, (int / 2 ** 32) & 0xffffffff, true)\n}\n\nmodule.exports = {\n  crypto_aead_chacha20poly1305_ietf_encrypt,\n  crypto_aead_chacha20poly1305_ietf_encrypt_detached,\n  crypto_aead_chacha20poly1305_ietf_decrypt,\n  crypto_aead_chacha20poly1305_ietf_decrypt_detached,\n  crypto_aead_chacha20poly1305_ietf_ABYTES,\n  crypto_aead_chacha20poly1305_ietf_KEYBYTES,\n  crypto_aead_chacha20poly1305_ietf_NPUBBYTES,\n  crypto_aead_chacha20poly1305_ietf_NSECBYTES,\n  crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX\n}\n", "/* eslint-disable camelcase */\nconst { sodium_malloc } = require('../memory')\nconst assert = require('nanoassert')\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nconst crypto_core_hchacha20_OUTPUTBYTES = 32\nconst crypto_core_hchacha20_INPUTBYTES = 16\nconst crypto_core_hchacha20_KEYBYTES = 32\nconst crypto_core_hchacha20_CONSTBYTES = 16\n\nfunction ROTL32 (x, b) {\n  x &= 0xFFFFFFFF\n  b &= 0xFFFFFFFF\n  return (x << b) | (x >>> (32 - b))\n}\n\nfunction LOAD32_LE (src, offset) {\n  assert(src instanceof Uint8Array, 'src not byte array')\n  let w = src[offset]\n  w |= src[offset + 1] << 8\n  w |= src[offset + 2] << 16\n  w |= src[offset + 3] << 24\n  return w\n}\n\nfunction STORE32_LE (dest, int, offset) {\n  assert(dest instanceof Uint8Array, 'dest not byte array')\n  var mul = 1\n  var i = 0\n  dest[offset] = int & 0xFF // grab bottom byte\n  while (++i < 4 && (mul *= 0x100)) {\n    dest[offset + i] = (int / mul) & 0xFF\n  }\n}\n\nfunction QUARTERROUND (l, A, B, C, D) {\n  l[A] += l[B]\n  l[D] = ROTL32(l[D] ^ l[A], 16)\n  l[C] += l[D]\n  l[B] = ROTL32(l[B] ^ l[C], 12)\n  l[A] += l[B]\n  l[D] = ROTL32(l[D] ^ l[A], 8)\n  l[C] += l[D]\n  l[B] = ROTL32(l[B] ^ l[C], 7)\n}\n\nfunction crypto_core_hchacha20 (out, _in, k, c) {\n  assert(out instanceof Uint8Array && out.length === 32, 'out is not an array of 32 bytes')\n  assert(k instanceof Uint8Array && k.length === 32, 'k is not an array of 32 bytes')\n  assert(c === null || (c instanceof Uint8Array && c.length === 16), 'c is not null or an array of 16 bytes')\n\n  let i = 0\n  const x = new Uint32Array(16)\n  if (!c) {\n    x[0] = 0x61707865\n    x[1] = 0x3320646E\n    x[2] = 0x79622D32\n    x[3] = 0x6B206574\n  } else {\n    x[0] = LOAD32_LE(c, 0)\n    x[1] = LOAD32_LE(c, 4)\n    x[2] = LOAD32_LE(c, 8)\n    x[3] = LOAD32_LE(c, 12)\n  }\n  x[4] = LOAD32_LE(k, 0)\n  x[5] = LOAD32_LE(k, 4)\n  x[6] = LOAD32_LE(k, 8)\n  x[7] = LOAD32_LE(k, 12)\n  x[8] = LOAD32_LE(k, 16)\n  x[9] = LOAD32_LE(k, 20)\n  x[10] = LOAD32_LE(k, 24)\n  x[11] = LOAD32_LE(k, 28)\n  x[12] = LOAD32_LE(_in, 0)\n  x[13] = LOAD32_LE(_in, 4)\n  x[14] = LOAD32_LE(_in, 8)\n  x[15] = LOAD32_LE(_in, 12)\n\n  for (i = 0; i < 10; i++) {\n    QUARTERROUND(x, 0, 4, 8, 12)\n    QUARTERROUND(x, 1, 5, 9, 13)\n    QUARTERROUND(x, 2, 6, 10, 14)\n    QUARTERROUND(x, 3, 7, 11, 15)\n    QUARTERROUND(x, 0, 5, 10, 15)\n    QUARTERROUND(x, 1, 6, 11, 12)\n    QUARTERROUND(x, 2, 7, 8, 13)\n    QUARTERROUND(x, 3, 4, 9, 14)\n  }\n\n  STORE32_LE(out, x[0], 0)\n  STORE32_LE(out, x[1], 4)\n  STORE32_LE(out, x[2], 8)\n  STORE32_LE(out, x[3], 12)\n  STORE32_LE(out, x[12], 16)\n  STORE32_LE(out, x[13], 20)\n  STORE32_LE(out, x[14], 24)\n  STORE32_LE(out, x[15], 28)\n\n  return 0\n}\n\nfunction crypto_core_hchacha20_outputbytes () {\n  return crypto_core_hchacha20_OUTPUTBYTES\n}\n\nfunction crypto_core_hchacha20_inputbytes () {\n  return crypto_core_hchacha20_INPUTBYTES\n}\n\nfunction crypto_core_hchacha20_keybytes () {\n  return crypto_core_hchacha20_KEYBYTES\n}\n\nfunction crypto_core_hchacha20_constbytes () {\n  return crypto_core_hchacha20_CONSTBYTES\n}\n\nmodule.exports = {\n  crypto_core_hchacha20_INPUTBYTES,\n  LOAD32_LE,\n  STORE32_LE,\n  QUARTERROUND,\n  crypto_core_hchacha20,\n  crypto_core_hchacha20_outputbytes,\n  crypto_core_hchacha20_inputbytes,\n  crypto_core_hchacha20_keybytes,\n  crypto_core_hchacha20_constbytes\n}\n", "/* eslint-disable camelcase */\nconst assert = require('nanoassert')\nconst { randombytes_buf } = require('./randombytes')\nconst {\n  crypto_stream_chacha20_ietf,\n  crypto_stream_chacha20_ietf_xor,\n  crypto_stream_chacha20_ietf_xor_ic,\n  crypto_stream_chacha20_ietf_KEYBYTES\n} = require('./crypto_stream_chacha20')\nconst { crypto_core_hchacha20, crypto_core_hchacha20_INPUTBYTES } = require('./internal/hchacha20')\nconst Poly1305 = require('./internal/poly1305')\nconst { sodium_increment, sodium_is_zero, sodium_memcmp } = require('./helpers')\n\nconst crypto_onetimeauth_poly1305_BYTES = 16\nconst crypto_secretstream_xchacha20poly1305_COUNTERBYTES = 4\nconst crypto_secretstream_xchacha20poly1305_INONCEBYTES = 8\nconst crypto_aead_xchacha20poly1305_ietf_KEYBYTES = 32\nconst crypto_secretstream_xchacha20poly1305_KEYBYTES = crypto_aead_xchacha20poly1305_ietf_KEYBYTES\nconst crypto_aead_xchacha20poly1305_ietf_NPUBBYTES = 24\nconst crypto_secretstream_xchacha20poly1305_HEADERBYTES = crypto_aead_xchacha20poly1305_ietf_NPUBBYTES\nconst crypto_aead_xchacha20poly1305_ietf_ABYTES = 16\nconst crypto_secretstream_xchacha20poly1305_ABYTES = 1 + crypto_aead_xchacha20poly1305_ietf_ABYTES\nconst crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX = Number.MAX_SAFE_INTEGER\nconst crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX = Number.MAX_SAFE_INTEGER\nconst crypto_secretstream_xchacha20poly1305_TAGBYTES = 1\nconst crypto_secretstream_xchacha20poly1305_TAG_MESSAGE = new Uint8Array([0])\nconst crypto_secretstream_xchacha20poly1305_TAG_PUSH = new Uint8Array([1])\nconst crypto_secretstream_xchacha20poly1305_TAG_REKEY = new Uint8Array([2])\nconst crypto_secretstream_xchacha20poly1305_TAG_FINAL = new Uint8Array([crypto_secretstream_xchacha20poly1305_TAG_PUSH | crypto_secretstream_xchacha20poly1305_TAG_REKEY])\nconst crypto_secretstream_xchacha20poly1305_STATEBYTES = crypto_secretstream_xchacha20poly1305_KEYBYTES +\n  crypto_secretstream_xchacha20poly1305_INONCEBYTES + crypto_secretstream_xchacha20poly1305_COUNTERBYTES + 8\n\nconst KEY_OFFSET = 0\nconst NONCE_OFFSET = crypto_secretstream_xchacha20poly1305_KEYBYTES\nconst PAD_OFFSET = NONCE_OFFSET + crypto_secretstream_xchacha20poly1305_INONCEBYTES + crypto_secretstream_xchacha20poly1305_COUNTERBYTES\n\nconst _pad0 = new Uint8Array(16)\n\nfunction STORE64_LE (dest, int) {\n  let mul = 1\n  let i = 0\n  dest[0] = int & 0xFF\n  while (++i < 8 && (mul *= 0x100)) {\n    dest[i] = (int / mul) & 0xFF\n  }\n}\n\nfunction crypto_secretstream_xchacha20poly1305_counter_reset (state) {\n  assert(state.byteLength === crypto_secretstream_xchacha20poly1305_STATEBYTES,\n    'state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long')\n\n  const nonce = state.subarray(NONCE_OFFSET, PAD_OFFSET)\n  for (let i = 0; i < crypto_secretstream_xchacha20poly1305_COUNTERBYTES; i++) {\n    nonce[i] = 0\n  }\n  nonce[0] = 1\n}\n\nfunction crypto_secretstream_xchacha20poly1305_keygen (k) {\n  assert(k.length === crypto_secretstream_xchacha20poly1305_KEYBYTES)\n  randombytes_buf(k)\n}\n\nfunction crypto_secretstream_xchacha20poly1305_init_push (state, out, key) {\n  assert(state.byteLength === crypto_secretstream_xchacha20poly1305_STATEBYTES,\n    'state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long')\n  assert(out instanceof Uint8Array && out.length === crypto_secretstream_xchacha20poly1305_HEADERBYTES, 'out not byte array of length crypto_secretstream_xchacha20poly1305_HEADERBYTES')\n  assert(key instanceof Uint8Array && key.length === crypto_secretstream_xchacha20poly1305_KEYBYTES, 'key not byte array of length crypto_secretstream_xchacha20poly1305_KEYBYTES')\n\n  const k = state.subarray(KEY_OFFSET, NONCE_OFFSET)\n  const nonce = state.subarray(NONCE_OFFSET, PAD_OFFSET)\n  const pad = state.subarray(PAD_OFFSET)\n\n  randombytes_buf(out, crypto_secretstream_xchacha20poly1305_HEADERBYTES)\n  crypto_core_hchacha20(k, out, key, null)\n  crypto_secretstream_xchacha20poly1305_counter_reset(state)\n  for (let i = 0; i < crypto_secretstream_xchacha20poly1305_INONCEBYTES; i++) {\n    nonce[i + crypto_secretstream_xchacha20poly1305_COUNTERBYTES] = out[i + crypto_core_hchacha20_INPUTBYTES]\n  }\n  pad.fill(0)\n}\n\nfunction crypto_secretstream_xchacha20poly1305_init_pull (state, _in, key) {\n  assert(state.byteLength === crypto_secretstream_xchacha20poly1305_STATEBYTES,\n    'state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long')\n  assert(_in instanceof Uint8Array && _in.length === crypto_secretstream_xchacha20poly1305_HEADERBYTES,\n    '_in not byte array of length crypto_secretstream_xchacha20poly1305_HEADERBYTES')\n  assert(key instanceof Uint8Array && key.length === crypto_secretstream_xchacha20poly1305_KEYBYTES,\n    'key not byte array of length crypto_secretstream_xchacha20poly1305_KEYBYTES')\n\n  const k = state.subarray(KEY_OFFSET, NONCE_OFFSET)\n  const nonce = state.subarray(NONCE_OFFSET, PAD_OFFSET)\n  const pad = state.subarray(PAD_OFFSET)\n\n  crypto_core_hchacha20(k, _in, key, null)\n  crypto_secretstream_xchacha20poly1305_counter_reset(state)\n\n  for (let i = 0; i < crypto_secretstream_xchacha20poly1305_INONCEBYTES; i++) {\n    nonce[i + crypto_secretstream_xchacha20poly1305_COUNTERBYTES] = _in[i + crypto_core_hchacha20_INPUTBYTES]\n  }\n  pad.fill(0)\n}\n\nfunction crypto_secretstream_xchacha20poly1305_rekey (state) {\n  assert(state.byteLength === crypto_secretstream_xchacha20poly1305_STATEBYTES,\n    'state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long')\n\n  const k = state.subarray(KEY_OFFSET, NONCE_OFFSET)\n  const nonce = state.subarray(NONCE_OFFSET, PAD_OFFSET)\n\n  const new_key_and_inonce = new Uint8Array(\n    crypto_stream_chacha20_ietf_KEYBYTES + crypto_secretstream_xchacha20poly1305_INONCEBYTES)\n  let i\n  for (i = 0; i < crypto_stream_chacha20_ietf_KEYBYTES; i++) {\n    new_key_and_inonce[i] = k[i]\n  }\n  for (i = 0; i < crypto_secretstream_xchacha20poly1305_INONCEBYTES; i++) {\n    new_key_and_inonce[crypto_stream_chacha20_ietf_KEYBYTES + i] =\n      nonce[crypto_secretstream_xchacha20poly1305_COUNTERBYTES + i]\n  }\n  crypto_stream_chacha20_ietf_xor(new_key_and_inonce, new_key_and_inonce, nonce, k)\n  for (i = 0; i < crypto_stream_chacha20_ietf_KEYBYTES; i++) {\n    k[i] = new_key_and_inonce[i]\n  }\n  for (i = 0; i < crypto_secretstream_xchacha20poly1305_INONCEBYTES; i++) {\n    nonce[crypto_secretstream_xchacha20poly1305_COUNTERBYTES + i] =\n      new_key_and_inonce[crypto_stream_chacha20_ietf_KEYBYTES + i]\n  }\n  crypto_secretstream_xchacha20poly1305_counter_reset(state)\n}\n\nfunction crypto_secretstream_xchacha20poly1305_push (state, out, m, ad, tag) {\n  assert(state.byteLength === crypto_secretstream_xchacha20poly1305_STATEBYTES,\n    'state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long')\n  if (!ad) ad = new Uint8Array(0)\n\n  const k = state.subarray(KEY_OFFSET, NONCE_OFFSET)\n  const nonce = state.subarray(NONCE_OFFSET, PAD_OFFSET)\n\n  const block = new Uint8Array(64)\n  const slen = new Uint8Array(8)\n\n  assert(crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX <=\n    crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX)\n\n  crypto_stream_chacha20_ietf(block, nonce, k)\n  const poly = new Poly1305(block)\n  block.fill(0)\n\n  poly.update(ad, 0, ad.byteLength)\n  poly.update(_pad0, 0, (0x10 - ad.byteLength) & 0xf)\n\n  block[0] = tag[0]\n  crypto_stream_chacha20_ietf_xor_ic(block, block, nonce, 1, k)\n\n  poly.update(block, 0, block.byteLength)\n  out[0] = block[0]\n\n  const c = out.subarray(1, out.byteLength)\n  crypto_stream_chacha20_ietf_xor_ic(c, m, nonce, 2, k)\n  poly.update(c, 0, m.byteLength)\n  poly.update(_pad0, 0, (0x10 - block.byteLength + m.byteLength) & 0xf)\n\n  STORE64_LE(slen, ad.byteLength)\n  poly.update(slen, 0, slen.byteLength)\n  STORE64_LE(slen, block.byteLength + m.byteLength)\n  poly.update(slen, 0, slen.byteLength)\n\n  const mac = out.subarray(1 + m.byteLength, out.byteLength)\n  poly.finish(mac, 0)\n\n  assert(crypto_onetimeauth_poly1305_BYTES >=\n    crypto_secretstream_xchacha20poly1305_INONCEBYTES)\n  xor_buf(nonce.subarray(crypto_secretstream_xchacha20poly1305_COUNTERBYTES, nonce.length),\n    mac, crypto_secretstream_xchacha20poly1305_INONCEBYTES)\n  sodium_increment(nonce)\n\n  if ((tag[0] & crypto_secretstream_xchacha20poly1305_TAG_REKEY) !== 0 ||\n    sodium_is_zero(nonce.subarray(0, crypto_secretstream_xchacha20poly1305_COUNTERBYTES))) {\n    crypto_secretstream_xchacha20poly1305_rekey(state)\n  }\n\n  return crypto_secretstream_xchacha20poly1305_ABYTES + m.byteLength\n}\n\nfunction crypto_secretstream_xchacha20poly1305_pull (state, m, tag, _in, ad) {\n  assert(state.byteLength === crypto_secretstream_xchacha20poly1305_STATEBYTES,\n    'state is should be crypto_secretstream_xchacha20poly1305_STATEBYTES long')\n  if (!ad) ad = new Uint8Array(0)\n\n  const k = state.subarray(KEY_OFFSET, NONCE_OFFSET)\n  const nonce = state.subarray(NONCE_OFFSET, PAD_OFFSET)\n\n  const block = new Uint8Array(64)\n  const slen = new Uint8Array(8)\n  const mac = new Uint8Array(crypto_onetimeauth_poly1305_BYTES)\n\n  assert(_in.byteLength >= crypto_secretstream_xchacha20poly1305_ABYTES,\n    'ciphertext is too short.')\n\n  const mlen = _in.byteLength - crypto_secretstream_xchacha20poly1305_ABYTES\n  crypto_stream_chacha20_ietf(block, nonce, k)\n  const poly = new Poly1305(block)\n  block.fill(0) // sodium_memzero(block, sizeof block);\n\n  poly.update(ad, 0, ad.byteLength)\n  poly.update(_pad0, 0, (0x10 - ad.byteLength) & 0xf)\n\n  block.fill(0) // memset(block, 0, sizeof block);\n  block[0] = _in[0]\n  crypto_stream_chacha20_ietf_xor_ic(block, block, nonce, 1, k)\n\n  tag[0] = block[0]\n  block[0] = _in[0]\n  poly.update(block, 0, block.byteLength)\n\n  const c = _in.subarray(1, _in.length)\n  poly.update(c, 0, mlen)\n\n  poly.update(_pad0, 0, (0x10 - block.byteLength + mlen) & 0xf)\n\n  STORE64_LE(slen, ad.byteLength)\n  poly.update(slen, 0, slen.byteLength)\n  STORE64_LE(slen, block.byteLength + m.byteLength)\n  poly.update(slen, 0, slen.byteLength)\n\n  poly.finish(mac, 0)\n  const stored_mac = _in.subarray(1 + mlen, _in.length)\n\n  if (!sodium_memcmp(mac, stored_mac)) {\n    mac.fill(0)\n    throw new Error('MAC could not be verified.')\n  }\n\n  crypto_stream_chacha20_ietf_xor_ic(m, c.subarray(0, m.length), nonce, 2, k)\n  xor_buf(nonce.subarray(crypto_secretstream_xchacha20poly1305_COUNTERBYTES, nonce.length),\n    mac, crypto_secretstream_xchacha20poly1305_INONCEBYTES)\n  sodium_increment(nonce)\n\n  if ((tag & crypto_secretstream_xchacha20poly1305_TAG_REKEY) !== 0 ||\n    sodium_is_zero(nonce.subarray(0, crypto_secretstream_xchacha20poly1305_COUNTERBYTES))) {\n    crypto_secretstream_xchacha20poly1305_rekey(state)\n  }\n\n  return mlen\n}\n\nfunction xor_buf (out, _in, n) {\n  for (let i = 0; i < n; i++) {\n    out[i] ^= _in[i]\n  }\n}\n\nmodule.exports = {\n  crypto_secretstream_xchacha20poly1305_keygen,\n  crypto_secretstream_xchacha20poly1305_init_push,\n  crypto_secretstream_xchacha20poly1305_init_pull,\n  crypto_secretstream_xchacha20poly1305_rekey,\n  crypto_secretstream_xchacha20poly1305_push,\n  crypto_secretstream_xchacha20poly1305_pull,\n  crypto_secretstream_xchacha20poly1305_STATEBYTES,\n  crypto_secretstream_xchacha20poly1305_ABYTES,\n  crypto_secretstream_xchacha20poly1305_HEADERBYTES,\n  crypto_secretstream_xchacha20poly1305_KEYBYTES,\n  crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX,\n  crypto_secretstream_xchacha20poly1305_TAGBYTES,\n  crypto_secretstream_xchacha20poly1305_TAG_MESSAGE,\n  crypto_secretstream_xchacha20poly1305_TAG_PUSH,\n  crypto_secretstream_xchacha20poly1305_TAG_REKEY,\n  crypto_secretstream_xchacha20poly1305_TAG_FINAL\n}\n", "var __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __toBinary = /* @__PURE__ */ (() => {\n  var table = new Uint8Array(128);\n  for (var i = 0; i < 64; i++)\n    table[i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i * 4 - 205] = i;\n  return (base64) => {\n    var n = base64.length, bytes2 = new Uint8Array((n - (base64[n - 1] == \"=\") - (base64[n - 2] == \"=\")) * 3 / 4 | 0);\n    for (var i2 = 0, j = 0; i2 < n; ) {\n      var c0 = table[base64.charCodeAt(i2++)], c1 = table[base64.charCodeAt(i2++)];\n      var c2 = table[base64.charCodeAt(i2++)], c3 = table[base64.charCodeAt(i2++)];\n      bytes2[j++] = c0 << 2 | c1 >> 4;\n      bytes2[j++] = c1 << 4 | c2 >> 2;\n      bytes2[j++] = c2 << 6 | c3;\n    }\n    return bytes2;\n  };\n})();\n\n// wasm-binary:./siphash24.wat\nvar require_siphash24 = __commonJS({\n  \"wasm-binary:./siphash24.wat\"(exports2, module2) {\n    module2.exports = __toBinary(\"AGFzbQEAAAABBgFgAn9/AAMCAQAFBQEBCpBOBxQCBm1lbW9yeQIAB3NpcGhhc2gAAArdCAHaCAIIfgJ/QvXKzYPXrNu38wAhAkLt3pHzlszct+QAIQNC4eSV89bs2bzsACEEQvPK0cunjNmy9AAhBUEIKQMAIQdBECkDACEIIAGtQjiGIQYgAUEHcSELIAAgAWogC2shCiAFIAiFIQUgBCAHhSEEIAMgCIUhAyACIAeFIQICQANAIAAgCkYNASAAKQMAIQkgBSAJhSEFIAIgA3whAiADQg2JIQMgAyAChSEDIAJCIIkhAiAEIAV8IQQgBUIQiSEFIAUgBIUhBSACIAV8IQIgBUIViSEFIAUgAoUhBSAEIAN8IQQgA0IRiSEDIAMgBIUhAyAEQiCJIQQgAiADfCECIANCDYkhAyADIAKFIQMgAkIgiSECIAQgBXwhBCAFQhCJIQUgBSAEhSEFIAIgBXwhAiAFQhWJIQUgBSAChSEFIAQgA3whBCADQhGJIQMgAyAEhSEDIARCIIkhBCACIAmFIQIgAEEIaiEADAALCwJAAkACQAJAAkACQAJAAkAgCw4HBwYFBAMCAQALIAYgADEABkIwhoQhBgsgBiAAMQAFQiiGhCEGCyAGIAAxAARCIIaEIQYLIAYgADEAA0IYhoQhBgsgBiAAMQACQhCGhCEGCyAGIAAxAAFCCIaEIQYLIAYgADEAAIQhBgsgBSAGhSEFIAIgA3whAiADQg2JIQMgAyAChSEDIAJCIIkhAiAEIAV8IQQgBUIQiSEFIAUgBIUhBSACIAV8IQIgBUIViSEFIAUgAoUhBSAEIAN8IQQgA0IRiSEDIAMgBIUhAyAEQiCJIQQgAiADfCECIANCDYkhAyADIAKFIQMgAkIgiSECIAQgBXwhBCAFQhCJIQUgBSAEhSEFIAIgBXwhAiAFQhWJIQUgBSAChSEFIAQgA3whBCADQhGJIQMgAyAEhSEDIARCIIkhBCACIAaFIQIgBEL/AYUhBCACIAN8IQIgA0INiSEDIAMgAoUhAyACQiCJIQIgBCAFfCEEIAVCEIkhBSAFIASFIQUgAiAFfCECIAVCFYkhBSAFIAKFIQUgBCADfCEEIANCEYkhAyADIASFIQMgBEIgiSEEIAIgA3whAiADQg2JIQMgAyAChSEDIAJCIIkhAiAEIAV8IQQgBUIQiSEFIAUgBIUhBSACIAV8IQIgBUIViSEFIAUgAoUhBSAEIAN8IQQgA0IRiSEDIAMgBIUhAyAEQiCJIQQgAiADfCECIANCDYkhAyADIAKFIQMgAkIgiSECIAQgBXwhBCAFQhCJIQUgBSAEhSEFIAIgBXwhAiAFQhWJIQUgBSAChSEFIAQgA3whBCADQhGJIQMgAyAEhSEDIARCIIkhBCACIAN8IQIgA0INiSEDIAMgAoUhAyACQiCJIQIgBCAFfCEEIAVCEIkhBSAFIASFIQUgAiAFfCECIAVCFYkhBSAFIAKFIQUgBCADfCEEIANCEYkhAyADIASFIQMgBEIgiSEEQQAgAiADIAQgBYWFhTcDAAs=\");\n  }\n});\n\n// wasm-module:./siphash24.wat\nvar bytes = require_siphash24();\nvar compiled = new WebAssembly.Module(bytes);\nmodule.exports = (imports) => {\n  const instance = new WebAssembly.Instance(compiled, imports);\n  return instance.exports;\n};\n", "module.exports = fallback\n\nfunction _add (a, b) {\n  var rl = a.l + b.l\n  var a2 = {\n    h: a.h + b.h + (rl / 2 >>> 31) >>> 0,\n    l: rl >>> 0\n  }\n  a.h = a2.h\n  a.l = a2.l\n}\n\nfunction _xor (a, b) {\n  a.h ^= b.h\n  a.h >>>= 0\n  a.l ^= b.l\n  a.l >>>= 0\n}\n\nfunction _rotl (a, n) {\n  var a2 = {\n    h: a.h << n | a.l >>> (32 - n),\n    l: a.l << n | a.h >>> (32 - n)\n  }\n  a.h = a2.h\n  a.l = a2.l\n}\n\nfunction _rotl32 (a) {\n  var al = a.l\n  a.l = a.h\n  a.h = al\n}\n\nfunction _compress (v0, v1, v2, v3) {\n  _add(v0, v1)\n  _add(v2, v3)\n  _rotl(v1, 13)\n  _rotl(v3, 16)\n  _xor(v1, v0)\n  _xor(v3, v2)\n  _rotl32(v0)\n  _add(v2, v1)\n  _add(v0, v3)\n  _rotl(v1, 17)\n  _rotl(v3, 21)\n  _xor(v1, v2)\n  _xor(v3, v0)\n  _rotl32(v2)\n}\n\nfunction _get_int (a, offset) {\n  return (a[offset + 3] << 24) | (a[offset + 2] << 16) | (a[offset + 1] << 8) | a[offset]\n}\n\nfunction fallback (out, m, key) { // modified from https://github.com/jedisct1/siphash-js to use uint8arrays\n  var k0 = {h: _get_int(key, 4), l: _get_int(key, 0)}\n  var k1 = {h: _get_int(key, 12), l: _get_int(key, 8)}\n  var v0 = {h: k0.h, l: k0.l}\n  var v2 = k0\n  var v1 = {h: k1.h, l: k1.l}\n  var v3 = k1\n  var mi\n  var mp = 0\n  var ml = m.length\n  var ml7 = ml - 7\n  var buf = new Uint8Array(new ArrayBuffer(8))\n\n  _xor(v0, {h: 0x736f6d65, l: 0x70736575})\n  _xor(v1, {h: 0x646f7261, l: 0x6e646f6d})\n  _xor(v2, {h: 0x6c796765, l: 0x6e657261})\n  _xor(v3, {h: 0x74656462, l: 0x79746573})\n\n  while (mp < ml7) {\n    mi = {h: _get_int(m, mp + 4), l: _get_int(m, mp)}\n    _xor(v3, mi)\n    _compress(v0, v1, v2, v3)\n    _compress(v0, v1, v2, v3)\n    _xor(v0, mi)\n    mp += 8\n  }\n\n  buf[7] = ml\n  var ic = 0\n  while (mp < ml) {\n    buf[ic++] = m[mp++]\n  }\n  while (ic < 7) {\n    buf[ic++] = 0\n  }\n\n  mi = {\n    h: buf[7] << 24 | buf[6] << 16 | buf[5] << 8 | buf[4],\n    l: buf[3] << 24 | buf[2] << 16 | buf[1] << 8 | buf[0]\n  }\n\n  _xor(v3, mi)\n  _compress(v0, v1, v2, v3)\n  _compress(v0, v1, v2, v3)\n  _xor(v0, mi)\n  _xor(v2, { h: 0, l: 0xff })\n  _compress(v0, v1, v2, v3)\n  _compress(v0, v1, v2, v3)\n  _compress(v0, v1, v2, v3)\n  _compress(v0, v1, v2, v3)\n\n  var h = v0\n  _xor(h, v1)\n  _xor(h, v2)\n  _xor(h, v3)\n\n  out[0] = h.l & 0xff\n  out[1] = (h.l >> 8) & 0xff\n  out[2] = (h.l >> 16) & 0xff\n  out[3] = (h.l >> 24) & 0xff\n  out[4] = h.h & 0xff\n  out[5] = (h.h >> 8) & 0xff\n  out[6] = (h.h >> 16) & 0xff\n  out[7] = (h.h >> 24) & 0xff\n}\n", "var assert = require('nanoassert')\nvar wasm = typeof WebAssembly !== 'undefined' && require('./siphash24')()\nvar fallback = require('./fallback')\n\nmodule.exports = siphash24\n\nvar BYTES = siphash24.BYTES = 8\nvar KEYBYTES = siphash24.KEYBYTES = 16\n\nsiphash24.WASM_SUPPORTED = !!wasm\nsiphash24.WASM_LOADED = !!wasm\n\nvar memory = new Uint8Array(wasm ? wasm.memory.buffer : 0)\n\nfunction siphash24 (data, key, out, noAssert) {\n  if (!out) out = new Uint8Array(8)\n\n  if (noAssert !== true) {\n    assert(out.length >= BYTES, 'output must be at least ' + BYTES)\n    assert(key.length >= KEYBYTES, 'key must be at least ' + KEYBYTES)\n  }\n\n  if (wasm) {\n    if (data.length + 24 > memory.length) realloc(data.length + 24)\n    memory.set(key, 8)\n    memory.set(data, 24)\n    wasm.siphash(24, data.length)\n    out.set(memory.subarray(0, 8))\n  } else {\n    fallback(out, data, key)\n  }\n\n  return out\n}\n\nfunction realloc (size) {\n  wasm.memory.grow(Math.max(0, Math.ceil(Math.abs(size - memory.length) / 65536)))\n  memory = new Uint8Array(wasm.memory.buffer)\n}\n", "var siphash = require('siphash24')\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nexports.crypto_shorthash_PRIMITIVE = 'siphash24'\nexports.crypto_shorthash_BYTES = siphash.BYTES\nexports.crypto_shorthash_KEYBYTES = siphash.KEYBYTES\nexports.crypto_shorthash_WASM_SUPPORTED = siphash.WASM_SUPPORTED\nexports.crypto_shorthash_WASM_LOADED = siphash.WASM_LOADED\nexports.crypto_shorthash = shorthash\n\nfunction shorthash (out, data, key, noAssert) {\n  siphash(data, key, out, noAssert)\n}\n", "/* eslint-disable camelcase, one-var */\nconst { crypto_verify_32 } = require('./crypto_verify')\nconst { crypto_hash } = require('./crypto_hash')\nconst {\n  gf, gf0, gf1, D, D2,\n  X, Y, I, A, Z, M, S,\n  sel25519, pack25519,\n  inv25519, unpack25519\n} = require('./internal/ed25519')\nconst { randombytes } = require('./randombytes')\nconst { crypto_scalarmult_BYTES } = require('./crypto_scalarmult.js')\nconst { crypto_hash_sha512_BYTES } = require('./crypto_hash.js')\nconst assert = require('nanoassert')\n\nconst crypto_sign_ed25519_PUBLICKEYBYTES = 32\nconst crypto_sign_ed25519_SECRETKEYBYTES = 64\nconst crypto_sign_ed25519_SEEDBYTES = 32\nconst crypto_sign_ed25519_BYTES = 64\n\nconst crypto_sign_BYTES = crypto_sign_ed25519_BYTES\nconst crypto_sign_PUBLICKEYBYTES = crypto_sign_ed25519_PUBLICKEYBYTES\nconst crypto_sign_SECRETKEYBYTES = crypto_sign_ed25519_SECRETKEYBYTES\nconst crypto_sign_SEEDBYTES = crypto_sign_ed25519_SEEDBYTES\n\nmodule.exports = {\n  crypto_sign_keypair,\n  crypto_sign_seed_keypair,\n  crypto_sign,\n  crypto_sign_detached,\n  crypto_sign_open,\n  crypto_sign_verify_detached,\n  crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES,\n  crypto_sign_ed25519_PUBLICKEYBYTES,\n  crypto_sign_ed25519_SECRETKEYBYTES,\n  crypto_sign_ed25519_SEEDBYTES,\n  crypto_sign_ed25519_BYTES,\n  crypto_sign_ed25519_pk_to_curve25519,\n  crypto_sign_ed25519_sk_to_curve25519,\n  crypto_sign_ed25519_sk_to_pk,\n  unpackneg,\n  pack\n}\n\nfunction set25519 (r, a) {\n  for (let i = 0; i < 16; i++) r[i] = a[i] | 0\n}\n\nfunction pow2523 (o, i) {\n  var c = gf()\n  var a\n  for (a = 0; a < 16; a++) c[a] = i[a]\n  for (a = 250; a >= 0; a--) {\n    S(c, c)\n    if (a !== 1) M(c, c, i)\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a]\n}\n\nfunction add (p, q) {\n  var a = gf(), b = gf(), c = gf(),\n    d = gf(), e = gf(), f = gf(),\n    g = gf(), h = gf(), t = gf()\n\n  Z(a, p[1], p[0])\n  Z(t, q[1], q[0])\n  M(a, a, t)\n  A(b, p[0], p[1])\n  A(t, q[0], q[1])\n  M(b, b, t)\n  M(c, p[3], q[3])\n  M(c, c, D2)\n  M(d, p[2], q[2])\n  A(d, d, d)\n  Z(e, b, a)\n  Z(f, d, c)\n  A(g, d, c)\n  A(h, b, a)\n\n  M(p[0], e, f)\n  M(p[1], h, g)\n  M(p[2], g, f)\n  M(p[3], e, h)\n}\n\nfunction cswap (p, q, b) {\n  var i\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b)\n  }\n}\n\nfunction pack (r, p) {\n  var tx = gf(), ty = gf(), zi = gf()\n  inv25519(zi, p[2])\n  M(tx, p[0], zi)\n  M(ty, p[1], zi)\n  pack25519(r, ty)\n  r[31] ^= par25519(tx) << 7\n}\n\nfunction scalarmult (p, q, s) {\n  // don't mutate q\n  var h = [gf(q[0]), gf(q[1]), gf(q[2]), gf(q[3])]\n  var b, i\n  set25519(p[0], gf0)\n  set25519(p[1], gf1)\n  set25519(p[2], gf1)\n  set25519(p[3], gf0)\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i / 8) | 0] >> (i & 7)) & 1\n    cswap(p, h, b)\n    add(h, p)\n    add(p, p)\n    cswap(p, h, b)\n  }\n}\n\nfunction scalarbase (p, s) {\n  var q = [gf(), gf(), gf(), gf()]\n  set25519(q[0], X)\n  set25519(q[1], Y)\n  set25519(q[2], gf1)\n  M(q[3], X, Y)\n  scalarmult(p, q, s)\n}\n\nfunction crypto_sign_keypair (pk, sk, seeded) {\n  check(pk, crypto_sign_PUBLICKEYBYTES)\n  check(sk, crypto_sign_SECRETKEYBYTES)\n\n  var d = new Uint8Array(64)\n  var p = [gf(), gf(), gf(), gf()]\n  var i\n\n  if (!seeded) randombytes(sk, 32)\n  crypto_hash(d, sk, 32)\n  d[0] &= 248\n  d[31] &= 127\n  d[31] |= 64\n\n  scalarbase(p, d)\n  pack(pk, p)\n\n  for (i = 0; i < 32; i++) sk[i + 32] = pk[i]\n}\n\nfunction crypto_sign_seed_keypair (pk, sk, seed) {\n  check(seed, crypto_sign_SEEDBYTES)\n  sk.set(seed)\n  return crypto_sign_keypair(pk, sk, true)\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10])\n\nfunction modL (r, x) {\n  var carry, i, j, k\n  for (i = 63; i >= 32; --i) {\n    carry = 0\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)]\n      carry = (x[j] + 128) >> 8\n      x[j] -= carry * 256\n    }\n    x[j] += carry\n    x[i] = 0\n  }\n  carry = 0\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j]\n    carry = x[j] >> 8\n    x[j] &= 255\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j]\n  for (i = 0; i < 32; i++) {\n    x[i + 1] += x[i] >> 8\n    r[i] = x[i] & 255\n  }\n}\n\nfunction reduce (r) {\n  var x = new Float64Array(64)\n  for (let i = 0; i < 64; i++) x[i] = r[i]\n  for (let i = 0; i < 64; i++) r[i] = 0\n  modL(r, x)\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign (sm, m, sk) {\n  check(sm, crypto_sign_BYTES + m.length)\n  check(m, 0)\n  check(sk, crypto_sign_SECRETKEYBYTES)\n  var n = m.length\n\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64)\n  var i, j, x = new Float64Array(64)\n  var p = [gf(), gf(), gf(), gf()]\n\n  crypto_hash(d, sk, 32)\n  d[0] &= 248\n  d[31] &= 127\n  d[31] |= 64\n\n  var smlen = n + 64\n  for (i = 0; i < n; i++) sm[64 + i] = m[i]\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i]\n\n  crypto_hash(r, sm.subarray(32), n + 32)\n  reduce(r)\n  scalarbase(p, r)\n  pack(sm, p)\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i]\n  crypto_hash(h, sm, n + 64)\n  reduce(h)\n\n  for (i = 0; i < 64; i++) x[i] = 0\n  for (i = 0; i < 32; i++) x[i] = r[i]\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i + j] += h[i] * d[j]\n    }\n  }\n\n  modL(sm.subarray(32), x)\n  return smlen\n}\n\nfunction crypto_sign_detached (sig, m, sk) {\n  var sm = new Uint8Array(m.length + crypto_sign_BYTES)\n  crypto_sign(sm, m, sk)\n  for (let i = 0; i < crypto_sign_BYTES; i++) sig[i] = sm[i]\n}\n\nfunction unpackneg (r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n    den = gf(), den2 = gf(), den4 = gf(),\n    den6 = gf()\n\n  set25519(r[2], gf1)\n  unpack25519(r[1], p)\n  S(num, r[1])\n  M(den, num, D)\n  Z(num, num, r[2])\n  A(den, r[2], den)\n\n  S(den2, den)\n  S(den4, den2)\n  M(den6, den4, den2)\n  M(t, den6, num)\n  M(t, t, den)\n\n  pow2523(t, t)\n  M(t, t, num)\n  M(t, t, den)\n  M(t, t, den)\n  M(r[0], t, den)\n\n  S(chk, r[0])\n  M(chk, chk, den)\n  if (!neq25519(chk, num)) M(r[0], r[0], I)\n\n  S(chk, r[0])\n  M(chk, chk, den)\n  if (!neq25519(chk, num)) return false\n\n  if (par25519(r[0]) === (p[31] >> 7)) {\n    Z(r[0], gf(), r[0])\n  }\n\n  M(r[3], r[0], r[1])\n  return true\n}\n\n/* eslint-disable no-unused-vars */\nfunction crypto_sign_open (msg, sm, pk) {\n  check(msg, sm.length - crypto_sign_BYTES)\n  check(sm, crypto_sign_BYTES)\n  check(pk, crypto_sign_PUBLICKEYBYTES)\n  var n = sm.length\n  var m = new Uint8Array(sm.length)\n\n  var i, mlen\n  var t = new Uint8Array(32), h = new Uint8Array(64)\n  var p = [gf(), gf(), gf(), gf()],\n    q = [gf(), gf(), gf(), gf()]\n\n  mlen = -1\n  if (n < 64) return false\n\n  if (!unpackneg(q, pk)) return false\n\n  for (i = 0; i < n; i++) m[i] = sm[i]\n  for (i = 0; i < 32; i++) m[i + 32] = pk[i]\n  crypto_hash(h, m, n)\n  reduce(h)\n  scalarmult(p, q, h)\n\n  scalarbase(q, sm.subarray(32))\n  add(p, q)\n  pack(t, p)\n\n  n -= 64\n  if (!crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0\n    return false\n    // throw new Error('crypto_sign_open failed')\n  }\n\n  for (i = 0; i < n; i++) msg[i] = sm[i + 64]\n  mlen = n\n  return true\n}\n/* eslint-enable no-unused-vars */\n\nfunction crypto_sign_verify_detached (sig, m, pk) {\n  check(sig, crypto_sign_BYTES)\n  var sm = new Uint8Array(m.length + crypto_sign_BYTES)\n  var i = 0\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i]\n  for (i = 0; i < m.length; i++) sm[i + crypto_sign_BYTES] = m[i]\n  return crypto_sign_open(m, sm, pk)\n}\n\nfunction par25519 (a) {\n  var d = new Uint8Array(32)\n  pack25519(d, a)\n  return d[0] & 1\n}\n\nfunction neq25519 (a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32)\n  pack25519(c, a)\n  pack25519(d, b)\n  return crypto_verify_32(c, 0, d, 0)\n}\n\nfunction ed25519_mul_l (p, q) {\n  scalarmult(p, q, L)\n}\n\nfunction ed25519_is_on_main_subgroup (p) {\n  var pl = [gf(), gf(), gf(), gf()]\n\n  ed25519_mul_l(pl, p)\n\n  var zero = 0\n  for (let i = 0; i < 16; i++) {\n    zero |= (pl[0][i] & 0xffff)\n  }\n\n  return zero === 0\n}\n\nfunction crypto_sign_ed25519_pk_to_curve25519 (x25519_pk, ed25519_pk) {\n  check(x25519_pk, crypto_sign_PUBLICKEYBYTES)\n  check(ed25519_pk, crypto_sign_ed25519_PUBLICKEYBYTES)\n\n  var a = [gf(), gf(), gf(), gf()]\n  var x = gf([1])\n  var one_minus_y = gf([1])\n\n  assert(\n    isSmallOrder(ed25519_pk) &&\n    unpackneg(a, ed25519_pk) &&\n    ed25519_is_on_main_subgroup(a), 'Cannot convert key: bad point')\n\n  for (let i = 0; i < a.length; i++) {\n    pack25519(x25519_pk, a[i])\n  }\n\n  Z(one_minus_y, one_minus_y, a[1])\n  A(x, x, a[1])\n  inv25519(one_minus_y, one_minus_y)\n  M(x, x, one_minus_y)\n  pack25519(x25519_pk, x)\n\n  return 0\n}\n\nfunction isSmallOrder (s) {\n  Uint8Array.from([])\n\n  var bad_points = [\n    // 0 (order 4)\n    Uint8Array.from([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]),\n\n    // 1 (order 1)\n    Uint8Array.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]),\n\n    // 2707385501144840649318225287225658788936804267575313519463743609750303402022(order 8)\n    Uint8Array.from([0x26, 0xe8, 0x95, 0x8f, 0xc2, 0xb2, 0x27, 0xb0, 0x45, 0xc3,\n      0xf4, 0x89, 0xf2, 0xef, 0x98, 0xf0, 0xd5, 0xdf, 0xac, 0x05, 0xd3,\n      0xc6, 0x33, 0x39, 0xb1, 0x38, 0x02, 0x88, 0x6d, 0x53, 0xfc, 0x05]),\n\n    // 55188659117513257062467267217118295137698188065244968500265048394206261417927 (order 8)\n    Uint8Array.from([0xc7, 0x17, 0x6a, 0x70, 0x3d, 0x4d, 0xd8, 0x4f, 0xba, 0x3c,\n      0x0b, 0x76, 0x0d, 0x10, 0x67, 0x0f, 0x2a, 0x20, 0x53, 0xfa, 0x2c,\n      0x39, 0xcc, 0xc6, 0x4e, 0xc7, 0xfd, 0x77, 0x92, 0xac, 0x03, 0x7a]),\n\n    // p-1 (order 2)\n    Uint8Array.from([0xec, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f]),\n\n    //  p (=0 order 4)\n    Uint8Array.from([0xed, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f]),\n\n    // p + 1 (=1 order 1)\n    Uint8Array.from([0xee, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n      0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f])\n  ]\n\n  var c = new Uint8Array(7)\n  var j\n\n  check(bad_points, 7)\n  for (let i = 0; i < bad_points.length; i++) {\n    for (j = 0; j < 31; j++) {\n      c[i] |= s[j] ^ bad_points[i][j]\n    }\n  }\n\n  for (let i = 0; i < bad_points.length; i++) {\n    c[i] |= (s[j] & 0x7f) ^ bad_points[i][j]\n  }\n\n  var k = 0\n  for (let i = 0; i < bad_points.length; i++) {\n    k |= (c[i] - 1)\n  }\n\n  return ((k >> 8) & 1) === 0\n}\n\nfunction crypto_sign_ed25519_sk_to_pk (pk, sk) {\n  check(pk, crypto_sign_ed25519_PUBLICKEYBYTES)\n  pk.set(sk.subarray(crypto_sign_ed25519_SEEDBYTES))\n  return pk\n}\n\nfunction crypto_sign_ed25519_sk_to_curve25519 (curveSk, edSk) {\n  assert(curveSk && curveSk.byteLength === crypto_scalarmult_BYTES, \"curveSk must be 'crypto_sign_SECRETKEYBYTES' long\")\n  assert(edSk && edSk.byteLength === crypto_sign_ed25519_SECRETKEYBYTES, \"edSk must be 'crypto_sign_ed25519_SECRETKEYBYTES' long\")\n\n  var h = new Uint8Array(crypto_hash_sha512_BYTES)\n  crypto_hash(h, edSk, 32)\n\n  h[0] &= 248\n  h[31] &= 127\n  h[31] |= 64\n\n  curveSk.set(h.subarray(0, crypto_scalarmult_BYTES))\n  h.fill(0)\n  return curveSk\n}\n\nfunction check (buf, len, arg = 'Argument') {\n  if (!buf || (len && buf.length < len)) throw new Error(arg + ' must be a buffer' + (len ? ' of length ' + len : ''))\n}\n", "'use strict'\n\n// Based on https://github.com/dchest/tweetnacl-js/blob/6dcbcaf5f5cbfd313f2dcfe763db35c828c8ff5b/nacl-fast.js.\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nforward(require('./randombytes'))\nforward(require('./memory'))\nforward(require('./helpers'))\nforward(require('./crypto_verify'))\nforward(require('./crypto_auth'))\nforward(require('./crypto_box'))\nforward(require('./crypto_generichash'))\nforward(require('./crypto_hash'))\nforward(require('./crypto_hash_sha256'))\nforward(require('./crypto_kdf'))\nforward(require('./crypto_kx'))\nforward(require('./crypto_aead'))\nforward(require('./crypto_onetimeauth'))\nforward(require('./crypto_scalarmult'))\nforward(require('./crypto_secretbox'))\nforward(require('./crypto_secretstream'))\nforward(require('./crypto_shorthash'))\nforward(require('./crypto_sign'))\nforward(require('./crypto_stream'))\nforward(require('./crypto_stream_chacha20'))\n\nfunction forward (submodule) {\n  Object.keys(submodule).forEach(function (prop) {\n    module.exports[prop] = submodule[prop]\n  })\n}\n", "module.exports = require('sodium-native')\n", "var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n", "/*!\n * hash-wasm (https://www.npmjs.com/package/hash-wasm)\n * (c) Dani Biro\n * @license MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.hashwasm = {}));\n}(this, (function (exports) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\n\n    class Mutex {\n        constructor() {\n            this.mutex = Promise.resolve();\n        }\n        lock() {\n            let begin = () => { };\n            this.mutex = this.mutex.then(() => new Promise(begin));\n            return new Promise((res) => {\n                begin = res;\n            });\n        }\n        dispatch(fn) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const unlock = yield this.lock();\n                try {\n                    return yield Promise.resolve(fn());\n                }\n                finally {\n                    unlock();\n                }\n            });\n        }\n    }\n\n    /* eslint-disable import/prefer-default-export */\n    /* eslint-disable no-bitwise */\n    var _a;\n    function getGlobal() {\n        if (typeof globalThis !== 'undefined')\n            return globalThis;\n        // eslint-disable-next-line no-restricted-globals\n        if (typeof self !== 'undefined')\n            return self;\n        if (typeof window !== 'undefined')\n            return window;\n        return global;\n    }\n    const globalObject = getGlobal();\n    const nodeBuffer = (_a = globalObject.Buffer) !== null && _a !== void 0 ? _a : null;\n    const textEncoder = globalObject.TextEncoder ? new globalObject.TextEncoder() : null;\n    function intArrayToString(arr, len) {\n        return String.fromCharCode(...arr.subarray(0, len));\n    }\n    function hexCharCodesToInt(a, b) {\n        return (((a & 0xF) + ((a >> 6) | ((a >> 3) & 0x8))) << 4) | ((b & 0xF) + ((b >> 6) | ((b >> 3) & 0x8)));\n    }\n    function writeHexToUInt8(buf, str) {\n        const size = str.length >> 1;\n        for (let i = 0; i < size; i++) {\n            const index = i << 1;\n            buf[i] = hexCharCodesToInt(str.charCodeAt(index), str.charCodeAt(index + 1));\n        }\n    }\n    function hexStringEqualsUInt8(str, buf) {\n        if (str.length !== buf.length * 2) {\n            return false;\n        }\n        for (let i = 0; i < buf.length; i++) {\n            const strIndex = i << 1;\n            if (buf[i] !== hexCharCodesToInt(str.charCodeAt(strIndex), str.charCodeAt(strIndex + 1))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    const alpha = 'a'.charCodeAt(0) - 10;\n    const digit = '0'.charCodeAt(0);\n    function getDigestHex(tmpBuffer, input, hashLength) {\n        let p = 0;\n        /* eslint-disable no-plusplus */\n        for (let i = 0; i < hashLength; i++) {\n            let nibble = input[i] >>> 4;\n            tmpBuffer[p++] = nibble > 9 ? nibble + alpha : nibble + digit;\n            nibble = input[i] & 0xF;\n            tmpBuffer[p++] = nibble > 9 ? nibble + alpha : nibble + digit;\n        }\n        /* eslint-enable no-plusplus */\n        return String.fromCharCode.apply(null, tmpBuffer);\n    }\n    const getUInt8Buffer = nodeBuffer !== null\n        ? (data) => {\n            if (typeof data === 'string') {\n                const buf = nodeBuffer.from(data, 'utf8');\n                return new Uint8Array(buf.buffer, buf.byteOffset, buf.length);\n            }\n            if (nodeBuffer.isBuffer(data)) {\n                return new Uint8Array(data.buffer, data.byteOffset, data.length);\n            }\n            if (ArrayBuffer.isView(data)) {\n                return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n            }\n            throw new Error('Invalid data type!');\n        }\n        : (data) => {\n            if (typeof data === 'string') {\n                return textEncoder.encode(data);\n            }\n            if (ArrayBuffer.isView(data)) {\n                return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n            }\n            throw new Error('Invalid data type!');\n        };\n    const base64Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    const base64Lookup = new Uint8Array(256);\n    for (let i = 0; i < base64Chars.length; i++) {\n        base64Lookup[base64Chars.charCodeAt(i)] = i;\n    }\n    function encodeBase64(data, pad = true) {\n        const len = data.length;\n        const extraBytes = len % 3;\n        const parts = [];\n        const len2 = len - extraBytes;\n        for (let i = 0; i < len2; i += 3) {\n            const tmp = ((data[i] << 16) & 0xFF0000)\n                + ((data[i + 1] << 8) & 0xFF00)\n                + (data[i + 2] & 0xFF);\n            const triplet = base64Chars.charAt((tmp >> 18) & 0x3F)\n                + base64Chars.charAt((tmp >> 12) & 0x3F)\n                + base64Chars.charAt((tmp >> 6) & 0x3F)\n                + base64Chars.charAt(tmp & 0x3F);\n            parts.push(triplet);\n        }\n        if (extraBytes === 1) {\n            const tmp = data[len - 1];\n            const a = base64Chars.charAt(tmp >> 2);\n            const b = base64Chars.charAt((tmp << 4) & 0x3F);\n            parts.push(`${a}${b}`);\n            if (pad) {\n                parts.push('==');\n            }\n        }\n        else if (extraBytes === 2) {\n            const tmp = (data[len - 2] << 8) + data[len - 1];\n            const a = base64Chars.charAt(tmp >> 10);\n            const b = base64Chars.charAt((tmp >> 4) & 0x3F);\n            const c = base64Chars.charAt((tmp << 2) & 0x3F);\n            parts.push(`${a}${b}${c}`);\n            if (pad) {\n                parts.push('=');\n            }\n        }\n        return parts.join('');\n    }\n    function getDecodeBase64Length(data) {\n        let bufferLength = Math.floor(data.length * 0.75);\n        const len = data.length;\n        if (data[len - 1] === '=') {\n            bufferLength -= 1;\n            if (data[len - 2] === '=') {\n                bufferLength -= 1;\n            }\n        }\n        return bufferLength;\n    }\n    function decodeBase64(data) {\n        const bufferLength = getDecodeBase64Length(data);\n        const len = data.length;\n        const bytes = new Uint8Array(bufferLength);\n        let p = 0;\n        for (let i = 0; i < len; i += 4) {\n            const encoded1 = base64Lookup[data.charCodeAt(i)];\n            const encoded2 = base64Lookup[data.charCodeAt(i + 1)];\n            const encoded3 = base64Lookup[data.charCodeAt(i + 2)];\n            const encoded4 = base64Lookup[data.charCodeAt(i + 3)];\n            bytes[p] = (encoded1 << 2) | (encoded2 >> 4);\n            p += 1;\n            bytes[p] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n            p += 1;\n            bytes[p] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n            p += 1;\n        }\n        return bytes;\n    }\n\n    const MAX_HEAP = 16 * 1024;\n    const WASM_FUNC_HASH_LENGTH = 4;\n    const wasmMutex = new Mutex();\n    const wasmModuleCache = new Map();\n    function WASMInterface(binary, hashLength) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let wasmInstance = null;\n            let memoryView = null;\n            let initialized = false;\n            if (typeof WebAssembly === 'undefined') {\n                throw new Error('WebAssembly is not supported in this environment!');\n            }\n            const writeMemory = (data, offset = 0) => {\n                memoryView.set(data, offset);\n            };\n            const getMemory = () => memoryView;\n            const getExports = () => wasmInstance.exports;\n            const setMemorySize = (totalSize) => {\n                wasmInstance.exports.Hash_SetMemorySize(totalSize);\n                const arrayOffset = wasmInstance.exports.Hash_GetBuffer();\n                const memoryBuffer = wasmInstance.exports.memory.buffer;\n                memoryView = new Uint8Array(memoryBuffer, arrayOffset, totalSize);\n            };\n            const getStateSize = () => {\n                const view = new DataView(wasmInstance.exports.memory.buffer);\n                const stateSize = view.getUint32(wasmInstance.exports.STATE_SIZE, true);\n                return stateSize;\n            };\n            const loadWASMPromise = wasmMutex.dispatch(() => __awaiter(this, void 0, void 0, function* () {\n                if (!wasmModuleCache.has(binary.name)) {\n                    const asm = decodeBase64(binary.data);\n                    const promise = WebAssembly.compile(asm);\n                    wasmModuleCache.set(binary.name, promise);\n                }\n                const module = yield wasmModuleCache.get(binary.name);\n                wasmInstance = yield WebAssembly.instantiate(module, {\n                // env: {\n                //   emscripten_memcpy_big: (dest, src, num) => {\n                //     const memoryBuffer = wasmInstance.exports.memory.buffer;\n                //     const memView = new Uint8Array(memoryBuffer, 0);\n                //     memView.set(memView.subarray(src, src + num), dest);\n                //   },\n                //   print_memory: (offset, len) => {\n                //     const memoryBuffer = wasmInstance.exports.memory.buffer;\n                //     const memView = new Uint8Array(memoryBuffer, 0);\n                //     console.log('print_int32', memView.subarray(offset, offset + len));\n                //   },\n                // },\n                });\n                // wasmInstance.exports._start();\n            }));\n            const setupInterface = () => __awaiter(this, void 0, void 0, function* () {\n                if (!wasmInstance) {\n                    yield loadWASMPromise;\n                }\n                const arrayOffset = wasmInstance.exports.Hash_GetBuffer();\n                const memoryBuffer = wasmInstance.exports.memory.buffer;\n                memoryView = new Uint8Array(memoryBuffer, arrayOffset, MAX_HEAP);\n            });\n            const init = (bits = null) => {\n                initialized = true;\n                wasmInstance.exports.Hash_Init(bits);\n            };\n            const updateUInt8Array = (data) => {\n                let read = 0;\n                while (read < data.length) {\n                    const chunk = data.subarray(read, read + MAX_HEAP);\n                    read += chunk.length;\n                    memoryView.set(chunk);\n                    wasmInstance.exports.Hash_Update(chunk.length);\n                }\n            };\n            const update = (data) => {\n                if (!initialized) {\n                    throw new Error('update() called before init()');\n                }\n                const Uint8Buffer = getUInt8Buffer(data);\n                updateUInt8Array(Uint8Buffer);\n            };\n            const digestChars = new Uint8Array(hashLength * 2);\n            const digest = (outputType, padding = null) => {\n                if (!initialized) {\n                    throw new Error('digest() called before init()');\n                }\n                initialized = false;\n                wasmInstance.exports.Hash_Final(padding);\n                if (outputType === 'binary') {\n                    // the data is copied to allow GC of the original memory object\n                    return memoryView.slice(0, hashLength);\n                }\n                return getDigestHex(digestChars, memoryView, hashLength);\n            };\n            const save = () => {\n                if (!initialized) {\n                    throw new Error('save() can only be called after init() and before digest()');\n                }\n                const stateOffset = wasmInstance.exports.Hash_GetState();\n                const stateLength = getStateSize();\n                const memoryBuffer = wasmInstance.exports.memory.buffer;\n                const internalState = new Uint8Array(memoryBuffer, stateOffset, stateLength);\n                // prefix is 4 bytes from SHA1 hash of the WASM binary\n                // it is used to detect incompatible internal states between different versions of hash-wasm\n                const prefixedState = new Uint8Array(WASM_FUNC_HASH_LENGTH + stateLength);\n                writeHexToUInt8(prefixedState, binary.hash);\n                prefixedState.set(internalState, WASM_FUNC_HASH_LENGTH);\n                return prefixedState;\n            };\n            const load = (state) => {\n                if (!(state instanceof Uint8Array)) {\n                    throw new Error('load() expects an Uint8Array generated by save()');\n                }\n                const stateOffset = wasmInstance.exports.Hash_GetState();\n                const stateLength = getStateSize();\n                const overallLength = WASM_FUNC_HASH_LENGTH + stateLength;\n                const memoryBuffer = wasmInstance.exports.memory.buffer;\n                if (state.length !== overallLength) {\n                    throw new Error(`Bad state length (expected ${overallLength} bytes, got ${state.length})`);\n                }\n                if (!hexStringEqualsUInt8(binary.hash, state.subarray(0, WASM_FUNC_HASH_LENGTH))) {\n                    throw new Error('This state was written by an incompatible hash implementation');\n                }\n                const internalState = state.subarray(WASM_FUNC_HASH_LENGTH);\n                new Uint8Array(memoryBuffer, stateOffset, stateLength).set(internalState);\n                initialized = true;\n            };\n            const isDataShort = (data) => {\n                if (typeof data === 'string') {\n                    // worst case is 4 bytes / char\n                    return data.length < MAX_HEAP / 4;\n                }\n                return data.byteLength < MAX_HEAP;\n            };\n            let canSimplify = isDataShort;\n            switch (binary.name) {\n                case 'argon2':\n                case 'scrypt':\n                    canSimplify = () => true;\n                    break;\n                case 'blake2b':\n                case 'blake2s':\n                    // if there is a key at blake2 then cannot simplify\n                    canSimplify = (data, initParam) => initParam <= 512 && isDataShort(data);\n                    break;\n                case 'blake3':\n                    // if there is a key at blake3 then cannot simplify\n                    canSimplify = (data, initParam) => initParam === 0 && isDataShort(data);\n                    break;\n                case 'xxhash64': // cannot simplify\n                case 'xxhash3':\n                case 'xxhash128':\n                    canSimplify = () => false;\n                    break;\n            }\n            // shorthand for (init + update + digest) for better performance\n            const calculate = (data, initParam = null, digestParam = null) => {\n                if (!canSimplify(data, initParam)) {\n                    init(initParam);\n                    update(data);\n                    return digest('hex', digestParam);\n                }\n                const buffer = getUInt8Buffer(data);\n                memoryView.set(buffer);\n                wasmInstance.exports.Hash_Calculate(buffer.length, initParam, digestParam);\n                return getDigestHex(digestChars, memoryView, hashLength);\n            };\n            yield setupInterface();\n            return {\n                getMemory,\n                writeMemory,\n                getExports,\n                setMemorySize,\n                init,\n                update,\n                digest,\n                save,\n                load,\n                calculate,\n                hashLength,\n            };\n        });\n    }\n\n    var name$k = \"adler32\";\n    var data$k = \"AGFzbQEAAAABDANgAAF/YAAAYAF/AAMHBgABAgEAAgQFAXABAQEFBAEBAgIGDgJ/AUGAiQULfwBBgAgLB3AIBm1lbW9yeQIADkhhc2hfR2V0QnVmZmVyAAAJSGFzaF9Jbml0AAELSGFzaF9VcGRhdGUAAgpIYXNoX0ZpbmFsAAMNSGFzaF9HZXRTdGF0ZQAEDkhhc2hfQ2FsY3VsYXRlAAUKU1RBVEVfU0laRQMBCoAIBgUAQYAJCwoAQQBBATYChAgL9gYBBn9BACgChAgiAUH//wNxIQIgAUEQdiEDAkACQCAAQQFHDQAgAkEALQCACWoiAUGPgHxqIAEgAUHw/wNLGyIBIANqIgRBEHQiBUGAgDxqIAUgBEHw/wNLGyABciEBDAELAkACQAJAAkACQCAAQRBJDQBBgAkhBiAAQbArSQ0BQYAJIQYDQEEAIQUDQCAGIAVqIgEoAgAiBEH/AXEgAmoiAiADaiACIARBCHZB/wFxaiICaiACIARBEHZB/wFxaiICaiACIARBGHZqIgJqIAIgAUEEaigCACIEQf8BcWoiAmogAiAEQQh2Qf8BcWoiAmogAiAEQRB2Qf8BcWoiAmogAiAEQRh2aiICaiACIAFBCGooAgAiBEH/AXFqIgJqIAIgBEEIdkH/AXFqIgJqIAIgBEEQdkH/AXFqIgJqIAIgBEEYdmoiBGogBCABQQxqKAIAIgFB/wFxaiIEaiAEIAFBCHZB/wFxaiIEaiAEIAFBEHZB/wFxaiIEaiAEIAFBGHZqIgJqIQMgBUEQaiIFQbArRw0ACyADQfH/A3AhAyACQfH/A3AhAiAGQbAraiEGIABB0FRqIgBBrytLDQALIABFDQQgAEEPSw0BDAILAkAgAEUNAEEAIQEDQCACIAFBgAlqLQAAaiICIANqIQMgACABQQFqIgFHDQALCyACQY+AfGogAiACQfD/A0sbIANB8f8DcEEQdHIhAQwECwNAIAYoAgAiAUH/AXEgAmoiBCADaiAEIAFBCHZB/wFxaiIEaiAEIAFBEHZB/wFxaiIEaiAEIAFBGHZqIgRqIAQgBkEEaigCACIBQf8BcWoiBGogBCABQQh2Qf8BcWoiBGogBCABQRB2Qf8BcWoiBGogBCABQRh2aiIEaiAEIAZBCGooAgAiAUH/AXFqIgRqIAQgAUEIdkH/AXFqIgRqIAQgAUEQdkH/AXFqIgRqIAQgAUEYdmoiBGogBCAGQQxqKAIAIgFB/wFxaiIEaiAEIAFBCHZB/wFxaiIEaiAEIAFBEHZB/wFxaiIEaiAEIAFBGHZqIgJqIQMgBkEQaiEGIABBcGoiAEEPSw0ACyAARQ0BCwNAIAIgBi0AAGoiAiADaiEDIAZBAWohBiAAQX9qIgANAAsLIANB8f8DcCEDIAJB8f8DcCECCyACIANBEHRyIQELQQAgATYChAgLMgEBf0EAQQAoAoQIIgBBGHQgAEEIdEGAgPwHcXIgAEEIdkGA/gNxIABBGHZycjYCgAkLBQBBhAgLPABBAEEBNgKECCAAEAJBAEEAKAKECCIAQRh0IABBCHRBgID8B3FyIABBCHZBgP4DcSAAQRh2cnI2AoAJCwsVAgBBgAgLBAQAAAAAQYQICwQBAAAA\";\n    var hash$k = \"321174b4\";\n    var wasmJson$k = {\n    \tname: name$k,\n    \tdata: data$k,\n    \thash: hash$k\n    };\n\n    function lockedCreate(mutex, binary, hashLength) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const unlock = yield mutex.lock();\n            const wasm = yield WASMInterface(binary, hashLength);\n            unlock();\n            return wasm;\n        });\n    }\n\n    const mutex$l = new Mutex();\n    let wasmCache$l = null;\n    /**\n     * Calculates Adler-32 hash. The resulting 32-bit hash is stored in\n     * network byte order (big-endian).\n     *\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function adler32(data) {\n        if (wasmCache$l === null) {\n            return lockedCreate(mutex$l, wasmJson$k, 4)\n                .then((wasm) => {\n                wasmCache$l = wasm;\n                return wasmCache$l.calculate(data);\n            });\n        }\n        try {\n            const hash = wasmCache$l.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new Adler-32 hash instance\n     */\n    function createAdler32() {\n        return WASMInterface(wasmJson$k, 4).then((wasm) => {\n            wasm.init();\n            const obj = {\n                init: () => { wasm.init(); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 4,\n                digestSize: 4,\n            };\n            return obj;\n        });\n    }\n\n    var name$j = \"blake2b\";\n    var data$j = \"\";\n    var hash$j = \"68afc9cf\";\n    var wasmJson$j = {\n    \tname: name$j,\n    \tdata: data$j,\n    \thash: hash$j\n    };\n\n    const mutex$k = new Mutex();\n    let wasmCache$k = null;\n    function validateBits$4(bits) {\n        if (!Number.isInteger(bits) || bits < 8 || bits > 512 || bits % 8 !== 0) {\n            return new Error('Invalid variant! Valid values: 8, 16, ..., 512');\n        }\n        return null;\n    }\n    function getInitParam$1(outputBits, keyBits) {\n        // eslint-disable-next-line no-bitwise\n        return outputBits | (keyBits << 16);\n    }\n    /**\n     * Calculates BLAKE2b hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param bits Number of output bits, which has to be a number\n     *             divisible by 8, between 8 and 512. Defaults to 512.\n     * @param key Optional key (string, Buffer or TypedArray). Maximum length is 64 bytes.\n     * @returns Computed hash as a hexadecimal string\n     */\n    function blake2b(data, bits = 512, key = null) {\n        if (validateBits$4(bits)) {\n            return Promise.reject(validateBits$4(bits));\n        }\n        let keyBuffer = null;\n        let initParam = bits;\n        if (key !== null) {\n            keyBuffer = getUInt8Buffer(key);\n            if (keyBuffer.length > 64) {\n                return Promise.reject(new Error('Max key length is 64 bytes'));\n            }\n            initParam = getInitParam$1(bits, keyBuffer.length);\n        }\n        const hashLength = bits / 8;\n        if (wasmCache$k === null || wasmCache$k.hashLength !== hashLength) {\n            return lockedCreate(mutex$k, wasmJson$j, hashLength)\n                .then((wasm) => {\n                wasmCache$k = wasm;\n                if (initParam > 512) {\n                    wasmCache$k.writeMemory(keyBuffer);\n                }\n                return wasmCache$k.calculate(data, initParam);\n            });\n        }\n        try {\n            if (initParam > 512) {\n                wasmCache$k.writeMemory(keyBuffer);\n            }\n            const hash = wasmCache$k.calculate(data, initParam);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new BLAKE2b hash instance\n     * @param bits Number of output bits, which has to be a number\n     *             divisible by 8, between 8 and 512. Defaults to 512.\n     * @param key Optional key (string, Buffer or TypedArray). Maximum length is 64 bytes.\n     */\n    function createBLAKE2b(bits = 512, key = null) {\n        if (validateBits$4(bits)) {\n            return Promise.reject(validateBits$4(bits));\n        }\n        let keyBuffer = null;\n        let initParam = bits;\n        if (key !== null) {\n            keyBuffer = getUInt8Buffer(key);\n            if (keyBuffer.length > 64) {\n                return Promise.reject(new Error('Max key length is 64 bytes'));\n            }\n            initParam = getInitParam$1(bits, keyBuffer.length);\n        }\n        const outputSize = bits / 8;\n        return WASMInterface(wasmJson$j, outputSize).then((wasm) => {\n            if (initParam > 512) {\n                wasm.writeMemory(keyBuffer);\n            }\n            wasm.init(initParam);\n            const obj = {\n                init: initParam > 512\n                    ? () => {\n                        wasm.writeMemory(keyBuffer);\n                        wasm.init(initParam);\n                        return obj;\n                    }\n                    : () => {\n                        wasm.init(initParam);\n                        return obj;\n                    },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 128,\n                digestSize: outputSize,\n            };\n            return obj;\n        });\n    }\n\n    var name$i = \"argon2\";\n    var data$i = \"\";\n    var hash$i = \"59aa4fb4\";\n    var wasmJson$i = {\n    \tname: name$i,\n    \tdata: data$i,\n    \thash: hash$i\n    };\n\n    function encodeResult(salt, options, res) {\n        const parameters = [\n            `m=${options.memorySize}`,\n            `t=${options.iterations}`,\n            `p=${options.parallelism}`,\n        ].join(',');\n        return `$argon2${options.hashType}$v=19$${parameters}$${encodeBase64(salt, false)}$${encodeBase64(res, false)}`;\n    }\n    const uint32View = new DataView(new ArrayBuffer(4));\n    function int32LE(x) {\n        uint32View.setInt32(0, x, true);\n        return new Uint8Array(uint32View.buffer);\n    }\n    function hashFunc(blake512, buf, len) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (len <= 64) {\n                const blake = yield createBLAKE2b(len * 8);\n                blake.update(int32LE(len));\n                blake.update(buf);\n                return blake.digest('binary');\n            }\n            const r = Math.ceil(len / 32) - 2;\n            const ret = new Uint8Array(len);\n            blake512.init();\n            blake512.update(int32LE(len));\n            blake512.update(buf);\n            let vp = blake512.digest('binary');\n            ret.set(vp.subarray(0, 32), 0);\n            for (let i = 1; i < r; i++) {\n                blake512.init();\n                blake512.update(vp);\n                vp = blake512.digest('binary');\n                ret.set(vp.subarray(0, 32), i * 32);\n            }\n            const partialBytesNeeded = len - 32 * r;\n            let blakeSmall;\n            if (partialBytesNeeded === 64) {\n                blakeSmall = blake512;\n                blakeSmall.init();\n            }\n            else {\n                blakeSmall = yield createBLAKE2b(partialBytesNeeded * 8);\n            }\n            blakeSmall.update(vp);\n            vp = blakeSmall.digest('binary');\n            ret.set(vp.subarray(0, partialBytesNeeded), r * 32);\n            return ret;\n        });\n    }\n    function getHashType(type) {\n        switch (type) {\n            case 'd':\n                return 0;\n            case 'i':\n                return 1;\n            default:\n                return 2;\n        }\n    }\n    function argon2Internal(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parallelism, iterations, hashLength } = options;\n            const password = getUInt8Buffer(options.password);\n            const salt = getUInt8Buffer(options.salt);\n            const version = 0x13;\n            const hashType = getHashType(options.hashType);\n            const { memorySize } = options; // in KB\n            const [argon2Interface, blake512] = yield Promise.all([\n                WASMInterface(wasmJson$i, 1024),\n                createBLAKE2b(512),\n            ]);\n            // last block is for storing the init vector\n            argon2Interface.setMemorySize(memorySize * 1024 + 1024);\n            const initVector = new Uint8Array(24);\n            const initVectorView = new DataView(initVector.buffer);\n            initVectorView.setInt32(0, parallelism, true);\n            initVectorView.setInt32(4, hashLength, true);\n            initVectorView.setInt32(8, memorySize, true);\n            initVectorView.setInt32(12, iterations, true);\n            initVectorView.setInt32(16, version, true);\n            initVectorView.setInt32(20, hashType, true);\n            argon2Interface.writeMemory(initVector, memorySize * 1024);\n            blake512.init();\n            blake512.update(initVector);\n            blake512.update(int32LE(password.length));\n            blake512.update(password);\n            blake512.update(int32LE(salt.length));\n            blake512.update(salt);\n            blake512.update(int32LE(0)); // key length + key\n            blake512.update(int32LE(0)); // associatedData length + associatedData\n            const segments = Math.floor(memorySize / (parallelism * 4)); // length of each lane\n            const lanes = segments * 4;\n            const param = new Uint8Array(72);\n            const H0 = blake512.digest('binary');\n            param.set(H0);\n            for (let lane = 0; lane < parallelism; lane++) {\n                param.set(int32LE(0), 64);\n                param.set(int32LE(lane), 68);\n                let position = lane * lanes;\n                let chunk = yield hashFunc(blake512, param, 1024);\n                argon2Interface.writeMemory(chunk, position * 1024);\n                position += 1;\n                param.set(int32LE(1), 64);\n                chunk = yield hashFunc(blake512, param, 1024);\n                argon2Interface.writeMemory(chunk, position * 1024);\n            }\n            const C = new Uint8Array(1024);\n            writeHexToUInt8(C, argon2Interface.calculate(new Uint8Array([]), memorySize));\n            const res = yield hashFunc(blake512, C, hashLength);\n            if (options.outputType === 'hex') {\n                const digestChars = new Uint8Array(hashLength * 2);\n                return getDigestHex(digestChars, res, hashLength);\n            }\n            if (options.outputType === 'encoded') {\n                return encodeResult(salt, options, res);\n            }\n            // return binary format\n            return res;\n        });\n    }\n    const validateOptions$3 = (options) => {\n        if (!options || typeof options !== 'object') {\n            throw new Error('Invalid options parameter. It requires an object.');\n        }\n        if (!options.password) {\n            throw new Error('Password must be specified');\n        }\n        options.password = getUInt8Buffer(options.password);\n        if (options.password.length < 1) {\n            throw new Error('Password must be specified');\n        }\n        if (!options.salt) {\n            throw new Error('Salt must be specified');\n        }\n        options.salt = getUInt8Buffer(options.salt);\n        if (options.salt.length < 8) {\n            throw new Error('Salt should be at least 8 bytes long');\n        }\n        if (!Number.isInteger(options.iterations) || options.iterations < 1) {\n            throw new Error('Iterations should be a positive number');\n        }\n        if (!Number.isInteger(options.parallelism) || options.parallelism < 1) {\n            throw new Error('Parallelism should be a positive number');\n        }\n        if (!Number.isInteger(options.hashLength) || options.hashLength < 4) {\n            throw new Error('Hash length should be at least 4 bytes.');\n        }\n        if (!Number.isInteger(options.memorySize)) {\n            throw new Error('Memory size should be specified.');\n        }\n        if (options.memorySize < 8 * options.parallelism) {\n            throw new Error('Memory size should be at least 8 * parallelism.');\n        }\n        if (options.outputType === undefined) {\n            options.outputType = 'hex';\n        }\n        if (!['hex', 'binary', 'encoded'].includes(options.outputType)) {\n            throw new Error(`Insupported output type ${options.outputType}. Valid values: ['hex', 'binary', 'encoded']`);\n        }\n    };\n    /**\n     * Calculates hash using the argon2i password-hashing function\n     * @returns Computed hash\n     */\n    function argon2i(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateOptions$3(options);\n            return argon2Internal(Object.assign(Object.assign({}, options), { hashType: 'i' }));\n        });\n    }\n    /**\n     * Calculates hash using the argon2id password-hashing function\n     * @returns Computed hash\n     */\n    function argon2id(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateOptions$3(options);\n            return argon2Internal(Object.assign(Object.assign({}, options), { hashType: 'id' }));\n        });\n    }\n    /**\n     * Calculates hash using the argon2d password-hashing function\n     * @returns Computed hash\n     */\n    function argon2d(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateOptions$3(options);\n            return argon2Internal(Object.assign(Object.assign({}, options), { hashType: 'd' }));\n        });\n    }\n    const getHashParameters = (password, encoded) => {\n        const regex = /^\\$argon2(id|i|d)\\$v=([0-9]+)\\$((?:[mtp]=[0-9]+,){2}[mtp]=[0-9]+)\\$([A-Za-z0-9+/]+)\\$([A-Za-z0-9+/]+)$/;\n        const match = encoded.match(regex);\n        if (!match) {\n            throw new Error('Invalid hash');\n        }\n        const [, hashType, version, parameters, salt, hash] = match;\n        if (version !== '19') {\n            throw new Error(`Unsupported version: ${version}`);\n        }\n        const parsedParameters = {};\n        const paramMap = { m: 'memorySize', p: 'parallelism', t: 'iterations' };\n        parameters.split(',').forEach((x) => {\n            const [n, v] = x.split('=');\n            parsedParameters[paramMap[n]] = parseInt(v, 10);\n        });\n        return Object.assign(Object.assign({}, parsedParameters), { password, hashType: hashType, salt: decodeBase64(salt), hashLength: getDecodeBase64Length(hash), outputType: 'encoded' });\n    };\n    const validateVerifyOptions$1 = (options) => {\n        if (!options || typeof options !== 'object') {\n            throw new Error('Invalid options parameter. It requires an object.');\n        }\n        if (options.hash === undefined || typeof options.hash !== 'string') {\n            throw new Error('Hash should be specified');\n        }\n    };\n    /**\n     * Verifies password using the argon2 password-hashing function\n     * @returns True if the encoded hash matches the password\n     */\n    function argon2Verify(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateVerifyOptions$1(options);\n            const params = getHashParameters(options.password, options.hash);\n            validateOptions$3(params);\n            const hashStart = options.hash.lastIndexOf('$') + 1;\n            const result = yield argon2Internal(params);\n            return result.substring(hashStart) === options.hash.substring(hashStart);\n        });\n    }\n\n    var name$h = \"blake2s\";\n    var data$h = \"\";\n    var hash$h = \"0f570f49\";\n    var wasmJson$h = {\n    \tname: name$h,\n    \tdata: data$h,\n    \thash: hash$h\n    };\n\n    const mutex$j = new Mutex();\n    let wasmCache$j = null;\n    function validateBits$3(bits) {\n        if (!Number.isInteger(bits) || bits < 8 || bits > 256 || bits % 8 !== 0) {\n            return new Error('Invalid variant! Valid values: 8, 16, ..., 256');\n        }\n        return null;\n    }\n    function getInitParam(outputBits, keyBits) {\n        // eslint-disable-next-line no-bitwise\n        return outputBits | (keyBits << 16);\n    }\n    /**\n     * Calculates BLAKE2s hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param bits Number of output bits, which has to be a number\n     *             divisible by 8, between 8 and 256. Defaults to 256.\n     * @param key Optional key (string, Buffer or TypedArray). Maximum length is 32 bytes.\n     * @returns Computed hash as a hexadecimal string\n     */\n    function blake2s(data, bits = 256, key = null) {\n        if (validateBits$3(bits)) {\n            return Promise.reject(validateBits$3(bits));\n        }\n        let keyBuffer = null;\n        let initParam = bits;\n        if (key !== null) {\n            keyBuffer = getUInt8Buffer(key);\n            if (keyBuffer.length > 32) {\n                return Promise.reject(new Error('Max key length is 32 bytes'));\n            }\n            initParam = getInitParam(bits, keyBuffer.length);\n        }\n        const hashLength = bits / 8;\n        if (wasmCache$j === null || wasmCache$j.hashLength !== hashLength) {\n            return lockedCreate(mutex$j, wasmJson$h, hashLength)\n                .then((wasm) => {\n                wasmCache$j = wasm;\n                if (initParam > 512) {\n                    wasmCache$j.writeMemory(keyBuffer);\n                }\n                return wasmCache$j.calculate(data, initParam);\n            });\n        }\n        try {\n            if (initParam > 512) {\n                wasmCache$j.writeMemory(keyBuffer);\n            }\n            const hash = wasmCache$j.calculate(data, initParam);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new BLAKE2s hash instance\n     * @param bits Number of output bits, which has to be a number\n     *             divisible by 8, between 8 and 256. Defaults to 256.\n     * @param key Optional key (string, Buffer or TypedArray). Maximum length is 32 bytes.\n     */\n    function createBLAKE2s(bits = 256, key = null) {\n        if (validateBits$3(bits)) {\n            return Promise.reject(validateBits$3(bits));\n        }\n        let keyBuffer = null;\n        let initParam = bits;\n        if (key !== null) {\n            keyBuffer = getUInt8Buffer(key);\n            if (keyBuffer.length > 32) {\n                return Promise.reject(new Error('Max key length is 32 bytes'));\n            }\n            initParam = getInitParam(bits, keyBuffer.length);\n        }\n        const outputSize = bits / 8;\n        return WASMInterface(wasmJson$h, outputSize).then((wasm) => {\n            if (initParam > 512) {\n                wasm.writeMemory(keyBuffer);\n            }\n            wasm.init(initParam);\n            const obj = {\n                init: initParam > 512\n                    ? () => {\n                        wasm.writeMemory(keyBuffer);\n                        wasm.init(initParam);\n                        return obj;\n                    }\n                    : () => {\n                        wasm.init(initParam);\n                        return obj;\n                    },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: outputSize,\n            };\n            return obj;\n        });\n    }\n\n    var name$g = \"blake3\";\n    var data$g = \"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FWogFCAfc0EZdyIVaiIUIBhqIB0gFHNBEHciFCAlaiIYIBVzQRR3IhVqIhkgFHNBGHciFCAYaiIYaiIdICBzQRR3Ih9qIiA2AgAgACAXICQgHHNBGHciHCAeaiIeIBtzQRl3IhtqIAFqIgEgFmogASAUc0EQdyIBICtqIhQgG3NBFHciFmoiFyABc0EYdyIBNgI4IAAgGCAVc0EZdyIVIC5qIANqIgMgE2ogAyAcc0EQdyIDIAIgImoiAmoiIiAVc0EUdyIVaiITNgIEIAAgASAUaiIBNgIkIAAgAiAFc0EZdyICIBlqICFqIgUgGmogBSAnc0EQdyIFIB5qIhQgAnNBFHciAmoiGjYCCCAAICAgEnNBGHciEiAdaiIhNgIoIAAgEyADc0EYdyIDNgIwIAAgASAWc0EZdzYCECAAIBogBXNBGHciATYCNCAAICEgH3NBGXc2AhQgACABIBRqIgE2AiAgACADICJqIgUgFXNBGXc2AhggACASNgI8IAAgASACc0EZdzYCHCAAIBc2AgwgACAFNgIsC7cDAwR/A34FfyMAQdABayIBJAACQCAAe6ciAkEALQCQigEiA08NACABQShqIQQDQCABQQApA4CJASIANwMAIAFBACkDiIkBIgU3AwggAUEAKQOQiQEiBjcDECABQQApA5iJASIHNwMYIAEgA0EFdCIDQdGJAWoiCCkDADcDKCABIANB2YkBaiIJKQMANwMwIAEgA0HhiQFqIgopAwA3AzggASADQemJAWoiCykDADcDQEEALQCKigEhDCABQcAAOgBoIAEgDEEEciIMOgBpIAFCADcDICABIANB8YkBaikDADcDSCABIANB+YkBaikDADcDUCABIANBgYoBaikDADcDWCABIANBiYoBaikDADcDYCABIAc3A4gBIAEgBjcDgAEgASAFNwN4IAEgADcDcCABQZABaiABQfAAaiAEQcAAQgAgDBADIAsgASkDyAEgASkDqAGFNwMAIAogASkDwAEgASkDoAGFNwMAIAkgASkDuAEgASkDmAGFNwMAIAggASkDsAEgASkDkAGFNwMAQQBBAC0AkIoBQX9qIgM6AJCKASACIANB/wFxIgNJDQALCyABQdABaiQAC/oLBAR/BH4GfwF+IwBB0AJrIgUkAAJAAkAgAUGACEsNAEEAIQYgASEHQQAhCAJAIAFB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IQwDQCABQbABaiABIAsgCUH/AXEgCCACQQhyQf8BcRADIAEgASkD2AEiDSABKQO4AYU3A3ggASABKQPgASIOIAEpA8ABhTcDgAEgASAGIAEpA+gBIg+FNwOoASABIAUgDoU3A6ABIAEgBCANhTcDmAEgASADIAEpA9ABIg2FNwOQASABIA8gASkDyAGFNwOIASAAQcAAIABBwABJGyIQQX9qIQkgASANIAEpA7ABhSINNwNwIA2nIREgCiEHIAwhAgJAA0AgAiAROgAAIAlFDQEgCUF/aiEJIAJBAWohAiAHLQAAIREgB0EBaiEHDAALCyAAIBBrIgBFDQIgDCAQaiEMIAhCAXwhCCABKQMIIQQgASkDACEDIAEpAxghBiABKQMQIQUgAS0AaSECIAEtAGghCQwACwsCQAJAAkBBAC0AiYoBIglBBnRBAEEALQCIigEiDGtGDQAgAUHgAGpBACkDgIoBNwMAIAFB2ABqQQApA/iJATcDACABQdAAakEAKQPwiQE3AwAgAUHIAGpBACkD6IkBNwMAIAFBwABqQQApA+CJATcDACABQThqQQApA9iJATcDACABQTBqQQApA9CJATcDACABQQApA8iJATcDKCABQQApA8CJASIINwMgIAFBACkDuIkBIg03AxggAUEAKQOwiQEiDjcDECABQQApA6iJASIPNwMIIAFBACkDoIkBIgM3AwBBAC0AiooBIQcgAUHuAGogAUG0AWovAQA7AQAgASABKAGwATYBaiABIAw6AGggASAHIAlFckECciIJOgBpDAELIAFB4ABqIAJBfmoiAkEFdCIJQcmKAWopAwA3AwAgAUHYAGogCUHBigFqKQMANwMAIAFB0ABqIAlBuYoBaikDADcDACABQcgAaiAJQbGKAWopAwA3AwBBwAAhDCABQcAAaiAJQamKAWopAwA3AwAgAUE4aiAJQaGKAWopAwA3AwAgAUEwaiAJQZmKAWopAwA3AwBCACEIIAFCADcDICABQQApA5iJASINNwMYIAFBACkDkIkBIg43AxAgAUEAKQOIiQEiDzcDCCABQQApA4CJASIDNwMAIAEgCUGRigFqKQMANwMoQQAtAIqKASEJIAFB7gBqIAFBsAFqQQRqLwEAOwEAIAEgASgBsAE2AWogASAJQQRyIgk6AGkgAUHAADoAaCACRQ0BCyACQX9qIgdBBXQiEUGRigFqKQMAIQQgEUGZigFqKQMAIQUgEUGhigFqKQMAIQYgEUGpigFqKQMAIRIgASANNwOIASABIA43A4ABIAEgDzcDeCABIAM3A3AgAUGwAWogAUHwAGogAUEoaiIQIAwgCCAJQf8BcRADIAFBwAA6AGggASASNwNAIAEgBjcDOCABIAU3AzAgASAENwMoIAFCADcDICABQQApA5iJASIINwMYIAFBACkDkIkBIg03AxAgAUEAKQOIiQEiDjcDCCABQQApA4CJASIPNwMAIAFBAC0AiooBQQRyIgk6AGkgASABKQPoASABKQPIAYU3A2AgASABKQPgASABKQPAAYU3A1ggASABKQPYASABKQO4AYU3A1AgASABKQPQASABKQOwAYU3A0ggAUHuAGogAUGwAWpBBGoiDC8BADsBACABIAEoAbABNgFqIAdFDQAgAUHqAGohESACQQV0QemJAWohAgNAIAJBaGopAwAhAyACQXBqKQMAIQQgAkF4aikDACEFIAIpAwAhBiABIAg3A4gBIAEgDTcDgAEgASAONwN4IAEgDzcDcCABQbABaiABQfAAaiAQQcAAQgAgCUH/AXEQAyABQcAAOgBoIAEgBjcDQCABIAU3AzggASAENwMwIAEgAzcDKCABQgA3AyAgAUEAKQOYiQEiCDcDGCABQQApA5CJASINNwMQIAFBACkDiIkBIg43AwggAUEAKQOAiQEiDzcDACABQQAtAIqKAUEEciIJOgBpIAEgASkD6AEgASkDyAGFNwNgIAEgASkD4AEgASkDwAGFNwNYIAEgASkD2AEgASkDuAGFNwNQIAEgASkD0AEgASkDsAGFNwNIIBFBBGogDC8BADsBACARIAEoAbABNgEAIAJBYGohAiAHQX9qIgcNAAsLIAFB8ABqQQFyIQogAUEoaiELQgAhCEGACSEMQcAAIQIDQCABQbABaiABIAsgAkH/AXEgCCAJQQhyQf8BcRADIAEgASkD2AEiDSABKQO4AYU3A3ggASABKQPgASIOIAEpA8ABhTcDgAEgASABKQPoASIPIAEpA8gBhTcDiAEgASABKQMAIAEpA9ABIgOFNwOQASABIA0gASkDCIU3A5gBIAEgDiABKQMQhTcDoAEgASADIAEpA7ABhSINNwNwIAEgDyABKQMYhTcDqAEgAEHAACAAQcAASRsiEEF/aiECIA2nIREgCiEHIAwhCQJAA0AgCSAROgAAIAJFDQEgAkF/aiECIAlBAWohCSAHLQAAIREgB0EBaiEHDAALCyAAIBBrIgBFDQEgDCAQaiEMIAhCAXwhCCABLQBpIQkgAS0AaCECDAALCyABQfABaiQAC6MCAQR+AkACQCAAQSBGDQBCq7OP/JGjs/DbACEBQv+kuYjFkdqCm38hAkLy5rvjo6f9p6V/IQNC58yn0NbQ67O7fyEEQQAhAAwBC0EAKQOYCSEBQQApA5AJIQJBACkDiAkhA0EAKQOACSEEQRAhAAtBACAAOgCKigFBAEIANwOAigFBAEIANwP4iQFBAEIANwPwiQFBAEIANwPoiQFBAEIANwPgiQFBAEIANwPYiQFBAEIANwPQiQFBAEIANwPIiQFBAEIANwPAiQFBACABNwO4iQFBACACNwOwiQFBACADNwOoiQFBACAENwOgiQFBACABNwOYiQFBACACNwOQiQFBACADNwOIiQFBACAENwOAiQFBAEEAOgCQigFBAEEAOwGIigELBgAgABABCwYAIAAQBgsGAEGAiQELqwIBBH4CQAJAIAFBIEYNAEKrs4/8kaOz8NsAIQNC/6S5iMWR2oKbfyEEQvLmu+Ojp/2npX8hBULnzKfQ1tDrs7t/IQZBACEBDAELQQApA5gJIQNBACkDkAkhBEEAKQOICSEFQQApA4AJIQZBECEBC0EAIAE6AIqKAUEAQgA3A4CKAUEAQgA3A/iJAUEAQgA3A/CJAUEAQgA3A+iJAUEAQgA3A+CJAUEAQgA3A9iJAUEAQgA3A9CJAUEAQgA3A8iJAUEAQgA3A8CJAUEAIAM3A7iJAUEAIAQ3A7CJAUEAIAU3A6iJAUEAIAY3A6CJAUEAIAM3A5iJAUEAIAQ3A5CJAUEAIAU3A4iJAUEAIAY3A4CJAUEAQQA6AJCKAUEAQQA7AYiKASAAEAEgAhAGCwsLAQBBgAgLBHgHAAA=\";\n    var hash$g = \"e8655383\";\n    var wasmJson$g = {\n    \tname: name$g,\n    \tdata: data$g,\n    \thash: hash$g\n    };\n\n    const mutex$i = new Mutex();\n    let wasmCache$i = null;\n    function validateBits$2(bits) {\n        if (!Number.isInteger(bits) || bits < 8 || bits % 8 !== 0) {\n            return new Error('Invalid variant! Valid values: 8, 16, ...');\n        }\n        return null;\n    }\n    /**\n     * Calculates BLAKE3 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param bits Number of output bits, which has to be a number\n     *             divisible by 8. Defaults to 256.\n     * @param key Optional key (string, Buffer or TypedArray). Length should be 32 bytes.\n     * @returns Computed hash as a hexadecimal string\n     */\n    function blake3(data, bits = 256, key = null) {\n        if (validateBits$2(bits)) {\n            return Promise.reject(validateBits$2(bits));\n        }\n        let keyBuffer = null;\n        let initParam = 0; // key is empty by default\n        if (key !== null) {\n            keyBuffer = getUInt8Buffer(key);\n            if (keyBuffer.length !== 32) {\n                return Promise.reject(new Error('Key length must be exactly 32 bytes'));\n            }\n            initParam = 32;\n        }\n        const hashLength = bits / 8;\n        const digestParam = hashLength;\n        if (wasmCache$i === null || wasmCache$i.hashLength !== hashLength) {\n            return lockedCreate(mutex$i, wasmJson$g, hashLength)\n                .then((wasm) => {\n                wasmCache$i = wasm;\n                if (initParam === 32) {\n                    wasmCache$i.writeMemory(keyBuffer);\n                }\n                return wasmCache$i.calculate(data, initParam, digestParam);\n            });\n        }\n        try {\n            if (initParam === 32) {\n                wasmCache$i.writeMemory(keyBuffer);\n            }\n            const hash = wasmCache$i.calculate(data, initParam, digestParam);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new BLAKE3 hash instance\n     * @param bits Number of output bits, which has to be a number\n     *             divisible by 8. Defaults to 256.\n     * @param key Optional key (string, Buffer or TypedArray). Length should be 32 bytes.\n     */\n    function createBLAKE3(bits = 256, key = null) {\n        if (validateBits$2(bits)) {\n            return Promise.reject(validateBits$2(bits));\n        }\n        let keyBuffer = null;\n        let initParam = 0; // key is empty by default\n        if (key !== null) {\n            keyBuffer = getUInt8Buffer(key);\n            if (keyBuffer.length !== 32) {\n                return Promise.reject(new Error('Key length must be exactly 32 bytes'));\n            }\n            initParam = 32;\n        }\n        const outputSize = bits / 8;\n        const digestParam = outputSize;\n        return WASMInterface(wasmJson$g, outputSize).then((wasm) => {\n            if (initParam === 32) {\n                wasm.writeMemory(keyBuffer);\n            }\n            wasm.init(initParam);\n            const obj = {\n                init: initParam === 32\n                    ? () => {\n                        wasm.writeMemory(keyBuffer);\n                        wasm.init(initParam);\n                        return obj;\n                    }\n                    : () => {\n                        wasm.init(initParam);\n                        return obj;\n                    },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType, digestParam),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: outputSize,\n            };\n            return obj;\n        });\n    }\n\n    var name$f = \"crc32\";\n    var data$f = \"AGFzbQEAAAABEQRgAAF/YAF/AGAAAGACf38AAwgHAAEBAQIAAwQFAXABAQEFBAEBAgIGDgJ/AUGQyQULfwBBgAgLB3AIBm1lbW9yeQIADkhhc2hfR2V0QnVmZmVyAAAJSGFzaF9Jbml0AAILSGFzaF9VcGRhdGUAAwpIYXNoX0ZpbmFsAAQNSGFzaF9HZXRTdGF0ZQAFDkhhc2hfQ2FsY3VsYXRlAAYKU1RBVEVfU0laRQMBCq0HBwUAQYAJC8MDAQN/QYCJASEBQQAhAgNAIAFBAEEAQQBBAEEAQQBBAEEAIAJBAXFrIABxIAJBAXZzIgNBAXFrIABxIANBAXZzIgNBAXFrIABxIANBAXZzIgNBAXFrIABxIANBAXZzIgNBAXFrIABxIANBAXZzIgNBAXFrIABxIANBAXZzIgNBAXFrIABxIANBAXZzIgNBAXFrIABxIANBAXZzNgIAIAFBBGohASACQQFqIgJBgAJHDQALQQAhAANAIABBhJEBaiAAQYSJAWooAgAiAkH/AXFBAnRBgIkBaigCACACQQh2cyICNgIAIABBhJkBaiACQf8BcUECdEGAiQFqKAIAIAJBCHZzIgI2AgAgAEGEoQFqIAJB/wFxQQJ0QYCJAWooAgAgAkEIdnMiAjYCACAAQYSpAWogAkH/AXFBAnRBgIkBaigCACACQQh2cyICNgIAIABBhLEBaiACQf8BcUECdEGAiQFqKAIAIAJBCHZzIgI2AgAgAEGEuQFqIAJB/wFxQQJ0QYCJAWooAgAgAkEIdnMiAjYCACAAQYTBAWogAkH/AXFBAnRBgIkBaigCACACQQh2czYCACAAQQRqIgBB/AdHDQALCycAAkBBACgCgMkBIABGDQAgABABQQAgADYCgMkBC0EAQQA2AoTJAQuhAgEDf0EAKAKEyQFBf3MhAUGACSECAkAgAEEISQ0AQYAJIQIDQCACQQRqKAIAIgNBDnZB/AdxQYCRAWooAgAgA0EWdkH8B3FBgIkBaigCAHMgA0EGdkH8B3FBgJkBaigCAHMgA0H/AXFBAnRBgKEBaigCAHMgAigCACABcyIBQRZ2QfwHcUGAqQFqKAIAcyABQQ52QfwHcUGAsQFqKAIAcyABQQZ2QfwHcUGAuQFqKAIAcyABQf8BcUECdEGAwQFqKAIAcyEBIAJBCGohAiAAQXhqIgBBB0sNAAsLAkAgAEUNAANAIAFB/wFxIAItAABzQQJ0QYCJAWooAgAgAUEIdnMhASACQQFqIQIgAEF/aiIADQALC0EAIAFBf3M2AoTJAQszAQF/QQBBACgChMkBIgBBGHQgAEEIdEGAgPwHcXIgAEEIdkGA/gNxIABBGHZycjYCgAkLBgBBhMkBC1oAAkBBACgCgMkBIAFGDQAgARABQQAgATYCgMkBC0EAQQA2AoTJASAAEANBAEEAKAKEyQEiAUEYdCABQQh0QYCA/AdxciABQQh2QYD+A3EgAUEYdnJyNgKACQsLCwEAQYAICwQEAAAA\";\n    var hash$f = \"749723dc\";\n    var wasmJson$f = {\n    \tname: name$f,\n    \tdata: data$f,\n    \thash: hash$f\n    };\n\n    const mutex$h = new Mutex();\n    let wasmCache$h = null;\n    /**\n     * Calculates CRC-32 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function crc32(data) {\n        if (wasmCache$h === null) {\n            return lockedCreate(mutex$h, wasmJson$f, 4)\n                .then((wasm) => {\n                wasmCache$h = wasm;\n                return wasmCache$h.calculate(data, 0xEDB88320);\n            });\n        }\n        try {\n            const hash = wasmCache$h.calculate(data, 0xEDB88320);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new CRC-32 hash instance\n     */\n    function createCRC32() {\n        return WASMInterface(wasmJson$f, 4).then((wasm) => {\n            wasm.init(0xEDB88320);\n            const obj = {\n                init: () => { wasm.init(0xEDB88320); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 4,\n                digestSize: 4,\n            };\n            return obj;\n        });\n    }\n\n    const mutex$g = new Mutex();\n    let wasmCache$g = null;\n    /**\n     * Calculates CRC-32C hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function crc32c(data) {\n        if (wasmCache$g === null) {\n            return lockedCreate(mutex$g, wasmJson$f, 4)\n                .then((wasm) => {\n                wasmCache$g = wasm;\n                return wasmCache$g.calculate(data, 0x82F63B78);\n            });\n        }\n        try {\n            const hash = wasmCache$g.calculate(data, 0x82F63B78);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new CRC-32C hash instance\n     */\n    function createCRC32C() {\n        return WASMInterface(wasmJson$f, 4).then((wasm) => {\n            wasm.init(0x82F63B78);\n            const obj = {\n                init: () => { wasm.init(0x82F63B78); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 4,\n                digestSize: 4,\n            };\n            return obj;\n        });\n    }\n\n    var name$e = \"md4\";\n    var data$e = \"AGFzbQEAAAABEgRgAAF/YAAAYAF/AGACf38BfwMIBwABAgMBAAIEBQFwAQEBBQQBAQICBg4CfwFBoIoFC38AQYAICwdwCAZtZW1vcnkCAA5IYXNoX0dldEJ1ZmZlcgAACUhhc2hfSW5pdAABC0hhc2hfVXBkYXRlAAIKSGFzaF9GaW5hbAAEDUhhc2hfR2V0U3RhdGUABQ5IYXNoX0NhbGN1bGF0ZQAGClNUQVRFX1NJWkUDAQqXEQcFAEGACQstAEEAQv6568XpjpWZEDcCkIkBQQBCgcaUupbx6uZvNwKIiQFBAEIANwKAiQEL6AIBA39BAEEAKAKAiQEiASAAakH/////AXEiAjYCgIkBQQAoAoSJASEDAkAgAiABTw0AQQAgA0EBaiIDNgKEiQELQQAgAyAAQR12ajYChIkBAkACQAJAAkACQAJAIAFBP3EiAw0AQYAJIQIMAQtBwAAgA2siAiAASw0BIANBGGohA0EAIQEDQCADIAFqQYCJAWogAUGACWotAAA6AAAgAyABQQFqIgFqQdgARw0AC0GYiQFBwAAQAxogACACayEAIAJBgAlqIQILIABBwABPDQEgACEDDAILIABFDQJBACEBIANBmIkBakEALQCACToAACAAQQFGDQIgA0GZiQFqIQMgAEF/aiECA0AgAyABaiABQYEJai0AADoAACACIAFBAWoiAUcNAAwDCwsgAEE/cSEDIAIgAEFAcRADIQILIANFDQBBACEBA0AgAUGYiQFqIAIgAWotAAA6AAAgAyABQQFqIgFHDQALCwuYCwEXf0EAKAKUiQEhAkEAKAKQiQEhA0EAKAKMiQEhBEEAKAKIiQEhBQNAIABBHGooAgAiBiAAQRRqKAIAIgcgAEEYaigCACIIIABBEGooAgAiCSAAQSxqKAIAIgogAEEoaigCACILIABBJGooAgAiDCAAQSBqKAIAIg0gCyAIIABBCGooAgAiDiADaiAAQQRqKAIAIg8gAmogBCADIAJzcSACcyAFaiAAKAIAIhBqQQN3IhEgBCADc3EgA3NqQQd3IhIgESAEc3EgBHNqQQt3IhNqIBIgB2ogESAJaiAAQQxqKAIAIhQgBGogEyASIBFzcSARc2pBE3ciESATIBJzcSASc2pBA3ciEiARIBNzcSATc2pBB3ciEyASIBFzcSARc2pBC3ciFWogEyAMaiASIA1qIBEgBmogFSATIBJzcSASc2pBE3ciESAVIBNzcSATc2pBA3ciEiARIBVzcSAVc2pBB3ciEyASIBFzcSARc2pBC3ciFSAAQThqKAIAIhZqIBMgAEE0aigCACIXaiASIABBMGooAgAiGGogESAKaiAVIBMgEnNxIBJzakETdyISIBUgE3NxIBNzakEDdyITIBIgFXNxIBVzakEHdyIVIBMgEnNxIBJzakELdyIRaiAJIBVqIBAgE2ogEiAAQTxqKAIAIglqIBEgFSATc3EgE3NqQRN3IhIgESAVcnEgESAVcXJqQZnzidQFakEDdyITIBIgEXJxIBIgEXFyakGZ84nUBWpBBXciESATIBJycSATIBJxcmpBmfOJ1AVqQQl3IhVqIAcgEWogDyATaiAYIBJqIBUgESATcnEgESATcXJqQZnzidQFakENdyISIBUgEXJxIBUgEXFyakGZ84nUBWpBA3ciESASIBVycSASIBVxcmpBmfOJ1AVqQQV3IhMgESAScnEgESAScXJqQZnzidQFakEJdyIVaiAIIBNqIA4gEWogFyASaiAVIBMgEXJxIBMgEXFyakGZ84nUBWpBDXciESAVIBNycSAVIBNxcmpBmfOJ1AVqQQN3IhIgESAVcnEgESAVcXJqQZnzidQFakEFdyITIBIgEXJxIBIgEXFyakGZ84nUBWpBCXciFWogBiATaiAUIBJqIBYgEWogFSATIBJycSATIBJxcmpBmfOJ1AVqQQ13IhEgFSATcnEgFSATcXJqQZnzidQFakEDdyISIBEgFXJxIBEgFXFyakGZ84nUBWpBBXciEyASIBFycSASIBFxcmpBmfOJ1AVqQQl3IhVqIBAgEmogCSARaiAVIBMgEnJxIBMgEnFyakGZ84nUBWpBDXciBiAVcyISIBNzakGh1+f2BmpBA3ciESAGcyANIBNqIBIgEXNqQaHX5/YGakEJdyISc2pBodfn9gZqQQt3IhNqIA4gEWogEyAScyAYIAZqIBIgEXMgE3NqQaHX5/YGakEPdyIRc2pBodfn9gZqQQN3IhUgEXMgCyASaiARIBNzIBVzakGh1+f2BmpBCXciEnNqQaHX5/YGakELdyITaiAPIBVqIBMgEnMgFiARaiASIBVzIBNzakGh1+f2BmpBD3ciEXNqQaHX5/YGakEDdyIVIBFzIAwgEmogESATcyAVc2pBodfn9gZqQQl3IhJzakGh1+f2BmpBC3ciE2ogFCAVaiATIBJzIBcgEWogEiAVcyATc2pBodfn9gZqQQ93IhFzakGh1+f2BmpBA3ciFSARcyAKIBJqIBEgE3MgFXNqQaHX5/YGakEJdyISc2pBodfn9gZqQQt3IhMgA2ohAyAJIBFqIBIgFXMgE3NqQaHX5/YGakEPdyAEaiEEIBIgAmohAiAVIAVqIQUgAEHAAGohACABQUBqIgENAAtBACACNgKUiQFBACADNgKQiQFBACAENgKMiQFBACAFNgKIiQEgAAuhAgEDf0EAKAKAiQEiAEE/cSIBQZiJAWpBgAE6AAACQAJAAkAgAUE/cyICQQdLDQACQCACRQ0AIAFBmYkBaiEAA0AgAEEAOgAAIABBAWohACACQX9qIgINAAsLQcAAIQJBmIkBQcAAEAMaQQAhAAwBCyACQQhGDQEgAUEBaiEACyAAQY+JAWohAQNAIAEgAmpBADoAACACQXdqIQAgAkF/aiECIABBAEoNAAtBACgCgIkBIQALQQAgAEEVdjoA04kBQQAgAEENdjoA0okBQQAgAEEFdjoA0YkBQQAgAEEDdCICOgDQiQFBACACNgKAiQFBAEEAKAKEiQE2AtSJAUGYiQFBwAAQAxpBAEEAKQKIiQE3A4AJQQBBACkCkIkBNwOICQsGAEGAiQELMwBBAEL+uevF6Y6VmRA3ApCJAUEAQoHGlLqW8ermbzcCiIkBQQBCADcCgIkBIAAQAhAECwsLAQBBgAgLBJgAAAA=\";\n    var hash$e = \"1bf01052\";\n    var wasmJson$e = {\n    \tname: name$e,\n    \tdata: data$e,\n    \thash: hash$e\n    };\n\n    const mutex$f = new Mutex();\n    let wasmCache$f = null;\n    /**\n     * Calculates MD4 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function md4(data) {\n        if (wasmCache$f === null) {\n            return lockedCreate(mutex$f, wasmJson$e, 16)\n                .then((wasm) => {\n                wasmCache$f = wasm;\n                return wasmCache$f.calculate(data);\n            });\n        }\n        try {\n            const hash = wasmCache$f.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new MD4 hash instance\n     */\n    function createMD4() {\n        return WASMInterface(wasmJson$e, 16).then((wasm) => {\n            wasm.init();\n            const obj = {\n                init: () => { wasm.init(); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: 16,\n            };\n            return obj;\n        });\n    }\n\n    var name$d = \"md5\";\n    var data$d = \"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\";\n    var hash$d = \"9b0fac7d\";\n    var wasmJson$d = {\n    \tname: name$d,\n    \tdata: data$d,\n    \thash: hash$d\n    };\n\n    const mutex$e = new Mutex();\n    let wasmCache$e = null;\n    /**\n     * Calculates MD5 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function md5(data) {\n        if (wasmCache$e === null) {\n            return lockedCreate(mutex$e, wasmJson$d, 16)\n                .then((wasm) => {\n                wasmCache$e = wasm;\n                return wasmCache$e.calculate(data);\n            });\n        }\n        try {\n            const hash = wasmCache$e.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new MD5 hash instance\n     */\n    function createMD5() {\n        return WASMInterface(wasmJson$d, 16).then((wasm) => {\n            wasm.init();\n            const obj = {\n                init: () => { wasm.init(); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: 16,\n            };\n            return obj;\n        });\n    }\n\n    var name$c = \"sha1\";\n    var data$c = \"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\";\n    var hash$c = \"40d92e5d\";\n    var wasmJson$c = {\n    \tname: name$c,\n    \tdata: data$c,\n    \thash: hash$c\n    };\n\n    const mutex$d = new Mutex();\n    let wasmCache$d = null;\n    /**\n     * Calculates SHA-1 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function sha1(data) {\n        if (wasmCache$d === null) {\n            return lockedCreate(mutex$d, wasmJson$c, 20)\n                .then((wasm) => {\n                wasmCache$d = wasm;\n                return wasmCache$d.calculate(data);\n            });\n        }\n        try {\n            const hash = wasmCache$d.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new SHA-1 hash instance\n     */\n    function createSHA1() {\n        return WASMInterface(wasmJson$c, 20).then((wasm) => {\n            wasm.init();\n            const obj = {\n                init: () => { wasm.init(); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: 20,\n            };\n            return obj;\n        });\n    }\n\n    var name$b = \"sha3\";\n    var data$b = \"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\";\n    var hash$b = \"ec266d91\";\n    var wasmJson$b = {\n    \tname: name$b,\n    \tdata: data$b,\n    \thash: hash$b\n    };\n\n    const mutex$c = new Mutex();\n    let wasmCache$c = null;\n    function validateBits$1(bits) {\n        if (![224, 256, 384, 512].includes(bits)) {\n            return new Error('Invalid variant! Valid values: 224, 256, 384, 512');\n        }\n        return null;\n    }\n    /**\n     * Calculates SHA-3 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param bits Number of output bits. Valid values: 224, 256, 384, 512\n     * @returns Computed hash as a hexadecimal string\n     */\n    function sha3(data, bits = 512) {\n        if (validateBits$1(bits)) {\n            return Promise.reject(validateBits$1(bits));\n        }\n        const hashLength = bits / 8;\n        if (wasmCache$c === null || wasmCache$c.hashLength !== hashLength) {\n            return lockedCreate(mutex$c, wasmJson$b, hashLength)\n                .then((wasm) => {\n                wasmCache$c = wasm;\n                return wasmCache$c.calculate(data, bits, 0x06);\n            });\n        }\n        try {\n            const hash = wasmCache$c.calculate(data, bits, 0x06);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new SHA-3 hash instance\n     * @param bits Number of output bits. Valid values: 224, 256, 384, 512\n     */\n    function createSHA3(bits = 512) {\n        if (validateBits$1(bits)) {\n            return Promise.reject(validateBits$1(bits));\n        }\n        const outputSize = bits / 8;\n        return WASMInterface(wasmJson$b, outputSize).then((wasm) => {\n            wasm.init(bits);\n            const obj = {\n                init: () => { wasm.init(bits); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType, 0x06),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 200 - 2 * outputSize,\n                digestSize: outputSize,\n            };\n            return obj;\n        });\n    }\n\n    const mutex$b = new Mutex();\n    let wasmCache$b = null;\n    function validateBits(bits) {\n        if (![224, 256, 384, 512].includes(bits)) {\n            return new Error('Invalid variant! Valid values: 224, 256, 384, 512');\n        }\n        return null;\n    }\n    /**\n     * Calculates Keccak hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param bits Number of output bits. Valid values: 224, 256, 384, 512\n     * @returns Computed hash as a hexadecimal string\n     */\n    function keccak(data, bits = 512) {\n        if (validateBits(bits)) {\n            return Promise.reject(validateBits(bits));\n        }\n        const hashLength = bits / 8;\n        if (wasmCache$b === null || wasmCache$b.hashLength !== hashLength) {\n            return lockedCreate(mutex$b, wasmJson$b, hashLength)\n                .then((wasm) => {\n                wasmCache$b = wasm;\n                return wasmCache$b.calculate(data, bits, 0x01);\n            });\n        }\n        try {\n            const hash = wasmCache$b.calculate(data, bits, 0x01);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new Keccak hash instance\n     * @param bits Number of output bits. Valid values: 224, 256, 384, 512\n     */\n    function createKeccak(bits = 512) {\n        if (validateBits(bits)) {\n            return Promise.reject(validateBits(bits));\n        }\n        const outputSize = bits / 8;\n        return WASMInterface(wasmJson$b, outputSize).then((wasm) => {\n            wasm.init(bits);\n            const obj = {\n                init: () => { wasm.init(bits); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType, 0x01),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 200 - 2 * outputSize,\n                digestSize: outputSize,\n            };\n            return obj;\n        });\n    }\n\n    var name$a = \"sha256\";\n    var data$a = \"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\";\n    var hash$a = \"817d957e\";\n    var wasmJson$a = {\n    \tname: name$a,\n    \tdata: data$a,\n    \thash: hash$a\n    };\n\n    const mutex$a = new Mutex();\n    let wasmCache$a = null;\n    /**\n     * Calculates SHA-2 (SHA-224) hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function sha224(data) {\n        if (wasmCache$a === null) {\n            return lockedCreate(mutex$a, wasmJson$a, 28)\n                .then((wasm) => {\n                wasmCache$a = wasm;\n                return wasmCache$a.calculate(data, 224);\n            });\n        }\n        try {\n            const hash = wasmCache$a.calculate(data, 224);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new SHA-2 (SHA-224) hash instance\n     */\n    function createSHA224() {\n        return WASMInterface(wasmJson$a, 28).then((wasm) => {\n            wasm.init(224);\n            const obj = {\n                init: () => { wasm.init(224); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: 28,\n            };\n            return obj;\n        });\n    }\n\n    const mutex$9 = new Mutex();\n    let wasmCache$9 = null;\n    /**\n     * Calculates SHA-2 (SHA-256) hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function sha256(data) {\n        if (wasmCache$9 === null) {\n            return lockedCreate(mutex$9, wasmJson$a, 32)\n                .then((wasm) => {\n                wasmCache$9 = wasm;\n                return wasmCache$9.calculate(data, 256);\n            });\n        }\n        try {\n            const hash = wasmCache$9.calculate(data, 256);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new SHA-2 (SHA-256) hash instance\n     */\n    function createSHA256() {\n        return WASMInterface(wasmJson$a, 32).then((wasm) => {\n            wasm.init(256);\n            const obj = {\n                init: () => { wasm.init(256); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: 32,\n            };\n            return obj;\n        });\n    }\n\n    var name$9 = \"sha512\";\n    var data$9 = \"\";\n    var hash$9 = \"a5d1ca7c\";\n    var wasmJson$9 = {\n    \tname: name$9,\n    \tdata: data$9,\n    \thash: hash$9\n    };\n\n    const mutex$8 = new Mutex();\n    let wasmCache$8 = null;\n    /**\n     * Calculates SHA-2 (SHA-384) hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function sha384(data) {\n        if (wasmCache$8 === null) {\n            return lockedCreate(mutex$8, wasmJson$9, 48)\n                .then((wasm) => {\n                wasmCache$8 = wasm;\n                return wasmCache$8.calculate(data, 384);\n            });\n        }\n        try {\n            const hash = wasmCache$8.calculate(data, 384);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new SHA-2 (SHA-384) hash instance\n     */\n    function createSHA384() {\n        return WASMInterface(wasmJson$9, 48).then((wasm) => {\n            wasm.init(384);\n            const obj = {\n                init: () => { wasm.init(384); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 128,\n                digestSize: 48,\n            };\n            return obj;\n        });\n    }\n\n    const mutex$7 = new Mutex();\n    let wasmCache$7 = null;\n    /**\n     * Calculates SHA-2 (SHA-512) hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function sha512(data) {\n        if (wasmCache$7 === null) {\n            return lockedCreate(mutex$7, wasmJson$9, 64)\n                .then((wasm) => {\n                wasmCache$7 = wasm;\n                return wasmCache$7.calculate(data, 512);\n            });\n        }\n        try {\n            const hash = wasmCache$7.calculate(data, 512);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new SHA-2 (SHA-512) hash instance\n     */\n    function createSHA512() {\n        return WASMInterface(wasmJson$9, 64).then((wasm) => {\n            wasm.init(512);\n            const obj = {\n                init: () => { wasm.init(512); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 128,\n                digestSize: 64,\n            };\n            return obj;\n        });\n    }\n\n    var name$8 = \"xxhash32\";\n    var data$8 = \"AGFzbQEAAAABEQRgAAF/YAF/AGAAAGACf38AAwcGAAEBAgADBAUBcAEBAQUEAQECAgYOAn8BQbCJBQt/AEGACAsHcAgGbWVtb3J5AgAOSGFzaF9HZXRCdWZmZXIAAAlIYXNoX0luaXQAAQtIYXNoX1VwZGF0ZQACCkhhc2hfRmluYWwAAw1IYXNoX0dldFN0YXRlAAQOSGFzaF9DYWxjdWxhdGUABQpTVEFURV9TSVpFAwEKswkGBQBBgAkLTQBBAEIANwOoiQFBACAANgKIiQFBACAAQc+Moo4GajYCjIkBQQAgAEH3lK+veGo2AoSJAUEAIABBqIiNoQJqNgKAiQFBAEEANgKgiQELswUBBn8CQCAARQ0AQQBBACkDqIkBIACtfDcDqIkBAkBBACgCoIkBIgEgAGpBD0sNAEEAIAFBAWo2AqCJASABQZCJAWpBAC0AgAk6AAAgAEEBRg0BQQEhAgNAQQBBACgCoIkBIgFBAWo2AqCJASABQZCJAWogAkGACWotAAA6AAAgACACQQFqIgJHDQAMAgsLIABB8AhqIQMCQAJAIAENAEEAKAKMiQEhAUEAKAKIiQEhBEEAKAKEiQEhBUEAKAKAiQEhBkGACSECDAELQYAJIQICQCABQQ9LDQBBgAkhAgNAIAItAAAhBEEAIAFBAWo2AqCJASABQZCJAWogBDoAACACQQFqIQJBACgCoIkBIgFBEEkNAAsLQQBBACgCkIkBQfeUr694bEEAKAKAiQFqQQ13QbHz3fF5bCIGNgKAiQFBAEEAKAKUiQFB95Svr3hsQQAoAoSJAWpBDXdBsfPd8XlsIgU2AoSJAUEAQQAoApiJAUH3lK+veGxBACgCiIkBakENd0Gx893xeWwiBDYCiIkBQQBBACgCnIkBQfeUr694bEEAKAKMiQFqQQ13QbHz3fF5bCIBNgKMiQELIABBgAlqIQACQCACIANLDQADQCACKAIAQfeUr694bCAGakENd0Gx893xeWwhBiACQQxqKAIAQfeUr694bCABakENd0Gx893xeWwhASACQQhqKAIAQfeUr694bCAEakENd0Gx893xeWwhBCACQQRqKAIAQfeUr694bCAFakENd0Gx893xeWwhBSACQRBqIgIgA00NAAsLQQAgATYCjIkBQQAgBDYCiIkBQQAgBTYChIkBQQAgBjYCgIkBQQAgACACayIBNgKgiQEgAUUNAEEAIQEDQCABQZCJAWogAiABai0AADoAACABQQFqIgFBACgCoIkBSQ0ACwsLzAICAX4Gf0EAKQOoiQEiAKchAQJAAkAgAEIQVA0AQQAoAoSJAUEHd0EAKAKAiQFBAXdqQQAoAoiJAUEMd2pBACgCjIkBQRJ3aiECDAELQQAoAoiJAUGxz9myAWohAgsgAiABaiECQZCJASEBQQAoAqCJASIDQZCJAWohBAJAIANBBEgNAEGQiQEhBQNAIAUoAgBBvdzKlXxsIAJqQRF3Qa/W074CbCECIAVBCGohBiAFQQRqIgEhBSAGIARNDQALCwJAIAEgBEYNACADQZCJAWohBQNAIAEtAABBsc/ZsgFsIAJqQQt3QbHz3fF5bCECIAUgAUEBaiIBRw0ACwtBACACQQ92IAJzQfeUr694bCIBQQ12IAFzQb3cypV8bCIBQRB2IAFzIgFBGHQgAUEIdEGAgPwHcXIgAUEIdkGA/gNxIAFBGHZycq03A4AJCwYAQYCJAQtTAEEAQgA3A6iJAUEAIAE2AoiJAUEAIAFBz4yijgZqNgKMiQFBACABQfeUr694ajYChIkBQQAgAUGoiI2hAmo2AoCJAUEAQQA2AqCJASAAEAIQAwsLCwEAQYAICwQwAAAA\";\n    var hash$8 = \"5b6a5062\";\n    var wasmJson$8 = {\n    \tname: name$8,\n    \tdata: data$8,\n    \thash: hash$8\n    };\n\n    const mutex$6 = new Mutex();\n    let wasmCache$6 = null;\n    function validateSeed$3(seed) {\n        if (!Number.isInteger(seed) || seed < 0 || seed > 0xFFFFFFFF) {\n            return new Error('Seed must be a valid 32-bit long unsigned integer.');\n        }\n        return null;\n    }\n    /**\n     * Calculates xxHash32 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param seed Number used to initialize the internal state of the algorithm (defaults to 0)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function xxhash32(data, seed = 0) {\n        if (validateSeed$3(seed)) {\n            return Promise.reject(validateSeed$3(seed));\n        }\n        if (wasmCache$6 === null) {\n            return lockedCreate(mutex$6, wasmJson$8, 4)\n                .then((wasm) => {\n                wasmCache$6 = wasm;\n                return wasmCache$6.calculate(data, seed);\n            });\n        }\n        try {\n            const hash = wasmCache$6.calculate(data, seed);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new xxHash32 hash instance\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param seed Number used to initialize the internal state of the algorithm (defaults to 0)\n     */\n    function createXXHash32(seed = 0) {\n        if (validateSeed$3(seed)) {\n            return Promise.reject(validateSeed$3(seed));\n        }\n        return WASMInterface(wasmJson$8, 4).then((wasm) => {\n            wasm.init(seed);\n            const obj = {\n                init: () => { wasm.init(seed); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 16,\n                digestSize: 4,\n            };\n            return obj;\n        });\n    }\n\n    var name$7 = \"xxhash64\";\n    var data$7 = \"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\";\n    var hash$7 = \"bc315b2a\";\n    var wasmJson$7 = {\n    \tname: name$7,\n    \tdata: data$7,\n    \thash: hash$7\n    };\n\n    const mutex$5 = new Mutex();\n    let wasmCache$5 = null;\n    const seedBuffer$2 = new ArrayBuffer(8);\n    function validateSeed$2(seed) {\n        if (!Number.isInteger(seed) || seed < 0 || seed > 0xFFFFFFFF) {\n            return new Error('Seed must be given as two valid 32-bit long unsigned integers (lo + high).');\n        }\n        return null;\n    }\n    function writeSeed$2(arr, low, high) {\n        // write in little-endian format\n        const buffer = new DataView(arr);\n        buffer.setUint32(0, low, true);\n        buffer.setUint32(4, high, true);\n    }\n    /**\n     * Calculates xxHash64 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param seedLow Lower 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @param seedHigh Higher 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function xxhash64(data, seedLow = 0, seedHigh = 0) {\n        if (validateSeed$2(seedLow)) {\n            return Promise.reject(validateSeed$2(seedLow));\n        }\n        if (validateSeed$2(seedHigh)) {\n            return Promise.reject(validateSeed$2(seedHigh));\n        }\n        if (wasmCache$5 === null) {\n            return lockedCreate(mutex$5, wasmJson$7, 8)\n                .then((wasm) => {\n                wasmCache$5 = wasm;\n                writeSeed$2(seedBuffer$2, seedLow, seedHigh);\n                wasmCache$5.writeMemory(new Uint8Array(seedBuffer$2));\n                return wasmCache$5.calculate(data);\n            });\n        }\n        try {\n            writeSeed$2(seedBuffer$2, seedLow, seedHigh);\n            wasmCache$5.writeMemory(new Uint8Array(seedBuffer$2));\n            const hash = wasmCache$5.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new xxHash64 hash instance\n     * @param seedLow Lower 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @param seedHigh Higher 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     */\n    function createXXHash64(seedLow = 0, seedHigh = 0) {\n        if (validateSeed$2(seedLow)) {\n            return Promise.reject(validateSeed$2(seedLow));\n        }\n        if (validateSeed$2(seedHigh)) {\n            return Promise.reject(validateSeed$2(seedHigh));\n        }\n        return WASMInterface(wasmJson$7, 8).then((wasm) => {\n            const instanceBuffer = new ArrayBuffer(8);\n            writeSeed$2(instanceBuffer, seedLow, seedHigh);\n            wasm.writeMemory(new Uint8Array(instanceBuffer));\n            wasm.init();\n            const obj = {\n                init: () => {\n                    wasm.writeMemory(new Uint8Array(instanceBuffer));\n                    wasm.init();\n                    return obj;\n                },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 32,\n                digestSize: 8,\n            };\n            return obj;\n        });\n    }\n\n    var name$6 = \"xxhash3\";\n    var data$6 = \"\";\n    var hash$6 = \"187bc2c6\";\n    var wasmJson$6 = {\n    \tname: name$6,\n    \tdata: data$6,\n    \thash: hash$6\n    };\n\n    const mutex$4 = new Mutex();\n    let wasmCache$4 = null;\n    const seedBuffer$1 = new ArrayBuffer(8);\n    function validateSeed$1(seed) {\n        if (!Number.isInteger(seed) || seed < 0 || seed > 0xFFFFFFFF) {\n            return new Error('Seed must be given as two valid 32-bit long unsigned integers (lo + high).');\n        }\n        return null;\n    }\n    function writeSeed$1(arr, low, high) {\n        // write in little-endian format\n        const buffer = new DataView(arr);\n        buffer.setUint32(0, low, true);\n        buffer.setUint32(4, high, true);\n    }\n    /**\n     * Calculates xxHash3 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param seedLow Lower 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @param seedHigh Higher 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function xxhash3(data, seedLow = 0, seedHigh = 0) {\n        if (validateSeed$1(seedLow)) {\n            return Promise.reject(validateSeed$1(seedLow));\n        }\n        if (validateSeed$1(seedHigh)) {\n            return Promise.reject(validateSeed$1(seedHigh));\n        }\n        if (wasmCache$4 === null) {\n            return lockedCreate(mutex$4, wasmJson$6, 8)\n                .then((wasm) => {\n                wasmCache$4 = wasm;\n                writeSeed$1(seedBuffer$1, seedLow, seedHigh);\n                wasmCache$4.writeMemory(new Uint8Array(seedBuffer$1));\n                return wasmCache$4.calculate(data);\n            });\n        }\n        try {\n            writeSeed$1(seedBuffer$1, seedLow, seedHigh);\n            wasmCache$4.writeMemory(new Uint8Array(seedBuffer$1));\n            const hash = wasmCache$4.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new xxHash3 hash instance\n     * @param seedLow Lower 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @param seedHigh Higher 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     */\n    function createXXHash3(seedLow = 0, seedHigh = 0) {\n        if (validateSeed$1(seedLow)) {\n            return Promise.reject(validateSeed$1(seedLow));\n        }\n        if (validateSeed$1(seedHigh)) {\n            return Promise.reject(validateSeed$1(seedHigh));\n        }\n        return WASMInterface(wasmJson$6, 8).then((wasm) => {\n            const instanceBuffer = new ArrayBuffer(8);\n            writeSeed$1(instanceBuffer, seedLow, seedHigh);\n            wasm.writeMemory(new Uint8Array(instanceBuffer));\n            wasm.init();\n            const obj = {\n                init: () => {\n                    wasm.writeMemory(new Uint8Array(instanceBuffer));\n                    wasm.init();\n                    return obj;\n                },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 512,\n                digestSize: 8,\n            };\n            return obj;\n        });\n    }\n\n    var name$5 = \"xxhash128\";\n    var data$5 = \"\";\n    var hash$5 = \"e8e3fcf8\";\n    var wasmJson$5 = {\n    \tname: name$5,\n    \tdata: data$5,\n    \thash: hash$5\n    };\n\n    const mutex$3 = new Mutex();\n    let wasmCache$3 = null;\n    const seedBuffer = new ArrayBuffer(8);\n    function validateSeed(seed) {\n        if (!Number.isInteger(seed) || seed < 0 || seed > 0xFFFFFFFF) {\n            return new Error('Seed must be given as two valid 32-bit long unsigned integers (lo + high).');\n        }\n        return null;\n    }\n    function writeSeed(arr, low, high) {\n        // write in little-endian format\n        const buffer = new DataView(arr);\n        buffer.setUint32(0, low, true);\n        buffer.setUint32(4, high, true);\n    }\n    /**\n     * Calculates xxHash128 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @param seedLow Lower 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @param seedHigh Higher 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function xxhash128(data, seedLow = 0, seedHigh = 0) {\n        if (validateSeed(seedLow)) {\n            return Promise.reject(validateSeed(seedLow));\n        }\n        if (validateSeed(seedHigh)) {\n            return Promise.reject(validateSeed(seedHigh));\n        }\n        if (wasmCache$3 === null) {\n            return lockedCreate(mutex$3, wasmJson$5, 16)\n                .then((wasm) => {\n                wasmCache$3 = wasm;\n                writeSeed(seedBuffer, seedLow, seedHigh);\n                wasmCache$3.writeMemory(new Uint8Array(seedBuffer));\n                return wasmCache$3.calculate(data);\n            });\n        }\n        try {\n            writeSeed(seedBuffer, seedLow, seedHigh);\n            wasmCache$3.writeMemory(new Uint8Array(seedBuffer));\n            const hash = wasmCache$3.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new xxHash128 hash instance\n     * @param seedLow Lower 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     * @param seedHigh Higher 32 bits of the number used to\n     *  initialize the internal state of the algorithm (defaults to 0)\n     */\n    function createXXHash128(seedLow = 0, seedHigh = 0) {\n        if (validateSeed(seedLow)) {\n            return Promise.reject(validateSeed(seedLow));\n        }\n        if (validateSeed(seedHigh)) {\n            return Promise.reject(validateSeed(seedHigh));\n        }\n        return WASMInterface(wasmJson$5, 16).then((wasm) => {\n            const instanceBuffer = new ArrayBuffer(8);\n            writeSeed(instanceBuffer, seedLow, seedHigh);\n            wasm.writeMemory(new Uint8Array(instanceBuffer));\n            wasm.init();\n            const obj = {\n                init: () => {\n                    wasm.writeMemory(new Uint8Array(instanceBuffer));\n                    wasm.init();\n                    return obj;\n                },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 512,\n                digestSize: 16,\n            };\n            return obj;\n        });\n    }\n\n    var name$4 = \"ripemd160\";\n    var data$4 = \"\";\n    var hash$4 = \"42f1de39\";\n    var wasmJson$4 = {\n    \tname: name$4,\n    \tdata: data$4,\n    \thash: hash$4\n    };\n\n    const mutex$2 = new Mutex();\n    let wasmCache$2 = null;\n    /**\n     * Calculates RIPEMD-160 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function ripemd160(data) {\n        if (wasmCache$2 === null) {\n            return lockedCreate(mutex$2, wasmJson$4, 20)\n                .then((wasm) => {\n                wasmCache$2 = wasm;\n                return wasmCache$2.calculate(data);\n            });\n        }\n        try {\n            const hash = wasmCache$2.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new RIPEMD-160 hash instance\n     */\n    function createRIPEMD160() {\n        return WASMInterface(wasmJson$4, 20).then((wasm) => {\n            wasm.init();\n            const obj = {\n                init: () => { wasm.init(); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: 20,\n            };\n            return obj;\n        });\n    }\n\n    function calculateKeyBuffer(hasher, key) {\n        const { blockSize } = hasher;\n        const buf = getUInt8Buffer(key);\n        if (buf.length > blockSize) {\n            hasher.update(buf);\n            const uintArr = hasher.digest('binary');\n            hasher.init();\n            return uintArr;\n        }\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.length);\n    }\n    function calculateHmac(hasher, key) {\n        hasher.init();\n        const { blockSize } = hasher;\n        const keyBuf = calculateKeyBuffer(hasher, key);\n        const keyBuffer = new Uint8Array(blockSize);\n        keyBuffer.set(keyBuf);\n        const opad = new Uint8Array(blockSize);\n        for (let i = 0; i < blockSize; i++) {\n            const v = keyBuffer[i];\n            opad[i] = v ^ 0x5C;\n            keyBuffer[i] = v ^ 0x36;\n        }\n        hasher.update(keyBuffer);\n        const obj = {\n            init: () => {\n                hasher.init();\n                hasher.update(keyBuffer);\n                return obj;\n            },\n            update: (data) => {\n                hasher.update(data);\n                return obj;\n            },\n            digest: ((outputType) => {\n                const uintArr = hasher.digest('binary');\n                hasher.init();\n                hasher.update(opad);\n                hasher.update(uintArr);\n                return hasher.digest(outputType);\n            }),\n            save: () => {\n                throw new Error('save() not supported');\n            },\n            load: () => {\n                throw new Error('load() not supported');\n            },\n            blockSize: hasher.blockSize,\n            digestSize: hasher.digestSize,\n        };\n        return obj;\n    }\n    /**\n     * Calculates HMAC hash\n     * @param hash Hash algorithm to use. It has to be the return value of a function like createSHA1()\n     * @param key Key (string, Buffer or TypedArray)\n     */\n    function createHMAC(hash, key) {\n        if (!hash || !hash.then) {\n            throw new Error('Invalid hash function is provided! Usage: createHMAC(createMD5(), \"key\").');\n        }\n        return hash.then((hasher) => calculateHmac(hasher, key));\n    }\n\n    function calculatePBKDF2(digest, salt, iterations, hashLength, outputType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const DK = new Uint8Array(hashLength);\n            const block1 = new Uint8Array(salt.length + 4);\n            const block1View = new DataView(block1.buffer);\n            const saltBuffer = getUInt8Buffer(salt);\n            const saltUIntBuffer = new Uint8Array(saltBuffer.buffer, saltBuffer.byteOffset, saltBuffer.length);\n            block1.set(saltUIntBuffer);\n            let destPos = 0;\n            const hLen = digest.digestSize;\n            const l = Math.ceil(hashLength / hLen);\n            let T = null;\n            let U = null;\n            for (let i = 1; i <= l; i++) {\n                block1View.setUint32(salt.length, i);\n                digest.init();\n                digest.update(block1);\n                T = digest.digest('binary');\n                U = T.slice();\n                for (let j = 1; j < iterations; j++) {\n                    digest.init();\n                    digest.update(U);\n                    U = digest.digest('binary');\n                    for (let k = 0; k < hLen; k++) {\n                        T[k] ^= U[k];\n                    }\n                }\n                DK.set(T.subarray(0, hashLength - destPos), destPos);\n                destPos += hLen;\n            }\n            if (outputType === 'binary') {\n                return DK;\n            }\n            const digestChars = new Uint8Array(hashLength * 2);\n            return getDigestHex(digestChars, DK, hashLength);\n        });\n    }\n    const validateOptions$2 = (options) => {\n        if (!options || typeof options !== 'object') {\n            throw new Error('Invalid options parameter. It requires an object.');\n        }\n        if (!options.hashFunction || !options.hashFunction.then) {\n            throw new Error('Invalid hash function is provided! Usage: pbkdf2(\"password\", \"salt\", 1000, 32, createSHA1()).');\n        }\n        if (!Number.isInteger(options.iterations) || options.iterations < 1) {\n            throw new Error('Iterations should be a positive number');\n        }\n        if (!Number.isInteger(options.hashLength) || options.hashLength < 1) {\n            throw new Error('Hash length should be a positive number');\n        }\n        if (options.outputType === undefined) {\n            options.outputType = 'hex';\n        }\n        if (!['hex', 'binary'].includes(options.outputType)) {\n            throw new Error(`Insupported output type ${options.outputType}. Valid values: ['hex', 'binary']`);\n        }\n    };\n    /**\n     * Generates a new PBKDF2 hash for the supplied password\n     */\n    function pbkdf2(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateOptions$2(options);\n            const hmac = yield createHMAC(options.hashFunction, options.password);\n            return calculatePBKDF2(hmac, options.salt, options.iterations, options.hashLength, options.outputType);\n        });\n    }\n\n    var name$3 = \"scrypt\";\n    var data$3 = \"AGFzbQEAAAABIwZgAX8Bf2AAAX9gBX9/fn9/AGAEf39/fwBgAX8AYAN/f38AAwcGAAECAwQFBAUBcAEBAQUGAQECgIACBggBfwFBkIgECwc5BAZtZW1vcnkCABJIYXNoX1NldE1lbW9yeVNpemUAAA5IYXNoX0dldEJ1ZmZlcgABBnNjcnlwdAAFCpcmBlsBAX9BACEBAkAgAEEAKAKACGsiAEUNAAJAIABBEHYgAEGAgHxxIABJaiIAQABBf0cNAEH/ASEBDAELQQAhAUEAQQApA4AIIABBEHStfDcDgAgLIAFBGHRBGHULagECfwJAQQAoAogIIgANAEEAPwBBEHQiADYCiAhBgIAgQQAoAoAIayIBRQ0AAkAgAUEQdiABQYCAfHEgAUlqIgBAAEF/Rw0AQQAPC0EAQQApA4AIIABBEHStfDcDgAhBACgCiAghAAsgAAu5EAMMfwl+An8gAUEFdCEFIAQgAUEIdGohBiAEIAFBB3QiB2ohCAJAAkACQAJAIAFFDQBBACEJIAAhCiAEIQsDQCALIAooAgA2AgAgCkEEaiEKIAtBBGohCyAJQQFqIgkgBUkNAAsgAlANAiABQQh0IQxBACENIAMhDgNAQQAhCSABIQ8DQCAOIAlqIgogBCAJaiILKQMANwMAIApBCGogC0EIaikDADcDACAKQRBqIAtBEGopAwA3AwAgCkEYaiALQRhqKQMANwMAIApBIGogC0EgaikDADcDACAKQShqIAtBKGopAwA3AwAgCkEwaiALQTBqKQMANwMAIApBOGogC0E4aikDADcDACAKQcAAaiALQcAAaikDADcDACAKQcgAaiALQcgAaikDADcDACAKQdAAaiALQdAAaikDADcDACAKQdgAaiALQdgAaikDADcDACAKQeAAaiALQeAAaikDADcDACAKQegAaiALQegAaikDADcDACAKQfAAaiALQfAAaikDADcDACAKQfgAaiALQfgAaikDADcDACAJQYABaiEJIA9Bf2oiDw0ACyAEIAggBiABEAMgDiEJIAQhDyABIRADQCAJIAdqIgogDyAHaiILKQMANwMAIApBCGogC0EIaikDADcDACAKQRBqIAtBEGopAwA3AwAgCkEYaiALQRhqKQMANwMAIApBIGogC0EgaikDADcDACAKQShqIAtBKGopAwA3AwAgCkEwaiALQTBqKQMANwMAIApBOGogC0E4aikDADcDACAKQcAAaiALQcAAaikDADcDACAKQcgAaiALQcgAaikDADcDACAKQdAAaiALQdAAaikDADcDACAKQdgAaiALQdgAaikDADcDACAKQeAAaiALQeAAaikDADcDACAKQegAaiALQegAaikDADcDACAKQfAAaiALQfAAaikDADcDACAKQfgAaiALQfgAaikDADcDACAJQYABaiEJIA9BgAFqIQ8gEEF/aiIQDQALIAggBCAGIAEQAyAOIAxqIQ4gDUECaiINrSACVA0ADAILCyACUA0CIAhBQGoiCikDOCERIAopAzAhEiAKKQMoIRMgCikDICEUIAopAxghFSAKKQMQIRYgCikDCCEXIAopAwAhGEECIQoDQCAKrSEZIApBAmohCiAZIAJUDQALIAYgETcDOCAGIBI3AzAgBiATNwMoIAYgFDcDICAGIBU3AxggBiAWNwMQIAYgFzcDCCAGIBg3AwALAkAgAUUNACAHQUBqIgogCGohGiACp0F/aiEOIAogBGohGyABQQd0IQ1BACEMA0AgAyANIBsoAgAgDnFsaiEHQQAhCSABIQ8DQCAEIAlqIgogCikDACAHIAlqIgspAwCFNwMAIApBCGoiECAQKQMAIAtBCGopAwCFNwMAIApBEGoiECAQKQMAIAtBEGopAwCFNwMAIApBGGoiECAQKQMAIAtBGGopAwCFNwMAIApBIGoiECAQKQMAIAtBIGopAwCFNwMAIApBKGoiECAQKQMAIAtBKGopAwCFNwMAIApBMGoiECAQKQMAIAtBMGopAwCFNwMAIApBOGoiECAQKQMAIAtBOGopAwCFNwMAIApBwABqIhAgECkDACALQcAAaikDAIU3AwAgCkHIAGoiECAQKQMAIAtByABqKQMAhTcDACAKQdAAaiIQIBApAwAgC0HQAGopAwCFNwMAIApB2ABqIhAgECkDACALQdgAaikDAIU3AwAgCkHgAGoiECAQKQMAIAtB4ABqKQMAhTcDACAKQegAaiIQIBApAwAgC0HoAGopAwCFNwMAIApB8ABqIhAgECkDACALQfAAaikDAIU3AwAgCkH4AGoiCiAKKQMAIAtB+ABqKQMAhTcDACAJQYABaiEJIA9Bf2oiDw0ACyAEIAggBiABEAMgAyANIBooAgAgDnFsaiEHQQAhCSABIQ8DQCAIIAlqIgogCikDACAHIAlqIgspAwCFNwMAIApBCGoiECAQKQMAIAtBCGopAwCFNwMAIApBEGoiECAQKQMAIAtBEGopAwCFNwMAIApBGGoiECAQKQMAIAtBGGopAwCFNwMAIApBIGoiECAQKQMAIAtBIGopAwCFNwMAIApBKGoiECAQKQMAIAtBKGopAwCFNwMAIApBMGoiECAQKQMAIAtBMGopAwCFNwMAIApBOGoiECAQKQMAIAtBOGopAwCFNwMAIApBwABqIhAgECkDACALQcAAaikDAIU3AwAgCkHIAGoiECAQKQMAIAtByABqKQMAhTcDACAKQdAAaiIQIBApAwAgC0HQAGopAwCFNwMAIApB2ABqIhAgECkDACALQdgAaikDAIU3AwAgCkHgAGoiECAQKQMAIAtB4ABqKQMAhTcDACAKQegAaiIQIBApAwAgC0HoAGopAwCFNwMAIApB8ABqIhAgECkDACALQfAAaikDAIU3AwAgCkH4AGoiCiAKKQMAIAtB+ABqKQMAhTcDACAJQYABaiEJIA9Bf2oiDw0ACyAIIAQgBiABEAMgDEECaiIMrSACVA0ADAILCyAIQUBqIgopAzghESAKKQMwIRIgCikDKCETIAopAyAhFCAKKQMYIRUgCikDECEWIAopAwghFyAKKQMAIRhBAiEKA0AgCq0hGSAKQQJqIQogGSACVA0ACyAGIBE3AzggBiASNwMwIAYgEzcDKCAGIBQ3AyAgBiAVNwMYIAYgFjcDECAGIBc3AwggBiAYNwMACyABRQ0AQQAhCgNAIAAgBCgCADYCACAAQQRqIQAgBEEEaiEEIApBAWoiCiAFSQ0ACwsL4wUDAX8IfgJ/IAIgA0EHdCAAakFAaiIEKQMAIgU3AwAgAiAEKQMIIgY3AwggAiAEKQMQIgc3AxAgAiAEKQMYIgg3AxggAiAEKQMgIgk3AyAgAiAEKQMoIgo3AyggAiAEKQMwIgs3AzAgAiAEKQM4Igw3AzgCQCADRQ0AIANBAXQhDSAAQfgAaiEEIANBBnQhDkECIQADQCACIAUgBEGIf2opAwCFNwMAIAIgBiAEQZB/aikDAIU3AwggAiAHIARBmH9qKQMAhTcDECACIAggBEGgf2opAwCFNwMYIAIgCSAEQah/aikDAIU3AyAgAiAKIARBsH9qKQMAhTcDKCACIAsgBEG4f2opAwCFNwMwIAIgDCAEQUBqKQMAhTcDOCACEAQgASACKQMANwMAIAFBCGogAikDCDcDACABQRBqIAIpAxA3AwAgAUEYaiACKQMYNwMAIAFBIGogAikDIDcDACABQShqIAIpAyg3AwAgAUEwaiACKQMwNwMAIAFBOGogAikDODcDACACIAIpAwAgBEFIaikDAIU3AwAgAiACKQMIIARBUGopAwCFNwMIIAIgAikDECAEQVhqKQMAhTcDECACIAIpAxggBEFgaikDAIU3AxggAiACKQMgIARBaGopAwCFNwMgIAIgAikDKCAEQXBqKQMAhTcDKCACIAIpAzAgBEF4aikDAIU3AzAgAiACKQM4IAQpAwCFNwM4IAIQBCABIA5qIgMgAikDADcDACADQQhqIAIpAwg3AwAgA0EQaiACKQMQNwMAIANBGGogAikDGDcDACADQSBqIAIpAyA3AwAgA0EoaiACKQMoNwMAIANBMGogAikDMDcDACADQThqIAIpAzg3AwAgACANTw0BIARBgAFqIQQgAUHAAGohASAAQQJqIQAgAikDOCEMIAIpAzAhCyACKQMoIQogAikDICEJIAIpAxghCCACKQMQIQcgAikDCCEGIAIpAwAhBQwACwsLug0IAX4BfwF+AX8BfgF/AX4SfyAAIAAoAgQgACkDKCIBQiCIpyICIAApAzgiA0IgiKciBGpBB3cgACkDCCIFQiCIp3MiBiAEakEJdyAAKQMYIgdCIIincyIIIAZqQQ13IAJzIgkgB6ciCiABpyILakEHdyADp3MiAiALakEJdyAFp3MiDCACakENdyAKcyINIAxqQRJ3IAtzIg4gACkDACIBQiCIpyIPIAApAxAiA0IgiKciEGpBB3cgACkDICIFQiCIp3MiC2pBB3dzIgogCSAIakESdyAEcyIRIAJqQQd3IAApAzAiB6ciCSABpyISakEHdyADp3MiBCASakEJdyAFp3MiEyAEakENdyAJcyIUcyIJIBFqQQl3IAsgEGpBCXcgB0IgiKdzIhVzIhYgCWpBDXcgAnMiFyAWakESdyARcyIRakEHdyAGIBQgE2pBEncgEnMiEmpBB3cgFSALakENdyAPcyIUcyICIBJqQQl3IAxzIg8gAmpBDXcgBnMiGHMiBiARakEJdyAIIA0gFCAVakESdyAQcyIQIARqQQd3cyIMIBBqQQl3cyIIcyIVIAZqQQ13IApzIhQgDCAKIA5qQQl3IBNzIhMgCmpBDXcgC3MiGSATakESdyAOcyIKakEHdyAXcyILIApqQQl3IA9zIg4gC2pBDXcgDHMiFyAOakESdyAKcyINIAIgCCAMakENdyAEcyIMIAhqQRJ3IBBzIghqQQd3IBlzIgpqQQd3cyIEIBQgFWpBEncgEXMiECALakEHdyAJIBggD2pBEncgEnMiEWpBB3cgDHMiDCARakEJdyATcyISIAxqQQ13IAlzIg9zIgkgEGpBCXcgCiAIakEJdyAWcyITcyIWIAlqQQ13IAtzIhQgFmpBEncgEHMiEGpBB3cgBiAPIBJqQRJ3IBFzIhFqQQd3IBMgCmpBDXcgAnMiC3MiAiARakEJdyAOcyIOIAJqQQ13IAZzIhhzIgYgEGpBCXcgFSAXIAsgE2pBEncgCHMiCCAMakEHd3MiCyAIakEJd3MiE3MiFSAGakENdyAEcyIXIAsgBCANakEJdyAScyISIARqQQ13IApzIhkgEmpBEncgDXMiBGpBB3cgFHMiCiAEakEJdyAOcyIPIApqQQ13IAtzIhQgD2pBEncgBHMiDSACIBMgC2pBDXcgDHMiDCATakESdyAIcyIIakEHdyAZcyILakEHd3MiBCAXIBVqQRJ3IBBzIhAgCmpBB3cgCSAYIA5qQRJ3IBFzIg5qQQd3IAxzIgwgDmpBCXcgEnMiESAMakENdyAJcyIXcyIJIBBqQQl3IAsgCGpBCXcgFnMiEnMiEyAJakENdyAKcyIYIBNqQRJ3IBBzIhBqQQd3IAYgFyARakESdyAOcyIKakEHdyASIAtqQQ13IAJzIhdzIgIgCmpBCXcgD3MiDiACakENdyAGcyIWcyIGIAkgFiAOakESdyAKcyIWakEHdyAVIBQgFyASakESdyAIcyIIIAxqQQd3cyIKIAhqQQl3cyISIApqQQ13IAxzIg9zIgwgFmpBCXcgBCANakEJdyARcyIRcyIVIAxqQQ13IAlzIhQgFWpBEncgFnMiCWpBB3cgAiAPIBJqQRJ3IAhzIghqQQd3IBEgBGpBDXcgC3MiD3MiCyAIakEJdyATcyITIAtqQQ13IAJzIhdzIhZqNgIEIAAgACgCCCAWIAlqQQl3IAogDyARakESdyANcyIRakEHdyAYcyICIBFqQQl3IA5zIg5zIg9qNgIIIAAgACgCDCAPIBZqQQ13IAZzIg1qNgIMIAAgACgCECAGIBBqQQl3IBJzIhIgDiACakENdyAKcyIYIBcgE2pBEncgCHMiCiAMakEHd3MiCCAKakEJd3MiFiAIakENdyAMcyIMajYCECAAIAAoAgAgDSAPakESdyAJc2o2AgAgACAAKAIUIAwgFmpBEncgCnNqNgIUIAAgACgCGCAIajYCGCAAIAAoAhwgFmo2AhwgACAAKAIgIBIgBmpBDXcgBHMiCSAYIA5qQRJ3IBFzIgYgC2pBB3dzIgogBmpBCXcgFXMiBGo2AiAgACAAKAIkIAQgCmpBDXcgC3MiC2o2AiQgACAAKAIoIAsgBGpBEncgBnNqNgIoIAAgACgCLCAKajYCLCAAIAAoAjAgCSASakESdyAQcyIGIAJqQQd3IBRzIgtqNgIwIAAgACgCNCALIAZqQQl3IBNzIgpqNgI0IAAgACgCOCAKIAtqQQ13IAJzIgJqNgI4IAAgACgCPCACIApqQRJ3IAZzajYCPAtyAwF/AX4CfwJAIAJFDQBBACgCiAgiAyAAIAGtIgQgAyAAQQd0IgUgAmxqIgMgAyAFIAFsaiIGEAIgAkEBRg0AIAJBf2ohASAFIQIDQEEAKAKICCACaiAAIAQgAyAGEAIgAiAFaiECIAFBf2oiAQ0ACwsL\";\n    var hash$3 = \"d96fb75f\";\n    var wasmJson$3 = {\n    \tname: name$3,\n    \tdata: data$3,\n    \thash: hash$3\n    };\n\n    function scryptInternal(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { costFactor, blockSize, parallelism, hashLength, } = options;\n            const SHA256Hasher = createSHA256();\n            const blockData = yield pbkdf2({\n                password: options.password,\n                salt: options.salt,\n                iterations: 1,\n                hashLength: 128 * blockSize * parallelism,\n                hashFunction: SHA256Hasher,\n                outputType: 'binary',\n            });\n            const scryptInterface = yield WASMInterface(wasmJson$3, 0);\n            // last block is for storing the temporary vectors\n            const VSize = 128 * blockSize * costFactor;\n            const XYSize = 256 * blockSize;\n            scryptInterface.setMemorySize(blockData.length + VSize + XYSize);\n            scryptInterface.writeMemory(blockData, 0);\n            // mix blocks\n            scryptInterface.getExports().scrypt(blockSize, costFactor, parallelism);\n            const expensiveSalt = scryptInterface\n                .getMemory()\n                .subarray(0, 128 * blockSize * parallelism);\n            const outputData = yield pbkdf2({\n                password: options.password,\n                salt: expensiveSalt,\n                iterations: 1,\n                hashLength,\n                hashFunction: SHA256Hasher,\n                outputType: 'binary',\n            });\n            if (options.outputType === 'hex') {\n                const digestChars = new Uint8Array(hashLength * 2);\n                return getDigestHex(digestChars, outputData, hashLength);\n            }\n            // return binary format\n            return outputData;\n        });\n    }\n    // eslint-disable-next-line no-bitwise\n    const isPowerOfTwo = (v) => v && !(v & (v - 1));\n    const validateOptions$1 = (options) => {\n        if (!options || typeof options !== 'object') {\n            throw new Error('Invalid options parameter. It requires an object.');\n        }\n        if (!Number.isInteger(options.blockSize) || options.blockSize < 1) {\n            throw new Error('Block size should be a positive number');\n        }\n        if (!Number.isInteger(options.costFactor)\n            || options.costFactor < 2\n            || !isPowerOfTwo(options.costFactor)) {\n            throw new Error('Cost factor should be a power of 2, greater than 1');\n        }\n        if (!Number.isInteger(options.parallelism) || options.parallelism < 1) {\n            throw new Error('Parallelism should be a positive number');\n        }\n        if (!Number.isInteger(options.hashLength) || options.hashLength < 1) {\n            throw new Error('Hash length should be a positive number.');\n        }\n        if (options.outputType === undefined) {\n            options.outputType = 'hex';\n        }\n        if (!['hex', 'binary'].includes(options.outputType)) {\n            throw new Error(`Insupported output type ${options.outputType}. Valid values: ['hex', 'binary']`);\n        }\n    };\n    /**\n     * Calculates hash using the scrypt password-based key derivation function\n     * @returns Computed hash as a hexadecimal string or as\n     *          Uint8Array depending on the outputType option\n     */\n    function scrypt(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateOptions$1(options);\n            return scryptInternal(options);\n        });\n    }\n\n    var name$2 = \"bcrypt\";\n    var data$2 = \"\";\n    var hash$2 = \"9f4c7b9e\";\n    var wasmJson$2 = {\n    \tname: name$2,\n    \tdata: data$2,\n    \thash: hash$2\n    };\n\n    function bcryptInternal(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { costFactor, password, salt } = options;\n            const bcryptInterface = yield WASMInterface(wasmJson$2, 0);\n            bcryptInterface.writeMemory(getUInt8Buffer(salt), 0);\n            const passwordBuffer = getUInt8Buffer(password);\n            bcryptInterface.writeMemory(passwordBuffer, 16);\n            const shouldEncode = options.outputType === 'encoded' ? 1 : 0;\n            bcryptInterface.getExports().bcrypt(passwordBuffer.length, costFactor, shouldEncode);\n            const memory = bcryptInterface.getMemory();\n            if (options.outputType === 'encoded') {\n                return intArrayToString(memory, 60);\n            }\n            if (options.outputType === 'hex') {\n                const digestChars = new Uint8Array(24 * 2);\n                return getDigestHex(digestChars, memory, 24);\n            }\n            // return binary format\n            // the data is copied to allow GC of the original memory buffer\n            return memory.slice(0, 24);\n        });\n    }\n    const validateOptions = (options) => {\n        if (!options || typeof options !== 'object') {\n            throw new Error('Invalid options parameter. It requires an object.');\n        }\n        if (!Number.isInteger(options.costFactor) || options.costFactor < 4 || options.costFactor > 31) {\n            throw new Error('Cost factor should be a number between 4 and 31');\n        }\n        options.password = getUInt8Buffer(options.password);\n        if (options.password.length < 1) {\n            throw new Error('Password should be at least 1 byte long');\n        }\n        if (options.password.length > 72) {\n            throw new Error('Password should be at most 72 bytes long');\n        }\n        options.salt = getUInt8Buffer(options.salt);\n        if (options.salt.length !== 16) {\n            throw new Error('Salt should be 16 bytes long');\n        }\n        if (options.outputType === undefined) {\n            options.outputType = 'encoded';\n        }\n        if (!['hex', 'binary', 'encoded'].includes(options.outputType)) {\n            throw new Error(`Insupported output type ${options.outputType}. Valid values: ['hex', 'binary', 'encoded']`);\n        }\n    };\n    /**\n     * Calculates hash using the bcrypt password-hashing function\n     * @returns Computed hash\n     */\n    function bcrypt(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateOptions(options);\n            return bcryptInternal(options);\n        });\n    }\n    const validateHashCharacters = (hash) => {\n        if (!/^\\$2[axyb]\\$[0-3][0-9]\\$[./A-Za-z0-9]{53}$/.test(hash)) {\n            return false;\n        }\n        if (hash[4] === '0' && parseInt(hash[5], 10) < 4) {\n            return false;\n        }\n        if (hash[4] === '3' && parseInt(hash[5], 10) > 1) {\n            return false;\n        }\n        return true;\n    };\n    const validateVerifyOptions = (options) => {\n        if (!options || typeof options !== 'object') {\n            throw new Error('Invalid options parameter. It requires an object.');\n        }\n        if (options.hash === undefined || typeof options.hash !== 'string') {\n            throw new Error('Hash should be specified');\n        }\n        if (options.hash.length !== 60) {\n            throw new Error('Hash should be 60 bytes long');\n        }\n        if (!validateHashCharacters(options.hash)) {\n            throw new Error('Invalid hash');\n        }\n        options.password = getUInt8Buffer(options.password);\n        if (options.password.length < 1) {\n            throw new Error('Password should be at least 1 byte long');\n        }\n        if (options.password.length > 72) {\n            throw new Error('Password should be at most 72 bytes long');\n        }\n    };\n    /**\n     * Verifies password using bcrypt password-hashing function\n     * @returns True if the encoded hash matches the password\n     */\n    function bcryptVerify(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateVerifyOptions(options);\n            const { hash, password } = options;\n            const bcryptInterface = yield WASMInterface(wasmJson$2, 0);\n            bcryptInterface.writeMemory(getUInt8Buffer(hash), 0);\n            const passwordBuffer = getUInt8Buffer(password);\n            bcryptInterface.writeMemory(passwordBuffer, 60);\n            return !!bcryptInterface.getExports().bcrypt_verify(passwordBuffer.length);\n        });\n    }\n\n    var name$1 = \"whirlpool\";\n    var data$1 = \"AGFzbQEAAAABEQRgAAF/YAF/AGACf38AYAAAAwkIAAECAwEDAAEEBQFwAQEBBQQBAQICBg4CfwFB0JsFC38AQYAYCwdwCAZtZW1vcnkCAA5IYXNoX0dldEJ1ZmZlcgAACUhhc2hfSW5pdAADC0hhc2hfVXBkYXRlAAQKSGFzaF9GaW5hbAAFDUhhc2hfR2V0U3RhdGUABg5IYXNoX0NhbGN1bGF0ZQAHClNUQVRFX1NJWkUDAQrgGggFAEGAGQv0BgEIfiAAKQMAIQFBAEEAKQOAmwEiAjcDgJkBIAApAxghAyAAKQMQIQQgACkDCCEFQQBBACkDmJsBIgY3A5iZAUEAQQApA5CbASIHNwOQmQFBAEEAKQOImwEiCDcDiJkBQQAgASAChTcDwJkBQQAgBSAIhTcDyJkBQQAgBCAHhTcD0JkBQQAgAyAGhTcD2JkBIAApAyAhAUEAQQApA6CbASICNwOgmQFBACABIAKFNwPgmQEgACkDKCEBQQBBACkDqJsBIgI3A6iZAUEAIAEgAoU3A+iZASAAKQMwIQFBAEEAKQOwmwEiAjcDsJkBQQAgASAChTcD8JkBIAApAzghAUEAQQApA7ibASICNwO4mQFBACABIAKFNwP4mQFBAEKYxpjG/pDugM8ANwOAmgFBgJkBQYCaARACQcCZAUGAmQEQAkEAQrbMyq6f79vI0gA3A4CaAUGAmQFBgJoBEAJBwJkBQYCZARACQQBC4Pju9LiUw701NwOAmgFBgJkBQYCaARACQcCZAUGAmQEQAkEAQp3A35bs5ZL/1wA3A4CaAUGAmQFBgJoBEAJBwJkBQYCZARACQQBCle7dqf6TvKVaNwOAmgFBgJkBQYCaARACQcCZAUGAmQEQAkEAQtiSp9GQlui1hX83A4CaAUGAmQFBgJoBEAJBwJkBQYCZARACQQBCvbvBoL/Zz4LnADcDgJoBQYCZAUGAmgEQAkHAmQFBgJkBEAJBAELkz4Ta+LTfylg3A4CaAUGAmQFBgJoBEAJBwJkBQYCZARACQQBC+93zs9b7xaOefzcDgJoBQYCZAUGAmgEQAkHAmQFBgJkBEAJBAELK2/y90NXWwTM3A4CaAUGAmQFBgJoBEAJBwJkBQYCZARACQQBBACkDwJkBIAApAwCFQQApA4CbAYU3A4CbAUEAQQApA8iZASAAKQMIhUEAKQOImwGFNwOImwFBAEEAKQPQmQEgACkDEIVBACkDkJsBhTcDkJsBQQBBACkD2JkBIAApAxiFQQApA5ibAYU3A5ibAUEAQQApA+CZASAAKQMghUEAKQOgmwGFNwOgmwFBAEEAKQPomQEgACkDKIVBACkDqJsBhTcDqJsBQQBBACkD8JkBIAApAzCFQQApA7CbAYU3A7CbAUEAQQApA/iZASAAKQM4hUEAKQO4mwGFNwO4mwELhgwKAX4BfwF+AX8BfgF/AX4BfwR+A38gACAAKQMAIgKnIgNB/wFxQQN0QYAIaikDAEI4iSAAKQM4IgSnIgVBBXZB+A9xQYAIaikDAIVCOIkgACkDMCIGpyIHQQ12QfgPcUGACGopAwCFQjiJIAApAygiCKciCUEVdkH4D3FBgAhqKQMAhUI4iSAAKQMgIgpCIIinQf8BcUEDdEGACGopAwCFQjiJIAApAxgiC0IoiKdB/wFxQQN0QYAIaikDAIVCOIkgACkDECIMQjCIp0H/AXFBA3RBgAhqKQMAhUI4iSAAKQMIIg1COIinQQN0QYAIaikDAIVCOIkgASkDAIU3AwAgACANpyIOQf8BcUEDdEGACGopAwBCOIkgA0EFdkH4D3FBgAhqKQMAhUI4iSAFQQ12QfgPcUGACGopAwCFQjiJIAdBFXZB+A9xQYAIaikDAIVCOIkgCEIgiKdB/wFxQQN0QYAIaikDAIVCOIkgCkIoiKdB/wFxQQN0QYAIaikDAIVCOIkgC0IwiKdB/wFxQQN0QYAIaikDAIVCOIkgDEI4iKdBA3RBgAhqKQMAhUI4iSABKQMIhTcDCCAAIAynIg9B/wFxQQN0QYAIaikDAEI4iSAOQQV2QfgPcUGACGopAwCFQjiJIANBDXZB+A9xQYAIaikDAIVCOIkgBUEVdkH4D3FBgAhqKQMAhUI4iSAGQiCIp0H/AXFBA3RBgAhqKQMAhUI4iSAIQiiIp0H/AXFBA3RBgAhqKQMAhUI4iSAKQjCIp0H/AXFBA3RBgAhqKQMAhUI4iSALQjiIp0EDdEGACGopAwCFQjiJIAEpAxCFNwMQIAAgC6ciEEH/AXFBA3RBgAhqKQMAQjiJIA9BBXZB+A9xQYAIaikDAIVCOIkgDkENdkH4D3FBgAhqKQMAhUI4iSADQRV2QfgPcUGACGopAwCFQjiJIARCIIinQf8BcUEDdEGACGopAwCFQjiJIAZCKIinQf8BcUEDdEGACGopAwCFQjiJIAhCMIinQf8BcUEDdEGACGopAwCFQjiJIApCOIinQQN0QYAIaikDAIVCOIkgASkDGIU3AxggACAKpyIDQf8BcUEDdEGACGopAwBCOIkgEEEFdkH4D3FBgAhqKQMAhUI4iSAPQQ12QfgPcUGACGopAwCFQjiJIA5BFXZB+A9xQYAIaikDAIVCOIkgAkIgiKdB/wFxQQN0QYAIaikDAIVCOIkgBEIoiKdB/wFxQQN0QYAIaikDAIVCOIkgBkIwiKdB/wFxQQN0QYAIaikDAIVCOIkgCEI4iKdBA3RBgAhqKQMAhUI4iSABKQMghTcDICAAIAlB/wFxQQN0QYAIaikDAEI4iSADQQV2QfgPcUGACGopAwCFQjiJIBBBDXZB+A9xQYAIaikDAIVCOIkgD0EVdkH4D3FBgAhqKQMAhUI4iSANQiCIp0H/AXFBA3RBgAhqKQMAhUI4iSACQiiIp0H/AXFBA3RBgAhqKQMAhUI4iSAEQjCIp0H/AXFBA3RBgAhqKQMAhUI4iSAGQjiIp0EDdEGACGopAwCFQjiJIAEpAyiFNwMoIAAgB0H/AXFBA3RBgAhqKQMAQjiJIAlBBXZB+A9xQYAIaikDAIVCOIkgA0ENdkH4D3FBgAhqKQMAhUI4iSAQQRV2QfgPcUGACGopAwCFQjiJIAxCIIinQf8BcUEDdEGACGopAwCFQjiJIA1CKIinQf8BcUEDdEGACGopAwCFQjiJIAJCMIinQf8BcUEDdEGACGopAwCFQjiJIARCOIinQQN0QYAIaikDAIVCOIkgASkDMIU3AzAgACAFQf8BcUEDdEGACGopAwBCOIkgB0EFdkH4D3FBgAhqKQMAhUI4iSAJQQ12QfgPcUGACGopAwCFQjiJIANBFXZB+A9xQYAIaikDAIVCOIkgC0IgiKdB/wFxQQN0QYAIaikDAIVCOIkgDEIoiKdB/wFxQQN0QYAIaikDAIVCOIkgDUIwiKdB/wFxQQN0QYAIaikDAIVCOIkgAkI4iKdBA3RBgAhqKQMAhUI4iSABKQM4hTcDOAtcAEEAQgA3A8ibAUEAQgA3A7ibAUEAQgA3A7CbAUEAQgA3A6ibAUEAQgA3A6CbAUEAQgA3A5ibAUEAQgA3A5CbAUEAQgA3A4ibAUEAQgA3A4CbAUEAQQA2AsCbAQuWAgEFf0EAIQFBAEEAKQPImwEgAK18NwPImwECQEEAKALAmwEiAkUNAEEAIQECQCACIABqIgNBwAAgA0HAAEkbIgQgAkH/AXEiBU0NAEEAIQEDQCAFQcCaAWogAUGAGWotAAA6AAAgAUEBaiEBIAQgAkEBaiICQf8BcSIFSw0ACwsCQCADQT9NDQBBwJoBEAFBACEEC0EAIAQ2AsCbAQsCQCAAIAFrIgJBwABJDQADQCABQYAZahABIAFBwABqIQEgAkFAaiICQT9LDQALCwJAIAJFDQBBACACNgLAmwFBACECQQAhBQNAIAJBwJoBaiACIAFqQYAZai0AADoAAEEAKALAmwEgBUEBaiIFQf8BcSICSw0ACwsL+gMCBH8BfiMAQcAAayIAJAAgAEE4akIANwMAIABBMGpCADcDACAAQShqQgA3AwAgAEEgakIANwMAIABBGGpCADcDACAAQRBqQgA3AwAgAEIANwMIIABCADcDAEEAIQECQAJAQQAoAsCbASICRQ0AQQAhAwNAIAAgAWogAUHAmgFqLQAAOgAAIAIgA0EBaiIDQf8BcSIBSw0AC0EAIAJBAWo2AsCbASAAIAJqQYABOgAAIAJBYHFBIEcNASAAEAEgAEIANwMYIABCADcDECAAQgA3AwggAEIANwMADAELQQBBATYCwJsBIABBgAE6AAALQQApA8ibASEEQQBCADcDyJsBIABBADoANiAAQQA2ATIgAEIANwEqIABBADoAKSAAQgA3ACEgAEEAOgAgIAAgBEIFiDwAPiAAIARCDYg8AD0gACAEQhWIPAA8IAAgBEIdiDwAOyAAIARCJYg8ADogACAEQi2IPAA5IAAgBEI1iDwAOCAAIARCPYg8ADcgACAEp0EDdDoAPyAAEAFBAEEAKQOAmwE3A4AZQQBBACkDiJsBNwOIGUEAQQApA5CbATcDkBlBAEEAKQOYmwE3A5gZQQBBACkDoJsBNwOgGUEAQQApA6ibATcDqBlBAEEAKQOwmwE3A7AZQQBBACkDuJsBNwO4GSAAQcAAaiQACwYAQcCaAQtiAEEAQgA3A8ibAUEAQgA3A7ibAUEAQgA3A7CbAUEAQgA3A6ibAUEAQgA3A6CbAUEAQgA3A5ibAUEAQgA3A5CbAUEAQgA3A4ibAUEAQgA3A4CbAUEAQQA2AsCbASAAEAQQBQsLjBABAEGACAuEEBgYYBjAeDDYIyOMIwWvRibGxj/GfvmRuOjoh+gTb837h4cmh0yhE8u4uNq4qWJtEQEBBAEIBQIJT08hT0Jung02Ntg2re5sm6amoqZZBFH/0tJv0t69uQz19fP1+wb3Dnl5+XnvgPKWb2+hb1/O3jCRkX6R/O8/bVJSVVKqB6T4YGCdYCf9wEe8vMq8iXZlNZubVpuszSs3jo4CjgSMAYqjo7ajcRVb0gwMMAxgPBhse3vxe/+K9oQ1NdQ1teFqgB0ddB3oaTr14OCn4FNH3bPX13vX9qyzIcLCL8Je7ZmcLi64Lm2WXENLSzFLYnqWKf7+3/6jIeFdV1dBV4IWrtUVFVQVqEEqvXd3wXeftu7oNzfcN6XrbpLl5bPle1bXnp+fRp+M2SMT8PDn8NMX/SNKSjVKan+UINraT9qelalEWFh9WPolsKLJyQPJBsqPzykppClVjVJ8CgooClAiFFqxsf6x4U9/UKCguqBpGl3Ja2uxa3/a1hSFhS6FXKsX2b29zr2Bc2c8XV1pXdI0uo8QEEAQgFAgkPT09/TzA/UHy8sLyxbAi90+Pvg+7cZ80wUFFAUoEQotZ2eBZx/mznjk5Lfkc1PVlycnnCclu04CQUEZQTJYgnOLixaLLJ0Lp6enpqdRAVP2fX3pfc+U+rKVlW6V3Ps3SdjYR9iOn61W+/vL+4sw63Du7p/uI3HBzXx87XzHkfi7ZmaFZhfjzHHd3VPdpo6nexcXXBe4Sy6vR0cBRwJGjkWenkKehNwhGsrKD8oexYnULS20LXWZWli/v8a/kXljLgcHHAc4Gw4/ra2OrQEjR6xaWnVa6i+0sIODNoNstRvvMzPMM4X/ZrZjY5FjP/LGXAICCAIQCgQSqqqSqjk4SZNxcdlxr6ji3sjIB8gOz43GGRlkGch9MtFJSTlJcnCSO9nZQ9mGmq9f8vLv8sMd+THj46vjS0jbqFtbcVviKra5iIgaiDSSDbyamlKapMgpPiYmmCYtvkwLMjLIMo36ZL+wsPqw6Up9Wenpg+kbas/yDw88D3gzHnfV1XPV5qa3M4CAOoB0uh30vr7Cvpl8YSfNzRPNJt6H6zQ00DS95GiJSEg9SHp1kDL//9v/qyTjVHp69Xr3j/SNkJB6kPTqPWRfX2Ffwj6+nSAggCAdoEA9aGi9aGfV0A8aGmga0HI0yq6ugq4ZLEG3tLTqtMledX1UVE1UmhmozpOTdpPs5Tt/IiKIIg2qRC9kZI1kB+nIY/Hx4/HbEv8qc3PRc7+i5swSEkgSkFokgkBAHUA6XYB6CAggCEAoEEjDwyvDVuiblezsl+wze8Xf29tL25aQq02hob6hYR9fwI2NDo0cgweRPT30PfXJesiXl2aXzPEzWwAAAAAAAAAAz88bzzbUg/krK6wrRYdWbnZ2xXaXs+zhgoIygmSwGebW1n/W/qmxKBsbbBvYdzbDtbXutcFbd3Svr4avESlDvmpqtWp339QdUFBdULoNoOpFRQlFEkyKV/Pz6/PLGPs4MDDAMJ3wYK3v75vvK3TDxD8//D/lw37aVVVJVZIcqseiorKieRBZ2+rqj+oDZcnpZWWJZQ/symq6utK6uWhpAy8vvC9lk15KwMAnwE7nnY7e3l/evoGhYBwccBzgbDj8/f3T/bsu50ZNTSlNUmSaH5KScpLk4Dl2dXXJdY+86voGBhgGMB4MNoqKEookmAmusrLysvlAeUvm5r/mY1nRhQ4OOA5wNhx+Hx98H/hjPudiYpViN/fEVdTUd9Tuo7U6qKiaqCkyTYGWlmKWxPQxUvn5w/mbOu9ixcUzxWb2l6MlJZQlNbFKEFlZeVnyILKrhIQqhFSuFdByctVyt6fkxTk55DnV3XLsTEwtTFphmBZeXmVeyju8lHh4/XjnhfCfODjgON3YcOWMjAqMFIYFmNHRY9HGsr8XpaWupUELV+Ti4q/iQ03ZoWFhmWEv+MJOs7P2s/FFe0IhIYQhFaVCNJycSpyU1iUIHh54HvBmPO5DQxFDIlKGYcfHO8d2/JOx/PzX/LMr5U8EBBAEIBQIJFFRWVGyCKLjmZlembzHLyVtbaltT8TaIg0NNA1oORpl+vrP+oM16Xnf31vftoSjaX5+5X7Xm/ypJCSQJD20SBk7O+w7xdd2/qurlqsxPUuazs4fzj7RgfAREUQRiFUimY+PBo8MiQODTk4lTkprnAS3t+a30VFzZuvri+sLYMvgPDzwPP3MeMGBgT6BfL8f/ZSUapTU/jVA9/f79+sM8xy5ud65oWdvGBMTTBOYXyaLLCywLH2cWFHT02vT1ri7Befnu+drXNOMbm6lblfL3DnExDfEbvOVqgMDDAMYDwYbVlZFVooTrNxERA1EGkmIXn9/4X/fnv6gqameqSE3T4gqKqgqTYJUZ7u71ruxbWsKwcEjwUbin4dTU1FTogKm8dzcV9yui6VyCwssC1gnFlOdnU6dnNMnAWxsrWxHwdgrMTHEMZX1YqR0dM10h7no8/b2//bjCfEVRkYFRgpDjEysrIqsCSZFpYmJHok8lw+1FBRQFKBEKLTh4aPhW0LfuhYWWBawTiymOjroOs3SdPdpablpb9DSBgkJJAlILRJBcHDdcKet4Ne2tuK22VRxb9DQZ9DOt70e7e2T7Tt+x9bMzBfMLtuF4kJCFUIqV4RomJhamLTCLSykpKqkSQ5V7SgooChdiFB1XFxtXNoxuIb4+Mf4kz/ta4aGIoZEpBHCkAAAAA==\";\n    var hash$1 = \"358808f8\";\n    var wasmJson$1 = {\n    \tname: name$1,\n    \tdata: data$1,\n    \thash: hash$1\n    };\n\n    const mutex$1 = new Mutex();\n    let wasmCache$1 = null;\n    /**\n     * Calculates Whirlpool hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function whirlpool(data) {\n        if (wasmCache$1 === null) {\n            return lockedCreate(mutex$1, wasmJson$1, 64)\n                .then((wasm) => {\n                wasmCache$1 = wasm;\n                return wasmCache$1.calculate(data);\n            });\n        }\n        try {\n            const hash = wasmCache$1.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new Whirlpool hash instance\n     */\n    function createWhirlpool() {\n        return WASMInterface(wasmJson$1, 64).then((wasm) => {\n            wasm.init();\n            const obj = {\n                init: () => { wasm.init(); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: 64,\n            };\n            return obj;\n        });\n    }\n\n    var name = \"sm3\";\n    var data = \"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\";\n    var hash = \"6e6f46ad\";\n    var wasmJson = {\n    \tname: name,\n    \tdata: data,\n    \thash: hash\n    };\n\n    const mutex = new Mutex();\n    let wasmCache = null;\n    /**\n     * Calculates SM3 hash\n     * @param data Input data (string, Buffer or TypedArray)\n     * @returns Computed hash as a hexadecimal string\n     */\n    function sm3(data) {\n        if (wasmCache === null) {\n            return lockedCreate(mutex, wasmJson, 32)\n                .then((wasm) => {\n                wasmCache = wasm;\n                return wasmCache.calculate(data);\n            });\n        }\n        try {\n            const hash = wasmCache.calculate(data);\n            return Promise.resolve(hash);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    /**\n     * Creates a new SM3 hash instance\n     */\n    function createSM3() {\n        return WASMInterface(wasmJson, 32).then((wasm) => {\n            wasm.init();\n            const obj = {\n                init: () => { wasm.init(); return obj; },\n                update: (data) => { wasm.update(data); return obj; },\n                digest: (outputType) => wasm.digest(outputType),\n                save: () => wasm.save(),\n                load: (data) => { wasm.load(data); return obj; },\n                blockSize: 64,\n                digestSize: 32,\n            };\n            return obj;\n        });\n    }\n\n    exports.adler32 = adler32;\n    exports.argon2Verify = argon2Verify;\n    exports.argon2d = argon2d;\n    exports.argon2i = argon2i;\n    exports.argon2id = argon2id;\n    exports.bcrypt = bcrypt;\n    exports.bcryptVerify = bcryptVerify;\n    exports.blake2b = blake2b;\n    exports.blake2s = blake2s;\n    exports.blake3 = blake3;\n    exports.crc32 = crc32;\n    exports.crc32c = crc32c;\n    exports.createAdler32 = createAdler32;\n    exports.createBLAKE2b = createBLAKE2b;\n    exports.createBLAKE2s = createBLAKE2s;\n    exports.createBLAKE3 = createBLAKE3;\n    exports.createCRC32 = createCRC32;\n    exports.createCRC32C = createCRC32C;\n    exports.createHMAC = createHMAC;\n    exports.createKeccak = createKeccak;\n    exports.createMD4 = createMD4;\n    exports.createMD5 = createMD5;\n    exports.createRIPEMD160 = createRIPEMD160;\n    exports.createSHA1 = createSHA1;\n    exports.createSHA224 = createSHA224;\n    exports.createSHA256 = createSHA256;\n    exports.createSHA3 = createSHA3;\n    exports.createSHA384 = createSHA384;\n    exports.createSHA512 = createSHA512;\n    exports.createSM3 = createSM3;\n    exports.createWhirlpool = createWhirlpool;\n    exports.createXXHash128 = createXXHash128;\n    exports.createXXHash3 = createXXHash3;\n    exports.createXXHash32 = createXXHash32;\n    exports.createXXHash64 = createXXHash64;\n    exports.keccak = keccak;\n    exports.md4 = md4;\n    exports.md5 = md5;\n    exports.pbkdf2 = pbkdf2;\n    exports.ripemd160 = ripemd160;\n    exports.scrypt = scrypt;\n    exports.sha1 = sha1;\n    exports.sha224 = sha224;\n    exports.sha256 = sha256;\n    exports.sha3 = sha3;\n    exports.sha384 = sha384;\n    exports.sha512 = sha512;\n    exports.sm3 = sm3;\n    exports.whirlpool = whirlpool;\n    exports.xxhash128 = xxhash128;\n    exports.xxhash3 = xxhash3;\n    exports.xxhash32 = xxhash32;\n    exports.xxhash64 = xxhash64;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", "const fetch = require('cross-fetch');\r\nconst hash =  require('hash-wasm');\r\n\r\n\r\nconst buffer = require('buffer/').Buffer;\r\n\r\nmodule.exports = class IonProofOfWork {\r\n    static randomHexString() {\r\n        const size = Math.floor(Math.random() * Math.floor(500));\r\n        const randomString = [...Array(size)].map(() => Math.floor(Math.random() * 16).toString(16)).join('');\r\n        return buffer.from(randomString).toString('hex');\r\n    }\r\n\r\n    static async submitIonRequestUntilSuccess(getChallengeUri, solveChallengeUri, requestBody) {\r\n        let result;\r\n        while (result === undefined) {\r\n            result = await this.submitIonRequest(getChallengeUri, solveChallengeUri, requestBody);\r\n        };\r\n    };\r\n\r\n    static async submitIonRequest(getChallengeUri, solveChallengeUri, requestBody) {\r\n        console.log(`Getting challenge from: ${getChallengeUri}`);\r\n        const getChallengeResponse = await fetch(getChallengeUri, {\r\n            mode: 'cors'\r\n        });\r\n        if (!getChallengeResponse.ok) {\r\n            throw new Error('Get challenge service not available')\r\n        }\r\n        const challengeBody = await getChallengeResponse.json();\r\n        console.log(challengeBody);\r\n\r\n        const challengeNonce = challengeBody.challengeNonce;\r\n        const largestAllowedHash = challengeBody.largestAllowedHash;\r\n        const validDuration = challengeBody.validDurationInMinutes * 60 * 1000;\r\n    \r\n        let answerHash = '';\r\n        let answerNonce = '';\r\n\r\n        console.log(`Solving for body:\\n${requestBody}`);\r\n        const startTime = Date.now();\r\n        do {\r\n            answerNonce = this.randomHexString();\r\n            answerHash = await hash.argon2id({\r\n                password: buffer.from(answerNonce, 'hex').toString() + requestBody,\r\n                salt: buffer.from(challengeNonce, 'hex'),\r\n                parallelism: 1,\r\n                iterations: 1,\r\n                memorySize: 1000,\r\n                hashLength: 32, // output size = 32 bytes\r\n                outputType: 'hex',\r\n            });\r\n            console.log(answerHash);\r\n            console.log(largestAllowedHash);\r\n        } while (answerHash > largestAllowedHash && Date.now() - startTime < validDuration);\r\n\r\n        if (Date.now() - startTime >  validDuration) {\r\n            return;\r\n        }\r\n\r\n        console.log('3')\r\n        const response = await fetch(solveChallengeUri, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            body: requestBody,\r\n            headers: {\r\n                'Challenge-Nonce': challengeNonce,\r\n                'Answer-Nonce': answerNonce,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        if (response.status >= 500) {\r\n            console.log(`Unexpected 5xx response: ${await response.text()}`);\r\n        } else if (response.status >= 400) {\r\n            // 400 means bad request, so should retry with a new challenge\r\n            console.log(`Bed request: ${await response.text()}`);\r\n            console.log('Retrying with new challenge and difficulty');\r\n        } else if (response.status >= 300) {\r\n            console.log(`Unexpected 3xx response: ${await response.text()}`);\r\n        } else {\r\n            //success\r\n            console.log(`Successful registration`);\r\n            const responseText = await response.text();\r\n            console.log(responseText);\r\n            return responseText;\r\n        };\r\n    }\r\n}\r\n", "import { SCHEMES } from \"./uri\";\n\nimport http from \"./schemes/http\";\nSCHEMES[http.scheme] = http;\n\nimport https from \"./schemes/https\";\nSCHEMES[https.scheme] = https;\n\nimport ws from \"./schemes/ws\";\nSCHEMES[ws.scheme] = ws;\n\nimport wss from \"./schemes/wss\";\nSCHEMES[wss.scheme] = wss;\n\nimport mailto from \"./schemes/mailto\";\nSCHEMES[mailto.scheme] = mailto;\n\nimport urn from \"./schemes/urn\";\nSCHEMES[urn.scheme] = urn;\n\nimport uuid from \"./schemes/urn-uuid\";\nSCHEMES[uuid.scheme] = uuid;\n\nexport * from \"./uri\";\n", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { URNComponents } from \"./urn\";\nimport { SCHEMES } from \"../uri\";\n\nexport interface UUIDComponents extends URNComponents {\n\tuuid?: string;\n}\n\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\nconst UUID_PARSE = /^[0-9A-Fa-f\\-]{36}/;\n\n//RFC 4122\nconst handler:URISchemeHandler<UUIDComponents, URIOptions, URNComponents> = {\n\tscheme : \"urn:uuid\",\n\n\tparse : function (urnComponents:URNComponents, options:URIOptions):UUIDComponents {\n\t\tconst uuidComponents = urnComponents as UUIDComponents;\n\t\tuuidComponents.uuid = uuidComponents.nss;\n\t\tuuidComponents.nss = undefined;\n\n\t\tif (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n\t\t\tuuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n\t\t}\n\n\t\treturn uuidComponents;\n\t},\n\n\tserialize : function (uuidComponents:UUIDComponents, options:URIOptions):URNComponents {\n\t\tconst urnComponents = uuidComponents as URNComponents;\n\t\t//normalize UUID\n\t\turnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n\t\treturn urnComponents;\n\t},\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, SCHEMES } from \"../uri\";\n\nexport interface URNComponents extends URIComponents {\n\tnid?:string;\n\tnss?:string;\n}\n\nexport interface URNOptions extends URIOptions {\n\tnid?:string;\n}\n\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n\n//RFC 2141\nconst handler:URISchemeHandler<URNComponents,URNOptions> = {\n\tscheme : \"urn\",\n\n\tparse : function (components:URIComponents, options:URNOptions):URNComponents {\n\t\tconst matches = components.path && components.path.match(URN_PARSE);\n\t\tlet urnComponents = components as URNComponents;\n\n\t\tif (matches) {\n\t\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\t\tconst nid = matches[1].toLowerCase();\n\t\t\tconst nss = matches[2];\n\t\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\t\turnComponents.nid = nid;\n\t\t\turnComponents.nss = nss;\n\t\t\turnComponents.path = undefined;\n\n\t\t\tif (schemeHandler) {\n\t\t\t\turnComponents = schemeHandler.parse(urnComponents, options) as URNComponents;\n\t\t\t}\n\t\t} else {\n\t\t\turnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n\t\t}\n\n\t\treturn urnComponents;\n\t},\n\n\tserialize : function (urnComponents:URNComponents, options:URNOptions):URIComponents {\n\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\tconst nid = urnComponents.nid;\n\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\tif (schemeHandler) {\n\t\t\turnComponents = schemeHandler.serialize(urnComponents, options) as URNComponents;\n\t\t}\n\n\t\tconst uriComponents = urnComponents as URIComponents;\n\t\tconst nss = urnComponents.nss;\n\t\turiComponents.path = `${nid || options.nid}:${nss}`;\n\n\t\treturn uriComponents;\n\t},\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\nimport punycode from \"punycode\";\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\n\nexport interface MailtoHeaders {\n\t[hfname:string]:string\n}\n\nexport interface MailtoComponents extends URIComponents {\n\tto:Array<string>,\n\theaders?:MailtoHeaders,\n\tsubject?:string,\n\tbody?:string\n}\n\nconst O:MailtoHeaders = {};\nconst isIRI = true;\n\n//RFC 3986\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nconst HEXDIG$$ = \"[0-9A-Fa-f]\";  //case-insensitive\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$));  //expanded\n\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\n\n//RFC 6068\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\";  //%d33-90 / %d94-126\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\nconst HFVALUE$ = HFNAME$;\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\n\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nconst NOT_HFVALUE = NOT_HFNAME;\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\n\nfunction decodeUnreserved(str:string):string {\n\tconst decStr = pctDecChars(str);\n\treturn (!decStr.match(UNRESERVED) ? str : decStr);\n}\n\nconst handler:URISchemeHandler<MailtoComponents> =  {\n\tscheme : \"mailto\",\n\n\tparse : function (components:URIComponents, options:URIOptions):MailtoComponents {\n\t\tconst mailtoComponents = components as MailtoComponents;\n\t\tconst to = mailtoComponents.to = (mailtoComponents.path ? mailtoComponents.path.split(\",\") : []);\n\t\tmailtoComponents.path = undefined;\n\n\t\tif (mailtoComponents.query) {\n\t\t\tlet unknownHeaders = false\n\t\t\tconst headers:MailtoHeaders = {};\n\t\t\tconst hfields = mailtoComponents.query.split(\"&\");\n\n\t\t\tfor (let x = 0, xl = hfields.length; x < xl; ++x) {\n\t\t\t\tconst hfield = hfields[x].split(\"=\");\n\n\t\t\t\tswitch (hfield[0]) {\n\t\t\t\t\tcase \"to\":\n\t\t\t\t\t\tconst toAddrs = hfield[1].split(\",\");\n\t\t\t\t\t\tfor (let x = 0, xl = toAddrs.length; x < xl; ++x) {\n\t\t\t\t\t\t\tto.push(toAddrs[x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"subject\":\n\t\t\t\t\t\tmailtoComponents.subject = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\tmailtoComponents.body = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tunknownHeaders = true;\n\t\t\t\t\t\theaders[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknownHeaders) mailtoComponents.headers = headers;\n\t\t}\n\n\t\tmailtoComponents.query = undefined;\n\n\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\tconst addr = to[x].split(\"@\");\n\n\t\t\taddr[0] = unescapeComponent(addr[0]);\n\n\t\t\tif (!options.unicodeSupport) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\taddr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taddr[1] = unescapeComponent(addr[1], options).toLowerCase();\n\t\t\t}\n\n\t\t\tto[x] = addr.join(\"@\");\n\t\t}\n\n\t\treturn mailtoComponents;\n\t},\n\n\tserialize : function (mailtoComponents:MailtoComponents, options:URIOptions):URIComponents {\n\t\tconst components = mailtoComponents as URIComponents;\n\t\tconst to = toArray(mailtoComponents.to);\n\t\tif (to) {\n\t\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\t\tconst toAddr = String(to[x]);\n\t\t\t\tconst atIdx = toAddr.lastIndexOf(\"@\");\n\t\t\t\tconst localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n\t\t\t\tlet domain = toAddr.slice(atIdx + 1);\n\n\t\t\t\t//convert IDN via punycode\n\t\t\t\ttry {\n\t\t\t\t\tdomain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t\t}\n\n\t\t\t\tto[x] = localPart + \"@\" + domain;\n\t\t\t}\n\n\t\t\tcomponents.path = to.join(\",\");\n\t\t}\n\n\t\tconst headers = mailtoComponents.headers = mailtoComponents.headers || {};\n\n\t\tif (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n\t\tif (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n\n\t\tconst fields = [];\n\t\tfor (const name in headers) {\n\t\t\tif (headers[name] !== O[name]) {\n\t\t\t\tfields.push(\n\t\t\t\t\tname.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\theaders[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (fields.length) {\n\t\t\tcomponents.query = fields.join(\"&\");\n\t\t}\n\n\t\treturn components;\n\t}\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport ws from \"./ws\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"wss\",\n\tdomainHost : ws.domainHost,\n\tparse : ws.parse,\n\tserialize : ws.serialize\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nexport interface WSComponents extends URIComponents {\n\tresourceName?: string;\n\tsecure?: boolean;\n}\n\nfunction isSecure(wsComponents:WSComponents):boolean {\n\treturn typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n\n//RFC 6455\nconst handler:URISchemeHandler = {\n\tscheme : \"ws\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):WSComponents {\n\t\tconst wsComponents = components as WSComponents;\n\n\t\t//indicate if the secure flag is set\n\t\twsComponents.secure = isSecure(wsComponents);\n\n\t\t//construct resouce name\n\t\twsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n\t\twsComponents.path = undefined;\n\t\twsComponents.query = undefined;\n\n\t\treturn wsComponents;\n\t},\n\n\tserialize : function (wsComponents:WSComponents, options:URIOptions):URIComponents {\n\t\t//normalize the default port\n\t\tif (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n\t\t\twsComponents.port = undefined;\n\t\t}\n\n\t\t//ensure scheme matches secure flag\n\t\tif (typeof wsComponents.secure === 'boolean') {\n\t\t\twsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws');\n\t\t\twsComponents.secure = undefined;\n\t\t}\n\n\t\t//reconstruct path from resource name\n\t\tif (wsComponents.resourceName) {\n\t\t\tconst [path, query] = wsComponents.resourceName.split('?');\n\t\t\twsComponents.path = (path && path !== '/' ? path : undefined);\n\t\t\twsComponents.query = query;\n\t\t\twsComponents.resourceName = undefined;\n\t\t}\n\n\t\t//forbid fragment component\n\t\twsComponents.fragment = undefined;\n\n\t\treturn wsComponents;\n\t}\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport http from \"./http\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"https\",\n\tdomainHost : http.domainHost,\n\tparse : http.parse,\n\tserialize : http.serialize\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"http\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//report missing host\n\t\tif (!components.host) {\n\t\t\tcomponents.error = components.error || \"HTTP URIs must have a host.\";\n\t\t}\n\n\t\treturn components;\n\t},\n\n\tserialize : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\tconst secure = String(components.scheme).toLowerCase() === \"https\";\n\n\t\t//normalize the default port\n\t\tif (components.port === (secure ? 443 : 80) || components.port === \"\") {\n\t\t\tcomponents.port = undefined;\n\t\t}\n\t\t\n\t\t//normalize the empty path\n\t\tif (!components.path) {\n\t\t\tcomponents.path = \"/\";\n\t\t}\n\n\t\t//NOTE: We do not parse query strings for HTTP URIs\n\t\t//as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n\t\t//and not the HTTP spec.\n\n\t\treturn components;\n\t}\n};\n\nexport default handler;", "/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\n\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\n\nexport interface URIComponents {\n\tscheme?:string;\n\tuserinfo?:string;\n\thost?:string;\n\tport?:number|string;\n\tpath?:string;\n\tquery?:string;\n\tfragment?:string;\n\treference?:string;\n\terror?:string;\n}\n\nexport interface URIOptions {\n\tscheme?:string;\n\treference?:string;\n\ttolerant?:boolean;\n\tabsolutePath?:boolean;\n\tiri?:boolean;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n}\n\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n\tscheme:string;\n\tparse(components:ParentComponents, options:Options):Components;\n\tserialize(components:Components, options:Options):ParentComponents;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n\tabsolutePath?:boolean;\n}\n\nexport interface URIRegExps {\n\tNOT_SCHEME : RegExp,\n\tNOT_USERINFO : RegExp,\n\tNOT_HOST : RegExp,\n\tNOT_PATH : RegExp,\n\tNOT_PATH_NOSCHEME : RegExp,\n\tNOT_QUERY : RegExp,\n\tNOT_FRAGMENT : RegExp,\n\tESCAPE : RegExp,\n\tUNRESERVED : RegExp,\n\tOTHER_CHARS : RegExp,\n\tPCT_ENCODED : RegExp,\n\tIPV4ADDRESS : RegExp,\n\tIPV6ADDRESS : RegExp,\n}\n\nexport const SCHEMES:{[scheme:string]:URISchemeHandler} = {};\n\nexport function pctEncChar(chr:string):string {\n\tconst c = chr.charCodeAt(0);\n\tlet e:string;\n\n\tif (c < 16) e = \"%0\" + c.toString(16).toUpperCase();\n\telse if (c < 128) e = \"%\" + c.toString(16).toUpperCase();\n\telse if (c < 2048) e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\telse e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\n\treturn e;\n}\n\nexport function pctDecChars(str:string):string {\n\tlet newStr = \"\";\n\tlet i = 0;\n\tconst il = str.length;\n\n\twhile (i < il) {\n\t\tconst c = parseInt(str.substr(i + 1, 2), 16);\n\n\t\tif (c < 128) {\n\t\t\tnewStr += String.fromCharCode(c);\n\t\t\ti += 3;\n\t\t}\n\t\telse if (c >= 194 && c < 224) {\n\t\t\tif ((il - i) >= 6) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 6);\n\t\t\t}\n\t\t\ti += 6;\n\t\t}\n\t\telse if (c >= 224) {\n\t\t\tif ((il - i) >= 9) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tconst c3 = parseInt(str.substr(i + 7, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 9);\n\t\t\t}\n\t\t\ti += 9;\n\t\t}\n\t\telse {\n\t\t\tnewStr += str.substr(i, 3);\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\treturn newStr;\n}\n\nfunction _normalizeComponentEncoding(components:URIComponents, protocol:URIRegExps) {\n\tfunction decodeUnreserved(str:string):string {\n\t\tconst decStr = pctDecChars(str);\n\t\treturn (!decStr.match(protocol.UNRESERVED) ? str : decStr);\n\t}\n\n\tif (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n\tif (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\n\treturn components;\n};\n\nfunction _stripLeadingZeros(str:string):string {\n\treturn str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV4ADDRESS) || [];\n\tconst [, address] = matches;\n\t\n\tif (address) {\n\t\treturn address.split(\".\").map(_stripLeadingZeros).join(\".\");\n\t} else {\n\t\treturn host;\n\t}\n}\n\nfunction _normalizeIPv6(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV6ADDRESS) || [];\n\tconst [, address, zone] = matches;\n\n\tif (address) {\n\t\tconst [last, first] = address.toLowerCase().split('::').reverse();\n\t\tconst firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n\t\tconst lastFields = last.split(\":\").map(_stripLeadingZeros);\n\t\tconst isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n\t\tconst fieldCount = isLastFieldIPv4Address ? 7 : 8;\n\t\tconst lastFieldsStart = lastFields.length - fieldCount;\n\t\tconst fields = Array<string>(fieldCount);\n\n\t\tfor (let x = 0; x < fieldCount; ++x) {\n\t\t\tfields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n\t\t}\n\n\t\tif (isLastFieldIPv4Address) {\n\t\t\tfields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n\t\t}\n\n\t\tconst allZeroFields = fields.reduce<Array<{index:number,length:number}>>((acc, field, index) => {\n\t\t\tif (!field || field === \"0\") {\n\t\t\t\tconst lastLongest = acc[acc.length - 1];\n\t\t\t\tif (lastLongest && lastLongest.index + lastLongest.length === index) {\n\t\t\t\t\tlastLongest.length++;\n\t\t\t\t} else {\n\t\t\t\t\tacc.push({ index, length : 1 });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\n\t\tconst longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n\n\t\tlet newHost:string;\n\t\tif (longestZeroFields && longestZeroFields.length > 1) {\n\t\t\tconst newFirst = fields.slice(0, longestZeroFields.index) ;\n\t\t\tconst newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n\t\t\tnewHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n\t\t} else {\n\t\t\tnewHost = fields.join(\":\");\n\t\t}\n\n\t\tif (zone) {\n\t\t\tnewHost += \"%\" + zone;\n\t\t}\n\n\t\treturn newHost;\n\t} else {\n\t\treturn host;\n\t}\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = (<RegExpMatchArray>(\"\").match(/(){0}/))[1] === undefined;\n\nexport function parse(uriString:string, options:URIOptions = {}):URIComponents {\n\tconst components:URIComponents = {};\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\n\tif (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n\n\tconst matches = uriString.match(URI_PARSE);\n\n\tif (matches) {\n\t\tif (NO_MATCH_IS_UNDEFINED) {\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1];\n\t\t\tcomponents.userinfo = matches[3];\n\t\t\tcomponents.host = matches[4];\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = matches[7];\n\t\t\tcomponents.fragment = matches[8];\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = matches[5];\n\t\t\t}\n\t\t} else {  //IE FIX for improper RegExp matching\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1] || undefined;\n\t\t\tcomponents.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\n\t\t\tcomponents.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\n\t\t\tcomponents.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (components.host) {\n\t\t\t//normalize IP hosts\n\t\t\tcomponents.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n\t\t}\n\n\t\t//determine reference type\n\t\tif (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n\t\t\tcomponents.reference = \"same-document\";\n\t\t} else if (components.scheme === undefined) {\n\t\t\tcomponents.reference = \"relative\";\n\t\t} else if (components.fragment === undefined) {\n\t\t\tcomponents.reference = \"absolute\";\n\t\t} else {\n\t\t\tcomponents.reference = \"uri\";\n\t\t}\n\n\t\t//check for reference errors\n\t\tif (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n\t\t\tcomponents.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n\t\t}\n\n\t\t//find scheme handler\n\t\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t\t//check if scheme can't handle IRIs\n\t\tif (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n\t\t\t//if host component is a domain name\n\t\t\tif (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\tcomponents.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//convert IRI -> URI\n\t\t\t_normalizeComponentEncoding(components, URI_PROTOCOL);\n\t\t} else {\n\t\t\t//normalize encodings\n\t\t\t_normalizeComponentEncoding(components, protocol);\n\t\t}\n\n\t\t//perform scheme specific parsing\n\t\tif (schemeHandler && schemeHandler.parse) {\n\t\t\tschemeHandler.parse(components, options);\n\t\t}\n\t} else {\n\t\tcomponents.error = components.error || \"URI can not be parsed.\";\n\t}\n\n\treturn components;\n};\n\nfunction _recomposeAuthority(components:URIComponents, options:URIOptions):string|undefined {\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\tif (components.userinfo !== undefined) {\n\t\turiTokens.push(components.userinfo);\n\t\turiTokens.push(\"@\");\n\t}\n\n\tif (components.host !== undefined) {\n\t\t//normalize IP hosts, add brackets and escape zone separator for IPv6\n\t\turiTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n\t}\n\n\tif (typeof components.port === \"number\" || typeof components.port === \"string\") {\n\t\turiTokens.push(\":\");\n\t\turiTokens.push(String(components.port));\n\t}\n\n\treturn uriTokens.length ? uriTokens.join(\"\") : undefined;\n};\n\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n\nexport function removeDotSegments(input:string):string {\n\tconst output:Array<string> = [];\n\n\twhile (input.length) {\n\t\tif (input.match(RDS1)) {\n\t\t\tinput = input.replace(RDS1, \"\");\n\t\t} else if (input.match(RDS2)) {\n\t\t\tinput = input.replace(RDS2, \"/\");\n\t\t} else if (input.match(RDS3)) {\n\t\t\tinput = input.replace(RDS3, \"/\");\n\t\t\toutput.pop();\n\t\t} else if (input === \".\" || input === \"..\") {\n\t\t\tinput = \"\";\n\t\t} else {\n\t\t\tconst im = input.match(RDS5);\n\t\t\tif (im) {\n\t\t\t\tconst s = im[0];\n\t\t\t\tinput = input.slice(s.length);\n\t\t\t\toutput.push(s);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected dot segment condition\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nexport function serialize(components:URIComponents, options:URIOptions = {}):string {\n\tconst protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\t//find scheme handler\n\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t//perform scheme specific serialization\n\tif (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n\tif (components.host) {\n\t\t//if host component is an IPv6 address\n\t\tif (protocol.IPV6ADDRESS.test(components.host)) {\n\t\t\t//TODO: normalize IPv6 address as per RFC 5952\n\t\t}\n\n\t\t//if host component is a domain name\n\t\telse if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\n\t\t\t//convert IDN via punycode\n\t\t\ttry {\n\t\t\t\tcomponents.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\n\t\t\t} catch (e) {\n\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t}\n\t\t}\n\t}\n\n\t//normalize encoding\n\t_normalizeComponentEncoding(components, protocol);\n\n\tif (options.reference !== \"suffix\" && components.scheme) {\n\t\turiTokens.push(components.scheme);\n\t\turiTokens.push(\":\");\n\t}\n\n\tconst authority = _recomposeAuthority(components, options);\n\tif (authority !== undefined) {\n\t\tif (options.reference !== \"suffix\") {\n\t\t\turiTokens.push(\"//\");\n\t\t}\n\n\t\turiTokens.push(authority);\n\n\t\tif (components.path && components.path.charAt(0) !== \"/\") {\n\t\t\turiTokens.push(\"/\");\n\t\t}\n\t}\n\n\tif (components.path !== undefined) {\n\t\tlet s = components.path;\n\n\t\tif (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n\t\t\ts = removeDotSegments(s);\n\t\t}\n\n\t\tif (authority === undefined) {\n\t\t\ts = s.replace(/^\\/\\//, \"/%2F\");  //don't allow the path to start with \"//\"\n\t\t}\n\n\t\turiTokens.push(s);\n\t}\n\n\tif (components.query !== undefined) {\n\t\turiTokens.push(\"?\");\n\t\turiTokens.push(components.query);\n\t}\n\n\tif (components.fragment !== undefined) {\n\t\turiTokens.push(\"#\");\n\t\turiTokens.push(components.fragment);\n\t}\n\n\treturn uriTokens.join(\"\");  //merge tokens into a string\n};\n\nexport function resolveComponents(base:URIComponents, relative:URIComponents, options:URIOptions = {}, skipNormalization?:boolean):URIComponents {\n\tconst target:URIComponents = {};\n\n\tif (!skipNormalization) {\n\t\tbase = parse(serialize(base, options), options);  //normalize base components\n\t\trelative = parse(serialize(relative, options), options);  //normalize relative components\n\t}\n\toptions = options || {};\n\n\tif (!options.tolerant && relative.scheme) {\n\t\ttarget.scheme = relative.scheme;\n\t\t//target.authority = relative.authority;\n\t\ttarget.userinfo = relative.userinfo;\n\t\ttarget.host = relative.host;\n\t\ttarget.port = relative.port;\n\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\ttarget.query = relative.query;\n\t} else {\n\t\tif (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n\t\t\t//target.authority = relative.authority;\n\t\t\ttarget.userinfo = relative.userinfo;\n\t\t\ttarget.host = relative.host;\n\t\t\ttarget.port = relative.port;\n\t\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\t\ttarget.query = relative.query;\n\t\t} else {\n\t\t\tif (!relative.path) {\n\t\t\t\ttarget.path = base.path;\n\t\t\t\tif (relative.query !== undefined) {\n\t\t\t\t\ttarget.query = relative.query;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.query = base.query;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (relative.path.charAt(0) === \"/\") {\n\t\t\t\t\ttarget.path = removeDotSegments(relative.path);\n\t\t\t\t} else {\n\t\t\t\t\tif ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n\t\t\t\t\t\ttarget.path = \"/\" + relative.path;\n\t\t\t\t\t} else if (!base.path) {\n\t\t\t\t\t\ttarget.path = relative.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.path = removeDotSegments(target.path);\n\t\t\t\t}\n\t\t\t\ttarget.query = relative.query;\n\t\t\t}\n\t\t\t//target.authority = base.authority;\n\t\t\ttarget.userinfo = base.userinfo;\n\t\t\ttarget.host = base.host;\n\t\t\ttarget.port = base.port;\n\t\t}\n\t\ttarget.scheme = base.scheme;\n\t}\n\n\ttarget.fragment = relative.fragment;\n\n\treturn target;\n};\n\nexport function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string {\n\tconst schemelessOptions = assign({ scheme : 'null' }, options);\n\treturn serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n};\n\nexport function normalize(uri:string, options?:URIOptions):string;\nexport function normalize(uri:URIComponents, options?:URIOptions):URIComponents;\nexport function normalize(uri:any, options?:URIOptions):any {\n\tif (typeof uri === \"string\") {\n\t\turi = serialize(parse(uri, options), options);\n\t} else if (typeOf(uri) === \"object\") {\n\t\turi = parse(serialize(<URIComponents>uri, options), options);\n\t}\n\n\treturn uri;\n};\n\nexport function equal(uriA:string, uriB:string, options?: URIOptions):boolean;\nexport function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;\nexport function equal(uriA:any, uriB:any, options?:URIOptions):boolean {\n\tif (typeof uriA === \"string\") {\n\t\turiA = serialize(parse(uriA, options), options);\n\t} else if (typeOf(uriA) === \"object\") {\n\t\turiA = serialize(<URIComponents>uriA, options);\n\t}\n\n\tif (typeof uriB === \"string\") {\n\t\turiB = serialize(parse(uriB, options), options);\n\t} else if (typeOf(uriB) === \"object\") {\n\t\turiB = serialize(<URIComponents>uriB, options);\n\t}\n\n\treturn uriA === uriB;\n};\n\nexport function escapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\n};\n\nexport function unescapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\n};\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport default punycode;\n", "import { URIRegExps } from \"./uri\";\nimport { buildExps } from \"./regexps-uri\";\n\nexport default buildExps(true);\n", "import { URIRegExps } from \"./uri\";\nimport { merge, subexp } from \"./util\";\n\nexport function buildExps(isIRI:boolean):URIRegExps {\n\tconst\n\t\tALPHA$$ = \"[A-Za-z]\",\n\t\tCR$ = \"[\\\\x0D]\",\n\t\tDIGIT$$ = \"[0-9]\",\n\t\tDQUOTE$$ = \"[\\\\x22]\",\n\t\tHEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),  //case-insensitive\n\t\tLF$$ = \"[\\\\x0A]\",\n\t\tSP$$ = \"[\\\\x20]\",\n\t\tPCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),  //expanded\n\t\tGEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n\t\tSUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n\t\tRESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n\t\tUCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",  //subset, excludes bidi control characters\n\t\tIPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",  //subset\n\t\tUNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n\t\tSCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n\t\tUSERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n\t\tDEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n\t\tDEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),  //relaxed parsing rules\n\t\tIPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n\t\tH16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n\t\tLS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n\t\tIPV6ADDRESS1$ = subexp(                                                            subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\n\t\tIPV6ADDRESS2$ = subexp(                                                 \"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\n\t\tIPV6ADDRESS3$ = subexp(subexp(                                 H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n\t\tIPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n\t\tIPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n\t\tIPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" +        H16$ + \"\\\\:\"          + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n\t\tIPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\"                                + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n\t\tIPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\"                                + H16$ ), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n\t\tIPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"                                       ), //[ *6( h16 \":\" ) h16 ] \"::\"\n\t\tIPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n\t\tZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),  //RFC 6874\n\t\tIPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),  //RFC 6874\n\t\tIPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),  //RFC 6874, with relaxed parsing rules\n\t\tIPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n\t\tIP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),  //RFC 6874\n\t\tREG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n\t\tHOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n\t\tPORT$ = subexp(DIGIT$$ + \"*\"),\n\t\tAUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n\t\tPCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n\t\tSEGMENT$ = subexp(PCHAR$ + \"*\"),\n\t\tSEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n\t\tSEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n\t\tPATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n\t\tPATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),  //simplified\n\t\tPATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n\t\tPATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tQUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n\t\tFRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n\t\tHIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tURI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tRELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n\t\tRELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tURI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n\t\tABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n\n\t\tGENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tRELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n\t\tSAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tAUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\"\n\t;\n\n\treturn {\n\t\tNOT_SCHEME : new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n\t\tNOT_USERINFO : new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_HOST : new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH : new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH_NOSCHEME : new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_QUERY : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n\t\tNOT_FRAGMENT : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n\t\tESCAPE : new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tUNRESERVED : new RegExp(UNRESERVED$$, \"g\"),\n\t\tOTHER_CHARS : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n\t\tPCT_ENCODED : new RegExp(PCT_ENCODED$, \"g\"),\n\t\tIPV4ADDRESS : new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n\t\tIPV6ADDRESS : new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\")  //RFC 6874, with relaxed parsing rules\n\t};\n}\n\nexport default buildExps(false);\n", "export function merge(...sets:Array<string>):string {\n\tif (sets.length > 1) {\n\t\tsets[0] = sets[0].slice(0, -1);\n\t\tconst xl = sets.length - 1;\n\t\tfor (let x = 1; x < xl; ++x) {\n\t\t\tsets[x] = sets[x].slice(1, -1);\n\t\t}\n\t\tsets[xl] = sets[xl].slice(1);\n\t\treturn sets.join('');\n\t} else {\n\t\treturn sets[0];\n\t}\n}\n\nexport function subexp(str:string):string {\n\treturn \"(?:\" + str + \")\";\n}\n\nexport function typeOf(o:any):string {\n\treturn o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\n\nexport function toUpperCase(str:string):string {\n\treturn str.toUpperCase();\n}\n\nexport function toArray(obj:any):Array<any> {\n\treturn obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\n\n\nexport function assign(target: object, source: any): any {\n\tconst obj = target as any;\n\tif (source) {\n\t\tfor (const key in source) {\n\t\t\tobj[key] = source[key];\n\t\t}\n\t}\n\treturn obj;\n}", "/* jshint esversion: 6 */\n/* jslint node: true */\n'use strict';\n\nmodule.exports = function serialize (object) {\n  if (typeof object === 'number' && isNaN(object)) {\n    throw new Error('NaN is not allowed');\n  }\n\n  if (typeof object === 'number' && !isFinite(object)) {\n    throw new Error('Infinity is not allowed');\n  }\n\n  if (object === null || typeof object !== 'object') {\n    return JSON.stringify(object);\n  }\n\n  if (object.toJSON instanceof Function) {\n    return serialize(object.toJSON());\n  }\n\n  if (Array.isArray(object)) {\n    const values = object.reduce((t, cv, ci) => {\n      const comma = ci === 0 ? '' : ',';\n      const value = cv === undefined || typeof cv === 'symbol' ? null : cv;\n      return `${t}${comma}${serialize(value)}`;\n    }, '');\n    return `[${values}]`;\n  }\n\n  const values = Object.keys(object).sort().reduce((t, cv) => {\n    if (object[cv] === undefined ||\n        typeof object[cv] === 'symbol') {\n      return t;\n    }\n    const comma = t.length === 0 ? '' : ',';\n    return `${t}${comma}${serialize(cv)}:${serialize(object[cv])}`;\n  }, '');\n  return `{${values}}`;\n};\n", "'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n", "'use strict'\n\nconst textDecoder = new TextDecoder()\n/**\n * @param {ArrayBufferView|ArrayBuffer} bytes\n * @returns {string}\n */\nconst decodeText = (bytes) => textDecoder.decode(bytes)\n\nconst textEncoder = new TextEncoder()\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nconst encodeText = (text) => textEncoder.encode(text)\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Arrays\n *\n * @param {Array<ArrayLike<number>>} arrs\n * @param {number} length\n * @returns {Uint8Array}\n */\nfunction concat (arrs, length) {\n  const output = new Uint8Array(length)\n  let offset = 0\n\n  for (const arr of arrs) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return output\n}\n\nmodule.exports = { decodeText, encodeText, concat }\n", "'use strict'\n\nconst { encodeText } = require('./util')\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n\n/**\n * Class to encode/decode in the supported Bases\n *\n */\nclass Base {\n  /**\n   * @param {BaseName} name\n   * @param {BaseCode} code\n   * @param {CodecFactory} factory\n   * @param {string} alphabet\n   */\n  constructor (name, code, factory, alphabet) {\n    this.name = name\n    this.code = code\n    this.codeBuf = encodeText(this.code)\n    this.alphabet = alphabet\n    this.codec = factory(alphabet)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   * @returns {string}\n   */\n  encode (buf) {\n    return this.codec.encode(buf)\n  }\n\n  /**\n   * @param {string} string\n   * @returns {Uint8Array}\n   */\n  decode (string) {\n    for (const char of string) {\n      if (this.alphabet && this.alphabet.indexOf(char) < 0) {\n        throw new Error(`invalid character '${char}' in '${string}'`)\n      }\n    }\n    return this.codec.decode(string)\n  }\n}\n\nmodule.exports = Base\n", "'use strict'\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[i])\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @param {number} bitsPerChar\n * @returns {CodecFactory}\n */\nconst rfc4648 = (bitsPerChar) => (alphabet) => {\n  return {\n    /**\n     * @param {Uint8Array} input\n     * @returns {string}\n     */\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    /**\n     * @param {string} input\n     * @returns {Uint8Array}\n     */\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar)\n    }\n  }\n}\n\nmodule.exports = { rfc4648 }\n", "'use strict'\n\nconst baseX = require('@multiformats/base-x')\nconst Base = require('./base.js')\nconst { rfc4648 } = require('./rfc4648')\nconst { decodeText, encodeText } = require('./util')\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import('./types').Codec} Codec */\n/** @typedef {import('./types').BaseName} BaseName */\n/** @typedef {import('./types').BaseCode} BaseCode */\n\n/** @type {CodecFactory} */\nconst identity = () => {\n  return {\n    encode: decodeText,\n    decode: encodeText\n  }\n}\n\n/**\n *\n * name, code, implementation, alphabet\n *\n * @type {Array<[BaseName, BaseCode, CodecFactory, string]>}\n */\nconst constants = [\n  ['identity', '\\x00', identity, ''],\n  ['base2', '0', rfc4648(1), '01'],\n  ['base8', '7', rfc4648(3), '01234567'],\n  ['base10', '9', baseX, '0123456789'],\n  ['base16', 'f', rfc4648(4), '0123456789abcdef'],\n  ['base16upper', 'F', rfc4648(4), '0123456789ABCDEF'],\n  ['base32hex', 'v', rfc4648(5), '0123456789abcdefghijklmnopqrstuv'],\n  ['base32hexupper', 'V', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV'],\n  ['base32hexpad', 't', rfc4648(5), '0123456789abcdefghijklmnopqrstuv='],\n  ['base32hexpadupper', 'T', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV='],\n  ['base32', 'b', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567'],\n  ['base32upper', 'B', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'],\n  ['base32pad', 'c', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567='],\n  ['base32padupper', 'C', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='],\n  ['base32z', 'h', rfc4648(5), 'ybndrfg8ejkmcpqxot1uwisza345h769'],\n  ['base36', 'k', baseX, '0123456789abcdefghijklmnopqrstuvwxyz'],\n  ['base36upper', 'K', baseX, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'],\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\n  ['base64', 'm', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\n  ['base64pad', 'M', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\n  ['base64url', 'u', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\n  ['base64urlpad', 'U', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\n]\n\n/** @type {Record<BaseName,Base>} */\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\n  return prev\n}, /** @type {Record<BaseName,Base>} */({}))\n\n/** @type {Record<BaseCode,Base>} */\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]]\n  return prev\n}, /** @type {Record<BaseCode,Base>} */({}))\n\nmodule.exports = {\n  names,\n  codes\n}\n", "/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n *\n */\n'use strict'\n\nconst constants = require('./constants')\nconst { encodeText, decodeText, concat } = require('./util')\n\n/** @typedef {import('./base')} Base */\n/** @typedef {import(\"./types\").BaseNameOrCode} BaseNameOrCode */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n\n/**\n * Create a new Uint8Array with the multibase varint+code.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be prefixed with multibase.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction multibase (nameOrCode, buf) {\n  if (!buf) {\n    throw new Error('requires an encoded Uint8Array')\n  }\n  const { name, codeBuf } = encoding(nameOrCode)\n  validEncode(name, buf)\n\n  return concat([codeBuf, buf], codeBuf.length + buf.length)\n}\n\n/**\n * Encode data with the specified base and add the multibase prefix.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be encoded.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction encode (nameOrCode, buf) {\n  const enc = encoding(nameOrCode)\n  const data = encodeText(enc.encode(buf))\n\n  return concat([enc.codeBuf, data], enc.codeBuf.length + data.length)\n}\n\n/**\n * Takes a Uint8Array or string encoded with multibase header, decodes it and\n * returns the decoded buffer\n *\n * @param {Uint8Array|string} data\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction decode (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n  const prefix = data[0]\n\n  // Make all encodings case-insensitive except the ones that include upper and lower chars in the alphabet\n  if (['f', 'F', 'v', 'V', 't', 'T', 'b', 'B', 'c', 'C', 'h', 'k', 'K'].includes(prefix)) {\n    data = data.toLowerCase()\n  }\n  const enc = encoding(/** @type {BaseCode} */(data[0]))\n  return enc.decode(data.substring(1))\n}\n\n/**\n * Is the given data multibase encoded?\n *\n * @param {Uint8Array|string} data\n */\nfunction isEncoded (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n\n  // Ensure bufOrString is a string\n  if (Object.prototype.toString.call(data) !== '[object String]') {\n    return false\n  }\n\n  try {\n    const enc = encoding(/** @type {BaseCode} */(data[0]))\n    return enc.name\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * Validate encoded data\n *\n * @param {BaseNameOrCode} name\n * @param {Uint8Array} buf\n * @returns {void}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction validEncode (name, buf) {\n  const enc = encoding(name)\n  enc.decode(decodeText(buf))\n}\n\n/**\n * Get the encoding by name or code\n *\n * @param {BaseNameOrCode} nameOrCode\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encoding (nameOrCode) {\n  if (Object.prototype.hasOwnProperty.call(constants.names, /** @type {BaseName} */(nameOrCode))) {\n    return constants.names[/** @type {BaseName} */(nameOrCode)]\n  } else if (Object.prototype.hasOwnProperty.call(constants.codes, /** @type {BaseCode} */(nameOrCode))) {\n    return constants.codes[/** @type {BaseCode} */(nameOrCode)]\n  } else {\n    throw new Error(`Unsupported encoding: ${nameOrCode}`)\n  }\n}\n\n/**\n * Get encoding from data\n *\n * @param {string|Uint8Array} data\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encodingFromData (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n\n  return encoding(/** @type {BaseCode} */(data[0]))\n}\n\nexports = module.exports = multibase\nexports.encode = encode\nexports.decode = decode\nexports.isEncoded = isEncoded\nexports.encoding = encoding\nexports.encodingFromData = encodingFromData\nconst names = Object.freeze(constants.names)\nconst codes = Object.freeze(constants.codes)\nexports.names = names\nexports.codes = codes\n", "module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n", "module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n", "\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n", "module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n", "/* eslint quote-props: off */\n'use strict'\n\n/**\n * Names for all available hashes\n *\n * @typedef { \"identity\" | \"sha1\" | \"sha2-256\" | \"sha2-512\" | \"sha3-512\" | \"sha3-384\" | \"sha3-256\" | \"sha3-224\" | \"shake-128\" | \"shake-256\" | \"keccak-224\" | \"keccak-256\" | \"keccak-384\" | \"keccak-512\" | \"blake3\" | \"murmur3-128\" | \"murmur3-32\" | \"dbl-sha2-256\" | \"md4\" | \"md5\" | \"bmt\" | \"sha2-256-trunc254-padded\" | \"ripemd-128\" | \"ripemd-160\" | \"ripemd-256\" | \"ripemd-320\" | \"x11\" | \"kangarootwelve\" | \"sm3-256\" | \"blake2b-8\" | \"blake2b-16\" | \"blake2b-24\" | \"blake2b-32\" | \"blake2b-40\" | \"blake2b-48\" | \"blake2b-56\" | \"blake2b-64\" | \"blake2b-72\" | \"blake2b-80\" | \"blake2b-88\" | \"blake2b-96\" | \"blake2b-104\" | \"blake2b-112\" | \"blake2b-120\" | \"blake2b-128\" | \"blake2b-136\" | \"blake2b-144\" | \"blake2b-152\" | \"blake2b-160\" | \"blake2b-168\" | \"blake2b-176\" | \"blake2b-184\" | \"blake2b-192\" | \"blake2b-200\" | \"blake2b-208\" | \"blake2b-216\" | \"blake2b-224\" | \"blake2b-232\" | \"blake2b-240\" | \"blake2b-248\" | \"blake2b-256\" | \"blake2b-264\" | \"blake2b-272\" | \"blake2b-280\" | \"blake2b-288\" | \"blake2b-296\" | \"blake2b-304\" | \"blake2b-312\" | \"blake2b-320\" | \"blake2b-328\" | \"blake2b-336\" | \"blake2b-344\" | \"blake2b-352\" | \"blake2b-360\" | \"blake2b-368\" | \"blake2b-376\" | \"blake2b-384\" | \"blake2b-392\" | \"blake2b-400\" | \"blake2b-408\" | \"blake2b-416\" | \"blake2b-424\" | \"blake2b-432\" | \"blake2b-440\" | \"blake2b-448\" | \"blake2b-456\" | \"blake2b-464\" | \"blake2b-472\" | \"blake2b-480\" | \"blake2b-488\" | \"blake2b-496\" | \"blake2b-504\" | \"blake2b-512\" | \"blake2s-8\" | \"blake2s-16\" | \"blake2s-24\" | \"blake2s-32\" | \"blake2s-40\" | \"blake2s-48\" | \"blake2s-56\" | \"blake2s-64\" | \"blake2s-72\" | \"blake2s-80\" | \"blake2s-88\" | \"blake2s-96\" | \"blake2s-104\" | \"blake2s-112\" | \"blake2s-120\" | \"blake2s-128\" | \"blake2s-136\" | \"blake2s-144\" | \"blake2s-152\" | \"blake2s-160\" | \"blake2s-168\" | \"blake2s-176\" | \"blake2s-184\" | \"blake2s-192\" | \"blake2s-200\" | \"blake2s-208\" | \"blake2s-216\" | \"blake2s-224\" | \"blake2s-232\" | \"blake2s-240\" | \"blake2s-248\" | \"blake2s-256\" | \"skein256-8\" | \"skein256-16\" | \"skein256-24\" | \"skein256-32\" | \"skein256-40\" | \"skein256-48\" | \"skein256-56\" | \"skein256-64\" | \"skein256-72\" | \"skein256-80\" | \"skein256-88\" | \"skein256-96\" | \"skein256-104\" | \"skein256-112\" | \"skein256-120\" | \"skein256-128\" | \"skein256-136\" | \"skein256-144\" | \"skein256-152\" | \"skein256-160\" | \"skein256-168\" | \"skein256-176\" | \"skein256-184\" | \"skein256-192\" | \"skein256-200\" | \"skein256-208\" | \"skein256-216\" | \"skein256-224\" | \"skein256-232\" | \"skein256-240\" | \"skein256-248\" | \"skein256-256\" | \"skein512-8\" | \"skein512-16\" | \"skein512-24\" | \"skein512-32\" | \"skein512-40\" | \"skein512-48\" | \"skein512-56\" | \"skein512-64\" | \"skein512-72\" | \"skein512-80\" | \"skein512-88\" | \"skein512-96\" | \"skein512-104\" | \"skein512-112\" | \"skein512-120\" | \"skein512-128\" | \"skein512-136\" | \"skein512-144\" | \"skein512-152\" | \"skein512-160\" | \"skein512-168\" | \"skein512-176\" | \"skein512-184\" | \"skein512-192\" | \"skein512-200\" | \"skein512-208\" | \"skein512-216\" | \"skein512-224\" | \"skein512-232\" | \"skein512-240\" | \"skein512-248\" | \"skein512-256\" | \"skein512-264\" | \"skein512-272\" | \"skein512-280\" | \"skein512-288\" | \"skein512-296\" | \"skein512-304\" | \"skein512-312\" | \"skein512-320\" | \"skein512-328\" | \"skein512-336\" | \"skein512-344\" | \"skein512-352\" | \"skein512-360\" | \"skein512-368\" | \"skein512-376\" | \"skein512-384\" | \"skein512-392\" | \"skein512-400\" | \"skein512-408\" | \"skein512-416\" | \"skein512-424\" | \"skein512-432\" | \"skein512-440\" | \"skein512-448\" | \"skein512-456\" | \"skein512-464\" | \"skein512-472\" | \"skein512-480\" | \"skein512-488\" | \"skein512-496\" | \"skein512-504\" | \"skein512-512\" | \"skein1024-8\" | \"skein1024-16\" | \"skein1024-24\" | \"skein1024-32\" | \"skein1024-40\" | \"skein1024-48\" | \"skein1024-56\" | \"skein1024-64\" | \"skein1024-72\" | \"skein1024-80\" | \"skein1024-88\" | \"skein1024-96\" | \"skein1024-104\" | \"skein1024-112\" | \"skein1024-120\" | \"skein1024-128\" | \"skein1024-136\" | \"skein1024-144\" | \"skein1024-152\" | \"skein1024-160\" | \"skein1024-168\" | \"skein1024-176\" | \"skein1024-184\" | \"skein1024-192\" | \"skein1024-200\" | \"skein1024-208\" | \"skein1024-216\" | \"skein1024-224\" | \"skein1024-232\" | \"skein1024-240\" | \"skein1024-248\" | \"skein1024-256\" | \"skein1024-264\" | \"skein1024-272\" | \"skein1024-280\" | \"skein1024-288\" | \"skein1024-296\" | \"skein1024-304\" | \"skein1024-312\" | \"skein1024-320\" | \"skein1024-328\" | \"skein1024-336\" | \"skein1024-344\" | \"skein1024-352\" | \"skein1024-360\" | \"skein1024-368\" | \"skein1024-376\" | \"skein1024-384\" | \"skein1024-392\" | \"skein1024-400\" | \"skein1024-408\" | \"skein1024-416\" | \"skein1024-424\" | \"skein1024-432\" | \"skein1024-440\" | \"skein1024-448\" | \"skein1024-456\" | \"skein1024-464\" | \"skein1024-472\" | \"skein1024-480\" | \"skein1024-488\" | \"skein1024-496\" | \"skein1024-504\" | \"skein1024-512\" | \"skein1024-520\" | \"skein1024-528\" | \"skein1024-536\" | \"skein1024-544\" | \"skein1024-552\" | \"skein1024-560\" | \"skein1024-568\" | \"skein1024-576\" | \"skein1024-584\" | \"skein1024-592\" | \"skein1024-600\" | \"skein1024-608\" | \"skein1024-616\" | \"skein1024-624\" | \"skein1024-632\" | \"skein1024-640\" | \"skein1024-648\" | \"skein1024-656\" | \"skein1024-664\" | \"skein1024-672\" | \"skein1024-680\" | \"skein1024-688\" | \"skein1024-696\" | \"skein1024-704\" | \"skein1024-712\" | \"skein1024-720\" | \"skein1024-728\" | \"skein1024-736\" | \"skein1024-744\" | \"skein1024-752\" | \"skein1024-760\" | \"skein1024-768\" | \"skein1024-776\" | \"skein1024-784\" | \"skein1024-792\" | \"skein1024-800\" | \"skein1024-808\" | \"skein1024-816\" | \"skein1024-824\" | \"skein1024-832\" | \"skein1024-840\" | \"skein1024-848\" | \"skein1024-856\" | \"skein1024-864\" | \"skein1024-872\" | \"skein1024-880\" | \"skein1024-888\" | \"skein1024-896\" | \"skein1024-904\" | \"skein1024-912\" | \"skein1024-920\" | \"skein1024-928\" | \"skein1024-936\" | \"skein1024-944\" | \"skein1024-952\" | \"skein1024-960\" | \"skein1024-968\" | \"skein1024-976\" | \"skein1024-984\" | \"skein1024-992\" | \"skein1024-1000\" | \"skein1024-1008\" | \"skein1024-1016\" | \"skein1024-1024\" | \"poseidon-bls12_381-a2-fc1\" | \"poseidon-bls12_381-a2-fc1-sc\" } HashName\n */\n/**\n * Codes for all available hashes\n *\n * @typedef { 0x00 | 0x11 | 0x12 | 0x13 | 0x14 | 0x15 | 0x16 | 0x17 | 0x18 | 0x19 | 0x1a | 0x1b | 0x1c | 0x1d | 0x1e | 0x22 | 0x23 | 0x56 | 0xd4 | 0xd5 | 0xd6 | 0x1012 | 0x1052 | 0x1053 | 0x1054 | 0x1055 | 0x1100 | 0x1d01 | 0x534d | 0xb201 | 0xb202 | 0xb203 | 0xb204 | 0xb205 | 0xb206 | 0xb207 | 0xb208 | 0xb209 | 0xb20a | 0xb20b | 0xb20c | 0xb20d | 0xb20e | 0xb20f | 0xb210 | 0xb211 | 0xb212 | 0xb213 | 0xb214 | 0xb215 | 0xb216 | 0xb217 | 0xb218 | 0xb219 | 0xb21a | 0xb21b | 0xb21c | 0xb21d | 0xb21e | 0xb21f | 0xb220 | 0xb221 | 0xb222 | 0xb223 | 0xb224 | 0xb225 | 0xb226 | 0xb227 | 0xb228 | 0xb229 | 0xb22a | 0xb22b | 0xb22c | 0xb22d | 0xb22e | 0xb22f | 0xb230 | 0xb231 | 0xb232 | 0xb233 | 0xb234 | 0xb235 | 0xb236 | 0xb237 | 0xb238 | 0xb239 | 0xb23a | 0xb23b | 0xb23c | 0xb23d | 0xb23e | 0xb23f | 0xb240 | 0xb241 | 0xb242 | 0xb243 | 0xb244 | 0xb245 | 0xb246 | 0xb247 | 0xb248 | 0xb249 | 0xb24a | 0xb24b | 0xb24c | 0xb24d | 0xb24e | 0xb24f | 0xb250 | 0xb251 | 0xb252 | 0xb253 | 0xb254 | 0xb255 | 0xb256 | 0xb257 | 0xb258 | 0xb259 | 0xb25a | 0xb25b | 0xb25c | 0xb25d | 0xb25e | 0xb25f | 0xb260 | 0xb301 | 0xb302 | 0xb303 | 0xb304 | 0xb305 | 0xb306 | 0xb307 | 0xb308 | 0xb309 | 0xb30a | 0xb30b | 0xb30c | 0xb30d | 0xb30e | 0xb30f | 0xb310 | 0xb311 | 0xb312 | 0xb313 | 0xb314 | 0xb315 | 0xb316 | 0xb317 | 0xb318 | 0xb319 | 0xb31a | 0xb31b | 0xb31c | 0xb31d | 0xb31e | 0xb31f | 0xb320 | 0xb321 | 0xb322 | 0xb323 | 0xb324 | 0xb325 | 0xb326 | 0xb327 | 0xb328 | 0xb329 | 0xb32a | 0xb32b | 0xb32c | 0xb32d | 0xb32e | 0xb32f | 0xb330 | 0xb331 | 0xb332 | 0xb333 | 0xb334 | 0xb335 | 0xb336 | 0xb337 | 0xb338 | 0xb339 | 0xb33a | 0xb33b | 0xb33c | 0xb33d | 0xb33e | 0xb33f | 0xb340 | 0xb341 | 0xb342 | 0xb343 | 0xb344 | 0xb345 | 0xb346 | 0xb347 | 0xb348 | 0xb349 | 0xb34a | 0xb34b | 0xb34c | 0xb34d | 0xb34e | 0xb34f | 0xb350 | 0xb351 | 0xb352 | 0xb353 | 0xb354 | 0xb355 | 0xb356 | 0xb357 | 0xb358 | 0xb359 | 0xb35a | 0xb35b | 0xb35c | 0xb35d | 0xb35e | 0xb35f | 0xb360 | 0xb361 | 0xb362 | 0xb363 | 0xb364 | 0xb365 | 0xb366 | 0xb367 | 0xb368 | 0xb369 | 0xb36a | 0xb36b | 0xb36c | 0xb36d | 0xb36e | 0xb36f | 0xb370 | 0xb371 | 0xb372 | 0xb373 | 0xb374 | 0xb375 | 0xb376 | 0xb377 | 0xb378 | 0xb379 | 0xb37a | 0xb37b | 0xb37c | 0xb37d | 0xb37e | 0xb37f | 0xb380 | 0xb381 | 0xb382 | 0xb383 | 0xb384 | 0xb385 | 0xb386 | 0xb387 | 0xb388 | 0xb389 | 0xb38a | 0xb38b | 0xb38c | 0xb38d | 0xb38e | 0xb38f | 0xb390 | 0xb391 | 0xb392 | 0xb393 | 0xb394 | 0xb395 | 0xb396 | 0xb397 | 0xb398 | 0xb399 | 0xb39a | 0xb39b | 0xb39c | 0xb39d | 0xb39e | 0xb39f | 0xb3a0 | 0xb3a1 | 0xb3a2 | 0xb3a3 | 0xb3a4 | 0xb3a5 | 0xb3a6 | 0xb3a7 | 0xb3a8 | 0xb3a9 | 0xb3aa | 0xb3ab | 0xb3ac | 0xb3ad | 0xb3ae | 0xb3af | 0xb3b0 | 0xb3b1 | 0xb3b2 | 0xb3b3 | 0xb3b4 | 0xb3b5 | 0xb3b6 | 0xb3b7 | 0xb3b8 | 0xb3b9 | 0xb3ba | 0xb3bb | 0xb3bc | 0xb3bd | 0xb3be | 0xb3bf | 0xb3c0 | 0xb3c1 | 0xb3c2 | 0xb3c3 | 0xb3c4 | 0xb3c5 | 0xb3c6 | 0xb3c7 | 0xb3c8 | 0xb3c9 | 0xb3ca | 0xb3cb | 0xb3cc | 0xb3cd | 0xb3ce | 0xb3cf | 0xb3d0 | 0xb3d1 | 0xb3d2 | 0xb3d3 | 0xb3d4 | 0xb3d5 | 0xb3d6 | 0xb3d7 | 0xb3d8 | 0xb3d9 | 0xb3da | 0xb3db | 0xb3dc | 0xb3dd | 0xb3de | 0xb3df | 0xb3e0 | 0xb401 | 0xb402 } HashCode\n */\n\n/**\n * @type { Record<HashName,HashCode> }\n */\nconst names = Object.freeze({\n  'identity': 0x00,\n  'sha1': 0x11,\n  'sha2-256': 0x12,\n  'sha2-512': 0x13,\n  'sha3-512': 0x14,\n  'sha3-384': 0x15,\n  'sha3-256': 0x16,\n  'sha3-224': 0x17,\n  'shake-128': 0x18,\n  'shake-256': 0x19,\n  'keccak-224': 0x1a,\n  'keccak-256': 0x1b,\n  'keccak-384': 0x1c,\n  'keccak-512': 0x1d,\n  'blake3': 0x1e,\n  'murmur3-128': 0x22,\n  'murmur3-32': 0x23,\n  'dbl-sha2-256': 0x56,\n  'md4': 0xd4,\n  'md5': 0xd5,\n  'bmt': 0xd6,\n  'sha2-256-trunc254-padded': 0x1012,\n  'ripemd-128': 0x1052,\n  'ripemd-160': 0x1053,\n  'ripemd-256': 0x1054,\n  'ripemd-320': 0x1055,\n  'x11': 0x1100,\n  'kangarootwelve': 0x1d01,\n  'sm3-256': 0x534d,\n  'blake2b-8': 0xb201,\n  'blake2b-16': 0xb202,\n  'blake2b-24': 0xb203,\n  'blake2b-32': 0xb204,\n  'blake2b-40': 0xb205,\n  'blake2b-48': 0xb206,\n  'blake2b-56': 0xb207,\n  'blake2b-64': 0xb208,\n  'blake2b-72': 0xb209,\n  'blake2b-80': 0xb20a,\n  'blake2b-88': 0xb20b,\n  'blake2b-96': 0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8': 0xb241,\n  'blake2s-16': 0xb242,\n  'blake2s-24': 0xb243,\n  'blake2s-32': 0xb244,\n  'blake2s-40': 0xb245,\n  'blake2s-48': 0xb246,\n  'blake2s-56': 0xb247,\n  'blake2s-64': 0xb248,\n  'blake2s-72': 0xb249,\n  'blake2s-80': 0xb24a,\n  'blake2s-88': 0xb24b,\n  'blake2s-96': 0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'skein256-8': 0xb301,\n  'skein256-16': 0xb302,\n  'skein256-24': 0xb303,\n  'skein256-32': 0xb304,\n  'skein256-40': 0xb305,\n  'skein256-48': 0xb306,\n  'skein256-56': 0xb307,\n  'skein256-64': 0xb308,\n  'skein256-72': 0xb309,\n  'skein256-80': 0xb30a,\n  'skein256-88': 0xb30b,\n  'skein256-96': 0xb30c,\n  'skein256-104': 0xb30d,\n  'skein256-112': 0xb30e,\n  'skein256-120': 0xb30f,\n  'skein256-128': 0xb310,\n  'skein256-136': 0xb311,\n  'skein256-144': 0xb312,\n  'skein256-152': 0xb313,\n  'skein256-160': 0xb314,\n  'skein256-168': 0xb315,\n  'skein256-176': 0xb316,\n  'skein256-184': 0xb317,\n  'skein256-192': 0xb318,\n  'skein256-200': 0xb319,\n  'skein256-208': 0xb31a,\n  'skein256-216': 0xb31b,\n  'skein256-224': 0xb31c,\n  'skein256-232': 0xb31d,\n  'skein256-240': 0xb31e,\n  'skein256-248': 0xb31f,\n  'skein256-256': 0xb320,\n  'skein512-8': 0xb321,\n  'skein512-16': 0xb322,\n  'skein512-24': 0xb323,\n  'skein512-32': 0xb324,\n  'skein512-40': 0xb325,\n  'skein512-48': 0xb326,\n  'skein512-56': 0xb327,\n  'skein512-64': 0xb328,\n  'skein512-72': 0xb329,\n  'skein512-80': 0xb32a,\n  'skein512-88': 0xb32b,\n  'skein512-96': 0xb32c,\n  'skein512-104': 0xb32d,\n  'skein512-112': 0xb32e,\n  'skein512-120': 0xb32f,\n  'skein512-128': 0xb330,\n  'skein512-136': 0xb331,\n  'skein512-144': 0xb332,\n  'skein512-152': 0xb333,\n  'skein512-160': 0xb334,\n  'skein512-168': 0xb335,\n  'skein512-176': 0xb336,\n  'skein512-184': 0xb337,\n  'skein512-192': 0xb338,\n  'skein512-200': 0xb339,\n  'skein512-208': 0xb33a,\n  'skein512-216': 0xb33b,\n  'skein512-224': 0xb33c,\n  'skein512-232': 0xb33d,\n  'skein512-240': 0xb33e,\n  'skein512-248': 0xb33f,\n  'skein512-256': 0xb340,\n  'skein512-264': 0xb341,\n  'skein512-272': 0xb342,\n  'skein512-280': 0xb343,\n  'skein512-288': 0xb344,\n  'skein512-296': 0xb345,\n  'skein512-304': 0xb346,\n  'skein512-312': 0xb347,\n  'skein512-320': 0xb348,\n  'skein512-328': 0xb349,\n  'skein512-336': 0xb34a,\n  'skein512-344': 0xb34b,\n  'skein512-352': 0xb34c,\n  'skein512-360': 0xb34d,\n  'skein512-368': 0xb34e,\n  'skein512-376': 0xb34f,\n  'skein512-384': 0xb350,\n  'skein512-392': 0xb351,\n  'skein512-400': 0xb352,\n  'skein512-408': 0xb353,\n  'skein512-416': 0xb354,\n  'skein512-424': 0xb355,\n  'skein512-432': 0xb356,\n  'skein512-440': 0xb357,\n  'skein512-448': 0xb358,\n  'skein512-456': 0xb359,\n  'skein512-464': 0xb35a,\n  'skein512-472': 0xb35b,\n  'skein512-480': 0xb35c,\n  'skein512-488': 0xb35d,\n  'skein512-496': 0xb35e,\n  'skein512-504': 0xb35f,\n  'skein512-512': 0xb360,\n  'skein1024-8': 0xb361,\n  'skein1024-16': 0xb362,\n  'skein1024-24': 0xb363,\n  'skein1024-32': 0xb364,\n  'skein1024-40': 0xb365,\n  'skein1024-48': 0xb366,\n  'skein1024-56': 0xb367,\n  'skein1024-64': 0xb368,\n  'skein1024-72': 0xb369,\n  'skein1024-80': 0xb36a,\n  'skein1024-88': 0xb36b,\n  'skein1024-96': 0xb36c,\n  'skein1024-104': 0xb36d,\n  'skein1024-112': 0xb36e,\n  'skein1024-120': 0xb36f,\n  'skein1024-128': 0xb370,\n  'skein1024-136': 0xb371,\n  'skein1024-144': 0xb372,\n  'skein1024-152': 0xb373,\n  'skein1024-160': 0xb374,\n  'skein1024-168': 0xb375,\n  'skein1024-176': 0xb376,\n  'skein1024-184': 0xb377,\n  'skein1024-192': 0xb378,\n  'skein1024-200': 0xb379,\n  'skein1024-208': 0xb37a,\n  'skein1024-216': 0xb37b,\n  'skein1024-224': 0xb37c,\n  'skein1024-232': 0xb37d,\n  'skein1024-240': 0xb37e,\n  'skein1024-248': 0xb37f,\n  'skein1024-256': 0xb380,\n  'skein1024-264': 0xb381,\n  'skein1024-272': 0xb382,\n  'skein1024-280': 0xb383,\n  'skein1024-288': 0xb384,\n  'skein1024-296': 0xb385,\n  'skein1024-304': 0xb386,\n  'skein1024-312': 0xb387,\n  'skein1024-320': 0xb388,\n  'skein1024-328': 0xb389,\n  'skein1024-336': 0xb38a,\n  'skein1024-344': 0xb38b,\n  'skein1024-352': 0xb38c,\n  'skein1024-360': 0xb38d,\n  'skein1024-368': 0xb38e,\n  'skein1024-376': 0xb38f,\n  'skein1024-384': 0xb390,\n  'skein1024-392': 0xb391,\n  'skein1024-400': 0xb392,\n  'skein1024-408': 0xb393,\n  'skein1024-416': 0xb394,\n  'skein1024-424': 0xb395,\n  'skein1024-432': 0xb396,\n  'skein1024-440': 0xb397,\n  'skein1024-448': 0xb398,\n  'skein1024-456': 0xb399,\n  'skein1024-464': 0xb39a,\n  'skein1024-472': 0xb39b,\n  'skein1024-480': 0xb39c,\n  'skein1024-488': 0xb39d,\n  'skein1024-496': 0xb39e,\n  'skein1024-504': 0xb39f,\n  'skein1024-512': 0xb3a0,\n  'skein1024-520': 0xb3a1,\n  'skein1024-528': 0xb3a2,\n  'skein1024-536': 0xb3a3,\n  'skein1024-544': 0xb3a4,\n  'skein1024-552': 0xb3a5,\n  'skein1024-560': 0xb3a6,\n  'skein1024-568': 0xb3a7,\n  'skein1024-576': 0xb3a8,\n  'skein1024-584': 0xb3a9,\n  'skein1024-592': 0xb3aa,\n  'skein1024-600': 0xb3ab,\n  'skein1024-608': 0xb3ac,\n  'skein1024-616': 0xb3ad,\n  'skein1024-624': 0xb3ae,\n  'skein1024-632': 0xb3af,\n  'skein1024-640': 0xb3b0,\n  'skein1024-648': 0xb3b1,\n  'skein1024-656': 0xb3b2,\n  'skein1024-664': 0xb3b3,\n  'skein1024-672': 0xb3b4,\n  'skein1024-680': 0xb3b5,\n  'skein1024-688': 0xb3b6,\n  'skein1024-696': 0xb3b7,\n  'skein1024-704': 0xb3b8,\n  'skein1024-712': 0xb3b9,\n  'skein1024-720': 0xb3ba,\n  'skein1024-728': 0xb3bb,\n  'skein1024-736': 0xb3bc,\n  'skein1024-744': 0xb3bd,\n  'skein1024-752': 0xb3be,\n  'skein1024-760': 0xb3bf,\n  'skein1024-768': 0xb3c0,\n  'skein1024-776': 0xb3c1,\n  'skein1024-784': 0xb3c2,\n  'skein1024-792': 0xb3c3,\n  'skein1024-800': 0xb3c4,\n  'skein1024-808': 0xb3c5,\n  'skein1024-816': 0xb3c6,\n  'skein1024-824': 0xb3c7,\n  'skein1024-832': 0xb3c8,\n  'skein1024-840': 0xb3c9,\n  'skein1024-848': 0xb3ca,\n  'skein1024-856': 0xb3cb,\n  'skein1024-864': 0xb3cc,\n  'skein1024-872': 0xb3cd,\n  'skein1024-880': 0xb3ce,\n  'skein1024-888': 0xb3cf,\n  'skein1024-896': 0xb3d0,\n  'skein1024-904': 0xb3d1,\n  'skein1024-912': 0xb3d2,\n  'skein1024-920': 0xb3d3,\n  'skein1024-928': 0xb3d4,\n  'skein1024-936': 0xb3d5,\n  'skein1024-944': 0xb3d6,\n  'skein1024-952': 0xb3d7,\n  'skein1024-960': 0xb3d8,\n  'skein1024-968': 0xb3d9,\n  'skein1024-976': 0xb3da,\n  'skein1024-984': 0xb3db,\n  'skein1024-992': 0xb3dc,\n  'skein1024-1000': 0xb3dd,\n  'skein1024-1008': 0xb3de,\n  'skein1024-1016': 0xb3df,\n  'skein1024-1024': 0xb3e0,\n  'poseidon-bls12_381-a2-fc1': 0xb401,\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402\n})\n\nmodule.exports = { names }\n", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});", "import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});", "import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});", "import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});", "import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});", "import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});", "import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});", "import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});", "import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});", "import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});", "var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}", "import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});", "import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};", "import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 85;\nexport const encode = node => coerce(node);\nexport const decode = data => coerce(data);", "const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));", "import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;", "import { CID } from './cid.js';\nimport * as varint from './varint.js';\nimport * as bytes from './bytes.js';\nimport * as hasher from './hashes/hasher.js';\nimport * as digest from './hashes/digest.js';\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n};", "import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};", "export function asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}", "import { asUint8Array } from './util/as-uint8array.js';\nexport function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}", "import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;", "import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}", "import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}", "import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return asUint8Array(output);\n}", "/**\n * Multihash implementation in JavaScript.\n */\n'use strict'\n\nconst multibase = require('multibase')\nconst varint = require('varint')\nconst { names } = require('./constants')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\nconst { concat: uint8ArrayConcat } = require('uint8arrays/concat')\n\nconst codes = /** @type {import('./types').CodeNameMap} */({})\n\n// eslint-disable-next-line guard-for-in\nfor (const key in names) {\n  const name = /** @type {HashName} */(key)\n  codes[names[name]] = name\n}\nObject.freeze(codes)\n\n/**\n * Convert the given multihash to a hex encoded string.\n *\n * @param {Uint8Array} hash\n * @returns {string}\n */\nfunction toHexString (hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array')\n  }\n\n  return uint8ArrayToString(hash, 'base16')\n}\n\n/**\n * Convert the given hex encoded string to a multihash.\n *\n * @param {string} hash\n * @returns {Uint8Array}\n */\nfunction fromHexString (hash) {\n  return uint8ArrayFromString(hash, 'base16')\n}\n\n/**\n * Convert the given multihash to a base58 encoded string.\n *\n * @param {Uint8Array} hash\n * @returns {string}\n */\nfunction toB58String (hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array')\n  }\n\n  return uint8ArrayToString(multibase.encode('base58btc', hash)).slice(1)\n}\n\n/**\n * Convert the given base58 encoded string to a multihash.\n *\n * @param {string|Uint8Array} hash\n * @returns {Uint8Array}\n */\nfunction fromB58String (hash) {\n  const encoded = hash instanceof Uint8Array\n    ? uint8ArrayToString(hash)\n    : hash\n\n  return multibase.decode('z' + encoded)\n}\n\n/**\n * Decode a hash from the given multihash.\n *\n * @param {Uint8Array} bytes\n * @returns {{code: HashCode, name: HashName, length: number, digest: Uint8Array}} result\n */\nfunction decode (bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new Error('multihash must be a Uint8Array')\n  }\n\n  if (bytes.length < 2) {\n    throw new Error('multihash too short. must be > 2 bytes.')\n  }\n\n  const code = /** @type {HashCode} */(varint.decode(bytes))\n  if (!isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\n  }\n  bytes = bytes.slice(varint.decode.bytes)\n\n  const len = varint.decode(bytes)\n  if (len < 0) {\n    throw new Error(`multihash invalid length: ${len}`)\n  }\n  bytes = bytes.slice(varint.decode.bytes)\n\n  if (bytes.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${uint8ArrayToString(bytes, 'base16')}`)\n  }\n\n  return {\n    code,\n    name: codes[code],\n    length: len,\n    digest: bytes\n  }\n}\n\n/**\n * Encode a hash digest along with the specified function code.\n *\n * > **Note:** the length is derived from the length of the digest itself.\n *\n * @param {Uint8Array} digest\n * @param {HashName | HashCode} code\n * @param {number} [length]\n * @returns {Uint8Array}\n */\nfunction encode (digest, code, length) {\n  if (!digest || code === undefined) {\n    throw new Error('multihash encode requires at least two args: digest, code')\n  }\n\n  // ensure it's a hashfunction code.\n  const hashfn = coerceCode(code)\n\n  if (!(digest instanceof Uint8Array)) {\n    throw new Error('digest should be a Uint8Array')\n  }\n\n  if (length == null) {\n    length = digest.length\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.')\n  }\n\n  const hash = varint.encode(hashfn)\n  const len = varint.encode(length)\n  return uint8ArrayConcat([hash, len, digest], hash.length + len.length + digest.length)\n}\n\n/**\n * Converts a hash function name into the matching code.\n * If passed a number it will return the number if it's a valid code.\n *\n * @param {HashName | number} name\n * @returns {number}\n */\nfunction coerceCode (name) {\n  let code = name\n\n  if (typeof name === 'string') {\n    if (names[name] === undefined) {\n      throw new Error(`Unrecognized hash function named: ${name}`)\n    }\n    code = names[name]\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\n  }\n\n  // @ts-ignore\n  if (codes[code] === undefined && !isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`)\n  }\n\n  return code\n}\n\n/**\n * Checks if a code is part of the app range\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction isAppCode (code) {\n  return code > 0 && code < 0x10\n}\n\n/**\n * Checks whether a multihash code is valid.\n *\n * @param {HashCode} code\n * @returns {boolean}\n */\nfunction isValidCode (code) {\n  if (isAppCode(code)) {\n    return true\n  }\n\n  if (codes[code]) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\n *\n * @param {Uint8Array} multihash\n * @returns {void}\n * @throws {Error}\n */\nfunction validate (multihash) {\n  decode(multihash) // throws if bad.\n}\n\n/**\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\n *\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n * @throws {Error}\n */\nfunction prefix (multihash) {\n  validate(multihash)\n\n  return multihash.subarray(0, 2)\n}\n\nmodule.exports = {\n  names,\n  codes,\n  toHexString,\n  fromHexString,\n  toB58String,\n  fromB58String,\n  decode,\n  encode,\n  coerceCode,\n  isAppCode,\n  validate,\n  prefix,\n  isValidCode\n}\n\n/**\n * @typedef { import(\"./constants\").HashCode } HashCode\n * @typedef { import(\"./constants\").HashName } HashName\n */\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "export * from './dht.js';\nexport * from './did-dht.js';\nexport * from './did-ion.js';\nexport * from './did-key.js';\nexport * from './did-resolver.js';\nexport * from './resolver-cache-level.js';\nexport * from './resolver-cache-noop.js';\nexport * from './types.js';\nexport * as utils from './utils.js';", "import type { Packet, TxtAnswer } from 'dns-packet';\nimport type { PublicKeyJwk, Web5Crypto} from '@web5/crypto';\n\nimport { Jose } from '@web5/crypto';\nimport { Convert } from '@web5/common';\nimport { Pkarr, SignedPacket, z32 } from 'pkarr';\nimport dns, { AUTHORITATIVE_ANSWER } from 'dns-packet';\n\nimport type { DidDocument } from './types.js';\n\nconst PKARR_RELAY = 'https://diddht.tbddev.org';\nconst TTL = 7200;\n\n/**\n * A class to handle operations related to DHT-based Decentralized Identifiers (DIDs).\n * It provides methods to:\n * - Parse a DNS packet into a DID Document.\n * - Retrieve a DID Document from the DHT.\n * - Publish a DID Document to the DHT.\n * - Convert a DID Document to a DNS packet.\n *\n * The class assumes that DIDs and DID Documents are compliant with the did:dht specification.\n */\nexport class DidDht {\n\n  /**\n   * Parses a DNS packet into a DID Document.\n   * @param did The DID of the document.\n   * @param packet A DNS packet to parse into a DID Document.\n   * @returns A Promise that resolves to the parsed DidDocument.\n   */\n  public static async fromDnsPacket({ did, packet }: {\n    did: string,\n    packet: Packet\n  }): Promise<DidDocument> {\n    const document: Partial<DidDocument> = {\n      id: did,\n    };\n\n    const keyLookup = new Map<string, string>();\n\n    for (const answer of packet.answers) {\n      if (answer.type !== 'TXT') continue;\n\n      const dataStr = answer.data?.toString();\n      // Extracts 'k' or 's' from \"_k0._did\" or \"_s0._did\"\n      const recordType = answer.name?.split('.')[0].substring(1, 2);\n\n      /*eslint-disable no-case-declarations*/\n      switch (recordType) {\n        case 'k': {\n          const { id, t, k } = DidDht.parseTxtData({ data: dataStr });\n          const keyConfigurations: { [keyType: string]: Partial<PublicKeyJwk> } = {\n            '0': {\n              crv : 'Ed25519',\n              kty : 'OKP',\n              alg : 'EdDSA'\n            },\n            '1': {\n              crv : 'secp256k1',\n              kty : 'EC',\n              alg : 'ES256K'\n            }\n          };\n          const keyConfig = keyConfigurations[t];\n          if (!keyConfig) {\n            throw new Error('Unsupported key type');\n          }\n\n          const publicKeyJwk = await Jose.keyToJwk({\n            ...keyConfig,\n            kid         : id,\n            keyMaterial : Convert.base64Url(k).toUint8Array(),\n            keyType     : 'public'\n          }) as PublicKeyJwk;\n\n          if (!document.verificationMethod) {\n            document.verificationMethod = [];\n          }\n          document.verificationMethod.push({\n            id           : `${did}#${id}`,\n            type         : 'JsonWebKey2020',\n            controller   : did,\n            publicKeyJwk : publicKeyJwk,\n          });\n          keyLookup.set(answer.name, id);\n\n          break;\n        }\n\n        case 's': {\n          const {id: sId, t: sType, uri} = DidDht.parseTxtData({ data: dataStr });\n\n          if (!document.service) {\n            document.service = [];\n          }\n          document.service.push({\n            id              : `${did}#${sId}`,\n            type            : sType,\n            serviceEndpoint : uri\n          });\n\n          break;\n        }\n      }\n    }\n\n    // Extract relationships from root record\n    const didSuffix = did.split('did:dht:')[1];\n    const potentialRootNames = ['_did', `_did.${didSuffix}`];\n\n    let actualRootName = null;\n    const root = packet.answers\n      .filter(answer => {\n        if (potentialRootNames.includes(answer.name)) {\n          actualRootName = answer.name;\n          return true;\n        }\n        return false;\n      }) as dns.TxtAnswer[];\n\n    if (root.length === 0) {\n      throw new Error('No root record found');\n    }\n\n    if (root.length > 1) {\n      throw new Error('Multiple root records found');\n    }\n    const singleRoot = root[0] as dns.TxtAnswer;\n    const rootRecord = singleRoot.data?.toString().split(';');\n    rootRecord?.forEach(record => {\n      const [type, ids] = record.split('=');\n      let idList = ids?.split(',').map(id => `#${keyLookup.get(`_${id}.${actualRootName}`)}`);\n      switch (type) {\n        case 'auth':\n          document.authentication = idList;\n          break;\n        case 'asm':\n          document.assertionMethod = idList;\n          break;\n        case 'agm':\n          document.keyAgreement = idList;\n          break;\n        case 'inv':\n          document.capabilityInvocation = idList;\n          break;\n        case 'del':\n          document.capabilityDelegation = idList;\n          break;\n      }\n    });\n\n    return document as DidDocument;\n  }\n\n  /**\n   * Retrieves a DID Document from the DHT.\n   *\n   * @param did The DID of the document to retrieve.\n   * @param relay The relay to use to retrieve the document; defaults to `PKARR_RELAY`.\n   * @returns A Promise that resolves to the retrieved DidDocument.\n   */\n  public static async getDidDocument({ did, relay = PKARR_RELAY }: {\n      did: string,\n      relay?: string\n    }): Promise<DidDocument> {\n    const didFragment = did.replace('did:dht:', '');\n    const publicKeyBytes = new Uint8Array(z32.decode(didFragment));\n    const resolved = await Pkarr.relayGet(relay, publicKeyBytes);\n    if (resolved) {\n      return await DidDht.fromDnsPacket({ did, packet: resolved.packet() });\n    }\n    throw new Error('No packet found');\n  }\n\n  /**\n   * Publishes a DID Document to the DHT.\n   *\n   * @param keyPair The key pair to sign the document with.\n   * @param didDocument The DID Document to publish.\n   * @param relay The relay to use to retrieve the document; defaults to `PKARR_RELAY`.\n   * @returns A boolean indicating the success of the publishing operation.\n   */\n  public static async publishDidDocument({ keyPair, didDocument, relay = PKARR_RELAY }: {\n    didDocument: DidDocument,\n    keyPair: Web5Crypto.CryptoKeyPair,\n    relay?: string\n  }): Promise<boolean> {\n    const packet = await DidDht.toDnsPacket({ didDocument });\n    const pkarrKeypair = {\n      publicKey : keyPair.publicKey.material,\n      secretKey : new Uint8Array([...keyPair.privateKey.material, ...keyPair.publicKey.material])\n    };\n    const signedPacket = SignedPacket.fromPacket(pkarrKeypair, packet);\n    const results = await Pkarr.relayPut(relay, signedPacket);\n\n    return results.ok;\n  }\n\n  /**\n   * Converts a DID Document to a DNS packet according to the did:dht spec.\n   *\n   * @param didDocument The DID Document to convert.\n   * @returns A DNS packet converted from the DID Document.\n   */\n  public static async toDnsPacket({ didDocument }: { didDocument: DidDocument }): Promise<Packet> {\n    const packet: Partial<Packet> = {\n      id      : 0,\n      type    : 'response',\n      flags   : AUTHORITATIVE_ANSWER,\n      answers : []\n    };\n\n    const vmIds: string[] = [];\n    const svcIds: string[] = [];\n    const rootRecord: string[] = [];\n    const keyLookup = new Map<string, string>();\n\n    // Add key records for each verification method\n    for (const vm of didDocument.verificationMethod) {\n      const index = didDocument.verificationMethod.indexOf(vm);\n      const recordIdentifier = `k${index}`;\n      let vmId = DidDht.identifierFragment({ identifier: vm.id });\n      keyLookup.set(vmId, recordIdentifier);\n\n      let keyType: number;\n      switch (vm.publicKeyJwk.alg) {\n        case 'EdDSA':\n          keyType = 0;\n          break;\n        case 'ES256K':\n          keyType = 1;\n          break;\n        default:\n          keyType = 0; // Default value or throw an error if needed\n      }\n\n      const cryptoKey = await Jose.jwkToCryptoKey({ key: vm.publicKeyJwk });\n      const keyBase64Url = Convert.uint8Array(cryptoKey.material).toBase64Url();\n\n      const keyRecord: TxtAnswer = {\n        type : 'TXT',\n        name : `_${recordIdentifier}._did`,\n        ttl  : TTL,\n        data : `id=${vmId},t=${keyType},k=${keyBase64Url}`\n      };\n\n      packet.answers.push(keyRecord);\n      vmIds.push(recordIdentifier);\n    }\n\n    // Add service records\n    didDocument.service?.forEach((service, index) => {\n      const recordIdentifier = `s${index}`;\n      let sId = DidDht.identifierFragment({ identifier: service.id });\n      const serviceRecord: TxtAnswer = {\n        type : 'TXT',\n        name : `_${recordIdentifier}._did`,\n        ttl  : TTL,\n        data : `id=${sId},t=${service.type},uri=${service.serviceEndpoint}`\n      };\n\n      packet.answers.push(serviceRecord);\n      svcIds.push(recordIdentifier);\n    });\n\n    // add root record for vms and svcs\n    if (vmIds.length) {\n      rootRecord.push(`vm=${vmIds.join(',')}`);\n    }\n    if (svcIds.length) {\n      rootRecord.push(`svc=${svcIds.join(',')}`);\n    }\n\n    // add verification relationships\n    if (didDocument.authentication) {\n      const authIds: string[] = didDocument.authentication\n        .map(id => DidDht.identifierFragment({ identifier: id }))\n        .filter(id => keyLookup.has(id))\n        .map(id => keyLookup.get(id) as string);\n      if (authIds.length) {\n        rootRecord.push(`auth=${authIds.join(',')}`);\n      }\n    }\n    if (didDocument.assertionMethod) {\n      const authIds: string[] = didDocument.assertionMethod\n        .map(id => DidDht.identifierFragment({ identifier: id }))\n        .filter(id => keyLookup.has(id))\n        .map(id => keyLookup.get(id) as string);\n      if (authIds.length) {\n        rootRecord.push(`asm=${authIds.join(',')}`);\n      }\n    }\n    if (didDocument.keyAgreement) {\n      const authIds: string[] = didDocument.keyAgreement\n        .map(id => DidDht.identifierFragment({ identifier: id }))\n        .filter(id => keyLookup.has(id))\n        .map(id => keyLookup.get(id) as string);\n      if (authIds.length) {\n        rootRecord.push(`agm=${authIds.join(',')}`);\n      }\n    }\n    if (didDocument.capabilityInvocation) {\n      const authIds: string[] = didDocument.capabilityInvocation\n        .map(id => DidDht.identifierFragment({ identifier: id }))\n        .filter(id => keyLookup.has(id))\n        .map(id => keyLookup.get(id) as string);\n      if (authIds.length) {\n        rootRecord.push(`inv=${authIds.join(',')}`);\n      }\n    }\n    if (didDocument.capabilityDelegation) {\n      const authIds: string[] = didDocument.capabilityDelegation\n        .map(id => DidDht.identifierFragment({ identifier: id }))\n        .filter(id => keyLookup.has(id))\n        .map(id => keyLookup.get(id) as string);\n      if (authIds.length) {\n        rootRecord.push(`del=${authIds.join(',')}`);\n      }\n    }\n\n    // Add root record\n    packet.answers.push({\n      type : 'TXT',\n      name : '_did',\n      ttl  : TTL,\n      data : rootRecord.join(';')\n    });\n\n    return packet as Packet;\n  }\n\n  /**\n   * Extracts the fragment from a DID.\n   *\n   * @param identifier The DID to extract the fragment from.\n   * @returns The fragment from the DID or the complete DID if no fragment exists.\n   */\n  private static identifierFragment({ identifier }: { identifier: string }): string {\n    return identifier.includes('#') ? identifier.substring(identifier.indexOf('#') + 1) : identifier;\n  }\n\n  /**\n   * Parses TXT data from a DNS answer to extract key or service information.\n   *\n   * @param data The TXT record string data containing key-value pairs separated by commas.\n   * @returns An object containing parsed attributes such as 'id', 't', 'k', and 'uri'.\n  */\n  private static parseTxtData({ data }: { data: string }): { [key: string]: string } {\n    return data.split(',').reduce((acc, pair) => {\n      const [key, value] = pair.split('=');\n      acc[key] = value;\n      return acc;\n    }, {} as { [key: string]: string });\n  }\n}", "export * from './algorithms-api/index.js';\nexport * from './crypto-algorithms/index.js';\nexport * from './crypto-primitives/index.js';\nexport * from './jose.js';\nexport * as utils from './utils.js';\n", "export * from './errors.js';\nexport * from './ec/index.js';\nexport * from './aes/index.js';\nexport * from './crypto-key.js';\nexport * from './pbkdf/index.js';\nexport * from './crypto-algorithm.js';\n", "/**\n * The methods of KeyManager and KeyManagementSystem interfaces return\n * errors by rejecting the returned promise with a predefined exception\n * defined in ECMAScript [ECMA-262] or DOMException.\n *\n * The following predefined exceptions are used: TypeError.\n *\n * The following DOMException types from [DOM4] are used:\n *   DataError: Data provided to an operation does not meet requirements\n *   InvalidAccessError: The requested operation is not valid for the provided key\n *   NotSupportedError: The algorithm is not supported\n *   OperationError: The operation failed for an operation-specific reason\n *   SyntaxError: A required parameter was missing or out-of-range\n *\n * Reference: https://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-Exceptions\n *            Section 14.4. Exceptions\n */\nexport class CryptoError extends Error {\n}\nexport class DataError extends CryptoError {\n}\nexport class InvalidAccessError extends CryptoError {\n}\nexport class NotSupportedError extends CryptoError {\n}\nexport class OperationError extends CryptoError {\n}\nexport class SyntaxError extends CryptoError {\n}\n", "export * from './base.js';\nexport * from './ecdh.js';\nexport * from './ecdsa.js';\nexport * from './eddsa.js';\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { InvalidAccessError } from '../errors.js';\nimport { CryptoAlgorithm } from '../crypto-algorithm.js';\nimport { checkValidProperty, checkRequiredProperty } from '../../utils.js';\nexport class BaseEllipticCurveAlgorithm extends CryptoAlgorithm {\n    checkGenerateKey(options) {\n        const { algorithm, keyUsages } = options;\n        // Algorithm specified in the operation must match the algorithm implementation processing the operation.\n        this.checkAlgorithmName({ algorithmName: algorithm.name });\n        // The algorithm object must contain a namedCurve property.\n        checkRequiredProperty({ property: 'namedCurve', inObject: algorithm });\n        // The named curve specified must be supported by the algorithm implementation processing the operation.\n        checkValidProperty({ property: algorithm.namedCurve, allowedProperties: this.namedCurves });\n        // The key usages specified must be permitted by the algorithm implementation processing the operation.\n        this.checkKeyUsages({ keyUsages, allowedKeyUsages: this.keyUsages });\n    }\n    decrypt() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new InvalidAccessError(`Requested operation 'decrypt' is not valid for ${this.name} keys.`);\n        });\n    }\n    encrypt() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new InvalidAccessError(`Requested operation 'encrypt' is not valid for ${this.name} keys.`);\n        });\n    }\n}\n", "import { InvalidAccessError, NotSupportedError } from './errors.js';\nexport class CryptoAlgorithm {\n    checkAlgorithmName(options) {\n        const { algorithmName } = options;\n        if (algorithmName === undefined) {\n            throw new TypeError(`Required parameter missing: 'algorithmName'`);\n        }\n        if (algorithmName !== this.name) {\n            throw new NotSupportedError(`Algorithm not supported: '${algorithmName}'`);\n        }\n    }\n    checkCryptoKey(options) {\n        const { key } = options;\n        if (!('algorithm' in key && 'extractable' in key && 'type' in key && 'usages' in key)) {\n            throw new TypeError('Object is not a CryptoKey');\n        }\n    }\n    checkKeyAlgorithm(options) {\n        const { keyAlgorithmName } = options;\n        if (keyAlgorithmName === undefined) {\n            throw new TypeError(`Required parameter missing: 'keyAlgorithmName'`);\n        }\n        if (keyAlgorithmName && keyAlgorithmName !== this.name) {\n            throw new InvalidAccessError(`Algorithm '${this.name}' does not match the provided '${keyAlgorithmName}' key.`);\n        }\n    }\n    checkKeyType(options) {\n        const { keyType, allowedKeyType } = options;\n        if (keyType === undefined || allowedKeyType === undefined) {\n            throw new TypeError(`One or more required parameters missing: 'keyType, allowedKeyType'`);\n        }\n        if (keyType && keyType !== allowedKeyType) {\n            throw new InvalidAccessError(`Requested operation is not valid for the provided '${keyType}' key.`);\n        }\n    }\n    checkKeyUsages(options) {\n        const { keyUsages, allowedKeyUsages } = options;\n        if (!(keyUsages && keyUsages.length > 0)) {\n            throw new TypeError(`Required parameter missing or empty: 'keyUsages'`);\n        }\n        const allowedUsages = (Array.isArray(allowedKeyUsages)) ? allowedKeyUsages : [...allowedKeyUsages.privateKey, ...allowedKeyUsages.publicKey];\n        if (!keyUsages.every(usage => allowedUsages.includes(usage))) {\n            throw new InvalidAccessError(`Requested operation(s) '${keyUsages.join(', ')}' is not valid for the provided key.`);\n        }\n    }\n    /**\n     * Creates an instance of the class on which it is called.\n     *\n     * This is a generic factory method that creates an instance of any\n     * crypto algorithm that extends this abstract class.\n     *\n     * @template T The type of the instance to be created.\n     * @returns An instance of the class it is called on.\n     * @throws {TypeError} If the class it is called on cannot be constructed.\n     */\n    static create() {\n        return new this();\n    }\n}\n", "import { Convert, Multicodec, universalTypeOf } from '@web5/common';\nimport { bytesToHex, randomBytes as nobleRandomBytes } from '@noble/hashes/utils';\n/**\n * Checks whether the properties object provided contains the specified property.\n *\n * @param property Property key to check for.\n * @param properties Properties object to check within.\n * @returns void\n * @throws {SyntaxError} If the property is not a key in the properties object.\n */\nexport function checkRequiredProperty(options) {\n    if (!options || options.property === undefined || options.inObject === undefined) {\n        throw new TypeError(`One or more required parameters missing: 'property, properties'`);\n    }\n    const { property, inObject } = options;\n    if (!(property in inObject)) {\n        throw new TypeError(`Required parameter missing: '${property}'`);\n    }\n}\n/**\n * Checks whether the property specified is a member of the list of valid properties.\n *\n * @param property Property key to check for.\n * @param allowedProperties Properties Array, Map, or Set to check within.\n * @returns void\n * @throws {SyntaxError} If the property is not a member of the allowedProperties Array, Map, or Set.\n */\nexport function checkValidProperty(options) {\n    if (!options || options.property === undefined || options.allowedProperties === undefined) {\n        throw new TypeError(`One or more required parameters missing: 'property, allowedProperties'`);\n    }\n    const { property, allowedProperties } = options;\n    if ((Array.isArray(allowedProperties) && !allowedProperties.includes(property)) ||\n        (allowedProperties instanceof Set && !allowedProperties.has(property)) ||\n        (allowedProperties instanceof Map && !allowedProperties.has(property))) {\n        const validProperties = Array.from((allowedProperties instanceof Map) ? allowedProperties.keys() : allowedProperties).join(', ');\n        throw new TypeError(`Out of range: '${property}'. Must be one of '${validProperties}'`);\n    }\n}\n/**\n * Type guard function to check if the given key is a raw key pair\n * of Uint8Array typed arrays.\n *\n * @param key The key to check.\n * @returns True if the key is a pair of Uint8Array typed arrays, false otherwise.\n */\nexport function isBytesKeyPair(key) {\n    return (key && 'privateKey' in key && 'publicKey' in key &&\n        universalTypeOf(key.privateKey) === 'Uint8Array' &&\n        universalTypeOf(key.publicKey) === 'Uint8Array') ? true : false;\n}\n/**\n * Type guard function to check if the given key is a\n * Web5Crypto.CryptoKeyPair.\n *\n * @param key The key to check.\n * @returns True if the key is a CryptoKeyPair, false otherwise.\n */\nexport function isCryptoKeyPair(key) {\n    return key && 'privateKey' in key && 'publicKey' in key;\n}\nexport function keyToMultibaseId(options) {\n    const { key, multicodecCode, multicodecName } = options;\n    const prefixedKey = Multicodec.addPrefix({ code: multicodecCode, data: key, name: multicodecName });\n    const prefixedKeyB58 = Convert.uint8Array(prefixedKey).toBase58Btc();\n    const multibaseKeyId = Convert.base58Btc(prefixedKeyB58).toMultibase();\n    return multibaseKeyId;\n}\n/**\n * Checks if the Web Crypto API is supported in the current runtime environment.\n *\n * The function uses `globalThis` to provide a universal reference to the global\n * scope, regardless of the environment. `globalThis` is a standard feature introduced\n * in ECMAScript 2020 that is agnostic to the underlying JavaScript environment, making\n * the code portable across browser, Node.js, and Web Workers environments.\n *\n * In a web browser, `globalThis` is equivalent to the `window` object. In Node.js, it\n * is equivalent to the `global` object, and in Web Workers, it corresponds to `self`.\n *\n * This method checks for the `crypto` object and its `subtle` property on the global scope\n * to determine the availability of the Web Crypto API. If both are present, the API is\n * supported; otherwise, it is not.\n *\n * @returns A boolean indicating whether the Web Crypto API is supported in the current environment.\n *\n * Example usage:\n *\n * ```ts\n * if (isWebCryptoSupported()) {\n *   console.log('Crypto operations can be performed');\n * } else {\n *   console.log('Crypto operations are not supported in this environment');\n * }\n * ```\n */\nexport function isWebCryptoSupported() {\n    if (globalThis.crypto && globalThis.crypto.subtle) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function multibaseIdToKey(options) {\n    const { multibaseKeyId } = options;\n    const prefixedKeyB58 = Convert.multibase(multibaseKeyId).toBase58Btc();\n    const prefixedKey = Convert.base58Btc(prefixedKeyB58).toUint8Array();\n    const { code, data, name } = Multicodec.removePrefix({ prefixedData: prefixedKey });\n    return { key: data, multicodecCode: code, multicodecName: name };\n}\n/**\n * Generates secure pseudorandom values of the specified length using\n * `crypto.getRandomValues`, which defers to the operating system.\n *\n * This function is a wrapper around `randomBytes` from the '@noble/hashes'\n * package. It's designed to be cryptographically strong, suitable for\n * generating keys, initialization vectors, and other random values.\n *\n * @param bytesLength - The number of bytes to generate.\n * @returns A Uint8Array containing the generated random bytes.\n *\n * @example\n * const bytes = randomBytes(32); // Generates 32 random bytes\n *\n * @see {@link https://www.npmjs.com/package/@noble/hashes | @noble/hashes on NPM}\n * for more information about the underlying implementation.\n */\nexport function randomBytes(bytesLength) {\n    return nobleRandomBytes(bytesLength);\n}\n/**\n * Generates a UUID (Universally Unique Identifier) using a\n * cryptographically strong random number generator following\n * the version 4 format, as specified in RFC 4122.\n *\n * A version 4 UUID is a randomly generated UUID. The 13th character\n * is set to '4' to denote version 4, and the 17th character is one\n * of '8', '9', 'A', or 'B' to comply with the variant 1 format of\n * UUIDs (the high bits are set to '10').\n *\n * The UUID is a 36 character string, including hyphens, and looks like this:\n * xxxxxxxx-xxxx-4xxx-axxx-xxxxxxxxxxxx\n *\n * Note that while UUIDs are not guaranteed to be unique, they are\n * practically unique\" given the large number of possible UUIDs and\n * the randomness of generation.\n *\n * After generating the UUID, the function securely wipes the memory\n * areas used to hold temporary values to prevent any possibility of\n * the random values being unintentionally leaked or retained in memory.\n *\n * @returns A UUID string in version 4 format.\n */\nexport function randomUuid() {\n    const bytes = randomBytes(16);\n    bytes[6] = (bytes[6] & 0x0f) | 0x40; // set version 4\n    bytes[8] = (bytes[8] & 0x3f) | 0x80; // set variant 1\n    const hex = bytesToHex(bytes);\n    bytes.fill(0); // wipe the random values array\n    const segments = [\n        hex.slice(0, 8),\n        hex.slice(8, 12),\n        hex.slice(12, 16),\n        hex.slice(16, 20),\n        hex.slice(20, 32)\n    ];\n    const uuid = segments.join('-');\n    segments.fill('0'); // wipe the segments array\n    return uuid;\n}\n", "export type * from './types.js';\n\nexport * from './convert.js';\nexport * from './multicodec.js';\nexport * from './object.js';\nexport * from './stores.js';\nexport * from './type-utils.js';", "import type { Multibase } from 'multiformats';\n\nimport { base58btc } from 'multiformats/bases/base58';\nimport { base64url } from 'multiformats/bases/base64';\n\nimport { isArrayBufferSlice, universalTypeOf } from './type-utils.js';\n\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\n\nexport class Convert {\n  data: any;\n  format: string;\n\n  constructor(data: any, format: string) {\n    this.data = data;\n    this.format = format;\n  }\n\n  static arrayBuffer(data: ArrayBuffer): Convert {\n    return new Convert(data, 'ArrayBuffer');\n  }\n\n  static base58Btc(data: string): Convert {\n    return new Convert(data, 'Base58Btc');\n  }\n\n  static base64Url(data: string): Convert {\n    return new Convert(data, 'Base64Url');\n  }\n\n  /**\n   * Reference:\n   * The BufferSource type is a TypeScript type that represents an ArrayBuffer\n   * or one of the ArrayBufferView types, such a TypedArray (e.g., Uint8Array)\n   * or a DataView.\n   */\n  static bufferSource(data: BufferSource): Convert {\n    return new Convert(data, 'BufferSource');\n  }\n\n  static hex(data: string): Convert {\n    if (typeof data !== 'string') {\n      throw new TypeError('Hex input must be a string.');\n    }\n    if (data.length % 2 !== 0) {\n      throw new TypeError('Hex input must have an even number of characters.');\n    }\n    return new Convert(data, 'Hex');\n  }\n\n  static multibase(data: string): Convert {\n    return new Convert(data, 'Multibase');\n  }\n\n  static object(data: Record<string, any>): Convert {\n    return new Convert(data, 'Object');\n  }\n\n  static string(data: string): Convert {\n    return new Convert(data, 'String');\n  }\n\n  static uint8Array(data: Uint8Array): Convert {\n    return new Convert(data, 'Uint8Array');\n  }\n\n  toArrayBuffer(): ArrayBuffer {\n    switch (this.format) {\n\n      case 'Base58Btc': {\n        return base58btc.baseDecode(this.data).buffer;\n      }\n\n      case 'Base64Url': {\n        return base64url.baseDecode(this.data).buffer;\n      }\n\n      case 'BufferSource': {\n        const dataType = universalTypeOf(this.data);\n        if (dataType === 'ArrayBuffer') {\n          // Data is already an ArrayBuffer, No conversion is necessary.\n          return this.data;\n        } else if (ArrayBuffer.isView(this.data)) {\n          // Data is a DataView or a different TypedArray (e.g., Uint16Array).\n          if (isArrayBufferSlice(this.data)) {\n            // Data is a slice of an ArrayBuffer. Return a new ArrayBuffer or ArrayBufferView of the same slice.\n            return this.data.buffer.slice(this.data.byteOffset, this.data.byteOffset + this.data.byteLength);\n          } else {\n            // Data is a whole ArrayBuffer viewed as a different TypedArray or DataView. Return the whole ArrayBuffer.\n            return this.data.buffer;\n          }\n        } else {\n          throw new TypeError(`${this.format} value is not of type: ArrayBuffer, DataView, or TypedArray.`);\n        }\n      }\n\n      case 'Hex': {\n        return this.toUint8Array().buffer;\n      }\n\n      case 'String': {\n        return this.toUint8Array().buffer;\n      }\n\n      case 'Uint8Array': {\n        return this.data.buffer;\n      }\n\n      default:\n        throw new TypeError(`Conversion from ${this.format} to ArrayBuffer is not supported.`);\n    }\n  }\n\n  toBase58Btc(): string {\n    switch (this.format) {\n\n      case 'ArrayBuffer': {\n        const u8a = new Uint8Array(this.data);\n        return base58btc.baseEncode(u8a);\n      }\n\n      case 'Multibase': {\n        return this.data.substring(1);\n      }\n\n      case 'Uint8Array': {\n        return base58btc.baseEncode(this.data);\n      }\n\n      default:\n        throw new TypeError(`Conversion from ${this.format} to Base58Btc is not supported.`);\n    }\n  }\n\n  toBase64Url(): string {\n    switch (this.format) {\n\n      case 'ArrayBuffer': {\n        const u8a = new Uint8Array(this.data);\n        return base64url.baseEncode(u8a);\n      }\n\n      case 'BufferSource': {\n        const u8a = this.toUint8Array();\n        return base64url.baseEncode(u8a);\n      }\n\n      case 'Object': {\n        const string = JSON.stringify(this.data);\n        const u8a = textEncoder.encode(string);\n        return base64url.baseEncode(u8a);\n      }\n\n      case 'String': {\n        const u8a = textEncoder.encode(this.data);\n        return base64url.baseEncode(u8a);\n      }\n\n      case 'Uint8Array': {\n        return base64url.baseEncode(this.data);\n      }\n\n      default:\n        throw new TypeError(`Conversion from ${this.format} to Base64Url is not supported.`);\n    }\n  }\n\n  toHex(): string {\n    // pre-calculating Hex values improves runtime by 6-10x.\n    const hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n\n    switch (this.format) {\n\n      case 'ArrayBuffer': {\n        const u8a = this.toUint8Array();\n        return Convert.uint8Array(u8a).toHex();\n      }\n\n      case 'Base64Url': {\n        const u8a = this.toUint8Array();\n        return Convert.uint8Array(u8a).toHex();\n      }\n\n      case 'Uint8Array': {\n        let hex = '';\n        for (let i = 0; i < this.data.length; i++) {\n          hex += hexes[this.data[i]];\n        }\n        return hex;\n      }\n\n      default:\n        throw new TypeError(`Conversion from ${this.format} to Hex is not supported.`);\n    }\n  }\n\n  toMultibase(): Multibase<any> {\n    switch (this.format) {\n      case 'Base58Btc': {\n        return `z${this.data}`;\n      }\n\n      default:\n        throw new TypeError(`Conversion from ${this.format} to Multibase is not supported.`);\n    }\n  }\n\n  toObject(): object {\n    switch (this.format) {\n\n      case 'Base64Url': {\n        const u8a = base64url.baseDecode(this.data);\n        const string = textDecoder.decode(u8a);\n        return JSON.parse(string);\n      }\n\n      case 'String': {\n        return JSON.parse(this.data);\n      }\n\n      case 'Uint8Array': {\n        const string = textDecoder.decode(this.data);\n        return JSON.parse(string);\n      }\n\n      default:\n        throw new TypeError(`Conversion from ${this.format} to Object is not supported.`);\n    }\n  }\n\n  toString(): string {\n    switch (this.format) {\n\n      case 'ArrayBuffer': {\n        return textDecoder.decode(this.data);\n      }\n\n      case 'Base64Url': {\n        const u8a = base64url.baseDecode(this.data);\n        return textDecoder.decode(u8a);\n      }\n\n      case 'Object': {\n        return JSON.stringify(this.data);\n      }\n\n      case 'Uint8Array': {\n        return textDecoder.decode(this.data);\n      }\n\n      default:\n        throw new TypeError(`Conversion from ${this.format} to String is not supported.`);\n    }\n  }\n\n  toUint8Array(): Uint8Array {\n    switch (this.format) {\n\n      case 'ArrayBuffer': {\n        // \u00C7reate Uint8Array as a view on the ArrayBuffer.\n        // Note: The Uint8Array shares the same memory as the ArrayBuffer, so this operation is very efficient.\n        return new Uint8Array(this.data);\n      }\n\n      case 'Base58Btc': {\n        return base58btc.baseDecode(this.data);\n      }\n\n      case 'Base64Url': {\n        return base64url.baseDecode(this.data);\n      }\n\n      case 'BufferSource': {\n        const dataType = universalTypeOf(this.data);\n        if (dataType === 'Uint8Array') {\n          // Data is already a Uint8Array. No conversion is necessary.\n          // Note: Uint8Array is a type of BufferSource.\n          return this.data;\n        } else if (dataType === 'ArrayBuffer') {\n          // Data is an ArrayBuffer, create Uint8Array as a view on the ArrayBuffer.\n          // Note: The Uint8Array shares the same memory as the ArrayBuffer, so this operation is very efficient.\n          return new Uint8Array(this.data);\n        } else if (ArrayBuffer.isView(this.data)) {\n          // Data is a DataView or a different TypedArray (e.g., Uint16Array).\n          return new Uint8Array(this.data.buffer, this.data.byteOffset, this.data.byteLength);\n        } else {\n          throw new TypeError(`${this.format} value is not of type: ArrayBuffer, DataView, or TypedArray.`);\n        }\n      }\n\n      case 'Hex': {\n        const u8a = new Uint8Array(this.data.length / 2);\n        for (let i = 0; i < this.data.length; i += 2) {\n          const byteValue = parseInt(this.data.substring(i, i + 2), 16);\n          if (isNaN(byteValue)) {\n            throw new TypeError('Input is not a valid hexadecimal string.');\n          }\n          u8a[i / 2] = byteValue;\n        }\n        return u8a;\n      }\n\n      case 'Object': {\n        const string = JSON.stringify(this.data);\n        return textEncoder.encode(string);\n      }\n\n      case 'String': {\n        return textEncoder.encode(this.data);\n      }\n\n      default:\n        throw new TypeError(`Conversion from ${this.format} to Uint8Array is not supported.`);\n    }\n  }\n}", "import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n", "import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n", "// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n", "const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n", "// this is dummy module overlayed by interface.ts\n", "// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n", "/**\n * isArrayBufferSlice\n *\n * Checks if the ArrayBufferView represents a slice (subarray or a subview)\n * of an ArrayBuffer.\n *\n * An ArrayBufferView (TypedArray or DataView) can represent a portion of an\n * ArrayBuffer - such a view is said to be a \"slice\" of the original buffer.\n * This can occur when the `subarray` or `slice` method is called on a\n * TypedArray or when a DataView is created with a byteOffset and/or\n * byteLength that doesn't cover the full ArrayBuffer.\n *\n * @param arrayBufferView - The ArrayBufferView to be checked\n * @returns true if the ArrayBufferView represents a slice of an ArrayBuffer; false otherwise.\n */\nexport function isArrayBufferSlice(arrayBufferView: ArrayBufferView): boolean {\n  return arrayBufferView.byteOffset !== 0 || arrayBufferView.byteLength !== arrayBufferView.buffer.byteLength;\n}\n\n/**\n * isDefined\n *\n * Utility function to check if a variable is neither null nor undefined.\n * This function helps in making TypeScript infer the type of the variable\n * as being defined, excluding `null` and `undefined`.\n *\n * The function uses strict equality (`!==`) for the comparison, ensuring\n * that the variable is not just falsy (like an empty string or zero),\n * but is truly either `null` or `undefined`.\n *\n * @param arg - The variable to be checked\n * @returns true if the variable is neither `null` nor `undefined`\n */\nexport function isDefined<T>(arg: T): arg is Exclude<T, null | undefined> {\n  return arg !== null && typeof arg !== 'undefined';\n}\n\n/**\n * universalTypeOf\n *\n * Why does this function exist?\n *\n * You can typically check if a value is of a particular type, such as\n * Uint8Array or ArrayBuffer, by using the `instanceof` operator. The\n * `instanceof` operator checks the prototype property of a constructor\n * in the object's prototype chain.\n *\n * However, there is a caveat with the `instanceof` check if the value\n * was created from a different JavaScript context (like an iframe or\n * a web worker). In those cases, the `instanceof` check might fail\n * because each context has a different global object, and therefore,\n * different built-in constructor functions.\n *\n * The `typeof` operator provides information about the type of the\n * operand in a less detailed way. For basic data types like number,\n * string, boolean, and undefined, the `typeof` operator works as\n * expected.  However, for objects, including arrays and null,\n * it always returns \"object\".  For functions, it returns \"function\".\n * So, while `typeof` is good for basic type checking, it doesn't\n * give detailed information about complex data types.\n *\n * Unlike `instanceof` and `typeof`, `Object.prototype.toString.call(value)`\n * can ensure a consistent result across different JavaScript\n * contexts.\n *\n * Credit for inspiration:\n *   Angus Croll\n *   https://github.com/angus-c\n *   https://javascriptweblog.wordpress.com/2011/08/08/fixing-the-javascript-typeof-operator/\n */\nexport function universalTypeOf(value: unknown) {\n  // Returns '[Object Type]' string.\n  const typeString = Object.prototype.toString.call(value);\n  // Returns ['Object', 'Type'] array or null.\n  const match = typeString.match(/\\s([a-zA-Z0-9]+)/);\n  // Deconstructs the array and gets just the type from index 1.\n  const [_, type] = match as RegExpMatchArray;\n\n  return type;\n}", "import { varint } from 'multiformats';\n\nexport type MulticodecCode = number;\n\nexport type MulticodecDefinition<MulticodecCode> = {\n  code: MulticodecCode;\n  // codeBytes: Uint8Array;\n  name: string;\n}\n\n/**\n * The `Multicodec` class provides an interface to prepend binary data\n * with a prefix that identifies the data that follows.\n * https://github.com/multiformats/multicodec/blob/master/table.csv\n *\n * Multicodec is a self-describing multiformat, it wraps other formats with\n * a tiny bit of self-description. A multicodec identifier is a\n * varint (variable integer) that indicates the format of the data.\n *\n * The canonical table of multicodecs can be access at the following URL:\n * https://github.com/multiformats/multicodec/blob/master/table.csv\n *\n * Example usage:\n *\n * ```ts\n * Multicodec.registerCodec({ code: 0xed, name: 'ed25519-pub' });\n * const prefixedData = Multicodec.addPrefix({ code: 0xed, data: new Uint8Array(32) });\n * ```\n */\nexport class Multicodec {\n  /**\n   * A static field containing a map of codec codes to their corresponding names.\n   */\n  static codeToName = new Map<MulticodecCode, string>();\n\n  /**\n   * A static field containing a map of codec names to their corresponding codes.\n   */\n  static nameToCode = new Map<string, MulticodecCode>();\n\n  /**\n   * Adds a multicodec prefix to input data.\n   *\n   * @param options - The options for adding a prefix.\n   * @param options.code - The codec code. Either the code or name must be provided.\n   * @param options.name - The codec name. Either the code or name must be provided.\n   * @param options.data - The data to be prefixed.\n   * @returns The data with the added prefix as a Uint8Array.\n   */\n  public static addPrefix(options: {\n    code?: MulticodecCode,\n    data: Uint8Array,\n    name?: string,\n  }): Uint8Array {\n    let { code, data, name } = options;\n\n    if (!(name ? !code : code)) {\n      throw new Error(`Either 'name' or 'code' must be defined, but not both.`);\n    }\n\n    // If code was given, confirm it exists, or lookup code by name.\n    code = Multicodec.codeToName.has(code!) ? code : Multicodec.nameToCode.get(name!);\n\n    // Throw error if a registered Codec wasn't found.\n    if (code === undefined) {\n      throw new Error(`Unsupported multicodec: ${options.name ?? options.code}`);\n    }\n\n    // Create a new array to store the prefix and input data.\n    const prefixLength = varint.encodingLength(code);\n    const dataWithPrefix = new Uint8Array(prefixLength + data.byteLength);\n    dataWithPrefix.set(data, prefixLength);\n\n    // Prepend the prefix.\n    varint.encodeTo(code, dataWithPrefix);\n\n    return dataWithPrefix;\n  }\n\n  /**\n   * Get the Multicodec code from given prefixed data.\n   *\n   * @param options - The options for getting the codec code.\n   * @param options.prefixedData - The data to extract the codec code from.\n   * @returns - The Multicodec code as a number.\n   */\n  public static getCodeFromData(options: {\n    prefixedData: Uint8Array\n  }): MulticodecCode {\n    const { prefixedData } = options;\n    const [code, _] = varint.decode(prefixedData);\n\n    return code;\n  }\n\n  /**\n   * Get the Multicodec code from given Multicodec name.\n   *\n   * @param options - The options for getting the codec code.\n   * @param options.name - The name to lookup.\n   * @returns - The Multicodec code as a number.\n   */\n  public static getCodeFromName(options: {\n    name: string\n  }): MulticodecCode {\n    const { name } = options;\n\n    // Throw error if a registered Codec wasn't found.\n    const code = Multicodec.nameToCode.get(name);\n    if (code === undefined) {\n      throw new Error(`Unsupported multicodec: ${name}`);\n    }\n\n    return code;\n  }\n\n  /**\n   * Get the Multicodec name from given Multicodec code.\n   *\n   * @param options - The options for getting the codec name.\n   * @param options.name - The code to lookup.\n   * @returns - The Multicodec name as a string.\n   */\n  public static getNameFromCode(options: {\n    code: MulticodecCode\n  }): string {\n    const { code } = options;\n\n    // Throw error if a registered Codec wasn't found.\n    const name = Multicodec.codeToName.get(code);\n    if (name === undefined) {\n      throw new Error(`Unsupported multicodec: ${code}`);\n    }\n\n    return name;\n  }\n\n  /**\n   * Registers a new codec in the Multicodec class.\n   *\n   * @param codec - The codec to be registered.\n   */\n  public static registerCodec(codec: MulticodecDefinition<MulticodecCode>) {\n    Multicodec.codeToName.set(codec.code, codec.name);\n    Multicodec.nameToCode.set(codec.name, codec.code);\n  }\n\n  /**\n   * Returns the data with the Multicodec prefix removed.\n   *\n   * @param refixedData - The data to extract the codec code from.\n   * @returns {Uint8Array}\n   */\n  public static removePrefix(options: {\n    prefixedData: Uint8Array\n  }): { code: MulticodecCode, name: string, data: Uint8Array } {\n    const { prefixedData } = options;\n    const [code, codeByteLength] = varint.decode(prefixedData);\n\n    // Throw error if a registered Codec wasn't found.\n    const name = Multicodec.codeToName.get(code);\n    if (name === undefined) {\n      throw new Error(`Unsupported multicodec: ${code}`);\n    }\n\n    return { code, data: prefixedData.slice(codeByteLength), name };\n  }\n}\n\n// Pre-defined registered codecs:\nMulticodec.registerCodec({ code: 0xed, name: 'ed25519-pub' });\nMulticodec.registerCodec({ code: 0x1300, name: 'ed25519-priv' });\nMulticodec.registerCodec({ code: 0xec, name: 'x25519-pub' });\nMulticodec.registerCodec({ code: 0x1302, name: 'x25519-priv' });\nMulticodec.registerCodec({ code: 0xe7, name: 'secp256k1-pub' });\nMulticodec.registerCodec({ code: 0x1301, name: 'secp256k1-priv' });", "import { CID } from './cid.js'\nimport * as varint from './varint.js'\nimport * as bytes from './bytes.js'\nimport * as hasher from './hashes/hasher.js'\nimport * as digest from './hashes/digest.js'\n// This way TS will also expose all the types from module\nexport * from './interface.js'\n\nexport { CID, hasher, digest, varint, bytes }\n", "import * as varint from './varint.js'\nimport * as Digest from './hashes/digest.js'\nimport { base58btc } from './bases/base58.js'\nimport { base32 } from './bases/base32.js'\nimport { coerce } from './bytes.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from \"./link/interface.js\"\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nexport const format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || base32.encoder)\n      )\n  }\n}\n\n/**\n * @template {API.UnknownLink} Link\n * @param {Link} link\n * @returns {API.LinkJSON<Link>}\n */\nexport const toJSON = (link) => ({\n  '/': format(link)\n})\n\n/**\n * @template {API.UnknownLink} Link\n * @param {API.LinkJSON<Link>} json\n */\nexport const fromJSON = (json) =>\n  CID.parse(json['/'])\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nexport class CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   *\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  toJSON () {\n    return { '/': format(this) }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (Digest.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || base58btc\n      return [\n        /** @type {Prefix} */ (base58btc.prefix),\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base || base58btc\n      return [/** @type {Prefix} */(base58btc.prefix), decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base || base32\n      return [/** @type {Prefix} */(base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n", "import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n", "var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n", "import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n", "import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n", "// this is dummy module overlayed by interface.ts\n", "import * as Digest from './digest.js'\n\n/**\n * @template {string} Name\n * @template {number} Code\n * @param {object} options\n * @param {Name} options.name\n * @param {Code} options.code\n * @param {(input: Uint8Array) => Await<Uint8Array>} options.encode\n */\nexport const from = ({ name, code, encode }) => new Hasher(name, code, encode)\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n *\n * @template {string} Name\n * @template {number} Code\n * @class\n * @implements {MultihashHasher<Code>}\n */\nexport class Hasher {\n  /**\n   *\n   * @param {Name} name\n   * @param {Code} code\n   * @param {(input: Uint8Array) => Await<Uint8Array>} encode\n   */\n  constructor (name, code, encode) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  /**\n   * @param {Uint8Array} input\n   * @returns {Await<Digest.Digest<Code, number>>}\n   */\n  digest (input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * @template {number} Alg\n * @typedef {import('./interface.js').MultihashHasher} MultihashHasher\n */\n\n/**\n * @template T\n * @typedef {Promise<T>|T} Await\n */\n", "// this is dummy module overlayed by interface.ts\n", "/**\n * Checks whether the given object has any properties.\n */\nexport function isEmptyObject(obj: unknown): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  if (Object.getOwnPropertySymbols(obj).length > 0) {\n    return false;\n  }\n\n  return Object.keys(obj).length === 0;\n}\n\n/**\n * Recursively removes all properties with an empty object or array as its value from the given object.\n */\nexport function removeEmptyObjects(obj: Record<string, unknown>): void {\n  Object.keys(obj).forEach(key => {\n    if (typeof(obj[key]) === 'object') {\n      // recursive remove empty object or array properties in nested objects\n      removeEmptyObjects(obj[key] as Record<string, unknown>);\n    }\n\n    if (isEmptyObject(obj[key])) {\n      delete obj[key];\n    }\n  });\n}\n\n/**\n * Recursively removes all properties with `undefined` as its value from the given object.\n */\nexport function removeUndefinedProperties(obj: Record<string, unknown>): void {\n  Object.keys(obj).forEach(key => {\n    if (obj[key] === undefined) {\n      delete obj[key];\n    } else if (typeof(obj[key]) === 'object') {\n      removeUndefinedProperties(obj[key] as Record<string, unknown>); // recursive remove `undefined` properties in nested objects\n    }\n  });\n}", "import { Level } from 'level';\n\nimport type { KeyValueStore } from './types.js';\n\nexport class LevelStore implements KeyValueStore<string, any> {\n  private store: Level<string, string>;\n\n  constructor(location = 'DATASTORE') {\n    this.store = new Level(location);\n  }\n\n  async clear(): Promise<void> {\n    await this.store.clear();\n  }\n\n  async close(): Promise<void> {\n    await this.store.close();\n  }\n\n  async delete(key: string): Promise<boolean> {\n    await this.store.del(key);\n    return true;\n  }\n\n  async get(key: string): Promise<any> {\n    return await this.store.get(key);\n  }\n\n  async set(key: string, value: any): Promise<void> {\n    await this.store.put(key, value);\n  }\n}\n\n/**\n * The `MemoryStore` class is an implementation of\n * `KeyValueStore` that holds data in memory.\n *\n * It provides a basic key-value store that works synchronously and keeps all\n * data in memory. This can be used for testing, or for handling small amounts\n * of data with simple key-value semantics.\n *\n * Example usage:\n *\n * ```ts\n * const memoryStore = new MemoryStore<string, number>();\n * await memoryStore.set(\"key1\", 1);\n * const value = await memoryStore.get(\"key1\");\n * console.log(value); // 1\n * ```\n *\n * @public\n */\nexport class MemoryStore<K, V> implements KeyValueStore<K, V> {\n  /**\n   * A private field that contains the Map used as the key-value store.\n   */\n  private store: Map<K, V> = new Map();\n\n  /**\n   * Clears all entries in the key-value store.\n   *\n   * @returns A Promise that resolves when the operation is complete.\n   */\n  async clear(): Promise<void> {\n    this.store.clear();\n  }\n\n  /**\n   * This operation is no-op for `MemoryStore`\n   * and will log a warning if called.\n   */\n  async close(): Promise<void> {\n    /** no-op */\n  }\n\n  /**\n   * Deletes an entry from the key-value store by its key.\n   *\n   * @param id - The key of the entry to delete.\n   * @returns A Promise that resolves to a boolean indicating whether the entry was successfully deleted.\n   */\n  async delete(id: K): Promise<boolean> {\n    return this.store.delete(id);\n  }\n\n  /**\n   * Retrieves the value of an entry by its key.\n   *\n   * @param id - The key of the entry to retrieve.\n   * @returns A Promise that resolves to the value of the entry, or `undefined` if the entry does not exist.\n   */\n  async get(id: K): Promise<V | undefined> {\n    return this.store.get(id);\n  }\n\n  /**\n   * Checks for the presence of an entry by key.\n   *\n   * @param id - The key to check for the existence of.\n   * @returns A Promise that resolves to a boolean indicating whether an element with the specified key exists or not.\n   */\n  async has(id: K): Promise<boolean> {\n    return this.store.has(id);\n  }\n\n  /**\n   * Retrieves all values in the key-value store.\n   *\n   * @returns A Promise that resolves to an array of all values in the store.\n   */\n  async list(): Promise<V[]> {\n    return Array.from(this.store.values());\n  }\n\n  /**\n   * Sets the value of an entry in the key-value store.\n   *\n   * @param id - The key of the entry to set.\n   * @param key - The new value for the entry.\n   * @returns A Promise that resolves when the operation is complete.\n   */\n  async set(id: K, key: V): Promise<void> {\n    this.store.set(id, key);\n  }\n}", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { InvalidAccessError } from '../errors.js';\nimport { BaseEllipticCurveAlgorithm } from './base.js';\nimport { checkRequiredProperty } from '../../utils.js';\nexport class BaseEcdhAlgorithm extends BaseEllipticCurveAlgorithm {\n    constructor() {\n        super(...arguments);\n        this.name = 'ECDH';\n        this.keyUsages = {\n            privateKey: ['deriveBits', 'deriveKey'],\n            publicKey: ['deriveBits', 'deriveKey'],\n        };\n    }\n    checkAlgorithmOptions(options) {\n        const { algorithm, baseKey } = options;\n        // Algorithm specified in the operation must match the algorithm implementation processing the operation.\n        this.checkAlgorithmName({ algorithmName: algorithm.name });\n        // The algorithm object must contain a publicKey property.\n        checkRequiredProperty({ property: 'publicKey', inObject: algorithm });\n        // The publicKey object must be a CryptoKey.\n        this.checkCryptoKey({ key: algorithm.publicKey });\n        // The CryptoKey object must be a public key.\n        this.checkKeyType({ keyType: algorithm.publicKey.type, allowedKeyType: 'public' });\n        // The publicKey algorithm must match the algorithm implementation processing the operation.\n        this.checkKeyAlgorithm({ keyAlgorithmName: algorithm.publicKey.algorithm.name });\n        // The options object must contain a baseKey property.\n        checkRequiredProperty({ property: 'baseKey', inObject: options });\n        // The baseKey object must be a CryptoKey.\n        this.checkCryptoKey({ key: baseKey });\n        // The baseKey algorithm must match the algorithm implementation processing the operation.\n        this.checkKeyAlgorithm({ keyAlgorithmName: baseKey.algorithm.name });\n        // The CryptoKey object must be a private key.\n        this.checkKeyType({ keyType: baseKey.type, allowedKeyType: 'private' });\n        // The public and base key named curves must match.\n        if (('namedCurve' in algorithm.publicKey.algorithm) && ('namedCurve' in baseKey.algorithm)\n            && (algorithm.publicKey.algorithm.namedCurve !== baseKey.algorithm.namedCurve)) {\n            throw new InvalidAccessError('The named curve of the publicKey and baseKey must match.');\n        }\n    }\n    sign() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new InvalidAccessError(`Requested operation 'sign' is not valid for ${this.name} keys.`);\n        });\n    }\n    verify() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new InvalidAccessError(`Requested operation 'verify' is not valid for ${this.name} keys.`);\n        });\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { InvalidAccessError } from '../errors.js';\nimport { BaseEllipticCurveAlgorithm } from './base.js';\nimport { checkValidProperty, checkRequiredProperty } from '../../utils.js';\nexport class BaseEcdsaAlgorithm extends BaseEllipticCurveAlgorithm {\n    constructor() {\n        super(...arguments);\n        this.name = 'ECDSA';\n        this.keyUsages = {\n            privateKey: ['sign'],\n            publicKey: ['verify'],\n        };\n    }\n    checkAlgorithmOptions(options) {\n        const { algorithm } = options;\n        // Algorithm specified in the operation must match the algorithm implementation processing the operation.\n        this.checkAlgorithmName({ algorithmName: algorithm.name });\n        // The algorithm object must contain a hash property.\n        checkRequiredProperty({ property: 'hash', inObject: algorithm });\n        // The hash algorithm specified must be supported by the algorithm implementation processing the operation.\n        checkValidProperty({ property: algorithm.hash, allowedProperties: this.hashAlgorithms });\n    }\n    deriveBits() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new InvalidAccessError(`Requested operation 'deriveBits' is not valid for ${this.name} keys.`);\n        });\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { InvalidAccessError } from '../errors.js';\nimport { BaseEllipticCurveAlgorithm } from './base.js';\nexport class BaseEdDsaAlgorithm extends BaseEllipticCurveAlgorithm {\n    constructor() {\n        super(...arguments);\n        this.name = 'EdDSA';\n        this.keyUsages = {\n            privateKey: ['sign'],\n            publicKey: ['verify'],\n        };\n    }\n    checkAlgorithmOptions(options) {\n        const { algorithm } = options;\n        // Algorithm specified in the operation must match the algorithm implementation processing the operation.\n        this.checkAlgorithmName({ algorithmName: algorithm.name });\n    }\n    deriveBits() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new InvalidAccessError(`Requested operation 'deriveBits' is not valid for ${this.name} keys.`);\n        });\n    }\n}\n", "export * from './ctr.js';\nexport * from './base.js';\n", "import { universalTypeOf } from '@web5/common';\nimport { BaseAesAlgorithm } from './base.js';\nimport { OperationError } from '../errors.js';\nimport { checkRequiredProperty } from '../../utils.js';\nexport class BaseAesCtrAlgorithm extends BaseAesAlgorithm {\n    constructor() {\n        super(...arguments);\n        this.name = 'AES-CTR';\n        this.keyUsages = ['encrypt', 'decrypt', 'wrapKey', 'unwrapKey'];\n    }\n    checkAlgorithmOptions(options) {\n        const { algorithm, key } = options;\n        // Algorithm specified in the operation must match the algorithm implementation processing the operation.\n        this.checkAlgorithmName({ algorithmName: algorithm.name });\n        // The algorithm object must contain a counter property.\n        checkRequiredProperty({ property: 'counter', inObject: algorithm });\n        // The counter must a Uint8Array.\n        if (!(universalTypeOf(algorithm.counter) === 'Uint8Array')) {\n            throw new TypeError(`Algorithm 'counter' is not of type: Uint8Array.`);\n        }\n        // The initial value of the counter block must be 16 bytes long (the AES block size).\n        if (algorithm.counter.byteLength !== 16) {\n            throw new OperationError(`Algorithm 'counter' must have length: 16 bytes.`);\n        }\n        // The algorithm object must contain a length property.\n        checkRequiredProperty({ property: 'length', inObject: algorithm });\n        // The length specified must be a number.\n        if (universalTypeOf(algorithm.length) !== 'Number') {\n            throw new TypeError(`Algorithm 'length' is not of type: Number.`);\n        }\n        // The length specified must be between 1 and 128.\n        if ((algorithm.length < 1 || algorithm.length > 128)) {\n            throw new OperationError(`Algorithm 'length' should be in the range: 1 to 128.`);\n        }\n        // The options object must contain a key property.\n        checkRequiredProperty({ property: 'key', inObject: options });\n        // The key object must be a CryptoKey.\n        this.checkCryptoKey({ key });\n        // The key algorithm must match the algorithm implementation processing the operation.\n        this.checkKeyAlgorithm({ keyAlgorithmName: key.algorithm.name });\n        // The CryptoKey object must be a secret key.\n        this.checkKeyType({ keyType: key.type, allowedKeyType: 'secret' });\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { universalTypeOf } from '@web5/common';\nimport { checkRequiredProperty } from '../../utils.js';\nimport { CryptoAlgorithm } from '../crypto-algorithm.js';\nimport { InvalidAccessError, OperationError } from '../errors.js';\nexport class BaseAesAlgorithm extends CryptoAlgorithm {\n    checkGenerateKey(options) {\n        const { algorithm, keyUsages } = options;\n        // Algorithm specified in the operation must match the algorithm implementation processing the operation.\n        this.checkAlgorithmName({ algorithmName: algorithm.name });\n        // The algorithm object must contain a length property.\n        checkRequiredProperty({ property: 'length', inObject: algorithm });\n        // The length specified must be a number.\n        if (universalTypeOf(algorithm.length) !== 'Number') {\n            throw new TypeError(`Algorithm 'length' is not of type: Number.`);\n        }\n        // The length specified must be one of the allowed bit lengths for AES.\n        if (![128, 192, 256].includes(algorithm.length)) {\n            throw new OperationError(`Algorithm 'length' must be 128, 192, or 256.`);\n        }\n        // The key usages specified must be permitted by the algorithm implementation processing the operation.\n        this.checkKeyUsages({ keyUsages, allowedKeyUsages: this.keyUsages });\n    }\n    deriveBits() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new InvalidAccessError(`Requested operation 'deriveBits' is not valid for ${this.name} keys.`);\n        });\n    }\n    sign() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new InvalidAccessError(`Requested operation 'sign' is not valid for ${this.name} keys.`);\n        });\n    }\n    verify() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new InvalidAccessError(`Requested operation 'verify' is not valid for ${this.name} keys.`);\n        });\n    }\n}\n", "export class CryptoKey {\n    constructor(algorithm, extractable, material, type, usages) {\n        this.algorithm = algorithm;\n        this.extractable = extractable;\n        this.material = material;\n        this.type = type;\n        this.usages = usages;\n        // ensure values are not writeable\n        Object.defineProperties(this, {\n            // TODO\n            // These properties can't be fixed immediately on creation of the\n            // object because the implementation may build it up in stages.\n            // At some point in the operations before returning a key we should\n            // freeze the object to prevent further manipulation.\n            type: {\n                enumerable: true,\n                writable: false,\n                value: type\n            },\n            extractable: {\n                enumerable: true,\n                writable: true,\n                value: extractable\n            },\n            algorithm: {\n                enumerable: true,\n                writable: false,\n                value: algorithm\n            },\n            usages: {\n                enumerable: true,\n                writable: true,\n                value: usages\n            },\n            // this is the \"key material\" used internally\n            // it is not enumerable, but we need it to be\n            // accessible by algorithm implementations\n            material: {\n                enumerable: false,\n                writable: false,\n                value: material\n            }\n        });\n    }\n}\n", "export * from './pbkdf2.js';\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { InvalidAccessError, OperationError } from '../errors.js';\nimport { CryptoAlgorithm } from '../crypto-algorithm.js';\nimport { checkRequiredProperty, checkValidProperty } from '../../utils.js';\nimport { universalTypeOf } from '@web5/common';\nexport class BasePbkdf2Algorithm extends CryptoAlgorithm {\n    constructor() {\n        super(...arguments);\n        this.name = 'PBKDF2';\n        this.keyUsages = ['deriveBits', 'deriveKey'];\n    }\n    checkAlgorithmOptions(options) {\n        const { algorithm, baseKey } = options;\n        // Algorithm specified in the operation must match the algorithm implementation processing the operation.\n        this.checkAlgorithmName({ algorithmName: algorithm.name });\n        // The algorithm object must contain a hash property.\n        checkRequiredProperty({ property: 'hash', inObject: algorithm });\n        // The hash algorithm specified must be supported by the algorithm implementation processing the operation.\n        checkValidProperty({ property: algorithm.hash, allowedProperties: this.hashAlgorithms });\n        // The algorithm object must contain a iterations property.\n        checkRequiredProperty({ property: 'iterations', inObject: algorithm });\n        // The iterations value must a number.\n        if (!(universalTypeOf(algorithm.iterations) === 'Number')) {\n            throw new TypeError(`Algorithm 'iterations' is not of type: Number.`);\n        }\n        // The iterations value must be greater than 0.\n        if (algorithm.iterations < 1) {\n            throw new OperationError(`Algorithm 'iterations' must be > 0.`);\n        }\n        // The algorithm object must contain a salt property.\n        checkRequiredProperty({ property: 'salt', inObject: algorithm });\n        // The salt must a Uint8Array.\n        if (!(universalTypeOf(algorithm.salt) === 'Uint8Array')) {\n            throw new TypeError(`Algorithm 'salt' is not of type: Uint8Array.`);\n        }\n        // The options object must contain a baseKey property.\n        checkRequiredProperty({ property: 'baseKey', inObject: options });\n        // The baseKey object must be a CryptoKey.\n        this.checkCryptoKey({ key: baseKey });\n        // The baseKey algorithm must match the algorithm implementation processing the operation.\n        this.checkKeyAlgorithm({ keyAlgorithmName: baseKey.algorithm.name });\n    }\n    checkImportKey(options) {\n        const { algorithm, format, extractable, keyUsages } = options;\n        // Algorithm specified in the operation must match the algorithm implementation processing the operation.\n        this.checkAlgorithmName({ algorithmName: algorithm.name });\n        // The format specified must be 'raw'.\n        if (format !== 'raw') {\n            throw new SyntaxError(`Format '${format}' not supported. Only 'raw' is supported.`);\n        }\n        // The extractable value specified must be false.\n        if (extractable !== false) {\n            throw new SyntaxError(`Extractable '${extractable}' not supported. Only 'false' is supported.`);\n        }\n        // The key usages specified must be permitted by the algorithm implementation processing the operation.\n        this.checkKeyUsages({ keyUsages, allowedKeyUsages: this.keyUsages });\n    }\n    decrypt() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new InvalidAccessError(`Requested operation 'decrypt' is not valid for ${this.name} keys.`);\n        });\n    }\n    encrypt() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new InvalidAccessError(`Requested operation 'encrypt' is not valid for ${this.name} keys.`);\n        });\n    }\n    generateKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new InvalidAccessError(`Requested operation 'generateKey' is not valid for ${this.name} keys.`);\n        });\n    }\n    sign() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new InvalidAccessError(`Requested operation 'sign' is not valid for ${this.name} keys.`);\n        });\n    }\n    verify() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new InvalidAccessError(`Requested operation 'verify' is not valid for ${this.name} keys.`);\n        });\n    }\n}\n", "export * from './ecdh.js';\nexport * from './ecdsa.js';\nexport * from './eddsa.js';\nexport * from './pbkdf2.js';\nexport * from './aes-ctr.js';\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isBytesKeyPair } from '../utils.js';\nimport { Secp256k1, X25519 } from '../crypto-primitives/index.js';\nimport { CryptoKey, BaseEcdhAlgorithm, OperationError } from '../algorithms-api/index.js';\nexport class EcdhAlgorithm extends BaseEcdhAlgorithm {\n    constructor() {\n        super(...arguments);\n        this.namedCurves = ['secp256k1', 'X25519'];\n    }\n    deriveBits(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { algorithm, baseKey, length } = options;\n            this.checkAlgorithmOptions({ algorithm, baseKey });\n            // The base key must be allowed to be used for deriveBits operations.\n            this.checkKeyUsages({ keyUsages: ['deriveBits'], allowedKeyUsages: baseKey.usages });\n            // The public key must be allowed to be used for deriveBits operations.\n            this.checkKeyUsages({ keyUsages: ['deriveBits'], allowedKeyUsages: algorithm.publicKey.usages });\n            let sharedSecret;\n            const ownKeyAlgorithm = baseKey.algorithm; // Type guard.\n            switch (ownKeyAlgorithm.namedCurve) {\n                case 'secp256k1': {\n                    const ownPrivateKey = baseKey.material;\n                    const otherPartyPublicKey = algorithm.publicKey.material;\n                    sharedSecret = yield Secp256k1.sharedSecret({\n                        privateKey: ownPrivateKey,\n                        publicKey: otherPartyPublicKey\n                    });\n                    break;\n                }\n                case 'X25519': {\n                    const ownPrivateKey = baseKey.material;\n                    const otherPartyPublicKey = algorithm.publicKey.material;\n                    sharedSecret = yield X25519.sharedSecret({\n                        privateKey: ownPrivateKey,\n                        publicKey: otherPartyPublicKey\n                    });\n                    break;\n                }\n                default:\n                    throw new TypeError(`Out of range: '${ownKeyAlgorithm.namedCurve}'. Must be one of '${this.namedCurves.join(', ')}'`);\n            }\n            // Length is null, return the full derived secret.\n            if (length === null)\n                return sharedSecret;\n            // If the length is not a multiple of 8, throw.\n            if (length && length % 8 !== 0)\n                throw new OperationError(`To be compatible with all browsers, 'length' must be a multiple of 8.`);\n            // Convert length from bits to bytes.\n            const lengthInBytes = length / 8;\n            // If length (converted to bytes) is larger than the derived secret, throw.\n            if (sharedSecret.byteLength < lengthInBytes)\n                throw new OperationError(`Requested 'length' exceeds the byte length of the derived secret.`);\n            // Otherwise, either return the secret or a truncated slice.\n            return lengthInBytes === sharedSecret.byteLength ?\n                sharedSecret :\n                sharedSecret.slice(0, lengthInBytes);\n        });\n    }\n    generateKey(options) {\n        var _a;\n        var _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { algorithm, extractable, keyUsages } = options;\n            this.checkGenerateKey({ algorithm, keyUsages });\n            let keyPair;\n            let cryptoKeyPair;\n            switch (algorithm.namedCurve) {\n                case 'secp256k1': {\n                    (_a = (_b = algorithm).compressedPublicKey) !== null && _a !== void 0 ? _a : (_b.compressedPublicKey = true);\n                    keyPair = yield Secp256k1.generateKeyPair({\n                        compressedPublicKey: algorithm.compressedPublicKey\n                    });\n                    break;\n                }\n                case 'X25519': {\n                    keyPair = yield X25519.generateKeyPair();\n                    break;\n                }\n                // Default case not needed because checkGenerateKey() already validates the specified namedCurve is supported.\n            }\n            if (!isBytesKeyPair(keyPair)) {\n                throw new Error('Operation failed to generate key pair.');\n            }\n            cryptoKeyPair = {\n                privateKey: new CryptoKey(algorithm, extractable, keyPair.privateKey, 'private', this.keyUsages.privateKey),\n                publicKey: new CryptoKey(algorithm, true, keyPair.publicKey, 'public', this.keyUsages.publicKey)\n            };\n            return cryptoKeyPair;\n        });\n    }\n}\n", "export * from './pbkdf2.js';\nexport * from './x25519.js';\nexport * from './aes-ctr.js';\nexport * from './aes-gcm.js';\nexport * from './ed25519.js';\nexport * from './concat-kdf.js';\nexport * from './secp256k1.js';\nexport * from './xchacha20.js';\nexport * from './xchacha20-poly1305.js';\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { crypto } from '@noble/hashes/crypto';\nimport { isWebCryptoSupported } from '../utils.js';\nexport class Pbkdf2 {\n    static deriveKey(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isWebCryptoSupported()) {\n                return Pbkdf2.deriveKeyWithWebCrypto(options);\n            }\n            else {\n                return Pbkdf2.deriveKeyWithNodeCrypto(options);\n            }\n        });\n    }\n    static deriveKeyWithNodeCrypto(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { password, salt, iterations } = options;\n            // Map the hash string to the node:crypto equivalent.\n            const hashToNodeCryptoMap = {\n                'SHA-256': 'sha256',\n                'SHA-384': 'sha384',\n                'SHA-512': 'sha512'\n            };\n            const hash = hashToNodeCryptoMap[options.hash];\n            // Convert length from bits to bytes.\n            const length = options.length / 8;\n            // Dynamically import the `crypto` package.\n            const { pbkdf2 } = yield import('node:crypto');\n            return new Promise((resolve) => {\n                pbkdf2(password, salt, iterations, length, hash, (err, derivedKey) => {\n                    if (!err) {\n                        resolve(new Uint8Array(derivedKey));\n                    }\n                });\n            });\n        });\n    }\n    static deriveKeyWithWebCrypto(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { hash, password, salt, iterations, length } = options;\n            // Import the password as a raw key for use with the Web Crypto API.\n            const webCryptoKey = yield crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveBits']);\n            const derivedKeyBuffer = yield crypto.subtle.deriveBits({ name: 'PBKDF2', hash, salt, iterations }, webCryptoKey, length);\n            // Convert from ArrayBuffer to Uint8Array.\n            const derivedKey = new Uint8Array(derivedKeyBuffer);\n            return derivedKey;\n        });\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { x25519 } from '@noble/curves/ed25519';\n/**\n * The `X25519` class provides an interface for X25519 (Curve25519) key pair\n * generation, public key computation, and shared secret computation. The class\n * uses the '@noble/curves/ed25519' package for the cryptographic operations.\n *\n * All methods of this class are asynchronous and return Promises. They all use\n * the Uint8Array type for keys and data, providing a consistent\n * interface for working with binary data.\n *\n * Example usage:\n *\n * ```ts\n * const ownKeyPair = await X25519.generateKeyPair();\n * const otherPartyKeyPair = await X25519.generateKeyPair();\n * const sharedSecret = await X25519.sharedSecret({\n *   privateKey : ownKeyPair.privateKey,\n *   publicKey  : otherPartyKeyPair.publicKey\n * });\n * ```\n */\nexport class X25519 {\n    /**\n     * Generates a key pair for X25519 (private and public key).\n     *\n     * @returns A Promise that resolves to a BytesKeyPair object.\n     */\n    static generateKeyPair() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Generate the private key and compute its public key.\n            const privateKey = x25519.utils.randomPrivateKey();\n            const publicKey = x25519.getPublicKey(privateKey);\n            const keyPair = {\n                privateKey: privateKey,\n                publicKey: publicKey\n            };\n            return keyPair;\n        });\n    }\n    /**\n     * Computes a public key given a private key.\n     *\n     * @param options - The options for the public key computation operation.\n     * @param options.privateKey - The private key used to compute the public key.\n     * @returns A Promise that resolves to the computed public key as a Uint8Array.\n     */\n    static getPublicKey(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { privateKey } = options;\n            // Compute public key.\n            const publicKey = x25519.getPublicKey(privateKey);\n            return publicKey;\n        });\n    }\n    /**\n     * Generates a RFC6090 ECDH shared secret given the private key of one party\n     * and the public key of another party.\n     *\n     * @param options - The options for the shared secret computation operation.\n     * @param options.privateKey - The private key of one party.\n     * @param options.publicKey - The public key of the other party.\n     * @returns A Promise that resolves to the computed shared secret as a Uint8Array.\n     */\n    static sharedSecret(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { privateKey, publicKey } = options;\n            const sharedSecret = x25519.getSharedSecret(privateKey, publicKey);\n            return sharedSecret;\n        });\n    }\n    /**\n     * Note that this method is currently unimplemented because the @noble/curves\n     * library does not yet provide a mechanism for checking whether a point\n     * belongs to the Curve25519. Therefore, it currently throws an error whenever\n     * it is called.\n     *\n     * @param options - The options for the key validation operation.\n     * @param options.key - The key to validate.\n     * @throws {Error} If the method is called because it is not yet implemented.\n     * @returns A Promise that resolves to void.\n     */\n    static validatePublicKey(_options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Implement once/if @noble/curves library implements checking\n            // proper points on the Montgomery curve.\n            throw new Error(`Not implemented: 'validatePublicKey()'`);\n        });\n    }\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { ExtPointType, twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport {\n  bytesToHex,\n  bytesToNumberLE,\n  ensureBytes,\n  equalBytes,\n  Hex,\n  numberToBytesLE,\n} from './abstract/utils.js';\nimport { createHasher, htfBasicOpts, expand_message_xmd } from './abstract/hash-to-curve.js';\nimport { AffinePoint } from './abstract/curve.js';\n\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\n\nconst ED25519_P = BigInt(\n  '57896044618658097711785492504343953926634992332820282019728792003956564819949'\n);\n// \u221A(-1) aka \u221A(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt(\n  '19681161376707505956807079304988542015446066515923890162744021073123829784752'\n);\n\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n\nfunction ed25519_pow_2_252_3(x: bigint) {\n  const P = ED25519_P;\n  const x2 = (x * x) % P;\n  const b2 = (x2 * x) % P; // x^3, 11\n  const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n  const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n  const b10 = (pow2(b5, _5n, P) * b5) % P;\n  const b20 = (pow2(b10, _10n, P) * b10) % P;\n  const b40 = (pow2(b20, _20n, P) * b20) % P;\n  const b80 = (pow2(b40, _40n, P) * b40) % P;\n  const b160 = (pow2(b80, _80n, P) * b80) % P;\n  const b240 = (pow2(b160, _80n, P) * b80) % P;\n  const b250 = (pow2(b240, _10n, P) * b10) % P;\n  const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n  // ^ To pow to (p+3)/8, multiply it by x.\n  return { pow_p_5_8, b2 };\n}\n\nfunction adjustScalarBytes(bytes: Uint8Array): Uint8Array {\n  // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n  // set the three least significant bits of the first byte\n  bytes[0] &= 248; // 0b1111_1000\n  // and the most significant bit of the last to zero,\n  bytes[31] &= 127; // 0b0111_1111\n  // set the second most significant bit of the last byte to 1\n  bytes[31] |= 64; // 0b0100_0000\n  return bytes;\n}\n\n// sqrt(u/v)\nfunction uvRatio(u: bigint, v: bigint): { isValid: boolean; value: bigint } {\n  const P = ED25519_P;\n  const v3 = mod(v * v * v, P); // v\u00B3\n  const v7 = mod(v3 * v3 * v, P); // v\u2077\n  // (p+3)/8 and (p-5)/8\n  const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n  let x = mod(u * v3 * pow, P); // (uv\u00B3)(uv\u2077)^(p-5)/8\n  const vx2 = mod(v * x * x, P); // vx\u00B2\n  const root1 = x; // First root candidate\n  const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n  const useRoot1 = vx2 === u; // If vx\u00B2 = u (mod p), x is a square root\n  const useRoot2 = vx2 === mod(-u, P); // If vx\u00B2 = -u, set x <-- x * 2^((p-1)/4)\n  const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx\u00B2 = -u\u221A(-1)\n  if (useRoot1) x = root1;\n  if (useRoot2 || noRoot) x = root2; // We return root2 anyway, for const-time\n  if (isNegativeLE(x, P)) x = mod(-x, P);\n  return { isValid: useRoot1 || useRoot2, value: x };\n}\n\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n  '0100000000000000000000000000000000000000000000000000000000000000',\n  'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n  '0000000000000000000000000000000000000000000000000000000000000080',\n  '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n  'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n  '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n  '0000000000000000000000000000000000000000000000000000000000000000',\n  'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\n\nconst Fp = Field(ED25519_P, undefined, true);\n\nconst ed25519Defaults = {\n  // Param: a\n  a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n  // d is equal to -121665/121666 over finite field.\n  // Negative number is P - number, and division is invert(number, P)\n  d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n  // Finite field \uD835\uDD3Dp over which we'll do calculations; 2n**255n - 19n\n  Fp,\n  // Subgroup order: how many points curve has\n  // 2n**252n + 27742317777372353535851937790883648493n;\n  n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n  // Cofactor\n  h: BigInt(8),\n  // Base point (x, y) aka generator point\n  Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n  Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n  hash: sha512,\n  randomBytes,\n  adjustScalarBytes,\n  // dom2\n  // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n  // Constant-time, u/\u221Av\n  uvRatio,\n} as const;\n\nexport const ed25519 = twistedEdwards(ed25519Defaults);\n\nfunction ed25519_domain(data: Uint8Array, ctx: Uint8Array, phflag: boolean) {\n  if (ctx.length > 255) throw new Error('Context is too big');\n  return concatBytes(\n    utf8ToBytes('SigEd25519 no Ed25519 collisions'),\n    new Uint8Array([phflag ? 1 : 0, ctx.length]),\n    ctx,\n    data\n  );\n}\n\nexport const ed25519ctx = twistedEdwards({ ...ed25519Defaults, domain: ed25519_domain });\nexport const ed25519ph = twistedEdwards({\n  ...ed25519Defaults,\n  domain: ed25519_domain,\n  prehash: sha512,\n});\n\nexport const x25519 = /* @__PURE__ */ (() =>\n  montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x: bigint): bigint => {\n      const P = ED25519_P;\n      // x^(p-2) aka x^(2^255-21)\n      const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n      return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n  }))();\n\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub: Hex): Uint8Array {\n  const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n  const _1n = BigInt(1);\n  return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv: Uint8Array): Uint8Array {\n  const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n  return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\n\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\n\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u: bigint) {\n  let tv1 = Fp.sqr(u);       //  1.  tv1 = u^2\n  tv1 = Fp.mul(tv1, _2n);       //  2.  tv1 = 2 * tv1\n  let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n  let x1n = Fp.neg(ELL2_J);  //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n  let tv2 = Fp.sqr(xd);      //  5.  tv2 = xd^2\n  let gxd = Fp.mul(tv2, xd);    //  6.  gxd = tv2 * xd        # gxd = xd^3\n  let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n  gx1 = Fp.mul(gx1, x1n);       //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n  gx1 = Fp.add(gx1, tv2);       //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n  gx1 = Fp.mul(gx1, x1n);       //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n  let tv3 = Fp.sqr(gxd);     //  11. tv3 = gxd^2\n  tv2 = Fp.sqr(tv3);         //  12. tv2 = tv3^2           # gxd^4\n  tv3 = Fp.mul(tv3, gxd);       //  13. tv3 = tv3 * gxd       # gxd^3\n  tv3 = Fp.mul(tv3, gx1);       //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n  tv2 = Fp.mul(tv2, tv3);       //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n  let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n  y11 = Fp.mul(y11, tv3);       //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n  let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n  tv2 = Fp.sqr(y11);         //  19. tv2 = y11^2\n  tv2 = Fp.mul(tv2, gxd);       //  20. tv2 = tv2 * gxd\n  let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n  let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n  let x2n = Fp.mul(x1n, tv1);   //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n  let y21 = Fp.mul(y11, u);     //  24. y21 = y11 * u\n  y21 = Fp.mul(y21, ELL2_C2);   //  25. y21 = y21 * c2\n  let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n  let gx2 = Fp.mul(gx1, tv1);   //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n  tv2 = Fp.sqr(y21);         //  28. tv2 = y21^2\n  tv2 = Fp.mul(tv2, gxd);       //  29. tv2 = tv2 * gxd\n  let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n  let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n  tv2 = Fp.sqr(y1);          //  32. tv2 = y1^2\n  tv2 = Fp.mul(tv2, gxd);       //  33. tv2 = tv2 * gxd\n  let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n  let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n  let y = Fp.cmov(y2, y1, e3);  //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n  let e4 = Fp.isOdd(y);         //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n  y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n  return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\n\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u: bigint) {\n  const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n  // map_to_curve_elligator2_curve25519(u)\n  let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n  xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n  let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n  let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n  let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n  let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n  let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n  xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n  xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n  yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n  yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n\n  const inv = Fp.invertBatch([xd, yd]); // batch division\n  return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\n\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    ed25519.ExtendedPoint,\n    (scalars: bigint[]) => map_to_curve_elligator2_edwards25519(scalars[0]),\n    {\n      DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n      encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha512,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n\nfunction assertRstPoint(other: unknown) {\n  if (!(other instanceof RistPoint)) throw new Error('RistrettoPoint expected');\n}\n\n// \u221A(-1) aka \u221A(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// \u221A(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt(\n  '25063068953384623474111414158702152701244531502492656460079210482610430750235'\n);\n// 1 / \u221A(a-d)\nconst INVSQRT_A_MINUS_D = BigInt(\n  '54469307008909316920995813868745141605393597292927456921205312896311721017578'\n);\n// 1-d\u00B2\nconst ONE_MINUS_D_SQ = BigInt(\n  '1159843021668779879193775521855586647937357759715417654439879720876111806838'\n);\n// (d-1)\u00B2\nconst D_MINUS_ONE_SQ = BigInt(\n  '40440834346308536858101042469323190826248399146238708352240133220865137265952'\n);\n// Calculates 1/\u221A(number)\nconst invertSqrt = (number: bigint) => uvRatio(_1n, number);\n\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes: Uint8Array) =>\n  ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n\ntype ExtendedPoint = ExtPointType;\n\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0: bigint): ExtendedPoint {\n  const { d } = ed25519.CURVE;\n  const P = ed25519.CURVE.Fp.ORDER;\n  const mod = ed25519.CURVE.Fp.create;\n  const r = mod(SQRT_M1 * r0 * r0); // 1\n  const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n  let c = BigInt(-1); // 3\n  const D = mod((c - d * r) * mod(r + d)); // 4\n  let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n  let s_ = mod(s * r0); // 6\n  if (!isNegativeLE(s_, P)) s_ = mod(-s_);\n  if (!Ns_D_is_sq) s = s_; // 7\n  if (!Ns_D_is_sq) c = r; // 8\n  const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n  const s2 = s * s;\n  const W0 = mod((s + s) * D); // 10\n  const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n  const W2 = mod(_1n - s2); // 12\n  const W3 = mod(_1n + s2); // 13\n  return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n  static BASE: RistPoint;\n  static ZERO: RistPoint;\n  // Private property to discourage combining ExtendedPoint + RistrettoPoint\n  // Always use Ristretto encoding/decoding instead.\n  constructor(private readonly ep: ExtendedPoint) {}\n\n  static fromAffine(ap: AffinePoint<bigint>) {\n    return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n  }\n\n  /**\n   * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n   * The hash-to-group operation applies Elligator twice and adds the results.\n   * **Note:** this is one-way map, there is no conversion from point to hash.\n   * https://ristretto.group/formulas/elligator.html\n   * @param hex 64-byte output of a hash function\n   */\n  static hashToCurve(hex: Hex): RistPoint {\n    hex = ensureBytes('ristrettoHash', hex, 64);\n    const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n    const R1 = calcElligatorRistrettoMap(r1);\n    const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n    const R2 = calcElligatorRistrettoMap(r2);\n    return new RistPoint(R1.add(R2));\n  }\n\n  /**\n   * Converts ristretto-encoded string to ristretto point.\n   * https://ristretto.group/formulas/decoding.html\n   * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n   */\n  static fromHex(hex: Hex): RistPoint {\n    hex = ensureBytes('ristrettoHex', hex, 32);\n    const { a, d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n    const s = bytes255ToNumberLE(hex);\n    // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n    // 3. Check that s is non-negative, or else abort\n    if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P)) throw new Error(emsg);\n    const s2 = mod(s * s);\n    const u1 = mod(_1n + a * s2); // 4 (a is -1)\n    const u2 = mod(_1n - a * s2); // 5\n    const u1_2 = mod(u1 * u1);\n    const u2_2 = mod(u2 * u2);\n    const v = mod(a * d * u1_2 - u2_2); // 6\n    const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n    const Dx = mod(I * u2); // 8\n    const Dy = mod(I * Dx * v); // 9\n    let x = mod((s + s) * Dx); // 10\n    if (isNegativeLE(x, P)) x = mod(-x); // 10\n    const y = mod(u1 * Dy); // 11\n    const t = mod(x * y); // 12\n    if (!isValid || isNegativeLE(t, P) || y === _0n) throw new Error(emsg);\n    return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n  }\n\n  /**\n   * Encodes ristretto point to Uint8Array.\n   * https://ristretto.group/formulas/encoding.html\n   */\n  toRawBytes(): Uint8Array {\n    let { ex: x, ey: y, ez: z, et: t } = this.ep;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const u1 = mod(mod(z + y) * mod(z - y)); // 1\n    const u2 = mod(x * y); // 2\n    // Square root always exists\n    const u2sq = mod(u2 * u2);\n    const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n    const D1 = mod(invsqrt * u1); // 4\n    const D2 = mod(invsqrt * u2); // 5\n    const zInv = mod(D1 * D2 * t); // 6\n    let D: bigint; // 7\n    if (isNegativeLE(t * zInv, P)) {\n      let _x = mod(y * SQRT_M1);\n      let _y = mod(x * SQRT_M1);\n      x = _x;\n      y = _y;\n      D = mod(D1 * INVSQRT_A_MINUS_D);\n    } else {\n      D = D2; // 8\n    }\n    if (isNegativeLE(x * zInv, P)) y = mod(-y); // 9\n    let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n    if (isNegativeLE(s, P)) s = mod(-s);\n    return numberToBytesLE(s, 32); // 11\n  }\n\n  toHex(): string {\n    return bytesToHex(this.toRawBytes());\n  }\n\n  toString(): string {\n    return this.toHex();\n  }\n\n  // Compare one point to another.\n  equals(other: RistPoint): boolean {\n    assertRstPoint(other);\n    const { ex: X1, ey: Y1 } = this.ep;\n    const { ex: X2, ey: Y2 } = other.ep;\n    const mod = ed25519.CURVE.Fp.create;\n    // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n    const one = mod(X1 * Y2) === mod(Y1 * X2);\n    const two = mod(Y1 * Y2) === mod(X1 * X2);\n    return one || two;\n  }\n\n  add(other: RistPoint): RistPoint {\n    assertRstPoint(other);\n    return new RistPoint(this.ep.add(other.ep));\n  }\n\n  subtract(other: RistPoint): RistPoint {\n    assertRstPoint(other);\n    return new RistPoint(this.ep.subtract(other.ep));\n  }\n\n  multiply(scalar: bigint): RistPoint {\n    return new RistPoint(this.ep.multiply(scalar));\n  }\n\n  multiplyUnsafe(scalar: bigint): RistPoint {\n    return new RistPoint(this.ep.multiplyUnsafe(scalar));\n  }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n  if (!RistPoint.BASE) RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n  if (!RistPoint.ZERO) RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n  return RistPoint;\n})();\n\n// https://datatracker.ietf.org/doc/draft-irtf-cfrg-hash-to-curve/14/\n// Appendix B.  Hashing to ristretto255\nexport const hash_to_ristretto255 = (msg: Uint8Array, options: htfBasicOpts) => {\n  const d = options.DST;\n  const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n  const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n  const P = RistPoint.hashToCurve(uniform_bytes);\n  return P;\n};\n", "import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\n\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n", "import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n", "const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nexport function split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nexport const toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h: number, l: number) => l;\nconst rotr32L = (h: number, l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax\u00B2 + y\u00B2 = 1 + dx\u00B2y\u00B2\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes, FHash, Hex } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n\n// Edwards curves must declare params a & d.\nexport type CurveType = BasicCurve<bigint> & {\n  a: bigint; // curve param a\n  d: bigint; // curve param d\n  hash: FHash; // Hashing\n  randomBytes: (bytesLength?: number) => Uint8Array; // CSPRNG\n  adjustScalarBytes?: (bytes: Uint8Array) => Uint8Array; // clears bits to get valid field elemtn\n  domain?: (data: Uint8Array, ctx: Uint8Array, phflag: boolean) => Uint8Array; // Used for hashing\n  uvRatio?: (u: bigint, v: bigint) => { isValid: boolean; value: bigint }; // Ratio \u221A(u/v)\n  prehash?: FHash; // RFC 8032 pre-hashing of messages to sign() / verify()\n  mapToCurve?: (scalar: bigint[]) => AffinePoint<bigint>; // for hash-to-curve standard\n};\n\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    curve,\n    {\n      hash: 'function',\n      a: 'bigint',\n      d: 'bigint',\n      randomBytes: 'function',\n    },\n    {\n      adjustScalarBytes: 'function',\n      domain: 'function',\n      uvRatio: 'function',\n      mapToCurve: 'function',\n    }\n  );\n  // Set defaults\n  return Object.freeze({ ...opts } as const);\n}\n\n// Instance of Extended Point with coordinates in X, Y, Z, T\nexport interface ExtPointType extends Group<ExtPointType> {\n  readonly ex: bigint;\n  readonly ey: bigint;\n  readonly ez: bigint;\n  readonly et: bigint;\n  get x(): bigint;\n  get y(): bigint;\n  assertValidity(): void;\n  multiply(scalar: bigint): ExtPointType;\n  multiplyUnsafe(scalar: bigint): ExtPointType;\n  isSmallOrder(): boolean;\n  isTorsionFree(): boolean;\n  clearCofactor(): ExtPointType;\n  toAffine(iz?: bigint): AffinePoint<bigint>;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n}\n// Static methods of Extended Point with coordinates in X, Y, Z, T\nexport interface ExtPointConstructor extends GroupConstructor<ExtPointType> {\n  new (x: bigint, y: bigint, z: bigint, t: bigint): ExtPointType;\n  fromAffine(p: AffinePoint<bigint>): ExtPointType;\n  fromHex(hex: Hex): ExtPointType;\n  fromPrivateKey(privateKey: Hex): ExtPointType;\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: Hex) => Uint8Array;\n  sign: (message: Hex, privateKey: Hex, options?: { context?: Hex }) => Uint8Array;\n  verify: (\n    sig: Hex,\n    message: Hex,\n    publicKey: Hex,\n    options?: { context?: Hex; zip215: boolean }\n  ) => boolean;\n  ExtendedPoint: ExtPointConstructor;\n  utils: {\n    randomPrivateKey: () => Uint8Array;\n    getExtendedPublicKey: (key: Hex) => {\n      head: Uint8Array;\n      prefix: Uint8Array;\n      scalar: bigint;\n      point: ExtPointType;\n      pointBytes: Uint8Array;\n    };\n  };\n};\n\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const {\n    Fp,\n    n: CURVE_ORDER,\n    prehash: prehash,\n    hash: cHash,\n    randomBytes,\n    nByteLength,\n    h: cofactor,\n  } = CURVE;\n  const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n  const modP = Fp.create; // Function overrides\n\n  // sqrt(u/v)\n  const uvRatio =\n    CURVE.uvRatio ||\n    ((u: bigint, v: bigint) => {\n      try {\n        return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n      } catch (e) {\n        return { isValid: false, value: _0n };\n      }\n    });\n  const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes: Uint8Array) => bytes); // NOOP\n  const domain =\n    CURVE.domain ||\n    ((data: Uint8Array, ctx: Uint8Array, phflag: boolean) => {\n      if (ctx.length || phflag) throw new Error('Contexts/pre-hash are not supported');\n      return data;\n    }); // NOOP\n  const inBig = (n: bigint) => typeof n === 'bigint' && _0n < n; // n in [1..]\n  const inRange = (n: bigint, max: bigint) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n  const in0MaskRange = (n: bigint) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n  function assertInRange(n: bigint, max: bigint) {\n    // n in [1..max-1]\n    if (inRange(n, max)) return n;\n    throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n  }\n  function assertGE0(n: bigint) {\n    // n in [0..CURVE_ORDER-1]\n    return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n  }\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function isPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ExtendedPoint expected');\n  }\n  // Extended Point works in extended coordinates: (x, y, z, t) \u220B (x=x/z, y=y/z, t=xy).\n  // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n  class Point implements ExtPointType {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    static readonly ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n\n    constructor(\n      readonly ex: bigint,\n      readonly ey: bigint,\n      readonly ez: bigint,\n      readonly et: bigint\n    ) {\n      if (!in0MaskRange(ex)) throw new Error('x required');\n      if (!in0MaskRange(ey)) throw new Error('y required');\n      if (!in0MaskRange(ez)) throw new Error('z required');\n      if (!in0MaskRange(et)) throw new Error('t required');\n    }\n\n    get x(): bigint {\n      return this.toAffine().x;\n    }\n    get y(): bigint {\n      return this.toAffine().y;\n    }\n\n    static fromAffine(p: AffinePoint<bigint>): Point {\n      if (p instanceof Point) throw new Error('extended point not allowed');\n      const { x, y } = p || {};\n      if (!in0MaskRange(x) || !in0MaskRange(y)) throw new Error('invalid affine point');\n      return new Point(x, y, _1n, modP(x * y));\n    }\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.ez));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n    // Not required for fromHex(), which always creates valid points.\n    // Could be useful for fromAffine().\n    assertValidity(): void {\n      const { a, d } = CURVE;\n      if (this.is0()) throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n      // Equation in affine coordinates: ax\u00B2 + y\u00B2 = 1 + dx\u00B2y\u00B2\n      // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX\u00B2 + Y\u00B2)Z\u00B2 = Z\u2074 + dX\u00B2Y\u00B2\n      const { ex: X, ey: Y, ez: Z, et: T } = this;\n      const X2 = modP(X * X); // X\u00B2\n      const Y2 = modP(Y * Y); // Y\u00B2\n      const Z2 = modP(Z * Z); // Z\u00B2\n      const Z4 = modP(Z2 * Z2); // Z\u2074\n      const aX2 = modP(X2 * a); // aX\u00B2\n      const left = modP(Z2 * modP(aX2 + Y2)); // (aX\u00B2 + Y\u00B2)Z\u00B2\n      const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z\u2074 + dX\u00B2Y\u00B2\n      if (left !== right) throw new Error('bad point: equation left != right (1)');\n      // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n      const XY = modP(X * Y);\n      const ZT = modP(Z * T);\n      if (XY !== ZT) throw new Error('bad point: equation left != right (2)');\n    }\n\n    // Compare one point to another.\n    equals(other: Point): boolean {\n      isPoint(other);\n      const { ex: X1, ey: Y1, ez: Z1 } = this;\n      const { ex: X2, ey: Y2, ez: Z2 } = other;\n      const X1Z2 = modP(X1 * Z2);\n      const X2Z1 = modP(X2 * Z1);\n      const Y1Z2 = modP(Y1 * Z2);\n      const Y2Z1 = modP(Y2 * Z1);\n      return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n\n    protected is0(): boolean {\n      return this.equals(Point.ZERO);\n    }\n\n    negate(): Point {\n      // Flips point sign to a negative one (-x, y in affine coords)\n      return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n    }\n\n    // Fast algo for doubling Extended Point.\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n    // Cost: 4M + 4S + 1*a + 6add + 1*2.\n    double(): Point {\n      const { a } = CURVE;\n      const { ex: X1, ey: Y1, ez: Z1 } = this;\n      const A = modP(X1 * X1); // A = X12\n      const B = modP(Y1 * Y1); // B = Y12\n      const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n      const D = modP(a * A); // D = a*A\n      const x1y1 = X1 + Y1;\n      const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n      const G = D + B; // G = D+B\n      const F = G - C; // F = G-C\n      const H = D - B; // H = D-B\n      const X3 = modP(E * F); // X3 = E*F\n      const Y3 = modP(G * H); // Y3 = G*H\n      const T3 = modP(E * H); // T3 = E*H\n      const Z3 = modP(F * G); // Z3 = F*G\n      return new Point(X3, Y3, Z3, T3);\n    }\n\n    // Fast algo for adding 2 Extended Points.\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n    // Cost: 9M + 1*a + 1*d + 7add.\n    add(other: Point) {\n      isPoint(other);\n      const { a, d } = CURVE;\n      const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n      const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n      // Faster algo for adding 2 Extended Points when curve's a=-1.\n      // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n      // Cost: 8M + 8add + 2*2.\n      // Note: It does not check whether the `other` point is valid.\n      if (a === BigInt(-1)) {\n        const A = modP((Y1 - X1) * (Y2 + X2));\n        const B = modP((Y1 + X1) * (Y2 - X2));\n        const F = modP(B - A);\n        if (F === _0n) return this.double(); // Same point. Tests say it doesn't affect timing\n        const C = modP(Z1 * _2n * T2);\n        const D = modP(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = modP(E * F);\n        const Y3 = modP(G * H);\n        const T3 = modP(E * H);\n        const Z3 = modP(F * G);\n        return new Point(X3, Y3, Z3, T3);\n      }\n      const A = modP(X1 * X2); // A = X1*X2\n      const B = modP(Y1 * Y2); // B = Y1*Y2\n      const C = modP(T1 * d * T2); // C = T1*d*T2\n      const D = modP(Z1 * Z2); // D = Z1*Z2\n      const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n      const F = D - C; // F = D-C\n      const G = D + C; // G = D+C\n      const H = modP(B - a * A); // H = B-a*A\n      const X3 = modP(E * F); // X3 = E*F\n      const Y3 = modP(G * H); // Y3 = G*H\n      const T3 = modP(E * H); // T3 = E*H\n      const Z3 = modP(F * G); // Z3 = F*G\n\n      return new Point(X3, Y3, Z3, T3);\n    }\n\n    subtract(other: Point): Point {\n      return this.add(other.negate());\n    }\n\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n    }\n\n    // Constant-time multiplication.\n    multiply(scalar: bigint): Point {\n      const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n      return Point.normalizeZ([p, f])[0];\n    }\n\n    // Non-constant-time multiplication. Uses double-and-add algorithm.\n    // It's faster, but should only be used when you don't care about\n    // an exposed private key e.g. sig verification.\n    // Does NOT allow scalars higher than CURVE.n.\n    multiplyUnsafe(scalar: bigint): Point {\n      let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n      if (n === _0n) return I;\n      if (this.equals(I) || n === _1n) return this;\n      if (this.equals(G)) return this.wNAF(n).p;\n      return wnaf.unsafeLadder(this, n);\n    }\n\n    // Checks if point is of small order.\n    // If you add something to small order point, you will have \"dirty\"\n    // point with torsion component.\n    // Multiplies point by cofactor and checks if the result is 0.\n    isSmallOrder(): boolean {\n      return this.multiplyUnsafe(cofactor).is0();\n    }\n\n    // Multiplies point by curve order and checks if the result is 0.\n    // Returns `false` is the point is dirty.\n    isTorsionFree(): boolean {\n      return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n    }\n\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    toAffine(iz?: bigint): AffinePoint<bigint> {\n      const { ex: x, ey: y, ez: z } = this;\n      const is0 = this.is0();\n      if (iz == null) iz = is0 ? _8n : (Fp.inv(z) as bigint); // 8 was chosen arbitrarily\n      const ax = modP(x * iz);\n      const ay = modP(y * iz);\n      const zz = modP(z * iz);\n      if (is0) return { x: _0n, y: _1n };\n      if (zz !== _1n) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n\n    clearCofactor(): Point {\n      const { h: cofactor } = CURVE;\n      if (cofactor === _1n) return this;\n      return this.multiplyUnsafe(cofactor);\n    }\n\n    // Converts hash string or Uint8Array to Point.\n    // Uses algo from RFC8032 5.1.3.\n    static fromHex(hex: Hex, zip215 = false): Point {\n      const { d, a } = CURVE;\n      const len = Fp.BYTES;\n      hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n      const normed = hex.slice(); // copy again, we'll manipulate it\n      const lastByte = hex[len - 1]; // select last byte\n      normed[len - 1] = lastByte & ~0x80; // clear last bit\n      const y = ut.bytesToNumberLE(normed);\n      if (y === _0n) {\n        // y=0 is allowed\n      } else {\n        // RFC8032 prohibits >= p, but ZIP215 doesn't\n        if (zip215) assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n        else assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n      }\n\n      // Ed25519: x\u00B2 = (y\u00B2-1)/(dy\u00B2+1) mod p. Ed448: x\u00B2 = (y\u00B2-1)/(dy\u00B2-1) mod p. Generic case:\n      // ax\u00B2+y\u00B2=1+dx\u00B2y\u00B2 => y\u00B2-1=dx\u00B2y\u00B2-ax\u00B2 => y\u00B2-1=x\u00B2(dy\u00B2-a) => x\u00B2=(y\u00B2-1)/(dy\u00B2-a)\n      const y2 = modP(y * y); // denominator is always non-0 mod p.\n      const u = modP(y2 - _1n); // u = y\u00B2 - 1\n      const v = modP(d * y2 - a); // v = d y\u00B2 + 1.\n      let { isValid, value: x } = uvRatio(u, v); // \u221A(u/v)\n      if (!isValid) throw new Error('Point.fromHex: invalid y coordinate');\n      const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n      const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n      if (!zip215 && x === _0n && isLastByteOdd)\n        // if x=0 and x_0 = 1, fail\n        throw new Error('Point.fromHex: x=0 and x_0=1');\n      if (isLastByteOdd !== isXOdd) x = modP(-x); // if x_0 != x mod 2, set x = p-x\n      return Point.fromAffine({ x, y });\n    }\n    static fromPrivateKey(privKey: Hex) {\n      return getExtendedPublicKey(privKey).point;\n    }\n    toRawBytes(): Uint8Array {\n      const { x, y } = this.toAffine();\n      const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n      bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n      return bytes; // and use the last byte to encode sign of x\n    }\n    toHex(): string {\n      return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n    }\n  }\n  const { BASE: G, ZERO: I } = Point;\n  const wnaf = wNAF(Point, nByteLength * 8);\n\n  function modN(a: bigint) {\n    return mod(a, CURVE_ORDER);\n  }\n  // Little-endian SHA512 with modulo n\n  function modN_LE(hash: Uint8Array): bigint {\n    return modN(ut.bytesToNumberLE(hash));\n  }\n\n  /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n  function getExtendedPublicKey(key: Hex) {\n    const len = nByteLength;\n    key = ensureBytes('private key', key, len);\n    // Hash private key with curve's hash function to produce uniformingly random input\n    // Check byte lengths: ensure(64, h(ensure(32, key)))\n    const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n    const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n    const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n    const scalar = modN_LE(head); // The actual private scalar\n    const point = G.multiply(scalar); // Point on Edwards curve aka public key\n    const pointBytes = point.toRawBytes(); // Uint8Array representation\n    return { head, prefix, scalar, point, pointBytes };\n  }\n\n  // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n  function getPublicKey(privKey: Hex): Uint8Array {\n    return getExtendedPublicKey(privKey).pointBytes;\n  }\n\n  // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n  function hashDomainToScalar(context: Hex = new Uint8Array(), ...msgs: Uint8Array[]) {\n    const msg = ut.concatBytes(...msgs);\n    return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n  }\n\n  /** Signs message with privateKey. RFC8032 5.1.6 */\n  function sign(msg: Hex, privKey: Hex, options: { context?: Hex } = {}): Uint8Array {\n    msg = ensureBytes('message', msg);\n    if (prehash) msg = prehash(msg); // for ed25519ph etc.\n    const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n    const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n    const R = G.multiply(r).toRawBytes(); // R = rG\n    const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n    const s = modN(r + k * scalar); // S = (r + k * s) mod L\n    assertGE0(s); // 0 <= s < l\n    const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n    return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n  }\n\n  const verifyOpts: { context?: Hex; zip215?: boolean } = VERIFY_DEFAULT;\n  function verify(sig: Hex, msg: Hex, publicKey: Hex, options = verifyOpts): boolean {\n    const { context, zip215 } = options;\n    const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n    sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n    msg = ensureBytes('message', msg);\n    if (prehash) msg = prehash(msg); // for ed25519ph, etc\n\n    const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n    // zip215: true is good for consensus-critical apps and allows points < 2^256\n    // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n    let A, R, SB;\n    try {\n      A = Point.fromHex(publicKey, zip215);\n      R = Point.fromHex(sig.slice(0, len), zip215);\n      SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n    } catch (error) {\n      return false;\n    }\n    if (!zip215 && A.isSmallOrder()) return false;\n\n    const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n    const RkA = R.add(A.multiplyUnsafe(k));\n    // [8][S]B = [8]R + [8][k]A'\n    return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n  }\n\n  G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n\n  const utils = {\n    getExtendedPublicKey,\n    // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n    randomPrivateKey: (): Uint8Array => randomBytes(Fp.BYTES),\n\n    /**\n     * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n     * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n     * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n     * @param windowSize 2, 4, 8, 16\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3));\n      return point;\n    },\n  };\n\n  return {\n    CURVE,\n    getPublicKey,\n    sign,\n    verify,\n    ExtendedPoint: Point,\n    utils,\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n// Tonelli-Shanks algorithm\n// Paper 1: https://eprint.iacr.org/2012/685.pdf (page 12)\n// Paper 2: Square Roots from 1; 24, 51, 10 to Dan Shanks\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) \u2261 1    if a is a square (mod p)\n  // (a | p) \u2261 -1   if a is not a square (mod p)\n  // (a | p) \u2261 0    if a \u2261 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) \u2261 -1 and set c \u2261 zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be \u2261 -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P \u2261 3 (mod 4)\n  // \u221An = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q \u2261 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P \u2261 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime, Fp2 for example has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in https://datatracker.ietf.org/doc/draft-irtf-cfrg-hash-to-curve/\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n// 0 is non-invertible: non-batched version will throw on 0\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a galois field over prime. Non-primes are not supported for now.\n * Do not init in loop: slow. Very fragile: always run a benchmark on change.\n * Major performance gains:\n * a) non-normalized operations like mulN instead of mul\n * b) `Object.freeze`\n * c) Same object shape: never add or remove keys\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Fp ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * FIPS 186 B.4.1-compliant \"constant-time\" private key generation utility.\n * Can take (n+8) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 40 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. curveFn.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n: bigint, pos: number, value: boolean) => {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / \uD835\uDC4A) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(\uD835\uDC4A\u22121) * (Math.ceil(\uD835\uDC5B / \uD835\uDC4A) + 1), where:\n     * - \uD835\uDC4A is the window size\n     * - \uD835\uDC5B is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { mod, pow } from './modular.js';\nimport { bytesToNumberLE, ensureBytes, numberToBytesLE, validateObject } from './utils.js';\n\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\ntype Hex = string | Uint8Array;\n\nexport type CurveType = {\n  P: bigint; // finite field prime\n  nByteLength: number;\n  adjustScalarBytes?: (bytes: Uint8Array) => Uint8Array;\n  domain?: (data: Uint8Array, ctx: Uint8Array, phflag: boolean) => Uint8Array;\n  a: bigint;\n  montgomeryBits: number;\n  powPminus2?: (x: bigint) => bigint;\n  xyToU?: (x: bigint, y: bigint) => bigint;\n  Gu: bigint;\n  randomBytes?: (bytesLength?: number) => Uint8Array;\n};\nexport type CurveFn = {\n  scalarMult: (scalar: Hex, u: Hex) => Uint8Array;\n  scalarMultBase: (scalar: Hex) => Uint8Array;\n  getSharedSecret: (privateKeyA: Hex, publicKeyB: Hex) => Uint8Array;\n  getPublicKey: (privateKey: Hex) => Uint8Array;\n  utils: { randomPrivateKey: () => Uint8Array };\n  GuBytes: Uint8Array;\n};\n\nfunction validateOpts(curve: CurveType) {\n  validateObject(\n    curve,\n    {\n      a: 'bigint',\n    },\n    {\n      montgomeryBits: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n      adjustScalarBytes: 'function',\n      domain: 'function',\n      powPminus2: 'function',\n      Gu: 'bigint',\n    }\n  );\n  // Set defaults\n  return Object.freeze({ ...curve } as const);\n}\n\n// NOTE: not really montgomery curve, just bunch of very specific methods for X25519/X448 (RFC 7748, https://www.rfc-editor.org/rfc/rfc7748)\n// Uses only one coordinate instead of two\nexport function montgomery(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef);\n  const { P } = CURVE;\n  const modP = (n: bigint) => mod(n, P);\n  const montgomeryBits = CURVE.montgomeryBits;\n  const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n  const fieldLen = CURVE.nByteLength;\n  const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes: Uint8Array) => bytes);\n  const powPminus2 = CURVE.powPminus2 || ((x: bigint) => pow(x, P - BigInt(2), P));\n\n  // cswap from RFC7748. But it is not from RFC7748!\n  /*\n    cswap(swap, x_2, x_3):\n         dummy = mask(swap) AND (x_2 XOR x_3)\n         x_2 = x_2 XOR dummy\n         x_3 = x_3 XOR dummy\n         Return (x_2, x_3)\n  Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n   and x_3, computed, e.g., as mask(swap) = 0 - swap.\n  */\n  function cswap(swap: bigint, x_2: bigint, x_3: bigint): [bigint, bigint] {\n    const dummy = modP(swap * (x_2 - x_3));\n    x_2 = modP(x_2 - dummy);\n    x_3 = modP(x_3 + dummy);\n    return [x_2, x_3];\n  }\n\n  // Accepts 0 as well\n  function assertFieldElement(n: bigint): bigint {\n    if (typeof n === 'bigint' && _0n <= n && n < P) return n;\n    throw new Error('Expected valid scalar 0 < scalar < CURVE.P');\n  }\n\n  // x25519 from 4\n  // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n  const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n  /**\n   *\n   * @param pointU u coordinate (x) on Montgomery Curve 25519\n   * @param scalar by which the point would be multiplied\n   * @returns new Point on Montgomery curve\n   */\n  function montgomeryLadder(pointU: bigint, scalar: bigint): bigint {\n    const u = assertFieldElement(pointU);\n    // Section 5: Implementations MUST accept non-canonical values and process them as\n    // if they had been reduced modulo the field prime.\n    const k = assertFieldElement(scalar);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw: [bigint, bigint];\n    for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n      const k_t = (k >> t) & _1n;\n      swap ^= k_t;\n      sw = cswap(swap, x_2, x_3);\n      x_2 = sw[0];\n      x_3 = sw[1];\n      sw = cswap(swap, z_2, z_3);\n      z_2 = sw[0];\n      z_3 = sw[1];\n      swap = k_t;\n\n      const A = x_2 + z_2;\n      const AA = modP(A * A);\n      const B = x_2 - z_2;\n      const BB = modP(B * B);\n      const E = AA - BB;\n      const C = x_3 + z_3;\n      const D = x_3 - z_3;\n      const DA = modP(D * A);\n      const CB = modP(C * B);\n      const dacb = DA + CB;\n      const da_cb = DA - CB;\n      x_3 = modP(dacb * dacb);\n      z_3 = modP(x_1 * modP(da_cb * da_cb));\n      x_2 = modP(AA * BB);\n      z_2 = modP(E * (AA + modP(a24 * E)));\n    }\n    // (x_2, x_3) = cswap(swap, x_2, x_3)\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    // (z_2, z_3) = cswap(swap, z_2, z_3)\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    // z_2^(p - 2)\n    const z2 = powPminus2(z_2);\n    // Return x_2 * (z_2^(p - 2))\n    return modP(x_2 * z2);\n  }\n\n  function encodeUCoordinate(u: bigint): Uint8Array {\n    return numberToBytesLE(modP(u), montgomeryBytes);\n  }\n\n  function decodeUCoordinate(uEnc: Hex): bigint {\n    // Section 5: When receiving such an array, implementations of X25519\n    // MUST mask the most significant bit in the final byte.\n    // This is very ugly way, but it works because fieldLen-1 is outside of bounds for X448, so this becomes NOOP\n    // fieldLen - scalaryBytes = 1 for X448 and = 0 for X25519\n    const u = ensureBytes('u coordinate', uEnc, montgomeryBytes);\n    // u[fieldLen-1] crashes QuickJS (TypeError: out-of-bound numeric index)\n    if (fieldLen === montgomeryBytes) u[fieldLen - 1] &= 127; // 0b0111_1111\n    return bytesToNumberLE(u);\n  }\n  function decodeScalar(n: Hex): bigint {\n    const bytes = ensureBytes('scalar', n);\n    if (bytes.length !== montgomeryBytes && bytes.length !== fieldLen)\n      throw new Error(`Expected ${montgomeryBytes} or ${fieldLen} bytes, got ${bytes.length}`);\n    return bytesToNumberLE(adjustScalarBytes(bytes));\n  }\n  function scalarMult(scalar: Hex, u: Hex): Uint8Array {\n    const pointU = decodeUCoordinate(u);\n    const _scalar = decodeScalar(scalar);\n    const pu = montgomeryLadder(pointU, _scalar);\n    // The result was not contributory\n    // https://cr.yp.to/ecdh.html#validate\n    if (pu === _0n) throw new Error('Invalid private or public key received');\n    return encodeUCoordinate(pu);\n  }\n  // Computes public key from private. By doing scalar multiplication of base point.\n  const GuBytes = encodeUCoordinate(CURVE.Gu);\n  function scalarMultBase(scalar: Hex): Uint8Array {\n    return scalarMult(scalar, GuBytes);\n  }\n\n  return {\n    scalarMult,\n    scalarMultBase,\n    getSharedSecret: (privateKey: Hex, publicKey: Hex) => scalarMult(privateKey, publicKey),\n    getPublicKey: (privateKey: Hex): Uint8Array => scalarMultBase(privateKey),\n    utils: { randomPrivateKey: () => CURVE.randomBytes!(CURVE.nByteLength) },\n    GuBytes: GuBytes,\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { Group, GroupConstructor, AffinePoint } from './curve.js';\nimport { mod, IField } from './modular.js';\nimport { bytesToNumberBE, CHash, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\nfunction validateDST(dst: UnicodeOrBytes): Uint8Array {\n  if (dst instanceof Uint8Array) return dst;\n  if (typeof dst === 'string') return utf8ToBytes(dst);\n  throw new Error('DST must be Uint8Array or string');\n}\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction isBytes(item: unknown): void {\n  if (!(item instanceof Uint8Array)) throw new Error('Uint8Array expected');\n}\nfunction isNum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.4.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.3\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'string',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  isBytes(msg);\n  isNum(count);\n  const DST = validateDST(_DST);\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { crypto } from '@noble/hashes/crypto';\n/**\n * The `AesCtr` class provides an interface for AES-CTR\n * (Advanced Encryption Standard - Counter) encryption and decryption\n * operations. The class uses the Web Crypto API for cryptographic operations.\n *\n * All methods of this class are asynchronous and return Promises. They all\n * use the Uint8Array type for keys and data, providing a consistent\n * interface for working with binary data.\n *\n * Example usage:\n *\n * ```ts\n * const key = await AesCtr.generateKey({ length: 128 });\n * const counter = new Uint8Array(16); // initialize a 16-byte counter\n * const message = new TextEncoder().encode('Hello, world!');\n * const ciphertext = await AesCtr.encrypt({\n *   counter,\n *   data: message,\n *   key,\n *   length: 128 // counter length in bits\n * });\n * const plaintext = await AesCtr.decrypt({\n *   counter,\n *   data: ciphertext,\n *   key,\n *   length: 128 // counter length in bits\n * });\n * console.log(new TextDecoder().decode(plaintext)); // 'Hello, world!'\n * ```\n */\nexport class AesCtr {\n    /**\n     * Decrypts the provided data using AES-CTR.\n     *\n     * @param options - The options for the decryption operation.\n     * @param options.counter - The initial value of the counter block.\n     * @param options.data - The data to decrypt.\n     * @param options.key - The key to use for decryption.\n     * @param options.length - The length of the counter block in bits.\n     * @returns A Promise that resolves to the decrypted data as a Uint8Array.\n     */\n    static decrypt(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { counter, data, key, length } = options;\n            const webCryptoKey = yield this.importKey(key);\n            const plaintextBuffer = yield crypto.subtle.decrypt({ name: 'AES-CTR', counter, length }, webCryptoKey, data);\n            // Convert from ArrayBuffer to Uint8Array.\n            const plaintext = new Uint8Array(plaintextBuffer);\n            return plaintext;\n        });\n    }\n    /**\n     * Encrypts the provided data using AES-CTR.\n     *\n     * @param options - The options for the encryption operation.\n     * @param options.counter - The initial value of the counter block.\n     * @param options.data - The data to encrypt.\n     * @param options.key - The key to use for encryption.\n     * @param options.length - The length of the counter block in bits.\n     * @returns A Promise that resolves to the encrypted data as a Uint8Array.\n     */\n    static encrypt(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { counter, data, key, length } = options;\n            const webCryptoKey = yield this.importKey(key);\n            const ciphertextBuffer = yield crypto.subtle.encrypt({ name: 'AES-CTR', counter, length }, webCryptoKey, data);\n            // Convert from ArrayBuffer to Uint8Array.\n            const ciphertext = new Uint8Array(ciphertextBuffer);\n            return ciphertext;\n        });\n    }\n    /**\n     * Generates an AES key of a given length.\n     *\n     * @param length - The length of the key in bits.\n     * @returns A Promise that resolves to the generated key as a Uint8Array.\n     */\n    static generateKey(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { length } = options;\n            // Generate the secret key.\n            const lengthInBytes = length / 8;\n            const secretKey = crypto.getRandomValues(new Uint8Array(lengthInBytes));\n            return secretKey;\n        });\n    }\n    /**\n     * A private method to import a raw key for use with the Web Crypto API.\n     *\n     * @param key - The raw key material.\n     * @returns A Promise that resolves to a CryptoKey.\n     */\n    static importKey(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return crypto.subtle.importKey('raw', key.buffer, { name: 'AES-CTR', length: key.byteLength * 8 }, true, ['encrypt', 'decrypt']);\n        });\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { crypto } from '@noble/hashes/crypto';\n/**\n * The `AesGcm` class provides an interface for AES-GCM\n * (Advanced Encryption Standard - Galois/Counter Mode) encryption and\n * decryption operations. The class uses the Web Crypto API for\n * cryptographic operations.\n *\n * All methods of this class are asynchronous and return Promises. They all\n * use the Uint8Array type for keys and data, providing a consistent\n * interface for working with binary data.\n *\n * Example usage:\n *\n * ```ts\n * const key = await AesGcm.generateKey({ length: 128 });\n * const iv = new Uint8Array(12); // generate a 12-byte initialization vector\n * const message = new TextEncoder().encode('Hello, world!');\n * const ciphertext = await AesGcm.encrypt({\n *   data: message,\n *   iv,\n *   key,\n *   tagLength: 128\n * });\n * const plaintext = await AesGcm.decrypt({\n *   data: ciphertext,\n *   iv,\n *   key,\n *   tagLength: 128\n * });\n * console.log(new TextDecoder().decode(plaintext)); // 'Hello, world!'\n * ```\n */\nexport class AesGcm {\n    /**\n     * Decrypts the provided data using AES-GCM.\n     *\n     * @param options - The options for the decryption operation.\n     * @param options.additionalData - Data that will be authenticated along with the encrypted data.\n     * @param options.data - The data to decrypt.\n     * @param options.iv - A unique initialization vector.\n     * @param options.key - The key to use for decryption.\n     * @param options.tagLength - This size of the authentication tag generated in bits.\n     * @returns A Promise that resolves to the decrypted data as a Uint8Array.\n     */\n    static decrypt(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { additionalData, data, iv, key, tagLength } = options;\n            const webCryptoKey = yield this.importKey(key);\n            // Web browsers throw an error if additionalData is undefined.\n            const algorithm = (additionalData === undefined)\n                ? { name: 'AES-GCM', iv, tagLength }\n                : { name: 'AES-GCM', additionalData, iv, tagLength };\n            const plaintextBuffer = yield crypto.subtle.decrypt(algorithm, webCryptoKey, data);\n            // Convert from ArrayBuffer to Uint8Array.\n            const plaintext = new Uint8Array(plaintextBuffer);\n            return plaintext;\n        });\n    }\n    /**\n     * Encrypts the provided data using AES-GCM.\n     *\n     * @param options - The options for the encryption operation.\n     * @param options.additionalData - Data that will be authenticated along with the encrypted data.\n     * @param options.data - The data to decrypt.\n     * @param options.iv - A unique initialization vector.\n     * @param options.key - The key to use for decryption.\n     * @param options.tagLength - This size of the authentication tag generated in bits.\n     * @returns A Promise that resolves to the encrypted data as a Uint8Array.\n     */\n    static encrypt(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { additionalData, data, iv, key, tagLength } = options;\n            const webCryptoKey = yield this.importKey(key);\n            // Web browsers throw an error if additionalData is undefined.\n            const algorithm = (additionalData === undefined)\n                ? { name: 'AES-GCM', iv, tagLength }\n                : { name: 'AES-GCM', additionalData, iv, tagLength };\n            const ciphertextBuffer = yield crypto.subtle.encrypt(algorithm, webCryptoKey, data);\n            // Convert from ArrayBuffer to Uint8Array.\n            const ciphertext = new Uint8Array(ciphertextBuffer);\n            return ciphertext;\n        });\n    }\n    /**\n     * Generates an AES key of a given length.\n     *\n     * @param length - The length of the key in bits.\n     * @returns A Promise that resolves to the generated key as a Uint8Array.\n     */\n    static generateKey(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { length } = options;\n            // Generate the secret key.\n            const lengthInBytes = length / 8;\n            const secretKey = crypto.getRandomValues(new Uint8Array(lengthInBytes));\n            return secretKey;\n        });\n    }\n    /**\n     * A private method to import a raw key for use with the Web Crypto API.\n     *\n     * @param key - The raw key material.\n     * @returns A Promise that resolves to a CryptoKey.\n     */\n    static importKey(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return crypto.subtle.importKey('raw', key.buffer, { name: 'AES-GCM', length: key.byteLength * 8 }, true, ['encrypt', 'decrypt']);\n        });\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ed25519, edwardsToMontgomeryPub, edwardsToMontgomeryPriv } from '@noble/curves/ed25519';\n/**\n * The `Ed25519` class provides an interface for generating Ed25519 key pairs,\n * computing public keys from private keys, and signing and verifying messages.\n *\n * The class uses the '@noble/curves' package for the cryptographic operations.\n *\n * The methods of this class are all asynchronous and return Promises. They all use\n * the Uint8Array type for keys, signatures, and data, providing a consistent\n * interface for working with binary data.\n *\n * Example usage:\n *\n * ```ts\n * const keyPair = await Ed25519.generateKeyPair();\n * const message = new TextEncoder().encode('Hello, world!');\n * const signature = await Ed25519.sign({\n *   key: keyPair.privateKey,\n *   data: message\n * });\n * const isValid = await Ed25519.verify({\n *   key: keyPair.publicKey,\n *   signature,\n *   data: message\n * });\n * console.log(isValid); // true\n * ```\n */\nexport class Ed25519 {\n    /**\n     * Converts an Ed25519 private key to its X25519 counterpart.\n     *\n     * Similar to the public key conversion, this method aids in transitioning\n     * from signing to encryption operations. By converting an Ed25519 private\n     * key to X25519 format, one can use the same key pair for both digital\n     * signatures and key exchange operations.\n     *\n     * @param options - The options for the conversion.\n     * @param options.privateKey - The Ed25519 private key to convert, represented as a Uint8Array.\n     * @returns A Promise that resolves to the X25519 private key as a Uint8Array.\n     */\n    static convertPrivateKeyToX25519(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { privateKey } = options;\n            // Converts Ed25519 private key to X25519 private key.\n            const montgomeryPrivateKey = edwardsToMontgomeryPriv(privateKey);\n            return montgomeryPrivateKey;\n        });\n    }\n    /**\n   * Converts an Ed25519 public key to its X25519 counterpart.\n   *\n   * This method is useful when transitioning from signing to encryption\n   * operations, as Ed25519 and X25519 keys share the same mathematical\n   * foundation but serve different purposes. Ed25519 keys are used for\n   * digital signatures, while X25519 keys are used for key exchange in\n   * encryption protocols like Diffie-Hellman.\n   *\n   * @param options - The options for the conversion.\n   * @param options.publicKey - The Ed25519 public key to convert, represented as a Uint8Array.\n   * @returns A Promise that resolves to the X25519 public key as a Uint8Array.\n   */\n    static convertPublicKeyToX25519(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { publicKey } = options;\n            // Verify Edwards public key is valid.\n            const isValid = yield Ed25519.validatePublicKey({ key: publicKey });\n            if (!isValid) {\n                throw new Error('Ed25519: Invalid public key.');\n            }\n            // Converts Ed25519 public key to X25519 public key.\n            const montgomeryPublicKey = edwardsToMontgomeryPub(publicKey);\n            return montgomeryPublicKey;\n        });\n    }\n    /**\n     * Generates an Ed25519 key pair.\n     *\n     * @returns A Promise that resolves to an object containing the private and public keys as Uint8Array.\n     */\n    static generateKeyPair() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Generate the private key and compute its public key.\n            const privateKey = ed25519.utils.randomPrivateKey();\n            const publicKey = ed25519.getPublicKey(privateKey);\n            const keyPair = {\n                privateKey: privateKey,\n                publicKey: publicKey\n            };\n            return keyPair;\n        });\n    }\n    /**\n     * Computes the public key from a given private key.\n     *\n     * @param options - The options for the public key computation.\n     * @param options.privateKey - The 32-byte private key from which to compute the public key.\n     * @returns A Promise that resolves to the computed 32-byte public key as a Uint8Array.\n     */\n    static getPublicKey(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { privateKey } = options;\n            // Compute public key.\n            const publicKey = ed25519.getPublicKey(privateKey);\n            return publicKey;\n        });\n    }\n    /**\n     * Generates a RFC8032 EdDSA signature of given data with a given private key.\n     *\n     * @param options - The options for the signing operation.\n     * @param options.key - The private key to use for signing.\n     * @param options.data - The data to sign.\n     * @returns A Promise that resolves to the signature as a Uint8Array.\n     */\n    static sign(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { key, data } = options;\n            // Signature operation.\n            const signature = ed25519.sign(data, key);\n            return signature;\n        });\n    }\n    /**\n     * Validates a given public key to ensure that it corresponds to a\n     * valid point on the Ed25519 elliptic curve.\n     *\n     * This method decodes the Edwards points from the key bytes and\n     * asserts their validity on the curve. If the points are not valid,\n     * the method returns false. If the points are valid, the method\n     * returns true.\n     *\n     * Note: This method does not check whether the key corresponds to a\n     * known or authorized entity, or whether it has been compromised.\n     * It only checks the mathematical validity of the key.\n     *\n     * @param options - The options for the key validation.\n     * @param options.key - The key to validate, represented as a Uint8Array.\n     * @returns A Promise that resolves to a boolean indicating whether the key\n     *          corresponds to a valid point on the Edwards curve.\n     */\n    static validatePublicKey(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { key } = options;\n            try {\n                // Decode Edwards points from key bytes.\n                const point = ed25519.ExtendedPoint.fromHex(key);\n                // Check if points are on the Twisted Edwards curve.\n                point.assertValidity();\n            }\n            catch (error) {\n                return false;\n            }\n            return true;\n        });\n    }\n    /**\n     * Verifies a RFC8032 EdDSA signature of given data with a given public key.\n     *\n     * @param options - The options for the verification operation.\n     * @param options.key - The public key to use for verification.\n     * @param options.signature - The signature to verify.\n     * @param options.data - The data that was signed.\n     * @returns A Promise that resolves to a boolean indicating whether the signature is valid.\n     */\n    static verify(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { key, signature, data } = options;\n            // Verify operation.\n            const isValid = ed25519.verify(signature, data, key);\n            return isValid;\n        });\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { sha256 } from '@noble/hashes/sha256';\nimport { Convert, universalTypeOf } from '@web5/common';\nimport { concatBytes } from '@noble/hashes/utils';\nimport { NotSupportedError } from '../algorithms-api/errors.js';\n/**\n * An implementation of the Concatenation Key Derivation Function (ConcatKDF)\n * as specified in NIST.800-56A, a single-step key-derivation function (SSKDF).\n * ConcatKDF produces a derived key from a secret key (like a shared secret\n * from ECDH), and other optional public information. This implementation\n * specifically uses SHA-256 as the pseudorandom function (PRF).\n *\n * @see {@link https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-56Ar3.pdf | NIST.800-56A}\n * @see {@link https://datatracker.ietf.org/doc/html/rfc7518#section-4.6.2 | RFC 7518 Section 4.6.2}\n *\n * Note: This implementation allows for only a single round / repetition\n * using the function K(1) = H(counter || Z || OtherInfo), where:\n *   K(1) is the derived key material after one round\n *   H is the SHA-256 hashing function\n *   counter is a 32-bit, big-endian bit string counter set to 0x00000001\n *   Z is the shared secret value obtained from a key agreement protocol\n *   OtherInfo is a bit string used to ensure that the derived keying\n *     material is adequately \"bound\" to the key-agreement transaction.\n *\n * Additional Information:\n *\n * Z, or \"shared secret\":\n *   The shared secret value obtained from a key agreement protocol, such as\n *   Diffie-Hellman, ECDH (Elliptic Curve Diffie-Hellman). Importantly, this\n *   shared secret is not directly used as the encryption or authentication\n *   key, but as an input to a key derivation function (KDF), such as Concat\n *   KDF, to generate the actual key. This adds an extra layer of security, as\n *   even if the shared secret gets compromised, the actual  encryption or\n *   authentication key stays safe. This shared secret 'Z' value is kept\n *   confidential between the two parties in the key agreement protocol.\n */\nexport class ConcatKdf {\n    /**\n     * Derives a key of a specified length from the input parameters.\n     *\n     * @param options - Input parameters for key derivation.\n     * @param options.keyDataLen - The desired length of the derived key in bits.\n     * @param options.sharedSecret - The shared secret key to derive from.\n     * @param options.otherInfo - Additional public information to use in key derivation.\n     * @returns The derived key as a Uint8Array.\n     *\n     * @throws {NotSupportedError} If the keyDataLen would require multiple rounds.\n     */\n    static deriveKey(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { keyDataLen, sharedSecret } = options;\n            // RFC 7518 Section 4.6.2 specifies using SHA-256 for ECDH key agreement:\n            // \"Key derivation is performed using the Concat KDF, as defined in\n            // Section 5.8.1 of [NIST.800-56A], where the Digest Method is SHA-256.\"\n            // Reference: https://tools.ietf.org/html/rfc7518#section-4.6.2\n            const hashLen = 256;\n            // This implementation only supports single round Concat KDF.\n            const roundCount = Math.ceil(keyDataLen / hashLen);\n            if (roundCount !== 1) {\n                throw new NotSupportedError(`Concat KDF with ${roundCount} rounds not supported.`);\n            }\n            // Initialize a 32-bit, big-endian bit string counter as 0x00000001.\n            const counter = new Uint8Array(4);\n            new DataView(counter.buffer).setUint32(0, roundCount);\n            // Compute the OtherInfo bit-string.\n            const otherInfo = ConcatKdf.computeOtherInfo(options.otherInfo);\n            // Compute K(i) = H(counter || Z || OtherInfo)\n            // return concatBytes(counter, sharedSecretZ, otherInfo);\n            const derivedKeyingMaterial = sha256(concatBytes(counter, sharedSecret, otherInfo));\n            // Return the bit string of derived keying material of length keyDataLen bits.\n            return derivedKeyingMaterial.slice(0, keyDataLen / 8);\n        });\n    }\n    /**\n     * Computes the OtherInfo parameter as specified in NIST.800-56A.\n     * OtherInfo binds the derived key material to the context of the\n     * key agreement transaction.\n     *\n     * This implementation follows the recommended format for OtherInfo\n     * specified in section 5.8.1.2.1 of the NIST.800-56A publication.\n     *\n     * OtherInfo is a bit string equal to the following concatenation:\n     * AlgorithmID || PartyUInfo || PartyVInfo {|| SuppPubInfo }{|| SuppPrivInfo }\n     *\n     * SuppPubInfo is the key length in bits, big endian encoded as a\n     * 32-bit number. For example, 128 would be [0, 0, 0, 128] and\n     * 256 would be [0, 0, 1, 0].\n     *\n     * @param options - Input data to construct OtherInfo.\n  \n    * @returns OtherInfo as a Uint8Array.\n     */\n    static computeOtherInfo(options) {\n        // Required sub-fields.\n        const algorithmId = ConcatKdf.toDataLenData({ data: options.algorithmId });\n        const partyUInfo = ConcatKdf.toDataLenData({ data: options.partyUInfo });\n        const partyVInfo = ConcatKdf.toDataLenData({ data: options.partyVInfo });\n        // Optional sub-fields.\n        const suppPubInfo = ConcatKdf.toDataLenData({ data: options.suppPubInfo, variableLength: false });\n        const suppPrivInfo = ConcatKdf.toDataLenData({ data: options.suppPrivInfo });\n        // Concatenate AlgorithmID || PartyUInfo || PartyVInfo || SuppPubInfo || SuppPrivInfo.\n        const otherInfo = concatBytes(algorithmId, partyUInfo, partyVInfo, suppPubInfo, suppPrivInfo);\n        return otherInfo;\n    }\n    /**\n     * Encodes input data as a length-prefixed byte string, or\n     * as a fixed-length bit string if specified.\n     *\n     * If variableLength = true, return the data in the form Datalen || Data,\n     * where Data is a variable-length string of zero or more (eight-bit)\n     * bytes, and Datalen is a fixed-length, big-endian counter that\n     * indicates the length (in bytes) of Data.\n     *\n     * If variableLength = false, return the data formatted as a\n     * fixed-length bit string.\n     *\n     * @param options - Input data and options for the conversion.\n     * @param options.data - The input data to encode. Must be a type convertible to Uint8Array by the Convert class.\n     * @param options.variableLength - Whether to output the data as variable length. Default is true.\n     * @returns The input data encoded as a Uint8Array.\n     *\n     * @throws {TypeError} If fixed-length data is not a number.\n     */\n    static toDataLenData(options) {\n        const { data, variableLength = true } = options;\n        let encodedData;\n        const dataType = universalTypeOf(data);\n        // Return an emtpy octet sequence if data is not specified.\n        if (dataType === 'Undefined') {\n            return new Uint8Array(0);\n        }\n        if (variableLength) {\n            const dataU8A = (dataType === 'Uint8Array')\n                ? data\n                : new Convert(data, dataType).toUint8Array();\n            const bufferLength = dataU8A.length;\n            encodedData = new Uint8Array(4 + bufferLength);\n            new DataView(encodedData.buffer).setUint32(0, bufferLength);\n            encodedData.set(dataU8A, 4);\n        }\n        else {\n            if (typeof data !== 'number') {\n                throw TypeError('Fixed length input must be a number.');\n            }\n            encodedData = new Uint8Array(4);\n            new DataView(encodedData.buffer).setUint32(0, data);\n        }\n        return encodedData;\n    }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { sha256 } from '@noble/hashes/sha256';\nimport { secp256k1 } from '@noble/curves/secp256k1';\nimport { numberToBytesBE } from '@noble/curves/abstract/utils';\n/**\n * The `Secp256k1` class provides an interface for generating secp256k1 key pairs,\n * computing public keys from private keys, generating shaerd secrets, and\n * signing and verifying messages.\n *\n * The class uses the '@noble/secp256k1' package for the cryptographic operations,\n * and the '@noble/hashes/sha256' package for generating the hash digests needed\n * for the signing and verification operations.\n *\n * The methods of this class are all asynchronous and return Promises. They all use\n * the Uint8Array type for keys, signatures, and data, providing a consistent\n * interface for working with binary data.\n *\n * Example usage:\n *\n * ```ts\n * const keyPair = await Secp256k1.generateKeyPair();\n * const message = new TextEncoder().encode('Hello, world!');\n * const signature = await Secp256k1.sign({\n *   algorithm: { hash: 'SHA-256' },\n *   key: keyPair.privateKey,\n *   data: message\n * });\n * const isValid = await Secp256k1.verify({\n *   algorithm: { hash: 'SHA-256' },\n *   key: keyPair.publicKey,\n *   signature,\n *   data: message\n * });\n * console.log(isValid); // true\n * ```\n */\nexport class Secp256k1 {\n    /**\n     * Converts a public key between its compressed and uncompressed forms.\n     *\n     * Given a public key, this method can either compress or decompress it\n     * depending on the provided `compressedPublicKey` option. The conversion\n     * process involves decoding the Weierstrass points from the key bytes\n     * and then returning the key in the desired format.\n     *\n     * This is useful in scenarios where space is a consideration or when\n     * interfacing with systems that expect a specific public key format.\n     *\n     * @param options - The options for the public key conversion.\n     * @param options.publicKey - The original public key, represented as a Uint8Array.\n     * @param options.compressedPublicKey - A boolean indicating whether the output\n     *                                      should be in compressed form. If true, the\n     *                                      method returns the compressed form of the\n     *                                      provided public key. If false, it returns\n     *                                      the uncompressed form.\n     *\n     * @returns A Promise that resolves to the converted public key as a Uint8Array.\n     */\n    static convertPublicKey(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { publicKey, compressedPublicKey } = options;\n            // Decode Weierstrass points from key bytes.\n            const point = secp256k1.ProjectivePoint.fromHex(publicKey);\n            // Return either the compressed or uncompressed form of hte public key.\n            return point.toRawBytes(compressedPublicKey);\n        });\n    }\n    /**\n     * Generates a secp256k1 key pair.\n     *\n     * @param options - Optional parameters for the key generation.\n     * @param options.compressedPublicKey - If true, generates a compressed public key. Defaults to true.\n     * @returns A Promise that resolves to an object containing the private and public keys as Uint8Array.\n     */\n    static generateKeyPair(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { compressedPublicKey } = options !== null && options !== void 0 ? options : {};\n            compressedPublicKey !== null && compressedPublicKey !== void 0 ? compressedPublicKey : (compressedPublicKey = true); // Default to compressed public key, matching the default of @noble/secp256k1.\n            // Generate the private key and compute its public key.\n            const privateKey = secp256k1.utils.randomPrivateKey();\n            const publicKey = secp256k1.getPublicKey(privateKey, compressedPublicKey);\n            const keyPair = {\n                privateKey: privateKey,\n                publicKey: publicKey\n            };\n            return keyPair;\n        });\n    }\n    /**\n     * Returns the elliptic curve points (x and y coordinates) for a given secp256k1 key.\n     *\n     * In the case of a private key, the public key is first computed from the private key,\n     * then the x and y coordinates of the public key point on the elliptic curve are returned.\n     *\n     * In the case of a public key, the x and y coordinates of the key point on the elliptic\n     * curve are returned directly.\n     *\n     * The returned coordinates can be used to perform various operations on the elliptic curve,\n     * such as addition and multiplication of points, which can be used in various cryptographic\n     * schemes and protocols.\n     *\n     * @param options - The options for the operation.\n     * @param options.key - The key for which to get the elliptic curve points.\n     *                      Can be either a private key or a public key.\n     *                      The key should be passed as a Uint8Array.\n     * @returns A Promise that resolves to an object with properties 'x' and 'y',\n     *          each being a Uint8Array representing the x and y coordinates of the key point on the elliptic curve.\n     */\n    static getCurvePoints(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { key } = options;\n            // If key is a private key, first compute the public key.\n            if (key.byteLength === 32) {\n                key = yield Secp256k1.getPublicKey({ privateKey: key });\n            }\n            // Decode Weierstrass points from key bytes.\n            const point = secp256k1.ProjectivePoint.fromHex(key);\n            // Get x- and y-coordinate values and convert to Uint8Array.\n            const x = numberToBytesBE(point.x, 32);\n            const y = numberToBytesBE(point.y, 32);\n            return { x, y };\n        });\n    }\n    /**\n     * Computes the public key from a given private key.\n     * If compressedPublicKey=true then the output is a 33-byte public key.\n     * If compressedPublicKey=false then the output is a 65-byte public key.\n     *\n     * @param options - The options for the public key computation.\n     * @param options.privateKey - The 32-byte private key from which to compute the public key.\n     * @param options.compressedPublicKey - If true, returns a compressed public key. Defaults to true.\n     * @returns A Promise that resolves to the computed public key as a Uint8Array.\n     */\n    static getPublicKey(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { privateKey, compressedPublicKey } = options;\n            compressedPublicKey !== null && compressedPublicKey !== void 0 ? compressedPublicKey : (compressedPublicKey = true); // Default to compressed public key, matching the default of @noble/secp256k1.\n            // Compute public key.\n            const publicKey = secp256k1.getPublicKey(privateKey, compressedPublicKey);\n            return publicKey;\n        });\n    }\n    /**\n     * Generates a RFC6090 ECDH shared secret given the private key of one party\n     * and the public key another party.\n     *\n     * Note: When performing Elliptic Curve Diffie-Hellman (ECDH) key agreement,\n     * the resulting shared secret is a point on the elliptic curve, which\n     * consists of an x-coordinate and a y-coordinate. With a 256-bit curve like\n     * secp256k1, each of these coordinates is 32 bytes (256 bits) long. However,\n     * in the ECDH process, it's standard practice to use only the x-coordinate\n     * of the shared secret point as the resulting shared key. This is because\n     * the y-coordinate does not add to the entropy of the key, and both parties\n     * can independently compute the x-coordinate, so using just the x-coordinate\n     * simplifies matters.\n     */\n    static sharedSecret(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { privateKey, publicKey } = options;\n            // Compute the shared secret between the public and private keys.\n            const sharedSecret = secp256k1.getSharedSecret(privateKey, publicKey);\n            // Remove the leading byte that indicates the sign of the y-coordinate\n            // of the point on the elliptic curve.  See note above.\n            return sharedSecret.slice(1);\n        });\n    }\n    /**\n     * Generates a RFC6979 ECDSA signature of given data with a given private key and hash algorithm.\n     *\n     * @param options - The options for the signing operation.\n     * @param options.data - The data to sign.\n     * @param options.hash - The hash algorithm to use to generate a digest of the data.\n     * @param options.key - The private key to use for signing.\n     * @returns A Promise that resolves to the signature as a Uint8Array.\n     */\n    static sign(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data, hash, key } = options;\n            // Generate a digest of the data using the specified hash function.\n            const hashFunction = this.hashAlgorithms[hash];\n            const digest = hashFunction(data);\n            // Signature operation returns a Signature instance with { r, s, recovery } properties.\n            const signatureObject = secp256k1.sign(digest, key);\n            // Convert Signature object to Uint8Array.\n            const signature = signatureObject.toCompactRawBytes();\n            return signature;\n        });\n    }\n    /**\n     * Validates a given private key to ensure that it's a valid 32-byte number\n     * that is less than the secp256k1 curve's order.\n     *\n     * This method checks the byte length of the key and its numerical validity\n     * according to the secp256k1 curve's parameters. It doesn't verify whether\n     * the key corresponds to a known or authorized entity or whether it has\n     * been compromised.\n     *\n     * @param options - The options for the key validation.\n     * @param options.key - The private key to validate, represented as a Uint8Array.\n     * @returns A Promise that resolves to a boolean indicating whether the private\n     *          key is a valid 32-byte number less than the secp256k1 curve's order.\n     */\n    static validatePrivateKey(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { key } = options;\n            return secp256k1.utils.isValidPrivateKey(key);\n        });\n    }\n    /**\n     * Validates a given public key to ensure that it corresponds to a\n     * valid point on the secp256k1 elliptic curve.\n     *\n     * This method decodes the Weierstrass points from the key bytes and\n     * asserts their validity on the curve. If the points are not valid,\n     * the method returns false. If the points are valid, the method\n     * returns true.\n     *\n     * Note: This method does not check whether the key corresponds to a\n     * known or authorized entity, or whether it has been compromised.\n     * It only checks the mathematical validity of the key.\n     *\n     * @param options - The options for the key validation.\n     * @param options.key - The key to validate, represented as a Uint8Array.\n     * @returns A Promise that resolves to a boolean indicating whether the key\n     *          corresponds to a valid point on the secp256k1 elliptic curve.\n     */\n    static validatePublicKey(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { key } = options;\n            try {\n                // Decode Weierstrass points from key bytes.\n                const point = secp256k1.ProjectivePoint.fromHex(key);\n                // Check if points are on the Short Weierstrass curve.\n                point.assertValidity();\n            }\n            catch (error) {\n                return false;\n            }\n            return true;\n        });\n    }\n    /**\n     * Verifies a RFC6979 ECDSA signature of given data with a given public key and hash algorithm.\n     *\n     * @param options - The options for the verification operation.\n     * @param options.data - The data that was signed.\n     * @param options.hash - The hash algorithm to use to generate a digest of the data.\n     * @param options.key - The public key to use for verification.\n     * @param options.signature - The signature to verify.\n     * @returns A Promise that resolves to a boolean indicating whether the signature is valid.\n     */\n    static verify(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data, hash, key, signature } = options;\n            // Generate a digest of the data using the specified hash function.\n            const hashFunction = this.hashAlgorithms[hash];\n            const digest = hashFunction(data);\n            // Verify operation with malleability check disabled. Guaranteed support for low-s\n            // signatures across languages is unlikely especially in the context of SSI.\n            // Notable Cloud KMS providers do not natively support it either.\n            // low-s signatures are a requirement for Bitcoin\n            const isValid = secp256k1.verify(signature, digest, key, { lowS: false });\n            return isValid;\n        });\n    }\n}\n/**\n * A private static field containing a map of hash algorithm names to their\n * corresponding hash functions.  The map is used in the 'sign' and 'verify'\n * methods to get the specified hash function.\n */\nSecp256k1.hashAlgorithms = {\n    'SHA-256': sha256\n};\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * \u221An = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'\u22C5G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x \u2265 p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x\u00B3 + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'\u2265n. Ret bytes(d'\u22C5G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'\u22C5G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r \u2265 p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s \u2265 n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s\u22C5G - e\u22C5P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) \u2260 r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y\u00B2 = x\u00B3 + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y\u00B2 = x\u00B3 + ax + b: Short weierstrass curve formula\n   * @returns y\u00B2\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) \u220B (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      // Zero is valid point too!\n      if (this.is0()) {\n        if (CURVE.allowInfinityPoint) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y\u00B2\n      const right = weierstrassEquation(x); // x\u00B3 + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) \u220B (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y\u00B2 = x\u00B3 + ax + b\n        let y = Fp.sqrt(y2); // y = y\u00B2 ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size (nBitLength+64)\n     * as per FIPS 186 B.4.1 with modulo bias being neglible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const rand = CURVE.randomBytes(Fp.BYTES + 8);\n      const num = mod.hashToPrivateScalar(rand, CURVE_ORDER);\n      return ut.numberToBytesBE(num, CURVE.nByteLength);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e, Fp.BYTES)); // check for being of size BYTES\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b \u2208 [1,q\u22121] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G \u00D7 k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1\u22C5G - U2\u22C5P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1\u22C5G + u2\u22C5P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * From draft-irtf-cfrg-hash-to-curve-16\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n", "import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { xchacha20 } from '@noble/ciphers/chacha';\nexport class XChaCha20 {\n    static decrypt(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data, key, nonce } = options;\n            const ciphertext = xchacha20(key, nonce, data);\n            return ciphertext;\n        });\n    }\n    static encrypt(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data, key, nonce } = options;\n            const plaintext = xchacha20(key, nonce, data);\n            return plaintext;\n        });\n    }\n    static generateKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Generate the secret key.\n            const secretKey = crypto.getRandomValues(new Uint8Array(32));\n            return secretKey;\n        });\n    }\n}\n", "import { Cipher, createView, ensureBytes, equalBytes, setBigUint64, u32 } from './utils.js';\nimport { poly1305 } from './_poly1305.js';\nimport { salsaBasic } from './_salsa.js';\n\n// ChaCha20 stream cipher was released in 2008. ChaCha aims to increase\n// the diffusion per round, but had slightly less cryptanalysis.\n// https://cr.yp.to/chacha.html, http://cr.yp.to/chacha/chacha-20080128.pdf\n\n// Left rotate for uint32\nconst rotl = (a: number, b: number) => (a << b) | (a >>> (32 - b));\n\n/**\n * ChaCha core function.\n */\n// prettier-ignore\nfunction chachaCore(c: Uint32Array, k: Uint32Array, n: Uint32Array, out: Uint32Array, cnt: number, rounds = 20): void {\n  let y00 = c[0], y01 = c[1], y02 = c[2], y03 = c[3]; // \"expa\"   \"nd 3\"  \"2-by\"  \"te k\"\n  let y04 = k[0], y05 = k[1], y06 = k[2], y07 = k[3]; // Key      Key     Key     Key\n  let y08 = k[4], y09 = k[5], y10 = k[6], y11 = k[7]; // Key      Key     Key     Key\n  let y12 = cnt,  y13 = n[0], y14 = n[1], y15 = n[2]; // Counter  Counter\tNonce   Nonce\n  // Save state to temporary variables\n  let x00 = y00, x01 = y01, x02 = y02, x03 = y03,\n      x04 = y04, x05 = y05, x06 = y06, x07 = y07,\n      x08 = y08, x09 = y09, x10 = y10, x11 = y11,\n      x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n  // Main loop\n  for (let i = 0; i < rounds; i += 2) {\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 16);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 12);\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 8);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 7);\n\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 16);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 12);\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 8);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 7);\n\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 16);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 12);\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^x02, 8);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 7);\n\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 16);\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 12);\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 8)\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 7);\n\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 16);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 12);\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 8);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 7);\n\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 16);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 12);\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 8);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 7);\n\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 16);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 12);\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 8);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 7);\n\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 16)\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 12);\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 8);\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 7);\n  }\n  // Write output\n  let oi = 0;\n  out[oi++] = (y00 + x00) | 0; out[oi++] = (y01 + x01) | 0;\n  out[oi++] = (y02 + x02) | 0; out[oi++] = (y03 + x03) | 0;\n  out[oi++] = (y04 + x04) | 0; out[oi++] = (y05 + x05) | 0;\n  out[oi++] = (y06 + x06) | 0; out[oi++] = (y07 + x07) | 0;\n  out[oi++] = (y08 + x08) | 0; out[oi++] = (y09 + x09) | 0;\n  out[oi++] = (y10 + x10) | 0; out[oi++] = (y11 + x11) | 0;\n  out[oi++] = (y12 + x12) | 0; out[oi++] = (y13 + x13) | 0;\n  out[oi++] = (y14 + x14) | 0; out[oi++] = (y15 + x15) | 0;\n}\n/**\n * hchacha helper method, used primarily in xchacha, to hash\n * key and nonce into key' and nonce'.\n * Same as chachaCore, but there doesn't seem to be a way to move the block\n * out without 25% performance hit.\n */\n// prettier-ignore\nexport function hchacha(c: Uint32Array, key: Uint8Array, src: Uint8Array, out: Uint8Array): Uint8Array {\n  const k32 = u32(key);\n  const i32 = u32(src);\n  const o32 = u32(out);\n  let x00 = c[0],   x01 = c[1],   x02 = c[2],   x03 = c[3];\n  let x04 = k32[0], x05 = k32[1], x06 = k32[2], x07 = k32[3];\n  let x08 = k32[4], x09 = k32[5], x10 = k32[6], x11 = k32[7]\n  let x12 = i32[0], x13 = i32[1], x14 = i32[2], x15 = i32[3];\n   for (let i = 0; i < 20; i += 2) {\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 16);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 12);\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 8);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 7);\n\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 16);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 12);\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 8);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 7);\n\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 16);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 12);\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 8);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 7);\n\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 16);\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 12);\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 8)\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 7);\n\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 16);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 12);\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 8);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 7);\n\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 16);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 12);\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 8);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 7);\n\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 16);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 12);\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 8);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 7);\n\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 16)\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 12);\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 8);\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 7);\n  }\n  o32[0] = x00;\n  o32[1] = x01;\n  o32[2] = x02;\n  o32[3] = x03;\n  o32[4] = x12;\n  o32[5] = x13;\n  o32[6] = x14;\n  o32[7] = x15;\n  return out;\n}\n/**\n * Original, non-RFC chacha20 from DJB. 8-byte nonce, 8-byte counter.\n */\nexport const chacha20orig = salsaBasic({ core: chachaCore, counterRight: false, counterLen: 8 });\n/**\n * ChaCha stream cipher. Conforms to RFC 8439 (IETF, TLS). 12-byte nonce, 4-byte counter.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20 = salsaBasic({\n  core: chachaCore,\n  counterRight: false,\n  counterLen: 4,\n  allow128bitKeys: false,\n});\n\n/**\n * XChaCha eXtended-nonce ChaCha. 24-byte nonce.\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n */\nexport const xchacha20 = salsaBasic({\n  core: chachaCore,\n  counterRight: false,\n  counterLen: 8,\n  extendNonceFn: hchacha,\n  allow128bitKeys: false,\n});\n\n/**\n * Reduced 8-round chacha, described in original paper.\n */\nexport const chacha8 = salsaBasic({\n  core: chachaCore,\n  counterRight: false,\n  counterLen: 4,\n  rounds: 8,\n});\n\n/**\n * Reduced 12-round chacha, described in original paper.\n */\nexport const chacha12 = salsaBasic({\n  core: chachaCore,\n  counterRight: false,\n  counterLen: 4,\n  rounds: 12,\n});\n\nconst ZERO = new Uint8Array(16);\n// Pad to digest size with zeros\nconst updatePadded = (h: ReturnType<typeof poly1305.create>, msg: Uint8Array) => {\n  h.update(msg);\n  const left = msg.length % 16;\n  if (left) h.update(ZERO.subarray(left));\n};\n\nconst computeTag = (\n  fn: typeof chacha20,\n  key: Uint8Array,\n  nonce: Uint8Array,\n  data: Uint8Array,\n  AAD?: Uint8Array\n) => {\n  const authKey = fn(key, nonce, new Uint8Array(32));\n  const h = poly1305.create(authKey);\n  if (AAD) updatePadded(h, AAD);\n  updatePadded(h, data);\n  const num = new Uint8Array(16);\n  const view = createView(num);\n  setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n  setBigUint64(view, 8, BigInt(data.length), true);\n  h.update(num);\n  const res = h.digest();\n  authKey.fill(0);\n  return res;\n};\n\n/**\n * AEAD algorithm from RFC 8439.\n * Salsa20 and chacha (RFC 8439) use poly1305 differently.\n * We could have composed them similar to:\n * https://github.com/paulmillr/scure-base/blob/b266c73dde977b1dd7ef40ef7a23cc15aab526b3/index.ts#L250\n * But it's hard because of authKey:\n * In salsa20, authKey changes position in salsa stream.\n * In chacha, authKey can't be computed inside computeTag, it modifies the counter.\n */\nexport const _poly1305_aead =\n  (fn: typeof chacha20) =>\n  (key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array): Cipher => {\n    const tagLength = 16;\n    ensureBytes(key, 32);\n    ensureBytes(nonce);\n    return {\n      tagLength,\n      encrypt: (plaintext: Uint8Array) => {\n        const res = new Uint8Array(plaintext.length + tagLength);\n        fn(key, nonce, plaintext, res, 1);\n        const tag = computeTag(fn, key, nonce, res.subarray(0, -tagLength), AAD);\n        res.set(tag, plaintext.length); // append tag\n        return res;\n      },\n      decrypt: (ciphertext: Uint8Array) => {\n        if (ciphertext.length < tagLength)\n          throw new Error(`Encrypted data should be at least ${tagLength}`);\n        const realTag = ciphertext.subarray(-tagLength);\n        const data = ciphertext.subarray(0, -tagLength);\n        const tag = computeTag(fn, key, nonce, data, AAD);\n        if (!equalBytes(realTag, tag)) throw new Error('Wrong tag');\n        return fn(key, nonce, data, undefined, 1);\n      },\n    };\n  };\n\n/**\n * ChaCha20-Poly1305 from RFC 8439.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20_poly1305 = _poly1305_aead(chacha20);\n/**\n * XChaCha20-Poly1305 extended-nonce chacha.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n */\nexport const xchacha20_poly1305 = _poly1305_aead(xchacha20);\n", "/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u16 = (arr: TypedArray) =>\n  new Uint16Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 2));\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// big-endian hardware is rare. Just in case someone still decides to run ciphers:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport function ensureBytes(b: any, len?: number) {\n  if (!(b instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  if (typeof len === 'number')\n    if (b.length !== len) throw new Error(`Uint8Array length ${len} expected`);\n}\n\n// Constant-time equality\nexport function equalBytes(a: Uint8Array, b: Uint8Array): boolean {\n  // Should not happen\n  if (a.length !== b.length) throw new Error('equalBytes: Different size of Uint8Arrays');\n  let isSame = true;\n  for (let i = 0; i < a.length; i++) isSame &&= a[i] === b[i]; // Lets hope JIT won't optimize away.\n  return isSame;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n}\n\n// This will allow to re-use with composable things like packed & base encoders\n// Also, we probably can make tags composable\nexport type Cipher = {\n  tagLength?: number;\n  encrypt(plaintext: Uint8Array): Uint8Array;\n  decrypt(ciphertext: Uint8Array): Uint8Array;\n};\n\nexport type AsyncCipher = {\n  tagLength?: number;\n  encrypt(plaintext: Uint8Array): Promise<Uint8Array>;\n  decrypt(ciphertext: Uint8Array): Promise<Uint8Array>;\n};\n\n// Polyfill for Safari 14\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n", "import { toBytes, Input, ensureBytes, Hash } from './utils.js';\nimport assert from './_assert.js';\n\n// Poly1305 is a fast and parallel secret-key message-authentication code.\n// https://cr.yp.to/mac.html, https://cr.yp.to/mac/poly1305-20050329.pdf\n// https://datatracker.ietf.org/doc/html/rfc8439\n\n// Based on Public Domain poly1305-donna https://github.com/floodyberry/poly1305-donna\nconst u8to16 = (a: Uint8Array, i: number) => (a[i++] & 0xff) | ((a[i++] & 0xff) << 8);\nclass Poly1305 implements Hash<Poly1305> {\n  readonly blockLen = 16;\n  readonly outputLen = 16;\n  private buffer = new Uint8Array(16);\n  private r = new Uint16Array(10);\n  private h = new Uint16Array(10);\n  private pad = new Uint16Array(8);\n  private pos = 0;\n  protected finished = false;\n\n  constructor(key: Input) {\n    key = toBytes(key);\n    ensureBytes(key, 32);\n    const t0 = u8to16(key, 0);\n    const t1 = u8to16(key, 2);\n    const t2 = u8to16(key, 4);\n    const t3 = u8to16(key, 6);\n    const t4 = u8to16(key, 8);\n    const t5 = u8to16(key, 10);\n    const t6 = u8to16(key, 12);\n    const t7 = u8to16(key, 14);\n\n    // https://github.com/floodyberry/poly1305-donna/blob/e6ad6e091d30d7f4ec2d4f978be1fcfcbce72781/poly1305-donna-16.h#L47\n    this.r[0] = t0 & 0x1fff;\n    this.r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n    this.r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n    this.r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n    this.r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n    this.r[5] = (t4 >>> 1) & 0x1ffe;\n    this.r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n    this.r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n    this.r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n    this.r[9] = (t7 >>> 5) & 0x007f;\n    for (let i = 0; i < 8; i++) this.pad[i] = u8to16(key, 16 + 2 * i);\n  }\n\n  private process(data: Uint8Array, offset: number, isLast = false) {\n    const hibit = isLast ? 0 : 1 << 11;\n    const { h, r } = this;\n    const r0 = r[0];\n    const r1 = r[1];\n    const r2 = r[2];\n    const r3 = r[3];\n    const r4 = r[4];\n    const r5 = r[5];\n    const r6 = r[6];\n    const r7 = r[7];\n    const r8 = r[8];\n    const r9 = r[9];\n\n    const t0 = u8to16(data, offset + 0);\n    const t1 = u8to16(data, offset + 2);\n    const t2 = u8to16(data, offset + 4);\n    const t3 = u8to16(data, offset + 6);\n    const t4 = u8to16(data, offset + 8);\n    const t5 = u8to16(data, offset + 10);\n    const t6 = u8to16(data, offset + 12);\n    const t7 = u8to16(data, offset + 14);\n\n    let h0 = h[0] + (t0 & 0x1fff);\n    let h1 = h[1] + (((t0 >>> 13) | (t1 << 3)) & 0x1fff);\n    let h2 = h[2] + (((t1 >>> 10) | (t2 << 6)) & 0x1fff);\n    let h3 = h[3] + (((t2 >>> 7) | (t3 << 9)) & 0x1fff);\n    let h4 = h[4] + (((t3 >>> 4) | (t4 << 12)) & 0x1fff);\n    let h5 = h[5] + ((t4 >>> 1) & 0x1fff);\n    let h6 = h[6] + (((t4 >>> 14) | (t5 << 2)) & 0x1fff);\n    let h7 = h[7] + (((t5 >>> 11) | (t6 << 5)) & 0x1fff);\n    let h8 = h[8] + (((t6 >>> 8) | (t7 << 8)) & 0x1fff);\n    let h9 = h[9] + ((t7 >>> 5) | hibit);\n\n    let c = 0;\n\n    let d0 = c + h0 * r0 + h1 * (5 * r9) + h2 * (5 * r8) + h3 * (5 * r7) + h4 * (5 * r6);\n    c = d0 >>> 13;\n    d0 &= 0x1fff;\n    d0 += h5 * (5 * r5) + h6 * (5 * r4) + h7 * (5 * r3) + h8 * (5 * r2) + h9 * (5 * r1);\n    c += d0 >>> 13;\n    d0 &= 0x1fff;\n\n    let d1 = c + h0 * r1 + h1 * r0 + h2 * (5 * r9) + h3 * (5 * r8) + h4 * (5 * r7);\n    c = d1 >>> 13;\n    d1 &= 0x1fff;\n    d1 += h5 * (5 * r6) + h6 * (5 * r5) + h7 * (5 * r4) + h8 * (5 * r3) + h9 * (5 * r2);\n    c += d1 >>> 13;\n    d1 &= 0x1fff;\n\n    let d2 = c + h0 * r2 + h1 * r1 + h2 * r0 + h3 * (5 * r9) + h4 * (5 * r8);\n    c = d2 >>> 13;\n    d2 &= 0x1fff;\n    d2 += h5 * (5 * r7) + h6 * (5 * r6) + h7 * (5 * r5) + h8 * (5 * r4) + h9 * (5 * r3);\n    c += d2 >>> 13;\n    d2 &= 0x1fff;\n\n    let d3 = c + h0 * r3 + h1 * r2 + h2 * r1 + h3 * r0 + h4 * (5 * r9);\n    c = d3 >>> 13;\n    d3 &= 0x1fff;\n    d3 += h5 * (5 * r8) + h6 * (5 * r7) + h7 * (5 * r6) + h8 * (5 * r5) + h9 * (5 * r4);\n    c += d3 >>> 13;\n    d3 &= 0x1fff;\n\n    let d4 = c + h0 * r4 + h1 * r3 + h2 * r2 + h3 * r1 + h4 * r0;\n    c = d4 >>> 13;\n    d4 &= 0x1fff;\n    d4 += h5 * (5 * r9) + h6 * (5 * r8) + h7 * (5 * r7) + h8 * (5 * r6) + h9 * (5 * r5);\n    c += d4 >>> 13;\n    d4 &= 0x1fff;\n\n    let d5 = c + h0 * r5 + h1 * r4 + h2 * r3 + h3 * r2 + h4 * r1;\n    c = d5 >>> 13;\n    d5 &= 0x1fff;\n    d5 += h5 * r0 + h6 * (5 * r9) + h7 * (5 * r8) + h8 * (5 * r7) + h9 * (5 * r6);\n    c += d5 >>> 13;\n    d5 &= 0x1fff;\n\n    let d6 = c + h0 * r6 + h1 * r5 + h2 * r4 + h3 * r3 + h4 * r2;\n    c = d6 >>> 13;\n    d6 &= 0x1fff;\n    d6 += h5 * r1 + h6 * r0 + h7 * (5 * r9) + h8 * (5 * r8) + h9 * (5 * r7);\n    c += d6 >>> 13;\n    d6 &= 0x1fff;\n\n    let d7 = c + h0 * r7 + h1 * r6 + h2 * r5 + h3 * r4 + h4 * r3;\n    c = d7 >>> 13;\n    d7 &= 0x1fff;\n    d7 += h5 * r2 + h6 * r1 + h7 * r0 + h8 * (5 * r9) + h9 * (5 * r8);\n    c += d7 >>> 13;\n    d7 &= 0x1fff;\n\n    let d8 = c + h0 * r8 + h1 * r7 + h2 * r6 + h3 * r5 + h4 * r4;\n    c = d8 >>> 13;\n    d8 &= 0x1fff;\n    d8 += h5 * r3 + h6 * r2 + h7 * r1 + h8 * r0 + h9 * (5 * r9);\n    c += d8 >>> 13;\n    d8 &= 0x1fff;\n\n    let d9 = c + h0 * r9 + h1 * r8 + h2 * r7 + h3 * r6 + h4 * r5;\n    c = d9 >>> 13;\n    d9 &= 0x1fff;\n    d9 += h5 * r4 + h6 * r3 + h7 * r2 + h8 * r1 + h9 * r0;\n    c += d9 >>> 13;\n    d9 &= 0x1fff;\n\n    c = ((c << 2) + c) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = c >>> 13;\n    d1 += c;\n\n    h[0] = d0;\n    h[1] = d1;\n    h[2] = d2;\n    h[3] = d3;\n    h[4] = d4;\n    h[5] = d5;\n    h[6] = d6;\n    h[7] = d7;\n    h[8] = d8;\n    h[9] = d9;\n  }\n\n  private finalize() {\n    const { h, pad } = this;\n    const g = new Uint16Array(10);\n    let c = h[1] >>> 13;\n    h[1] &= 0x1fff;\n    for (let i = 2; i < 10; i++) {\n      h[i] += c;\n      c = h[i] >>> 13;\n      h[i] &= 0x1fff;\n    }\n    h[0] += c * 5;\n    c = h[0] >>> 13;\n    h[0] &= 0x1fff;\n    h[1] += c;\n    c = h[1] >>> 13;\n    h[1] &= 0x1fff;\n    h[2] += c;\n\n    g[0] = h[0] + 5;\n    c = g[0] >>> 13;\n    g[0] &= 0x1fff;\n    for (let i = 1; i < 10; i++) {\n      g[i] = h[i] + c;\n      c = g[i] >>> 13;\n      g[i] &= 0x1fff;\n    }\n    g[9] -= 1 << 13;\n\n    let mask = (c ^ 1) - 1;\n    for (let i = 0; i < 10; i++) g[i] &= mask;\n    mask = ~mask;\n    for (let i = 0; i < 10; i++) h[i] = (h[i] & mask) | g[i];\n    h[0] = (h[0] | (h[1] << 13)) & 0xffff;\n    h[1] = ((h[1] >>> 3) | (h[2] << 10)) & 0xffff;\n    h[2] = ((h[2] >>> 6) | (h[3] << 7)) & 0xffff;\n    h[3] = ((h[3] >>> 9) | (h[4] << 4)) & 0xffff;\n    h[4] = ((h[4] >>> 12) | (h[5] << 1) | (h[6] << 14)) & 0xffff;\n    h[5] = ((h[6] >>> 2) | (h[7] << 11)) & 0xffff;\n    h[6] = ((h[7] >>> 5) | (h[8] << 8)) & 0xffff;\n    h[7] = ((h[8] >>> 8) | (h[9] << 5)) & 0xffff;\n\n    let f = h[0] + pad[0];\n    h[0] = f & 0xffff;\n    for (let i = 1; i < 8; i++) {\n      f = (((h[i] + pad[i]) | 0) + (f >>> 16)) | 0;\n      h[i] = f & 0xffff;\n    }\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input\n      if (take === blockLen) {\n        for (; blockLen <= len - pos; pos += blockLen) this.process(data, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(buffer, 0, false);\n        this.pos = 0;\n      }\n    }\n    return this;\n  }\n  destroy() {\n    this.h.fill(0);\n    this.r.fill(0);\n    this.buffer.fill(0);\n    this.pad.fill(0);\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    const { buffer, h } = this;\n    let { pos } = this;\n    if (pos) {\n      buffer[pos++] = 1;\n      // buffer.subarray(pos).fill(0);\n      for (; pos < 16; pos++) buffer[pos] = 0;\n      this.process(buffer, 0, true);\n    }\n    this.finalize();\n    let opos = 0;\n    for (let i = 0; i < 8; i++) {\n      out[opos++] = h[i] >>> 0;\n      out[opos++] = h[i] >>> 8;\n    }\n    return out;\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n}\n\nexport type CHash = ReturnType<typeof wrapConstructorWithKey>;\nexport function wrapConstructorWithKey<H extends Hash<H>>(hashCons: (key: Input) => Hash<H>) {\n  const hashC = (msg: Input, key: Input): Uint8Array => hashCons(key).update(toBytes(msg)).digest();\n  const tmp = hashCons(new Uint8Array(32));\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (key: Input) => hashCons(key);\n  return hashC;\n}\n\nexport const poly1305 = wrapConstructorWithKey((key) => new Poly1305(key));\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\nexport type Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "// Basic utils for salsa-like ciphers\n// Check out _micro.ts for descriptive documentation.\nimport assert from './_assert.js';\nimport { u32, utf8ToBytes, checkOpts } from './utils.js';\n\n/*\nRFC8439 requires multi-step cipher stream, where\nauthKey starts with counter: 0, actual msg with counter: 1.\n\nFor this, we need a way to re-use nonce / counter:\n\n    const counter = new Uint8Array(4);\n    chacha(..., counter, ...); // counter is now 1\n    chacha(..., counter, ...); // counter is now 2\n\nThis is complicated:\n\n- Original papers don't allow mutating counters\n- Counter overflow is undefined: https://mailarchive.ietf.org/arch/msg/cfrg/gsOnTJzcbgG6OqD8Sc0GO5aR_tU/\n- 3rd-party library stablelib implementation uses an approach where you can provide\n  nonce and counter instead of just nonce - and it will re-use it\n- We could have did something similar, but ChaCha has different counter position\n  (counter | nonce), which is not composable with XChaCha, because full counter\n  is (nonce16 | counter | nonce16). Stablelib doesn't support in-place counter for XChaCha.\n- We could separate nonce & counter and provide separate API for counter re-use, but\n  there are different counter sizes depending on an algorithm.\n- Salsa & ChaCha also differ in structures of key / sigma:\n\n    salsa:     c0 | k(4) | c1 | nonce(2) | ctr(2) | c2 | k(4) | c4\n    chacha:    c(4) | k(8) | ctr(1) | nonce(3)\n    chachaDJB: c(4) | k(8) | ctr(2) | nonce(2)\n- Creating function such as `setSalsaState(key, nonce, sigma, data)` won't work,\n  because we can't re-use counter array\n- 32-bit nonce is `2 ** 32 * 64` = 256GB with 32-bit counter\n- JS does not allow UintArrays bigger than 4GB, so supporting 64-bit counters doesn't matter\n\nStructure is as following:\n\nkey=16 -> sigma16, k=key|key\nkey=32 -> sigma32, k=key\n\nnonces:\nsalsa20:      8   (8-byte counter)\nchacha20djb:  8   (8-byte counter)\nchacha20tls:  12  (4-byte counter)\nxsalsa:       24  (16 -> hsalsa, 8 -> old nonce)\nxchacha:      24  (16 -> hchacha, 8 -> old nonce)\n\nhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha#appendix-A.2\nUse the subkey and remaining 8 byte nonce with ChaCha20 as normal\n(prefixed by 4 NUL bytes, since [RFC8439] specifies a 12-byte nonce).\n*/\n\nconst sigma16 = utf8ToBytes('expand 16-byte k');\nconst sigma32 = utf8ToBytes('expand 32-byte k');\nconst sigma16_32 = u32(sigma16);\nconst sigma32_32 = u32(sigma32);\n\nexport type SalsaOpts = {\n  core: (\n    c: Uint32Array,\n    key: Uint32Array,\n    nonce: Uint32Array,\n    out: Uint32Array,\n    counter: number,\n    rounds?: number\n  ) => void;\n  rounds?: number;\n  counterRight?: boolean; // counterRight ? nonce | counter : counter | nonce;\n  counterLen?: number;\n  blockLen?: number; // NOTE: not tested with different blockLens!\n  allow128bitKeys?: boolean; // Original salsa/chacha allows these, but not tested!\n  extendNonceFn?: (c: Uint32Array, key: Uint8Array, src: Uint8Array, dst: Uint8Array) => Uint8Array;\n};\n\n// Is byte array aligned to 4 byte offset (u32)?\nconst isAligned32 = (b: Uint8Array) => !(b.byteOffset % 4);\n\nexport const salsaBasic = (opts: SalsaOpts) => {\n  const { core, rounds, counterRight, counterLen, allow128bitKeys, extendNonceFn, blockLen } =\n    checkOpts(\n      { rounds: 20, counterRight: false, counterLen: 8, allow128bitKeys: true, blockLen: 64 },\n      opts\n    );\n  assert.number(counterLen);\n  assert.number(rounds);\n  assert.number(blockLen);\n  assert.bool(counterRight);\n  assert.bool(allow128bitKeys);\n  const blockLen32 = blockLen / 4;\n  if (blockLen % 4 !== 0) throw new Error('Salsa/ChaCha: blockLen should be aligned to 4 bytes');\n  return (\n    key: Uint8Array,\n    nonce: Uint8Array,\n    data: Uint8Array,\n    output?: Uint8Array,\n    counter = 0\n  ): Uint8Array => {\n    assert.bytes(key);\n    assert.bytes(nonce);\n    assert.bytes(data);\n    if (!output) output = new Uint8Array(data.length);\n    assert.bytes(output);\n    assert.number(counter);\n    // > new Uint32Array([2**32])\n    // Uint32Array(1) [ 0 ]\n    // > new Uint32Array([2**32-1])\n    // Uint32Array(1) [ 4294967295 ]\n    if (counter < 0 || counter >= 2 ** 32 - 1) throw new Error('Salsa/ChaCha: counter overflow');\n    if (output.length < data.length) {\n      throw new Error(\n        `Salsa/ChaCha: output (${output.length}) is shorter than data (${data.length})`\n      );\n    }\n    const toClean = [];\n    let k, sigma;\n    // Handle 128 byte keys\n    if (key.length === 32) {\n      k = key;\n      sigma = sigma32_32;\n    } else if (key.length === 16 && allow128bitKeys) {\n      k = new Uint8Array(32);\n      k.set(key);\n      k.set(key, 16);\n      sigma = sigma16_32;\n      toClean.push(k);\n    } else throw new Error(`Salsa/ChaCha: wrong key length=${key.length}, expected`);\n    // Handle extended nonce (HChaCha/HSalsa)\n    if (extendNonceFn) {\n      if (nonce.length <= 16)\n        throw new Error(`Salsa/ChaCha: extended nonce should be bigger than 16 bytes`);\n      k = extendNonceFn(sigma, k, nonce.subarray(0, 16), new Uint8Array(32));\n      toClean.push(k);\n      nonce = nonce.subarray(16);\n    }\n    // Handle nonce counter\n    const nonceLen = 16 - counterLen;\n    if (nonce.length !== nonceLen)\n      throw new Error(`Salsa/ChaCha: nonce should be ${nonceLen} or 16 bytes`);\n    // Pad counter when nonce is 64 bit\n    if (nonceLen !== 12) {\n      const nc = new Uint8Array(12);\n      nc.set(nonce, counterRight ? 0 : 12 - nonce.length);\n      toClean.push((nonce = nc));\n    }\n    // Counter positions\n    const block = new Uint8Array(blockLen);\n    // Cast to Uint32Array for speed\n    const b32 = u32(block);\n    const k32 = u32(k);\n    const n32 = u32(nonce);\n    // Make sure that buffers aligned to 4 bytes\n    const d32 = isAligned32(data) && u32(data);\n    const o32 = isAligned32(output) && u32(output);\n    toClean.push(b32);\n    const len = data.length;\n    for (let pos = 0, ctr = counter; pos < len; ctr++) {\n      core(sigma, k32, n32, b32, ctr, rounds);\n      if (ctr >= 2 ** 32 - 1) throw new Error('Salsa/ChaCha: counter overflow');\n      const take = Math.min(blockLen, len - pos);\n      // full block && aligned to 4 bytes\n      if (take === blockLen && o32 && d32) {\n        const pos32 = pos / 4;\n        if (pos % 4 !== 0) throw new Error('Salsa/ChaCha: wrong block position');\n        for (let j = 0; j < blockLen32; j++) o32[pos32 + j] = d32[pos32 + j] ^ b32[j];\n        pos += blockLen;\n        continue;\n      }\n      for (let j = 0; j < take; j++) output[pos + j] = data[pos + j] ^ block[j];\n      pos += take;\n    }\n    for (let i = 0; i < toClean.length; i++) toClean[i].fill(0);\n    return output;\n  };\n};\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { xchacha20_poly1305 } from '@noble/ciphers/chacha';\nconst TAG_LENGTH = 16;\nexport class XChaCha20Poly1305 {\n    static decrypt(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { additionalData, data, key, nonce, tag } = options;\n            const xc20p = xchacha20_poly1305(key, nonce, additionalData);\n            const ciphertext = new Uint8Array([...data, ...tag]);\n            const plaintext = xc20p.decrypt(ciphertext);\n            return plaintext;\n        });\n    }\n    static encrypt(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { additionalData, data, key, nonce } = options;\n            const xc20p = xchacha20_poly1305(key, nonce, additionalData);\n            const cipherOutput = xc20p.encrypt(data);\n            const ciphertext = cipherOutput.subarray(0, -TAG_LENGTH);\n            const tag = cipherOutput.subarray(-TAG_LENGTH);\n            return { ciphertext, tag };\n        });\n    }\n    static generateKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Generate the secret key.\n            const secretKey = crypto.getRandomValues(new Uint8Array(32));\n            return secretKey;\n        });\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isBytesKeyPair } from '../utils.js';\nimport { Secp256k1 } from '../crypto-primitives/index.js';\nimport { CryptoKey, BaseEcdsaAlgorithm } from '../algorithms-api/index.js';\nexport class EcdsaAlgorithm extends BaseEcdsaAlgorithm {\n    constructor() {\n        super(...arguments);\n        this.hashAlgorithms = ['SHA-256'];\n        this.namedCurves = ['secp256k1'];\n    }\n    generateKey(options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { algorithm, extractable, keyUsages } = options;\n            this.checkGenerateKey({ algorithm, keyUsages });\n            let keyPair;\n            let cryptoKeyPair;\n            switch (algorithm.namedCurve) {\n                case 'secp256k1': {\n                    (_a = algorithm.compressedPublicKey) !== null && _a !== void 0 ? _a : (algorithm.compressedPublicKey = true);\n                    keyPair = yield Secp256k1.generateKeyPair({ compressedPublicKey: algorithm.compressedPublicKey });\n                    break;\n                }\n                // Default case not needed because checkGenerateKey() already validates the specified namedCurve is supported.\n            }\n            if (!isBytesKeyPair(keyPair)) {\n                throw new Error('Operation failed to generate key pair.');\n            }\n            cryptoKeyPair = {\n                privateKey: new CryptoKey(algorithm, extractable, keyPair.privateKey, 'private', this.keyUsages.privateKey),\n                publicKey: new CryptoKey(algorithm, true, keyPair.publicKey, 'public', this.keyUsages.publicKey)\n            };\n            return cryptoKeyPair;\n        });\n    }\n    sign(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { algorithm, key, data } = options;\n            this.checkAlgorithmOptions({ algorithm });\n            // The key's algorithm must match the algorithm implementation processing the operation.\n            this.checkKeyAlgorithm({ keyAlgorithmName: key.algorithm.name });\n            // The key must be a private key.\n            this.checkKeyType({ keyType: key.type, allowedKeyType: 'private' });\n            // The key must be allowed to be used for sign operations.\n            this.checkKeyUsages({ keyUsages: ['sign'], allowedKeyUsages: key.usages });\n            let signature;\n            const keyAlgorithm = key.algorithm; // Type guard.\n            switch (keyAlgorithm.namedCurve) {\n                case 'secp256k1': {\n                    signature = yield Secp256k1.sign({ hash: algorithm.hash, key: key.material, data });\n                    break;\n                }\n                default:\n                    throw new TypeError(`Out of range: '${keyAlgorithm.namedCurve}'. Must be one of '${this.namedCurves.join(', ')}'`);\n            }\n            return signature;\n        });\n    }\n    verify(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { algorithm, key, signature, data } = options;\n            this.checkAlgorithmOptions({ algorithm });\n            // The key's algorithm must match the algorithm implementation processing the operation.\n            this.checkKeyAlgorithm({ keyAlgorithmName: key.algorithm.name });\n            // The key must be a public key.\n            this.checkKeyType({ keyType: key.type, allowedKeyType: 'public' });\n            // The key must be allowed to be used for verify operations.\n            this.checkKeyUsages({ keyUsages: ['verify'], allowedKeyUsages: key.usages });\n            let isValid;\n            const keyAlgorithm = key.algorithm; // Type guard.\n            switch (keyAlgorithm.namedCurve) {\n                case 'secp256k1': {\n                    isValid = yield Secp256k1.verify({ hash: algorithm.hash, key: key.material, signature, data });\n                    break;\n                }\n                default:\n                    throw new TypeError(`Out of range: '${keyAlgorithm.namedCurve}'. Must be one of '${this.namedCurves.join(', ')}'`);\n            }\n            return isValid;\n        });\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isBytesKeyPair } from '../utils.js';\nimport { Ed25519 } from '../crypto-primitives/index.js';\nimport { CryptoKey, BaseEdDsaAlgorithm } from '../algorithms-api/index.js';\nexport class EdDsaAlgorithm extends BaseEdDsaAlgorithm {\n    constructor() {\n        super(...arguments);\n        this.namedCurves = ['Ed25519', 'Ed448'];\n    }\n    generateKey(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { algorithm, extractable, keyUsages } = options;\n            this.checkGenerateKey({ algorithm, keyUsages });\n            let keyPair;\n            let cryptoKeyPair;\n            switch (algorithm.namedCurve) {\n                case 'Ed25519': {\n                    keyPair = yield Ed25519.generateKeyPair();\n                    break;\n                }\n                // Default case not needed because checkGenerateKey() already validates the specified namedCurve is supported.\n            }\n            if (!isBytesKeyPair(keyPair)) {\n                throw new Error('Operation failed to generate key pair.');\n            }\n            cryptoKeyPair = {\n                privateKey: new CryptoKey(algorithm, extractable, keyPair.privateKey, 'private', this.keyUsages.privateKey),\n                publicKey: new CryptoKey(algorithm, true, keyPair.publicKey, 'public', this.keyUsages.publicKey)\n            };\n            return cryptoKeyPair;\n        });\n    }\n    sign(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { algorithm, key, data } = options;\n            this.checkAlgorithmOptions({ algorithm });\n            // The key's algorithm must match the algorithm implementation processing the operation.\n            this.checkKeyAlgorithm({ keyAlgorithmName: key.algorithm.name });\n            // The key must be a private key.\n            this.checkKeyType({ keyType: key.type, allowedKeyType: 'private' });\n            // The key must be allowed to be used for sign operations.\n            this.checkKeyUsages({ keyUsages: ['sign'], allowedKeyUsages: key.usages });\n            let signature;\n            const keyAlgorithm = key.algorithm; // Type guard.\n            switch (keyAlgorithm.namedCurve) {\n                case 'Ed25519': {\n                    signature = yield Ed25519.sign({ key: key.material, data });\n                    break;\n                }\n                default:\n                    throw new TypeError(`Out of range: '${keyAlgorithm.namedCurve}'. Must be one of '${this.namedCurves.join(', ')}'`);\n            }\n            return signature;\n        });\n    }\n    verify(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { algorithm, key, signature, data } = options;\n            this.checkAlgorithmOptions({ algorithm });\n            // The key's algorithm must match the algorithm implementation processing the operation.\n            this.checkKeyAlgorithm({ keyAlgorithmName: key.algorithm.name });\n            // The key must be a public key.\n            this.checkKeyType({ keyType: key.type, allowedKeyType: 'public' });\n            // The key must be allowed to be used for verify operations.\n            this.checkKeyUsages({ keyUsages: ['verify'], allowedKeyUsages: key.usages });\n            let isValid;\n            const keyAlgorithm = key.algorithm; // Type guard.\n            switch (keyAlgorithm.namedCurve) {\n                case 'Ed25519': {\n                    isValid = yield Ed25519.verify({ key: key.material, signature, data });\n                    break;\n                }\n                default:\n                    throw new TypeError(`Out of range: '${keyAlgorithm.namedCurve}'. Must be one of '${this.namedCurves.join(', ')}'`);\n            }\n            return isValid;\n        });\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BasePbkdf2Algorithm, CryptoKey, OperationError } from '../algorithms-api/index.js';\nimport { Pbkdf2 } from '../crypto-primitives/pbkdf2.js';\nexport class Pbkdf2Algorithm extends BasePbkdf2Algorithm {\n    constructor() {\n        super(...arguments);\n        this.hashAlgorithms = ['SHA-256', 'SHA-384', 'SHA-512'];\n    }\n    deriveBits(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { algorithm, baseKey, length } = options;\n            this.checkAlgorithmOptions({ algorithm, baseKey });\n            // The base key must be allowed to be used for deriveBits operations.\n            this.checkKeyUsages({ keyUsages: ['deriveBits'], allowedKeyUsages: baseKey.usages });\n            // If the length is 0, throw.\n            if (typeof length !== 'undefined' && length === 0) {\n                throw new OperationError(`The value of 'length' cannot be zero.`);\n            }\n            // If the length is not a multiple of 8, throw.\n            if (length && length % 8 !== 0) {\n                throw new OperationError(`To be compatible with all browsers, 'length' must be a multiple of 8.`);\n            }\n            const derivedBits = Pbkdf2.deriveKey({\n                hash: algorithm.hash,\n                iterations: algorithm.iterations,\n                length: length,\n                password: baseKey.material,\n                salt: algorithm.salt\n            });\n            return derivedBits;\n        });\n    }\n    importKey(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { format, keyData, algorithm, extractable, keyUsages } = options;\n            this.checkImportKey({ algorithm, format, extractable, keyUsages });\n            const cryptoKey = new CryptoKey(algorithm, extractable, keyData, 'secret', keyUsages);\n            return cryptoKey;\n        });\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { universalTypeOf } from '@web5/common';\nimport { AesCtr } from '../crypto-primitives/index.js';\nimport { BaseAesCtrAlgorithm, CryptoKey } from '../algorithms-api/index.js';\nexport class AesCtrAlgorithm extends BaseAesCtrAlgorithm {\n    decrypt(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { algorithm, key, data } = options;\n            this.checkAlgorithmOptions({ algorithm, key });\n            // The secret key must be allowed to be used for 'decrypt' operations.\n            this.checkKeyUsages({ keyUsages: ['decrypt'], allowedKeyUsages: key.usages });\n            const plaintext = AesCtr.decrypt({\n                counter: algorithm.counter,\n                data: data,\n                key: key.material,\n                length: algorithm.length\n            });\n            return plaintext;\n        });\n    }\n    encrypt(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { algorithm, key, data } = options;\n            this.checkAlgorithmOptions({ algorithm, key });\n            // The secret key must be allowed to be used for 'encrypt' operations.\n            this.checkKeyUsages({ keyUsages: ['encrypt'], allowedKeyUsages: key.usages });\n            const ciphertext = AesCtr.encrypt({\n                counter: algorithm.counter,\n                data: data,\n                key: key.material,\n                length: algorithm.length\n            });\n            return ciphertext;\n        });\n    }\n    generateKey(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { algorithm, extractable, keyUsages } = options;\n            this.checkGenerateKey({ algorithm, keyUsages });\n            const secretKey = yield AesCtr.generateKey({ length: algorithm.length });\n            if (universalTypeOf(secretKey) !== 'Uint8Array') {\n                throw new Error('Operation failed to generate key.');\n            }\n            const secretCryptoKey = new CryptoKey(algorithm, extractable, secretKey, 'secret', this.keyUsages);\n            return secretCryptoKey;\n        });\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { sha256 } from '@noble/hashes/sha256';\nimport { Convert, Multicodec, removeUndefinedProperties } from '@web5/common';\nimport { keyToMultibaseId } from './utils.js';\nimport { CryptoKey } from './algorithms-api/index.js';\nimport { Ed25519, Secp256k1, X25519 } from './crypto-primitives/index.js';\nconst joseToWebCryptoMapping = {\n    'Ed25519': { name: 'EdDSA', namedCurve: 'Ed25519' },\n    'Ed448': { name: 'EdDSA', namedCurve: 'Ed448' },\n    'X25519': { name: 'ECDH', namedCurve: 'X25519' },\n    'secp256k1:ES256K': { name: 'ECDSA', namedCurve: 'secp256k1' },\n    'secp256k1': { name: 'ECDH', namedCurve: 'secp256k1' },\n    'P-256': { name: 'ECDSA', namedCurve: 'P-256' },\n    'P-384': { name: 'ECDSA', namedCurve: 'P-384' },\n    'P-521': { name: 'ECDSA', namedCurve: 'P-521' },\n    'A128CBC': { name: 'AES-CBC', length: 128 },\n    'A192CBC': { name: 'AES-CBC', length: 192 },\n    'A256CBC': { name: 'AES-CBC', length: 256 },\n    'A128CTR': { name: 'AES-CTR', length: 128 },\n    'A192CTR': { name: 'AES-CTR', length: 192 },\n    'A256CTR': { name: 'AES-CTR', length: 256 },\n    'A128GCM': { name: 'AES-GCM', length: 128 },\n    'A192GCM': { name: 'AES-GCM', length: 192 },\n    'A256GCM': { name: 'AES-GCM', length: 256 },\n    'HS256': { name: 'HMAC', hash: { name: 'SHA-256' } },\n    'HS384': { name: 'HMAC', hash: { name: 'SHA-384' } },\n    'HS512': { name: 'HMAC', hash: { name: 'SHA-512' } },\n};\nconst webCryptoToJoseMapping = {\n    'EdDSA:Ed25519': { alg: 'EdDSA', crv: 'Ed25519', kty: 'OKP' },\n    'EdDSA:Ed448': { alg: 'EdDSA', crv: 'Ed448', kty: 'OKP' },\n    'ECDH:X25519': { crv: 'X25519', kty: 'OKP' },\n    'ECDSA:secp256k1': { alg: 'ES256K', crv: 'secp256k1', kty: 'EC' },\n    'ECDH:secp256k1': { crv: 'secp256k1', kty: 'EC' },\n    'ECDSA:P-256': { alg: 'ES256', crv: 'P-256', kty: 'EC' },\n    'ECDSA:P-384': { alg: 'ES384', crv: 'P-384', kty: 'EC' },\n    'ECDSA:P-521': { alg: 'ES512', crv: 'P-521', kty: 'EC' },\n    'AES-CBC:128': { alg: 'A128CBC', kty: 'oct' },\n    'AES-CBC:192': { alg: 'A192CBC', kty: 'oct' },\n    'AES-CBC:256': { alg: 'A256CBC', kty: 'oct' },\n    'AES-CTR:128': { alg: 'A128CTR', kty: 'oct' },\n    'AES-CTR:192': { alg: 'A192CTR', kty: 'oct' },\n    'AES-CTR:256': { alg: 'A256CTR', kty: 'oct' },\n    'AES-GCM:128': { alg: 'A128GCM', kty: 'oct' },\n    'AES-GCM:192': { alg: 'A192GCM', kty: 'oct' },\n    'AES-GCM:256': { alg: 'A256GCM', kty: 'oct' },\n    'HMAC:SHA-256': { alg: 'HS256', kty: 'oct' },\n    'HMAC:SHA-384': { alg: 'HS384', kty: 'oct' },\n    'HMAC:SHA-512': { alg: 'HS512', kty: 'oct' },\n};\nconst multicodecToJoseMapping = {\n    'ed25519-pub': { alg: 'EdDSA', crv: 'Ed25519', kty: 'OKP', x: '' },\n    'ed25519-priv': { alg: 'EdDSA', crv: 'Ed25519', kty: 'OKP', x: '', d: '' },\n    'secp256k1-pub': { alg: 'ES256K', crv: 'secp256k1', kty: 'EC', x: '', y: '' },\n    'secp256k1-priv': { alg: 'ES256K', crv: 'secp256k1', kty: 'EC', x: '', y: '', d: '' },\n    'x25519-pub': { crv: 'X25519', kty: 'OKP', x: '' },\n    'x25519-priv': { crv: 'X25519', kty: 'OKP', x: '', d: '' },\n};\nconst joseToMulticodecMapping = {\n    'Ed25519:public': 'ed25519-pub',\n    'Ed25519:private': 'ed25519-priv',\n    'secp256k1:public': 'secp256k1-pub',\n    'secp256k1:private': 'secp256k1-priv',\n    'X25519:public': 'x25519-pub',\n    'X25519:private': 'x25519-priv',\n};\nexport class Jose {\n    static cryptoKeyToJwk(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { algorithm, extractable, material, type, usages } = options.key;\n            // Translate WebCrypto algorithm to JOSE format.\n            let jsonWebKey = Jose.webCryptoToJose(algorithm);\n            // Set extractable parameter.\n            jsonWebKey.ext = extractable ? 'true' : 'false';\n            // Set key use parameter.\n            jsonWebKey.key_ops = usages;\n            jsonWebKey = yield Jose.keyToJwk(Object.assign({ keyMaterial: material, keyType: type }, jsonWebKey));\n            return Object.assign({}, jsonWebKey);\n        });\n    }\n    static cryptoKeyToJwkPair(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { keyPair } = options;\n            // Convert public and private keys into JSON Web Key format.\n            const privateKeyJwk = yield Jose.cryptoKeyToJwk({ key: keyPair.privateKey });\n            const publicKeyJwk = yield Jose.cryptoKeyToJwk({ key: keyPair.publicKey });\n            // Assemble as a JWK key pair\n            const jwkKeyPair = { privateKeyJwk, publicKeyJwk };\n            return Object.assign({}, jwkKeyPair);\n        });\n    }\n    static joseToMulticodec(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const jsonWebKey = options.key;\n            const params = [];\n            if ('crv' in jsonWebKey) {\n                params.push(jsonWebKey.crv);\n                if ('d' in jsonWebKey) {\n                    params.push('private');\n                }\n                else {\n                    params.push('public');\n                }\n            }\n            const lookupKey = params.join(':');\n            const name = joseToMulticodecMapping[lookupKey];\n            if (name === undefined) {\n                throw new Error(`Unsupported JOSE to Multicodec conversion: '${lookupKey}'`);\n            }\n            const code = Multicodec.getCodeFromName({ name });\n            return { code, name };\n        });\n    }\n    static joseToWebCrypto(options) {\n        const params = [];\n        /**\n         * All Elliptic Curve (EC) and Octet Key Pair (OKP) JSON Web Keys\n         * set a value for the \"crv\" parameter.\n         */\n        if ('crv' in options && options.crv) {\n            params.push(options.crv);\n            // Special case for secp256k1. If alg is \"ES256K\", then ECDSA. Else ECDH.\n            if (options.crv === 'secp256k1' && options.alg === 'ES256K') {\n                params.push(options.alg);\n            }\n            /**\n             * All Octet Sequence (oct) JSON Web Keys omit \"crv\" and\n             * set a value for the \"alg\" parameter.\n             */\n        }\n        else if (options.alg !== undefined) {\n            params.push(options.alg);\n        }\n        else {\n            throw new TypeError(`One or more parameters missing: 'alg' or 'crv'`);\n        }\n        const lookupKey = params.join(':');\n        const webCrypto = joseToWebCryptoMapping[lookupKey];\n        if (webCrypto === undefined) {\n            throw new Error(`Unsupported JOSE to WebCrypto conversion: '${lookupKey}'`);\n        }\n        return Object.assign({}, webCrypto);\n    }\n    /**\n     * Computes the thumbprint of a JSON Web Key (JWK) using the method\n     * specified in RFC 7638. This function accepts RSA, EC, OKP, and oct keys\n     * and returns the thumbprint as a base64url encoded SHA-256 hash of the\n     * JWK's required members, serialized and sorted lexicographically.\n     *\n     * Purpose:\n     * - Uniquely Identifying Keys: The thumbprint allows the unique\n     *   identification of a specific JWK within a set of JWKs. It provides a\n     *   deterministic way to generate a value that can be used as a key\n     *   identifier (kid) or to match a specific key.\n     *\n     * - Simplifying Key Management: In systems where multiple keys are used,\n     *   managing and identifying individual keys can become complex. The\n     *   thumbprint method simplifies this by creating a standardized, unique\n     *   identifier for each key.\n     *\n     * - Enabling Interoperability: By standardizing the method to compute a\n     *   thumbprint, different systems can compute the same thumbprint value for\n     *   a given JWK. This enables interoperability among systems that use JWKs.\n     *\n     * - Secure Comparison: The thumbprint provides a way to securely compare\n     *   JWKs to determine if they are equivalent.\n     *\n     * @param jwk - The JSON Web Key for which the thumbprint will be computed.\n     *              This must be an RSA, EC, OKP, or oct key.\n     * @returns The thumbprint as a base64url encoded string.\n     * @throws {Error} Throws an error if the provided key type is unsupported.\n     *\n     * @example\n     * const jwk: PublicKeyJwk = {\n     *   'kty': 'EC',\n     *   'crv': 'secp256k1',\n     *   'x': '61iPYuGefxotzBdQZtDvv6cWHZmXrTTscY-u7Y2pFZc',\n     *   'y': '88nPCVLfrAY9i-wg5ORcwVbHWC_tbeAd1JE2e0co0lU'\n     * };\n     *\n     * const thumbprint = jwkThumbprint(jwk);\n     * console.log(`JWK thumbprint: ${thumbprint}`);\n     *\n     * @see {@link https://datatracker.ietf.org/doc/html/rfc7638 | RFC7638} for\n     * the specification of JWK thumbprint computation.\n     */\n    static jwkThumbprint(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { key } = options;\n            /** Step 1 - Normalization: The JWK is normalized to include only specific\n             * members and in lexicographic order.\n             * */\n            const keyType = key.kty;\n            let normalizedJwk;\n            if (keyType === 'EC') {\n                normalizedJwk = { crv: key.crv, kty: key.kty, x: key.x, y: key.y };\n            }\n            else if (keyType === 'oct') {\n                normalizedJwk = { k: key.k, kty: key.kty };\n            }\n            else if (keyType === 'OKP') {\n                normalizedJwk = { crv: key.crv, kty: key.kty, x: key.x };\n            }\n            else if (keyType === 'RSA') {\n                normalizedJwk = { e: key.e, kty: key.kty, n: key.n };\n            }\n            else {\n                throw new Error(`Unsupported key type: ${keyType}`);\n            }\n            removeUndefinedProperties(normalizedJwk);\n            /** Step 2 - Serialization: The normalized JWK is serialized to a UTF-8\n             * representation of its JSON encoding. */\n            const serializedJwk = Jose.canonicalize(normalizedJwk);\n            /** Step 3 - Digest Calculation: A cryptographic hash function\n             * (SHA-256 is recommended) is applied to the serialized JWK,\n             * resulting in the thumbprint. */\n            const utf8Bytes = Convert.string(serializedJwk).toUint8Array();\n            const digest = sha256(utf8Bytes);\n            // Encode as Base64Url.\n            const thumbprint = Convert.uint8Array(digest).toBase64Url();\n            return thumbprint;\n        });\n    }\n    static jwkToCryptoKey(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const jsonWebKey = options.key;\n            const { keyMaterial, keyType } = yield Jose.jwkToKey({ key: jsonWebKey });\n            // Translate JOSE format to WebCrypto algorithm.\n            let algorithm = Jose.joseToWebCrypto(jsonWebKey);\n            // Set extractable parameter.\n            let extractable;\n            if ('ext' in jsonWebKey && jsonWebKey.ext !== undefined) {\n                extractable = jsonWebKey.ext === 'true' ? true : false;\n            }\n            else {\n                throw new Error(`Conversion from JWK to CryptoKey failed. Required parameter missing: 'ext'`);\n            }\n            // Set key use parameter.\n            let keyUsage;\n            if ('key_ops' in jsonWebKey && jsonWebKey.key_ops !== undefined) {\n                keyUsage = jsonWebKey.key_ops;\n            }\n            else {\n                throw new Error(`Conversion from JWK to CryptoKey failed. Required parameter missing: 'key_ops'`);\n            }\n            const cryptoKey = new CryptoKey(algorithm, extractable, keyMaterial, keyType, keyUsage);\n            return cryptoKey;\n        });\n    }\n    static jwkToKey(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const jsonWebKey = options.key;\n            let keyMaterial;\n            let keyType;\n            // Asymmetric private key (\"EC\" or \"OKP\" - Curve25519 or SECG curves).\n            if ('d' in jsonWebKey) {\n                keyMaterial = Convert.base64Url(jsonWebKey.d).toUint8Array();\n                keyType = 'private';\n            }\n            // Asymmetric public key (\"EC\" - secp256k1, secp256r1, secp384r1, secp521r1).\n            else if ('y' in jsonWebKey && jsonWebKey.y) {\n                const prefix = new Uint8Array([0x04]); // Designates an uncompressed key.\n                const x = Convert.base64Url(jsonWebKey.x).toUint8Array();\n                const y = Convert.base64Url(jsonWebKey.y).toUint8Array();\n                const publicKey = new Uint8Array([...prefix, ...x, ...y]);\n                keyMaterial = publicKey;\n                keyType = 'public';\n            }\n            // Asymmetric public key (\"OKP\" - Ed25519, X25519).\n            else if ('x' in jsonWebKey) {\n                keyMaterial = Convert.base64Url(jsonWebKey.x).toUint8Array();\n                keyType = 'public';\n            }\n            // Symmetric encryption or signature key (\"oct\" - AES, HMAC)\n            else if ('k' in jsonWebKey) {\n                keyMaterial = Convert.base64Url(jsonWebKey.k).toUint8Array();\n                keyType = 'private';\n            }\n            else {\n                throw new Error('Jose: Unknown JSON Web Key format.');\n            }\n            return { keyMaterial, keyType };\n        });\n    }\n    /**\n    * Note: All secp public keys are converted to compressed point encoding\n    *    before the multibase identifier is computed.\n    *\n    * Per {@link https://github.com/multiformats/multicodec/blob/master/table.csv | Multicodec table}:\n    *    public keys for Elliptic Curve cryptography algorithms (e.g., secp256k1,\n    *    secp256k1r1, secp384r1, etc.) are always represented with compressed point\n    *    encoding (e.g., secp256k1-pub, p256-pub, p384-pub, etc.).\n    *\n    * Per {@link https://datatracker.ietf.org/doc/html/rfc8812#name-jose-and-cose-secp256k1-cur | RFC 8812}:\n    *    \"As a compressed point encoding representation is not defined for JWK\n    *    elliptic curve points, the uncompressed point encoding defined there\n    *    MUST be used. The x and y values represented MUST both be exactly\n    *    256 bits, with any leading zeros preserved.\n    *\n    */\n    static jwkToMultibaseId(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const jsonWebKey = options.key;\n            // Convert the algorithm into Multicodec name format.\n            const { name: multicodecName } = yield Jose.joseToMulticodec({ key: jsonWebKey });\n            // Decode the key as a raw binary data from the JWK.\n            let { keyMaterial } = yield Jose.jwkToKey({ key: jsonWebKey });\n            // Convert secp256k1 public keys to compressed format.\n            if ('crv' in jsonWebKey && !('d' in jsonWebKey)) {\n                switch (jsonWebKey.crv) {\n                    case 'secp256k1': {\n                        keyMaterial = yield Secp256k1.convertPublicKey({\n                            publicKey: keyMaterial,\n                            compressedPublicKey: true\n                        });\n                        break;\n                    }\n                }\n            }\n            // Compute the multibase identifier based on the provided key.\n            const multibaseId = keyToMultibaseId({ key: keyMaterial, multicodecName });\n            return multibaseId;\n        });\n    }\n    static keyToJwk(options) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { keyMaterial, keyType } = options, jsonWebKeyOptions = __rest(options, [\"keyMaterial\", \"keyType\"]);\n            let jsonWebKey = Object.assign({}, jsonWebKeyOptions);\n            /**\n             * All Elliptic Curve (EC) and Octet Key Pair (OKP) keys\n             * specify a \"crv\" (named curve) parameter.\n             */\n            if ('crv' in jsonWebKey) {\n                switch (jsonWebKey.crv) {\n                    case 'Ed25519': {\n                        const publicKey = (keyType === 'private')\n                            ? yield Ed25519.getPublicKey({ privateKey: keyMaterial })\n                            : keyMaterial;\n                        jsonWebKey.x = Convert.uint8Array(publicKey).toBase64Url();\n                        (_a = jsonWebKey.kty) !== null && _a !== void 0 ? _a : (jsonWebKey.kty = 'OKP');\n                        break;\n                    }\n                    case 'X25519': {\n                        const publicKey = (keyType === 'private')\n                            ? yield X25519.getPublicKey({ privateKey: keyMaterial })\n                            : keyMaterial;\n                        jsonWebKey.x = Convert.uint8Array(publicKey).toBase64Url();\n                        (_b = jsonWebKey.kty) !== null && _b !== void 0 ? _b : (jsonWebKey.kty = 'OKP');\n                        break;\n                    }\n                    case 'secp256k1': {\n                        const points = yield Secp256k1.getCurvePoints({ key: keyMaterial });\n                        jsonWebKey.x = Convert.uint8Array(points.x).toBase64Url();\n                        jsonWebKey.y = Convert.uint8Array(points.y).toBase64Url();\n                        (_c = jsonWebKey.kty) !== null && _c !== void 0 ? _c : (jsonWebKey.kty = 'EC');\n                        break;\n                    }\n                    default: {\n                        throw new Error(`Unsupported key to JWK conversion: ${jsonWebKey.crv}`);\n                    }\n                }\n                if (keyType === 'private') {\n                    jsonWebKey = Object.assign({ d: Convert.uint8Array(keyMaterial).toBase64Url() }, jsonWebKey);\n                }\n            }\n            /**\n             * All Octet Sequence (oct) symmetric encryption and signature keys\n             * specify only an \"alg\" parameter.\n             */\n            if (!('crv' in jsonWebKey) && jsonWebKey.kty === 'oct') {\n                jsonWebKey.k = Convert.uint8Array(keyMaterial).toBase64Url();\n            }\n            return Object.assign({}, jsonWebKey);\n        });\n    }\n    static multicodecToJose(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { code, name } = options;\n            // Either code or name must be specified, but not both.\n            if (!(name ? !code : code)) {\n                throw new Error(`Either 'name' or 'code' must be defined, but not both.`);\n            }\n            // If name is undefined, lookup by code.\n            name = (name === undefined) ? Multicodec.getNameFromCode({ code: code }) : name;\n            const lookupKey = name;\n            const jose = multicodecToJoseMapping[lookupKey];\n            if (jose === undefined) {\n                throw new Error(`Unsupported Multicodec to JOSE conversion: '${options.name}'`);\n            }\n            return Object.assign({}, jose);\n        });\n    }\n    static webCryptoToJose(options) {\n        const params = [];\n        /**\n         * All WebCrypto algorithms have the \"named\" parameter.\n         */\n        params.push(options.name);\n        /**\n         * All Elliptic Curve (EC) WebCrypto algorithms\n         * set a value for the \"namedCurve\" parameter.\n         */\n        if ('namedCurve' in options) {\n            params.push(options.namedCurve);\n            /**\n             * All symmetric encryption (AES) WebCrypto algorithms\n             * set a value for the \"length\" parameter.\n             */\n        }\n        else if ('length' in options && options.length !== undefined) {\n            params.push(options.length.toString());\n            /**\n             * All symmetric signature (HMAC) WebCrypto algorithms\n             * set a value for the \"hash\" parameter.\n             */\n        }\n        else if ('hash' in options) {\n            params.push(options.hash.name);\n        }\n        else {\n            throw new TypeError(`One or more parameters missing: 'name', 'namedCurve', 'length', or 'hash'`);\n        }\n        const lookupKey = params.join(':');\n        const jose = webCryptoToJoseMapping[lookupKey];\n        if (jose === undefined) {\n            throw new Error(`Unsupported WebCrypto to JOSE conversion: '${lookupKey}'`);\n        }\n        return Object.assign({}, jose);\n    }\n    static canonicalize(obj) {\n        const sortedKeys = Object.keys(obj).sort();\n        const sortedObj = sortedKeys.reduce((acc, key) => {\n            acc[key] = obj[key];\n            return acc;\n        }, {});\n        return JSON.stringify(sortedObj);\n    }\n}\nexport function CryptoKeyToJwkMixin(Base) {\n    return class extends Base {\n        toJwk() {\n            return __awaiter(this, void 0, void 0, function* () {\n                const jwk = Jose.cryptoKeyToJwk({ key: this });\n                return jwk;\n            });\n        }\n    };\n}\nexport const CryptoKeyWithJwk = CryptoKeyToJwkMixin(CryptoKey);\n", "import DHT from './lib/dht.js'\nimport _z32 from 'z32'\nimport _dns from 'dns-packet'\n\nimport { generateKeyPair as _generateKeyPair, randomBytes, decodeKey } from './lib/tools.js'\nimport _SignedPacket from './lib/signed_packet.js'\n\nexport const SignedPacket = _SignedPacket\nexport const z32 = _z32\nexport const dns = _dns\nexport const generateKeyPair = _generateKeyPair\n\nexport class Pkarr {\n  static generateKeyPair = _generateKeyPair\n  static generateSeed = randomBytes\n\n  /**\n   * Publishes a signed packet using relay. returns the Fetch response.\n   *\n   * @param {string} relay - Relay url\n   * @param {SignedPacket} signedPacket\n   */\n  static async relayPut (relay, signedPacket) {\n    const id = z32.encode(signedPacket.publicKey())\n    const url = relay.replace(/\\/+$/, '') + '/' + id\n\n    return fetch(\n      url,\n      { method: 'PUT', body: signedPacket.bytes() }\n    )\n  }\n\n  /**\n   * Publishes a signed packet using relay. returns the Fetch response.\n   *\n   * @param {string} relay - Relay url\n   * @param {Uint8Array} publicKey\n   */\n  static async relayGet (relay, publicKey) {\n    const id = z32.encode(publicKey)\n    const url = relay.replace(/\\/+$/, '') + '/' + id\n\n    const response = await fetch(url)\n    const bytes = Buffer.from(await response.arrayBuffer())\n\n    return SignedPacket.fromBytes(publicKey, bytes)\n  }\n\n  /**\n   * Publishes a signed packet to the DHT.\n   * Throws an error in browser environment.\n   *\n   * @param {SignedPacket} signedPacket\n   *\n   * @returns {Promise<boolean>}\n   */\n  static async publish (signedPacket) {\n    const dht = new DHT()\n\n    return dht.put(signedPacket.bep44Args())\n      .then(() => true)\n      .catch(() => false)\n      .finally(() => dht.destroy())\n  }\n\n  /**\n   * Resolves a signed packet from the DHT.\n   * Throws an error in browser environment.\n   *\n   * @param {Uint8Array | string} key\n   * @param {object} [options]\n   * @param {boolean} [options.fullLookup=false] - perform a full lookup through the DHT, defaults to false, meaning it will return the first result it finds\n   *\n   * @throws {Error<'Invalid key'>}\n   * @returns {Promise<{signedPacket: SignedPacket, nodes: {host: string, port: number}[]} | null>}\n   */\n  static async resolve (key, options = {}) {\n    const dht = new DHT()\n    try {\n      const result = await dht.get(decodeKey(key), options)\n        .finally(() => dht.destroy())\n\n      if (!result) return null\n\n      return {\n        signedPacket: SignedPacket.fromBep44Args(result),\n        nodes: result.nodes\n      }\n    } catch (error) {\n      dht.destroy()\n\n      throw error\n    }\n  }\n}\n\nexport default Pkarr\n\n/**\n * @typedef {import('./lib/signed_packet.js').Packet} Packet\n * @typedef {import('./lib/signed_packet.js').default} SignedPacket\n */\n", "/**\n * Mock DHT class for browser environment\n */\nexport class DHT {\n  constructor () {\n    throw new Error('not implmented in browser, use Pkarr.relayPut() and Pkarr.relayGet() instead.')\n  }\n}\n\nexport default DHT\n", "import sodium from 'sodium-universal'\nimport bencode from 'bencode'\nimport z32 from 'z32'\n\nexport const verify = sodium.crypto_sign_verify_detached\n\nexport function randomBytes (n = 32) {\n  const buf = Buffer.alloc(n)\n  sodium.randombytes_buf(buf)\n  return buf\n}\n\n// Copied from bittorrent-dht\n/**\n * @param {{seq: number, v: Uint8Array}} msg\n */\nexport const encodeSigData = (msg) => {\n  const ref = { seq: msg.seq || 0, v: msg.v }\n  const bencoded = bencode.encode(ref).subarray(1, -1)\n  return bencoded\n}\n\n/**\n * @param {Uint8Array} sigData\n *\n * @returns {{seq:number, v: Uint8Array}}\n */\nexport const decodeSigData = (sigData) => {\n  const dict = new Uint8Array(sigData.length + 2)\n  dict[0] = 100 // d\n  dict.set(sigData, 1)\n  dict[sigData.length + 1] = 101 // e\n\n  return bencode.decode(dict)\n}\n\n/**\n * Generate a keypair\n * @param {Uint8Array} [seed]\n *\n * @returns {KeyPair}\n */\nexport const generateKeyPair = (seed) => {\n  const publicKey = Buffer.allocUnsafe(sodium.crypto_sign_PUBLICKEYBYTES)\n  const secretKey = Buffer.allocUnsafe(sodium.crypto_sign_SECRETKEYBYTES)\n\n  if (seed) sodium.crypto_sign_seed_keypair(publicKey, secretKey, seed)\n  else sodium.crypto_sign_keypair(publicKey, secretKey)\n\n  return {\n    publicKey,\n    secretKey\n  }\n}\n\n/**\n * @param {string | Uint8Array} url\n *\n * @returns {Uint8Array}\n */\nexport const decodeKey = (url) => {\n  if (typeof url !== 'string') return url\n\n  const keyBytes = z32.decode(url.replace('pk:', ''))\n\n  if (keyBytes.byteLength !== 32) {\n    throw new Error('Invalid key')\n  }\n\n  return keyBytes\n}\n\n/**\n * @typedef {{secretKey: Uint8Array, publicKey: Uint8Array}} KeyPair\n */\n", "import encode from './lib/encode.js'\nimport decode from './lib/decode.js'\nimport byteLength from './lib/encoding-length.js'\n/**\n * Determines the amount of bytes\n * needed to encode the given value\n * @param  {Object|Array|Uint8Array|String|Number|Boolean} value\n * @return {Number} byteCount\n */\nconst encodingLength = byteLength\nexport default { encode, decode, byteLength, encodingLength }\n", "import { concat, text2arr } from 'uint8-util'\nimport { getType } from './util.js'\n\n/**\n * Encodes data in bencode.\n *\n * @param  {Uint8Array|Array|String|Object|Number|Boolean} data\n * @return {Uint8Array}\n */\nfunction encode (data, buffer, offset) {\n  const buffers = []\n  let result = null\n\n  encode._encode(buffers, data)\n  result = concat(buffers)\n  encode.bytes = result.length\n\n  if (ArrayBuffer.isView(buffer)) {\n    buffer.set(result, offset)\n    return buffer\n  }\n\n  return result\n}\n\nencode.bytes = -1\nencode._floatConversionDetected = false\n\nencode._encode = function (buffers, data) {\n  if (data == null) { return }\n\n  switch (getType(data)) {\n    case 'object': encode.dict(buffers, data); break\n    case 'map': encode.dictMap(buffers, data); break\n    case 'array': encode.list(buffers, data); break\n    case 'set': encode.listSet(buffers, data); break\n    case 'string': encode.string(buffers, data); break\n    case 'number': encode.number(buffers, data); break\n    case 'boolean': encode.number(buffers, data); break\n    case 'arraybufferview': encode.buffer(buffers, new Uint8Array(data.buffer, data.byteOffset, data.byteLength)); break\n    case 'arraybuffer': encode.buffer(buffers, new Uint8Array(data)); break\n  }\n}\n\nconst buffE = new Uint8Array([0x65])\nconst buffD = new Uint8Array([0x64])\nconst buffL = new Uint8Array([0x6C])\n\nencode.buffer = function (buffers, data) {\n  buffers.push(text2arr(data.length + ':'), data)\n}\n\nencode.string = function (buffers, data) {\n  buffers.push(text2arr(text2arr(data).byteLength + ':' + data))\n}\n\nencode.number = function (buffers, data) {\n  const maxLo = 0x80000000\n  const hi = (data / maxLo) << 0\n  const lo = (data % maxLo) << 0\n  const val = hi * maxLo + lo\n\n  buffers.push(text2arr('i' + val + 'e'))\n\n  if (val !== data && !encode._floatConversionDetected) {\n    encode._floatConversionDetected = true\n    console.warn(\n      'WARNING: Possible data corruption detected with value \"' + data + '\":',\n      'Bencoding only defines support for integers, value was converted to \"' + val + '\"'\n    )\n    console.trace()\n  }\n}\n\nencode.dict = function (buffers, data) {\n  buffers.push(buffD)\n\n  let j = 0\n  let k\n  // fix for issue #13 - sorted dicts\n  const keys = Object.keys(data).sort()\n  const kl = keys.length\n\n  for (; j < kl; j++) {\n    k = keys[j]\n    if (data[k] == null) continue\n    encode.string(buffers, k)\n    encode._encode(buffers, data[k])\n  }\n\n  buffers.push(buffE)\n}\n\nencode.dictMap = function (buffers, data) {\n  buffers.push(buffD)\n\n  const keys = Array.from(data.keys()).sort()\n\n  for (const key of keys) {\n    if (data.get(key) == null) continue\n    ArrayBuffer.isView(key)\n      ? encode._encode(buffers, key)\n      : encode.string(buffers, String(key))\n    encode._encode(buffers, data.get(key))\n  }\n\n  buffers.push(buffE)\n}\n\nencode.list = function (buffers, data) {\n  let i = 0\n  const c = data.length\n  buffers.push(buffL)\n\n  for (; i < c; i++) {\n    if (data[i] == null) continue\n    encode._encode(buffers, data[i])\n  }\n\n  buffers.push(buffE)\n}\n\nencode.listSet = function (buffers, data) {\n  buffers.push(buffL)\n\n  for (const item of data) {\n    if (item == null) continue\n    encode._encode(buffers, item)\n  }\n\n  buffers.push(buffE)\n}\n\nexport default encode\n", "import { arr2hex, hex2arr, alphabet } from './util.js'\r\nimport { decode, encode } from 'base64-arraybuffer'\r\n\r\nconst decoder = new TextDecoder()\r\n// 50% slower at < 48 chars, but little impact at 4M OPS/s vs 8M OPS/s\r\nexport const arr2text = (data, enc) => {\r\n  if (!enc) return decoder.decode(data)\r\n  const dec = new TextDecoder(enc)\r\n  return dec.decode(data)\r\n}\r\n\r\n// sacrifice ~20% speed for bundle size\r\nconst encoder = new TextEncoder()\r\nexport const text2arr = str => encoder.encode(str)\r\n\r\nexport const arr2base = data => encode(data)\r\n\r\nexport const base2arr = str => new Uint8Array(decode(str))\r\n\r\nexport const bin2hex = str => {\r\n  let res = ''\r\n  let c\r\n  let i = 0\r\n  const len = str.length\r\n\r\n  while (i < len) {\r\n    c = str.charCodeAt(i++)\r\n    res += alphabet[c >> 4] + alphabet[c & 0xF]\r\n  }\r\n\r\n  return res\r\n}\r\n\r\nconst MAX_ARGUMENTS_LENGTH = 0x10000\r\nexport const hex2bin = hex => {\r\n  const points = hex2arr(hex)\r\n  if (points.length <= MAX_ARGUMENTS_LENGTH) return String.fromCharCode(...points)\r\n\r\n  let res = ''\r\n  let i = 0\r\n  while (i < points.length) {\r\n    res += String.fromCharCode(...points.subarray(i, i += MAX_ARGUMENTS_LENGTH))\r\n  }\r\n  return res\r\n}\r\n\r\nconst scope = typeof window !== 'undefined' ? window : self\r\nconst crypto = scope.crypto || scope.msCrypto || {}\r\nconst subtle = crypto.subtle || crypto.webkitSubtle\r\n\r\nconst formatMap = {\r\n  hex: arr2hex,\r\n  base64: arr2base\r\n}\r\n\r\nexport const hash = async (data, format, algo = 'sha-1') => {\r\n  if (!subtle) throw new Error('no web crypto support')\r\n  if (typeof data === 'string') data = text2arr(data)\r\n  const out = new Uint8Array(await subtle.digest(algo, data))\r\n  return format ? formatMap[format](out) : out\r\n}\r\n\r\nexport const randomBytes = size => {\r\n  const view = new Uint8Array(size)\r\n  return crypto.getRandomValues(view)\r\n}\r\n\r\nexport * from './util.js'\r\n", "/* Common package for dealing with hex/string/uint8 conversions (and sha1 hashing)\r\n*\r\n* @author   Jimmy W\u00E4rting <jimmy@warting.se> (https://jimmy.warting.se/opensource)\r\n* @license  MIT\r\n*/\r\nexport const alphabet = '0123456789abcdef'\r\nconst encodeLookup = []\r\nconst decodeLookup = []\r\n\r\nfor (let i = 0; i < 256; i++) {\r\n  encodeLookup[i] = alphabet[i >> 4 & 0xf] + alphabet[i & 0xf]\r\n  if (i < 16) {\r\n    if (i < 10) {\r\n      decodeLookup[0x30 + i] = i\r\n    } else {\r\n      decodeLookup[0x61 - 10 + i] = i\r\n    }\r\n  }\r\n}\r\n\r\nexport const arr2hex = data => {\r\n  const length = data.length\r\n  let string = ''\r\n  let i = 0\r\n  while (i < length) {\r\n    string += encodeLookup[data[i++]]\r\n  }\r\n  return string\r\n}\r\n\r\nexport const hex2arr = str => {\r\n  const sizeof = str.length >> 1\r\n  const length = sizeof << 1\r\n  const array = new Uint8Array(sizeof)\r\n  let n = 0\r\n  let i = 0\r\n  while (i < length) {\r\n    array[n++] = decodeLookup[str.charCodeAt(i++)] << 4 | decodeLookup[str.charCodeAt(i++)]\r\n  }\r\n  return array\r\n}\r\n\r\nexport const concat = (chunks, size = 0) => {\r\n  const length = chunks.length || 0\r\n  if (!size) {\r\n    let i = length\r\n    while (i--) size += chunks[i].length\r\n  }\r\n  const b = new Uint8Array(size)\r\n  let offset = size\r\n  let i = length\r\n  while (i--) {\r\n    offset -= chunks[i].length\r\n    b.set(chunks[i], offset)\r\n  }\r\n\r\n  return b\r\n}\r\n\r\nexport const equal = (a, b) => {\r\n  if (a.length !== b.length) return false\r\n  for (let i = a.length; i > -1; i -= 1) {\r\n    if ((a[i] !== b[i])) return false\r\n  }\r\n  return true\r\n}\r\n", "const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\n\nexport const encode = (arraybuffer: ArrayBuffer): string => {\n    let bytes = new Uint8Array(arraybuffer),\n        i,\n        len = bytes.length,\n        base64 = '';\n\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    } else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n\n    return base64;\n};\n\nexport const decode = (base64: string): ArrayBuffer => {\n    let bufferLength = base64.length * 0.75,\n        len = base64.length,\n        i,\n        p = 0,\n        encoded1,\n        encoded2,\n        encoded3,\n        encoded4;\n\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    const arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n};\n", "export function digitCount (value) {\n  // Add a digit for negative numbers, as the sign will be prefixed\n  const sign = value < 0 ? 1 : 0\n  // Guard against negative numbers & zero going into log10(),\n  // as that would return -Infinity\n  value = Math.abs(Number(value || 1))\n  return Math.floor(Math.log10(value)) + 1 + sign\n}\n\nexport function getType (value) {\n  if (ArrayBuffer.isView(value)) return 'arraybufferview'\n  if (Array.isArray(value)) return 'array'\n  if (value instanceof Number) return 'number'\n  if (value instanceof Boolean) return 'boolean'\n  if (value instanceof Set) return 'set'\n  if (value instanceof Map) return 'map'\n  if (value instanceof String) return 'string'\n  if (value instanceof ArrayBuffer) return 'arraybuffer'\n  return typeof value\n}\n", "import { arr2text, text2arr } from 'uint8-util'\n\nconst INTEGER_START = 0x69 // 'i'\nconst STRING_DELIM = 0x3A // ':'\nconst DICTIONARY_START = 0x64 // 'd'\nconst LIST_START = 0x6C // 'l'\nconst END_OF_TYPE = 0x65 // 'e'\n\n/**\n * replaces parseInt(buffer.toString('ascii', start, end)).\n * For strings with less then ~30 charachters, this is actually a lot faster.\n *\n * @param {Uint8Array} data\n * @param {Number} start\n * @param {Number} end\n * @return {Number} calculated number\n */\nfunction getIntFromBuffer (buffer, start, end) {\n  let sum = 0\n  let sign = 1\n\n  for (let i = start; i < end; i++) {\n    const num = buffer[i]\n\n    if (num < 58 && num >= 48) {\n      sum = sum * 10 + (num - 48)\n      continue\n    }\n\n    if (i === start && num === 43) { // +\n      continue\n    }\n\n    if (i === start && num === 45) { // -\n      sign = -1\n      continue\n    }\n\n    if (num === 46) { // .\n      // its a float. break here.\n      break\n    }\n\n    throw new Error('not a number: buffer[' + i + '] = ' + num)\n  }\n\n  return sum * sign\n}\n\n/**\n * Decodes bencoded data.\n *\n * @param  {Uint8Array} data\n * @param  {Number} start (optional)\n * @param  {Number} end (optional)\n * @param  {String} encoding (optional)\n * @return {Object|Array|Uint8Array|String|Number}\n */\nfunction decode (data, start, end, encoding) {\n  if (data == null || data.length === 0) {\n    return null\n  }\n\n  if (typeof start !== 'number' && encoding == null) {\n    encoding = start\n    start = undefined\n  }\n\n  if (typeof end !== 'number' && encoding == null) {\n    encoding = end\n    end = undefined\n  }\n\n  decode.position = 0\n  decode.encoding = encoding || null\n\n  decode.data = !(ArrayBuffer.isView(data))\n    ? text2arr(data)\n    : new Uint8Array(data.slice(start, end))\n\n  decode.bytes = decode.data.length\n\n  return decode.next()\n}\n\ndecode.bytes = 0\ndecode.position = 0\ndecode.data = null\ndecode.encoding = null\n\ndecode.next = function () {\n  switch (decode.data[decode.position]) {\n    case DICTIONARY_START:\n      return decode.dictionary()\n    case LIST_START:\n      return decode.list()\n    case INTEGER_START:\n      return decode.integer()\n    default:\n      return decode.buffer()\n  }\n}\n\ndecode.find = function (chr) {\n  let i = decode.position\n  const c = decode.data.length\n  const d = decode.data\n\n  while (i < c) {\n    if (d[i] === chr) return i\n    i++\n  }\n\n  throw new Error(\n    'Invalid data: Missing delimiter \"' +\n    String.fromCharCode(chr) + '\" [0x' +\n    chr.toString(16) + ']'\n  )\n}\n\ndecode.dictionary = function () {\n  decode.position++\n\n  const dict = {}\n\n  while (decode.data[decode.position] !== END_OF_TYPE) {\n    dict[arr2text(decode.buffer())] = decode.next()\n  }\n\n  decode.position++\n\n  return dict\n}\n\ndecode.list = function () {\n  decode.position++\n\n  const lst = []\n\n  while (decode.data[decode.position] !== END_OF_TYPE) {\n    lst.push(decode.next())\n  }\n\n  decode.position++\n\n  return lst\n}\n\ndecode.integer = function () {\n  const end = decode.find(END_OF_TYPE)\n  const number = getIntFromBuffer(decode.data, decode.position + 1, end)\n\n  decode.position += end + 1 - decode.position\n\n  return number\n}\n\ndecode.buffer = function () {\n  let sep = decode.find(STRING_DELIM)\n  const length = getIntFromBuffer(decode.data, decode.position, sep)\n  const end = ++sep + length\n\n  decode.position = end\n\n  return decode.encoding\n    ? arr2text(decode.data.slice(sep, end))\n    : decode.data.slice(sep, end)\n}\n\nexport default decode\n", "import { text2arr } from 'uint8-util'\nimport { digitCount, getType } from './util.js'\n\nfunction listLength (list) {\n  let length = 1 + 1 // type marker + end-of-type marker\n\n  for (const value of list) {\n    length += encodingLength(value)\n  }\n\n  return length\n}\n\nfunction mapLength (map) {\n  let length = 1 + 1 // type marker + end-of-type marker\n\n  for (const [key, value] of map) {\n    const keyLength = text2arr(key).byteLength\n    length += digitCount(keyLength) + 1 + keyLength\n    length += encodingLength(value)\n  }\n\n  return length\n}\n\nfunction objectLength (value) {\n  let length = 1 + 1 // type marker + end-of-type marker\n  const keys = Object.keys(value)\n\n  for (let i = 0; i < keys.length; i++) {\n    const keyLength = text2arr(keys[i]).byteLength\n    length += digitCount(keyLength) + 1 + keyLength\n    length += encodingLength(value[keys[i]])\n  }\n\n  return length\n}\n\nfunction stringLength (value) {\n  const length = text2arr(value).byteLength\n  return digitCount(length) + 1 + length\n}\n\nfunction arrayBufferLength (value) {\n  const length = value.byteLength - value.byteOffset\n  return digitCount(length) + 1 + length\n}\n\nfunction encodingLength (value) {\n  const length = 0\n\n  if (value == null) return length\n\n  const type = getType(value)\n\n  switch (type) {\n    case 'arraybufferview': return arrayBufferLength(value)\n    case 'string': return stringLength(value)\n    case 'array': case 'set': return listLength(value)\n    case 'number': return 1 + digitCount(Math.floor(value)) + 1\n    case 'bigint': return 1 + value.toString().length + 1\n    case 'object': return objectLength(value)\n    case 'map': return mapLength(value)\n    default:\n      throw new TypeError(`Unsupported value of type \"${type}\"`)\n  }\n}\n\nexport default encodingLength\n", "import z32 from 'z32'\nimport dns from 'dns-packet'\nimport sodium from 'sodium-universal'\n\nimport { encodeSigData } from './tools.js'\n\nconst verify = sodium.crypto_sign_verify_detached\n\nexport default class SignedPacket {\n  /** @type {Uint8Array} */\n  #publicKey\n  /** @type {Packet} */\n  #packet\n  /** @type {Uint8Array} */\n  #bytes\n  /** @type {number} */\n  #timestamp\n\n  /**\n   * Creates a new SignedPacket from a Keypair and a DNS Packet.\n   *\n   * It will also normalize the names of the ResourceRecords to be relative to the origin, which would be the zbase32 encoded PublicKey of the Keypair used to sign the Packet.\n   *\n   * @param {Keypair} keypair\n   * @param {Packet} packet\n   *\n   * @param {object} [options] - Optional arguments mostly useful for unit testing\n   * @param {object} [options.timestamp] - timestamp in microseconds\n   *\n   * @returns {SignedPacket}\n   */\n  static fromPacket (keypair, packet, options = {}) {\n    const origin = z32.encode(keypair.publicKey)\n\n    packet.answers = packet.answers.map(answer => {\n      answer.name = normalizeName(origin, answer.name)\n      return answer\n    })\n\n    const signedPacket = new SignedPacket()\n    signedPacket.#packet = packet\n\n    const timestamp = Math.ceil(options.timestamp || (Date.now() * 1000)) // Micro seconds\n    const encodedPacket = dns.encode(packet)\n\n    const signable = encodeSigData({ seq: timestamp, v: encodedPacket })\n\n    const signature = Buffer.alloc(sodium.crypto_sign_BYTES)\n    sodium.crypto_sign_detached(signature, signable, keypair.secretKey)\n\n    signedPacket.#timestamp = timestamp\n    signedPacket.#publicKey = keypair.publicKey\n\n    const bytes = Buffer.alloc(encodedPacket.length + 72)\n    bytes.set(signature)\n    bytes.writeBigUInt64BE(BigInt(timestamp), 64)\n    bytes.set(encodedPacket, 72)\n\n    signedPacket.#bytes = bytes\n\n    return signedPacket\n  }\n\n  /**\n   * Creates a new [SignedPacket] from a [PublicKey] and the concatenated 64 bytes Signature,\n   * 8 bytes timestamp and encoded [Packet] as defined in the [relays](https://github.com/Nuhvi/pkarr/blob/main/design/relays.md) spec.\n   *\n   * @param {Uint8Array} publicKey\n   * @param {Uint8Array} bytes\n   */\n  static fromBytes (publicKey, bytes) {\n    const buffer = Buffer.from(bytes)\n\n    if (buffer.length < 72) {\n      throw new Error(`Invalid SignedPacket bytes length, expected at least 72 bytes but got: ${buffer.length}`)\n    }\n    if (buffer.length > 1072) {\n      throw new Error(`Encoded and compressed DNS Packet is too large, expected max 1000 bytes but got: ${buffer.length}`)\n    }\n\n    const seq = Number(buffer.readBigUInt64BE(64))\n    const v = buffer.subarray(72)\n    const sig = buffer.subarray(0, 64)\n\n    return SignedPacket.fromBep44Args({\n      k: publicKey,\n      seq,\n      v,\n      sig\n    })\n  }\n\n  /**\n   * @param {Bep44Args} args\n   */\n  static fromBep44Args (args) {\n    const publicKey = args.k\n    const signature = args.sig\n    const encodedPacket = Buffer.from(args.v)\n    const timestamp = args.seq\n\n    const signable = encodeSigData({ seq: timestamp, v: encodedPacket })\n\n    const valid = verify(signature, signable, publicKey)\n\n    if (!valid) {\n      throw Error('Invalid signature')\n    }\n\n    const packet = dns.decode(encodedPacket)\n\n    const signedPacket = new SignedPacket()\n\n    signedPacket.#publicKey = publicKey\n    signedPacket.#packet = packet\n    signedPacket.#timestamp = timestamp\n\n    const buffer = Buffer.alloc(args.v.length + 72)\n    buffer.set(signature)\n    buffer.writeBigUInt64BE(BigInt(timestamp), 64)\n    buffer.set(encodedPacket, 72)\n\n    signedPacket.#bytes = buffer\n\n    return signedPacket\n  }\n\n  /**\n   * Returns a list of resource records with the target `name`.\n   * `name` can be not normalized, for example `@` or `subdomain.`.\n   *\n   * @param {string} name\n   */\n  resourceRecords (name) {\n    const origin = z32.encode(this.publicKey())\n    const normalizedName = normalizeName(origin, name)\n\n    return this.packet()\n      .answers\n      .filter((rr) => rr.name === normalizedName)\n  }\n\n  /**\n   * Returns the publicKey singing this packet\n   *\n   * @returns{Uint8Array}\n   * */\n  publicKey () {\n    return this.#publicKey\n  }\n\n  /**\n   * Returns the DNS packet\n   *\n   * @returns{Packet}\n   * */\n  packet () {\n    return this.#packet\n  }\n\n  /**\n   * Returns the timestamp of the creation of the signed packet\n   *\n   * @returns {number}\n   */\n  timestamp () {\n    return this.#timestamp\n  }\n\n  /**\n   * Returns the signature over the encoded DNS packet and timestamp as defined by BEP44\n   *\n   * @returns{Uint8Array}\n   * */\n  signature () {\n    return this.#bytes.subarray(0, 64)\n  }\n\n  /**\n   * Returns the encoded signature, timestamp and packet as defined in the [relays](https://github.com/Nuhvi/pkarr/blob/main/design/relays.md) spec.\n   *\n   * @returns {Uint8Array}\n   */\n  bytes () {\n    return this.#bytes\n  }\n\n  /**\n   * Returns BEP0044 arguments { seq, v, sig }\n   *\n   * @returns {Bep44Args}\n   */\n  bep44Args () {\n    return {\n      k: this.publicKey(),\n      seq: this.timestamp(),\n      sig: this.signature(),\n      v: this.#bytes.subarray(72)\n    }\n  }\n\n  /**\n   * Returns the size of the encoded packet\n   */\n  size () {\n    return this.#bytes.length - 72\n  }\n}\n\n/**\n *\n * @param {string} origin\n * @param {string} name\n *\n * @returns {string}\n */\nfunction normalizeName (origin, name) {\n  if (name.endsWith('.')) {\n    name = name.slice(0, -1)\n  };\n\n  const parts = name.split('.')\n  const last = parts[parts.length - 1]\n\n  if (last === origin) {\n    // Already normalized.\n    return name\n  } else if (last === '@' || last.length === 0) {\n    // Shorthand of origin\n    return origin\n  }\n\n  return name.concat('.').concat(origin)\n}\n\n/**\n * @typedef {import('dns-packet').Packet} Packet\n * @typedef {{secretKey: Uint8Array, publicKey: Uint8Array}} Keypair\n * @typedef {{k:Uint8Array, seq: number, v: Uint8Array, sig: Uint8Array}} Bep44Args\n */\n", "import type { JwkKeyPair, PublicKeyJwk, Web5Crypto } from '@web5/crypto';\n\nimport z32 from 'z32';\nimport { EcdsaAlgorithm, EdDsaAlgorithm, Jose } from '@web5/crypto';\n\nimport type {\n  DidMethod,\n  DidService,\n  DidDocument,\n  PortableDid,\n  DidResolutionResult,\n  DidResolutionOptions,\n  VerificationRelationship,\n  DidKeySetVerificationMethodKey,\n} from './types.js';\n\nimport { DidDht } from './dht.js';\nimport { parseDid } from './utils.js';\n\nconst SupportedCryptoKeyTypes = [\n  'Ed25519',\n  'secp256k1'\n] as const;\n\nexport type DidDhtCreateOptions = {\n  publish?: boolean;\n  keySet?: DidDhtKeySet;\n  services?: DidService[];\n}\n\nexport type DidDhtKeySet = {\n  identityKey?: JwkKeyPair;\n  verificationMethodKeys?: DidKeySetVerificationMethodKey[];\n}\n\nexport class DidDhtMethod implements DidMethod {\n\n  public static methodName = 'dht';\n\n  /**\n   * Creates a new DID Document according to the did:dht spec.\n   * @param options The options to use when creating the DID Document, including whether to publish it.\n   * @returns A promise that resolves to a PortableDid object.\n   */\n  public static async create(options?: DidDhtCreateOptions): Promise<PortableDid> {\n    const { publish, keySet: initialKeySet, services } = options ?? {};\n\n    // Generate missing keys, if not provided in the options.\n    const keySet = await this.generateKeySet({ keySet: initialKeySet });\n\n    // Get the identifier and set it.\n    const id = await this.getDidIdentifier({ key: keySet.identityKey.publicKeyJwk });\n\n    // Add all other keys to the verificationMethod and relationship arrays.\n    const relationshipsMap: Partial<Record<VerificationRelationship, string[]>> = {};\n    const verificationMethods = keySet.verificationMethodKeys.map(key => {\n      for (const relationship of key.relationships) {\n        if (relationshipsMap[relationship]) {\n          relationshipsMap[relationship].push(`#${key.publicKeyJwk.kid}`);\n        } else {\n          relationshipsMap[relationship] = [`#${key.publicKeyJwk.kid}`];\n        }\n      }\n\n      return {\n        id           : `${id}#${key.publicKeyJwk.kid}`,\n        type         : 'JsonWebKey2020',\n        controller   : id,\n        publicKeyJwk : key.publicKeyJwk\n      };\n    });\n\n    // Add DID identifier to the service IDs.\n    services?.map(service => {\n      service.id = `${id}#${service.id}`;\n    });\n    const document: DidDocument = {\n      id,\n      verificationMethod: [...verificationMethods],\n      ...relationshipsMap,\n      ...services && {service: services}\n    };\n\n    if (publish) {\n      await this.publish({ keySet, didDocument: document });\n    }\n    return {\n      did      : document.id,\n      document : document,\n      keySet   : keySet\n    };\n  }\n\n\n  /**\n   * Generates a JWK key pair.\n   * @param options The key algorithm and key ID to use.\n   * @returns A promise that resolves to a JwkKeyPair object.\n   */\n  public static async generateJwkKeyPair(options: {\n    keyAlgorithm: typeof SupportedCryptoKeyTypes[number],\n    keyId?: string\n  }): Promise<JwkKeyPair> {\n    const {keyAlgorithm, keyId} = options;\n\n    let cryptoKeyPair: Web5Crypto.CryptoKeyPair;\n\n    switch (keyAlgorithm) {\n      case 'Ed25519': {\n        cryptoKeyPair = await new EdDsaAlgorithm().generateKey({\n          algorithm   : {name: 'EdDSA', namedCurve: 'Ed25519'},\n          extractable : true,\n          keyUsages   : ['sign', 'verify']\n        });\n        break;\n      }\n\n      case 'secp256k1': {\n        cryptoKeyPair = await new EcdsaAlgorithm().generateKey({\n          algorithm   : {name: 'ECDSA', namedCurve: 'secp256k1'},\n          extractable : true,\n          keyUsages   : ['sign', 'verify']\n        });\n        break;\n      }\n\n      default: {\n        throw new Error(`Unsupported crypto algorithm: '${keyAlgorithm}'`);\n      }\n    }\n\n    // Convert the CryptoKeyPair to JwkKeyPair.\n    const jwkKeyPair = await Jose.cryptoKeyToJwkPair({keyPair: cryptoKeyPair});\n\n    // Set kid values.\n    if (keyId) {\n      jwkKeyPair.privateKeyJwk.kid = keyId;\n      jwkKeyPair.publicKeyJwk.kid = keyId;\n    } else {\n    // If a key ID is not specified, generate RFC 7638 JWK thumbprint.\n      const jwkThumbprint = await Jose.jwkThumbprint({key: jwkKeyPair.publicKeyJwk});\n      jwkKeyPair.privateKeyJwk.kid = jwkThumbprint;\n      jwkKeyPair.publicKeyJwk.kid = jwkThumbprint;\n    }\n\n    return jwkKeyPair;\n  }\n\n  /**\n   * Generates a key set for a DID Document.\n   * @param options The key set to use when generating the key set.\n   * @returns A promise that resolves to a DidDhtKeySet object.\n   */\n  public static async generateKeySet(options?: {\n    keySet?: DidDhtKeySet\n  }): Promise<DidDhtKeySet> {\n    let { keySet = {} } = options ?? {};\n\n    if (!keySet.identityKey) {\n      keySet.identityKey = await this.generateJwkKeyPair({\n        keyAlgorithm : 'Ed25519',\n        keyId        : '0'\n      });\n\n\n    } else if (keySet.identityKey.publicKeyJwk.kid !== '0') {\n      throw new Error('The identity key must have a kid of 0');\n    }\n\n    // add verificationMethodKeys for the identity key\n    const identityKeySetVerificationMethod: DidKeySetVerificationMethodKey = {\n      ...keySet.identityKey,\n      relationships: ['authentication', 'assertionMethod', 'capabilityInvocation', 'capabilityDelegation']\n    };\n\n    if (!keySet.verificationMethodKeys) {\n      keySet.verificationMethodKeys = [identityKeySetVerificationMethod];\n    } else if (keySet.verificationMethodKeys.filter(key => key.publicKeyJwk.kid === '0').length === 0) {\n      keySet.verificationMethodKeys.push(identityKeySetVerificationMethod);\n    }\n\n    // Generate RFC 7638 JWK thumbprints if `kid` is missing from any key.\n    if (keySet.verificationMethodKeys) {\n      for (const key of keySet.verificationMethodKeys) {\n        if (key.publicKeyJwk) key.publicKeyJwk.kid ??= await Jose.jwkThumbprint({key: key.publicKeyJwk});\n        if (key.privateKeyJwk) key.privateKeyJwk.kid ??= await Jose.jwkThumbprint({key: key.privateKeyJwk});\n      }\n    }\n\n    return keySet;\n  }\n\n  /**\n   * Gets the identifier fragment from a DID.\n   * @param options The key to get the identifier fragment from.\n   * @returns A promise that resolves to a string containing the identifier.\n   */\n  public static async getDidIdentifier(options: {\n    key: PublicKeyJwk\n  }): Promise<string> {\n    const {key} = options;\n\n    const cryptoKey = await Jose.jwkToCryptoKey({key});\n    const identifier = z32.encode(cryptoKey.material);\n    return 'did:dht:' + identifier;\n  }\n\n  /**\n   * Gets the identifier fragment from a DID.\n   * @param options The key to get the identifier fragment from.\n   * @returns A promise that resolves to a string containing the identifier fragment.\n   */\n  public static async getDidIdentifierFragment(options: {\n    key: PublicKeyJwk\n  }): Promise<string> {\n    const {key} = options;\n    const cryptoKey = await Jose.jwkToCryptoKey({key});\n    return z32.encode(cryptoKey.material);\n  }\n\n  /**\n   * Publishes a DID Document to the DHT.\n   * @param keySet The key set to use to sign the DHT payload.\n   * @param didDocument The DID Document to publish.\n   * @returns A boolean indicating the success of the publishing operation.\n   */\n  public static async publish({ didDocument, keySet }: {\n    didDocument: DidDocument,\n    keySet: DidDhtKeySet\n  }): Promise<boolean> {\n    const publicCryptoKey = await Jose.jwkToCryptoKey({key: keySet.identityKey.publicKeyJwk});\n    const privateCryptoKey = await Jose.jwkToCryptoKey({key: keySet.identityKey.privateKeyJwk});\n\n    const isPublished = await DidDht.publishDidDocument({\n      keyPair: {\n        publicKey  : publicCryptoKey,\n        privateKey : privateCryptoKey\n      },\n      didDocument\n    });\n\n    return isPublished;\n  }\n\n  /**\n   * Resolves a DID Document based on the specified options.\n   *\n   * @param options - Configuration for resolving a DID Document.\n   * @param options.didUrl - The DID URL to resolve.\n   * @param options.resolutionOptions - Optional settings for the DID resolution process as defined in the DID Core specification.\n   * @returns A Promise that resolves to a `DidResolutionResult`, containing the resolved DID Document and associated metadata.\n   */\n  public static async resolve(options: {\n    didUrl: string,\n    resolutionOptions?: DidResolutionOptions\n  }): Promise<DidResolutionResult> {\n    const { didUrl, resolutionOptions: _ } = options;\n    // TODO: Implement resolutionOptions as defined in https://www.w3.org/TR/did-core/#did-resolution\n\n    const parsedDid = parseDid({ didUrl });\n    if (!parsedDid) {\n      return {\n        '@context'            : 'https://w3id.org/did-resolution/v1',\n        didDocument           : undefined,\n        didDocumentMetadata   : {},\n        didResolutionMetadata : {\n          contentType  : 'application/did+ld+json',\n          error        : 'invalidDid',\n          errorMessage : `Cannot parse DID: ${didUrl}`\n        }\n      };\n    }\n\n    if (parsedDid.method !== 'dht') {\n      return {\n        '@context'            : 'https://w3id.org/did-resolution/v1',\n        didDocument           : undefined,\n        didDocumentMetadata   : {},\n        didResolutionMetadata : {\n          contentType  : 'application/did+ld+json',\n          error        : 'methodNotSupported',\n          errorMessage : `Method not supported: ${parsedDid.method}`\n        }\n      };\n    }\n\n    const didDocument = await DidDht.getDidDocument({ did: parsedDid.did });\n\n    return {\n      '@context'            : 'https://w3id.org/did-resolution/v1',\n      didDocument,\n      didDocumentMetadata   : {},\n      didResolutionMetadata : {\n        contentType : 'application/did+ld+json',\n        did         : {\n          didString        : parsedDid.did,\n          methodSpecificId : parsedDid.id,\n          method           : parsedDid.method\n        }\n      }\n    };\n  }\n}", "import type { PublicKeyJwk } from '@web5/crypto';\nimport { parse, type ParsedDID } from 'did-resolver';\n\nimport type { DidDocument, DidService, DidServiceEndpoint, DwnServiceEndpoint } from './types.js';\n\nexport interface ParsedDid {\n  did: string\n  didUrl: string\n  method: string\n  id: string\n  path?: string\n  fragment?: string\n  query?: string\n  params?: ParsedDID['params']\n}\n\nexport const DID_REGEX = /^did:([a-z0-9]+):((?:(?:[a-zA-Z0-9._-]|(?:%[0-9a-fA-F]{2}))*:)*((?:[a-zA-Z0-9._-]|(?:%[0-9a-fA-F]{2}))+))((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(#.*)?$/;\n\n/**\n * Retrieves services from a given DID document based on provided options.\n * If no `id` or `type` filters are provided, all defined services are returned.\n *\n * Note: The DID document must adhere to the W3C DID specification.\n *\n * @param options - An object containing input parameters for retrieving services.\n * @param options.didDocument - The DID document from which services are retrieved.\n * @param options.id - Optional. A string representing the specific service ID to match. If provided, only the service with this ID will be returned.\n * @param options.type - Optional. A string representing the specific service type to match. If provided, only the service(s) of this type will be returned.\n *\n * @returns An array of services. If no matching service is found, an empty array is returned.\n *\n * @example\n *\n * const didDoc = { ... }; // W3C DID document\n * const services = getServices({ didDocument: didDoc, type: 'DecentralizedWebNode' });\n */\nexport function getServices(options: {\n  didDocument: DidDocument,\n  id?: string,\n  type?: string\n}): DidService[] {\n  const { didDocument, id, type } = options ?? {};\n\n  return didDocument?.service?.filter(service => {\n    if (id && service.id !== id) return false;\n    if (type && service.type !== type) return false;\n    return true;\n  }) ?? [ ];\n}\n\nexport function getVerificationMethodIds(options: {\n  didDocument: DidDocument,\n  publicKeyJwk?: PublicKeyJwk,\n  publicKeyMultibase?: string\n}): string | undefined {\n  const { didDocument, publicKeyJwk, publicKeyMultibase } = options;\n  if (!didDocument) throw new Error(`Required parameter missing: 'didDocument'`);\n  if (!didDocument.verificationMethod) throw new Error('Given `didDocument` is missing `verificationMethod` entries.');\n\n  for (let method of didDocument.verificationMethod) {\n    if (publicKeyMultibase && 'publicKeyMultibase' in method) {\n      if (publicKeyMultibase === method.publicKeyMultibase) {\n        return method.id;\n      }\n    } else if (publicKeyJwk && 'crv' in publicKeyJwk &&\n               'publicKeyJwk' in method && 'crv' in method.publicKeyJwk) {\n      if (publicKeyJwk.crv === method.publicKeyJwk.crv &&\n            publicKeyJwk.x === method.publicKeyJwk.x) {\n        return method.id;\n      }\n    }\n  }\n}\n\n/**\n * Retrieves DID verification method types from a given DID document.\n *\n * Note: The DID document must adhere to the W3C DID specification.\n *\n * @param options - An object containing input parameters for retrieving types.\n * @param options.didDocument - The DID document from which types are retrieved.\n *\n * @returns An array of types. If no types were found, an empty array is returned.\n */\nexport function getVerificationMethodTypes(options: {\n  didDocument: Record<string, any>\n}): string[] {\n  const { didDocument } = options;\n\n  let types: string[] = [];\n\n  for (let key in didDocument) {\n    if (typeof didDocument[key] === 'object') {\n      types = types.concat(getVerificationMethodTypes({\n        didDocument: didDocument[key]\n      }));\n\n    } else if (key === 'type') {\n      types.push(didDocument[key]);\n    }\n  }\n\n  return [...new Set(types)]; // return only unique types\n}\n\n/**\n * Type guard function to check if the given endpoint is a DwnServiceEndpoint.\n *\n * @param key The endpoint to check.\n * @returns True if the endpoint is a DwnServiceEndpoint, false otherwise.\n */\nexport function isDwnServiceEndpoint(endpoint: string | DidServiceEndpoint | DidServiceEndpoint[]): endpoint is DwnServiceEndpoint {\n  return endpoint !== undefined &&\n    typeof endpoint !== 'string' &&\n    !Array.isArray(endpoint) &&\n    'nodes' in endpoint &&\n    'signingKeys' in endpoint;\n}\n\nexport function parseDid({ didUrl }: { didUrl: string }): ParsedDid | undefined {\n  const parsedDid: ParsedDid = parse(didUrl);\n\n  return parsedDid;\n}", "// Copyright 2018 Consensys AG\n\n// Licensed under the Apache License, Version 2.0(the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n\n// http://www.apache.org/licenses/LICENSE-2.0\n\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Defines an object type that can be extended with other properties.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type Extensible = Record<string, any>\n\n/**\n * Defines the result of a DID resolution operation.\n *\n * @see {@link Resolvable.resolve}\n * @see {@link https://www.w3.org/TR/did-core/#did-resolution}\n */\nexport interface DIDResolutionResult {\n  '@context'?: 'https://w3id.org/did-resolution/v1' | string | string[]\n  didResolutionMetadata: DIDResolutionMetadata\n  didDocument: DIDDocument | null\n  didDocumentMetadata: DIDDocumentMetadata\n}\n\n/**\n * Describes the options forwarded to the resolver when executing a {@link Resolvable.resolve} operation.\n *\n * @see {@link https://www.w3.org/TR/did-core/#did-resolution-options}\n */\nexport interface DIDResolutionOptions extends Extensible {\n  accept?: string\n}\n\n/**\n * Encapsulates the resolution metadata resulting from a {@link Resolvable.resolve} operation.\n *\n * @see {@link https://www.w3.org/TR/did-core/#did-resolution-metadata}\n */\nexport interface DIDResolutionMetadata extends Extensible {\n  contentType?: string\n  error?: 'invalidDid' | 'notFound' | 'representationNotSupported' | 'unsupportedDidMethod' | string\n}\n\n/**\n * Represents metadata about the DID document resulting from a {@link Resolvable.resolve} operation.\n *\n * @see {@link https://www.w3.org/TR/did-core/#did-document-metadata}\n */\nexport interface DIDDocumentMetadata extends Extensible {\n  created?: string\n  updated?: string\n  deactivated?: boolean\n  versionId?: string\n  nextUpdate?: string\n  nextVersionId?: string\n  equivalentId?: string\n  canonicalId?: string\n}\n\n/**\n * Represents the Verification Relationship between a DID subject and a Verification Method.\n *\n * @see {@link https://www.w3.org/TR/did-core/#verification-relationships}\n */\nexport type KeyCapabilitySection =\n  | 'authentication'\n  | 'assertionMethod'\n  | 'keyAgreement'\n  | 'capabilityInvocation'\n  | 'capabilityDelegation'\n\n/**\n * Represents a DID document.\n *\n * @see {@link https://www.w3.org/TR/did-core/#did-document-properties}\n */\nexport type DIDDocument = {\n  '@context'?: 'https://www.w3.org/ns/did/v1' | string | string[]\n  id: string\n  alsoKnownAs?: string[]\n  controller?: string | string[]\n  verificationMethod?: VerificationMethod[]\n  service?: Service[]\n  /**\n   * @deprecated\n   */\n  publicKey?: VerificationMethod[]\n} & {\n  [x in KeyCapabilitySection]?: (string | VerificationMethod)[]\n}\n\n/**\n * Represents a Service entry in a {@link https://www.w3.org/TR/did-core/#did-document-properties | DID document}.\n *\n * @see {@link https://www.w3.org/TR/did-core/#services}\n * @see {@link https://www.w3.org/TR/did-core/#service-properties}\n */\nexport interface Service {\n  id: string\n  type: string\n  serviceEndpoint: ServiceEndpoint | ServiceEndpoint[]\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [x: string]: any\n}\n\n/**\n * Represents an endpoint of a Service entry in a DID document.\n *\n * @see {@link https://www.w3.org/TR/did-core/#dfn-serviceendpoint}\n * @see {@link https://www.w3.org/TR/did-core/#services}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ServiceEndpoint = string | Record<string, any>\n\n/**\n * Encapsulates a JSON web key type that includes only the public properties that\n * can be used in DID documents.\n *\n * The private properties are intentionally omitted to discourage the use\n * (and accidental disclosure) of private keys in DID documents.\n *\n * @see {@link https://www.rfc-editor.org/rfc/rfc7517 | RFC7517 JsonWebKey (JWK)}\n */\nexport interface JsonWebKey extends Extensible {\n  alg?: string\n  crv?: string\n  e?: string\n  ext?: boolean\n  key_ops?: string[]\n  kid?: string\n  kty: string\n  n?: string\n  use?: string\n  x?: string\n  y?: string\n}\n\n/**\n * Represents the properties of a Verification Method listed in a DID document.\n *\n * This data type includes public key representations that are no longer present in the spec but are still used by\n * several DID methods / resolvers and kept for backward compatibility.\n *\n * @see {@link https://www.w3.org/TR/did-core/#verification-methods}\n * @see {@link https://www.w3.org/TR/did-core/#verification-method-properties}\n */\nexport interface VerificationMethod {\n  id: string\n  type: string\n  controller: string\n  publicKeyBase58?: string\n  publicKeyBase64?: string\n  publicKeyJwk?: JsonWebKey\n  publicKeyHex?: string\n  publicKeyMultibase?: string\n  blockchainAccountId?: string\n  ethereumAddress?: string\n\n  // ConditionalProof2022 subtypes\n  conditionOr?: VerificationMethod[]\n  conditionAnd?: VerificationMethod[]\n  threshold?: number\n  conditionThreshold?: VerificationMethod[]\n  conditionWeightedThreshold?: ConditionWeightedThreshold[]\n  conditionDelegated?: string\n  relationshipParent?: string[]\n  relationshipChild?: string[]\n  relationshipSibling?: string[]\n}\n\nexport interface ConditionWeightedThreshold {\n  condition: VerificationMethod\n  weight: number\n}\n\n/**\n * URI params resulting from parsing a DID URI\n */\nexport interface Params {\n  [index: string]: string\n}\n\n/**\n * An object containing the results of parsing a DID URI string.\n *\n * This is forwarded to implementations of particular DID resolvers when calling the `resolve` method.\n *\n * @see {@link Resolver}\n * @see {@link Resolvable.resolve}\n */\nexport interface ParsedDID {\n  did: string\n  didUrl: string\n  method: string\n  id: string\n  path?: string\n  fragment?: string\n  query?: string\n  params?: Params\n}\n\n/**\n * The DID resolution function that DID Resolver implementations must implement.\n */\nexport type DIDResolver = (\n  did: string,\n  parsed: ParsedDID,\n  resolver: Resolvable,\n  options: DIDResolutionOptions\n) => Promise<DIDResolutionResult>\nexport type WrappedResolver = () => Promise<DIDResolutionResult>\nexport type DIDCache = (parsed: ParsedDID, resolve: WrappedResolver) => Promise<DIDResolutionResult>\nexport type LegacyDIDResolver = (did: string, parsed: ParsedDID, resolver: Resolvable) => Promise<DIDDocument>\n\nexport type ResolverRegistry = Record<string, DIDResolver>\n\nexport interface LegacyResolverRegistry {\n  [index: string]: LegacyDIDResolver\n}\n\nexport interface ResolverOptions {\n  cache?: DIDCache | boolean | undefined\n  legacyResolvers?: LegacyResolverRegistry\n}\n\nexport function inMemoryCache(): DIDCache {\n  const cache: Map<string, DIDResolutionResult> = new Map()\n  return async (parsed: ParsedDID, resolve) => {\n    if (parsed.params && parsed.params['no-cache'] === 'true') return await resolve()\n\n    const cached = cache.get(parsed.didUrl)\n    if (cached !== undefined) return cached\n    const result = await resolve()\n    if (result.didResolutionMetadata?.error !== 'notFound') {\n      cache.set(parsed.didUrl, result)\n    }\n    return result\n  }\n}\n\nexport function noCache(parsed: ParsedDID, resolve: WrappedResolver): Promise<DIDResolutionResult> {\n  return resolve()\n}\n\nconst PCT_ENCODED = '(?:%[0-9a-fA-F]{2})'\nconst ID_CHAR = `(?:[a-zA-Z0-9._-]|${PCT_ENCODED})`\nconst METHOD = '([a-z0-9]+)'\nconst METHOD_ID = `((?:${ID_CHAR}*:)*(${ID_CHAR}+))`\nconst PARAM_CHAR = '[a-zA-Z0-9_.:%-]'\nconst PARAM = `;${PARAM_CHAR}+=${PARAM_CHAR}*`\nconst PARAMS = `((${PARAM})*)`\nconst PATH = `(/[^#?]*)?`\nconst QUERY = `([?][^#]*)?`\nconst FRAGMENT = `(#.*)?`\nconst DID_MATCHER = new RegExp(`^did:${METHOD}:${METHOD_ID}${PARAMS}${PATH}${QUERY}${FRAGMENT}$`)\n\n/**\n * Parses a DID URL and builds a {@link ParsedDID | ParsedDID object}\n *\n * @param didUrl - the DID URL string to be parsed\n * @returns a ParsedDID object, or null if the input is not a DID URL\n */\nexport function parse(didUrl: string): ParsedDID | null {\n  if (didUrl === '' || !didUrl) return null\n  const sections = didUrl.match(DID_MATCHER)\n  if (sections) {\n    const parts: ParsedDID = {\n      did: `did:${sections[1]}:${sections[2]}`,\n      method: sections[1],\n      id: sections[2],\n      didUrl,\n    }\n    if (sections[4]) {\n      const params = sections[4].slice(1).split(';')\n      parts.params = {}\n      for (const p of params) {\n        const kv = p.split('=')\n        parts.params[kv[0]] = kv[1]\n      }\n    }\n    if (sections[6]) parts.path = sections[6]\n    if (sections[7]) parts.query = sections[7].slice(1)\n    if (sections[8]) parts.fragment = sections[8].slice(1)\n    return parts\n  }\n  return null\n}\n\nconst EMPTY_RESULT: DIDResolutionResult = {\n  didResolutionMetadata: {},\n  didDocument: null,\n  didDocumentMetadata: {},\n}\n\nexport function wrapLegacyResolver(resolve: LegacyDIDResolver): DIDResolver {\n  return async (did, parsed, resolver) => {\n    try {\n      const doc = await resolve(did, parsed, resolver)\n      return {\n        ...EMPTY_RESULT,\n        didResolutionMetadata: { contentType: 'application/did+ld+json' },\n        didDocument: doc,\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (e: any) {\n      return {\n        ...EMPTY_RESULT,\n        didResolutionMetadata: {\n          error: 'notFound',\n          message: e.toString(), // This is not in spec, but may be helpful\n        },\n      }\n    }\n  }\n}\n\n/**\n * The method signature implemented by this resolver.\n */\nexport interface Resolvable {\n  resolve: (didUrl: string, options?: DIDResolutionOptions) => Promise<DIDResolutionResult>\n}\n\n/**\n * This implementation of {@link Resolvable} bundles together multiple implementations of {@link DIDResolver} and\n * presents a single function call to users.\n */\nexport class Resolver implements Resolvable {\n  private readonly registry: ResolverRegistry\n  private readonly cache: DIDCache\n\n  constructor(registry: ResolverRegistry = {}, options: ResolverOptions = {}) {\n    this.registry = registry\n    this.cache = options.cache === true ? inMemoryCache() : options.cache || noCache\n    if (options.legacyResolvers) {\n      Object.keys(options.legacyResolvers).map((methodName) => {\n        if (!this.registry[methodName]) {\n          this.registry[methodName] = wrapLegacyResolver(\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            options.legacyResolvers![methodName]\n          )\n        }\n      })\n    }\n  }\n\n  async resolve(didUrl: string, options: DIDResolutionOptions = {}): Promise<DIDResolutionResult> {\n    const parsed = parse(didUrl)\n    if (parsed === null) {\n      return {\n        ...EMPTY_RESULT,\n        didResolutionMetadata: { error: 'invalidDid' },\n      }\n    }\n    const resolver = this.registry[parsed.method]\n    if (!resolver) {\n      return {\n        ...EMPTY_RESULT,\n        didResolutionMetadata: { error: 'unsupportedDidMethod' },\n      }\n    }\n    return this.cache(parsed, () => resolver(parsed.did, parsed, this, options))\n  }\n}\n", "import type { JwkKeyPair, PrivateKeyJwk, PublicKeyJwk, Web5Crypto } from '@web5/crypto';\nimport type { IonDocumentModel, IonPublicKeyModel, JwkEd25519, JwkEs256k } from '@decentralized-identity/ion-sdk';\n\nimport { Convert, universalTypeOf } from '@web5/common';\nimport IonProofOfWork from '@decentralized-identity/ion-pow-sdk';\n// import { IonProofOfWork } from '@decentralized-identity/ion-pow-sdk';\nimport { EcdsaAlgorithm, EdDsaAlgorithm, Jose } from '@web5/crypto';\nimport { IonDid, IonPublicKeyPurpose, IonRequest } from '@decentralized-identity/ion-sdk';\n\nimport type { DidDocument, DidKeySetVerificationMethodKey, DidMethod, DidResolutionOptions, DidResolutionResult, DidService, DwnServiceEndpoint, PortableDid } from './types.js';\n\nimport { getServices, isDwnServiceEndpoint, parseDid } from './utils.js';\n\nexport type DidIonAnchorOptions = {\n  challengeEnabled?: boolean;\n  challengeEndpoint?: string;\n  operationsEndpoint?: string;\n  keySet: DidIonKeySet;\n  services: DidService[];\n}\n\nexport type DidIonCreateOptions = {\n  anchor?: boolean;\n  keyAlgorithm?: typeof SupportedCryptoAlgorithms[number];\n  keySet?: DidIonKeySet;\n  services?: DidService[];\n}\n\nexport type DidIonKeySet = {\n  recoveryKey?: JwkKeyPair;\n  updateKey?: JwkKeyPair;\n  verificationMethodKeys?: DidKeySetVerificationMethodKey[];\n}\n\nenum OperationType {\n  Create = 'create',\n  Update = 'update',\n  Deactivate = 'deactivate',\n  Recover = 'recover'\n}\n\n/**\n * Data model representing a public key in the DID Document.\n */\nexport interface IonCreateRequestModel {\n  type: OperationType;\n  suffixData: {\n    deltaHash: string;\n    recoveryCommitment: string;\n  };\n  delta: {\n    updateCommitment: string;\n    patches: {\n      action: string;\n      document: IonDocumentModel;\n    }[];\n  }\n}\n\nconst SupportedCryptoAlgorithms = [\n  'Ed25519',\n  'secp256k1'\n] as const;\n\nconst VerificationRelationshipToIonPublicKeyPurpose = {\n  assertionMethod      : IonPublicKeyPurpose.AssertionMethod,\n  authentication       : IonPublicKeyPurpose.Authentication,\n  capabilityDelegation : IonPublicKeyPurpose.CapabilityDelegation,\n  capabilityInvocation : IonPublicKeyPurpose.CapabilityInvocation,\n  keyAgreement         : IonPublicKeyPurpose.KeyAgreement\n};\n\nexport class DidIonMethod implements DidMethod {\n  /**\n   * Name of the DID method\n  */\n  public static methodName = 'ion';\n\n  public static async anchor(options: {\n    services: DidService[],\n    keySet: DidIonKeySet,\n    challengeEnabled?: boolean,\n    challengeEndpoint?: string,\n    operationsEndpoint?: string\n  }): Promise<DidResolutionResult | undefined> {\n    const {\n      challengeEnabled = true,\n      challengeEndpoint = 'https://beta.ion.msidentity.com/api/v1.0/proof-of-work-challenge',\n      keySet,\n      services,\n      operationsEndpoint = 'https://beta.ion.msidentity.com/api/v1.0/operations'\n    } = options;\n\n    // Create ION Document.\n    const ionDocument = await DidIonMethod.createIonDocument({\n      keySet: keySet,\n      services\n    });\n\n    const createRequest = await DidIonMethod.getIonCreateRequest({\n      ionDocument,\n      recoveryPublicKeyJwk : keySet.recoveryKey.publicKeyJwk,\n      updatePublicKeyJwk   : keySet.updateKey.publicKeyJwk\n    });\n\n    let resolutionResult: DidResolutionResult;\n\n    if (challengeEnabled) {\n      const response = await IonProofOfWork.submitIonRequest(\n        challengeEndpoint,\n        operationsEndpoint,\n        JSON.stringify(createRequest)\n      );\n\n      if (response !== undefined && universalTypeOf(response) === 'String') {\n        resolutionResult = JSON.parse(response);\n      }\n\n    } else {\n      const response = await fetch(operationsEndpoint, {\n        method  : 'POST',\n        mode    : 'cors',\n        body    : JSON.stringify(createRequest),\n        headers : {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        resolutionResult = await response.json();\n      }\n    }\n\n    return resolutionResult;\n  }\n\n  public static async create(options?: DidIonCreateOptions): Promise<PortableDid> {\n    let { anchor, keyAlgorithm, keySet, services } = options ?? { };\n\n    // Begin constructing a PortableDid.\n    const did: Partial<PortableDid> = {};\n\n    // If any member of the key set is missing, generate the keys.\n    did.keySet = await DidIonMethod.generateKeySet({ keyAlgorithm, keySet });\n\n    // Generate Long Form DID URI.\n    did.did = await DidIonMethod.getLongFormDid({\n      keySet: did.keySet,\n      services\n    });\n\n    // Get short form DID.\n    did.canonicalId = await DidIonMethod.getShortFormDid({ didUrl: did.did });\n\n    let didResolutionResult: DidResolutionResult | undefined;\n    if (anchor) {\n      // Attempt to anchor the DID.\n      didResolutionResult = await DidIonMethod.anchor({\n        keySet: did.keySet,\n        services\n      });\n\n    } else {\n      // If anchoring was not requested, then resolve the long form DID.\n      didResolutionResult = await DidIonMethod.resolve({ didUrl: did.did });\n    }\n\n    // Store the DID Document.\n    did.document = didResolutionResult.didDocument;\n\n    return did as PortableDid;\n  }\n\n  public static async decodeLongFormDid(options: {\n    didUrl: string\n  }): Promise<IonCreateRequestModel> {\n    const { didUrl } = options;\n\n    const parsedDid = parseDid({ didUrl });\n\n    if (!parsedDid) {\n      throw new Error(`DidIonMethod: Unable to parse DID: ${didUrl}`);\n    }\n\n    const decodedLongFormDid = Convert.base64Url(\n      parsedDid.id.split(':').pop()\n    ).toObject() as Pick<IonCreateRequestModel, 'delta' | 'suffixData'>;\n\n    const createRequest: IonCreateRequestModel = {\n      ...decodedLongFormDid,\n      type: OperationType.Create\n    };\n\n    return createRequest;\n  }\n\n  /**\n   * Generates two key pairs used for authorization and encryption purposes\n   * when interfacing with DWNs. The IDs of these keys are referenced in the\n   * service object that includes the dwnUrls provided.\n   */\n  public static async generateDwnOptions(options: {\n    encryptionKeyId?: string,\n    serviceEndpointNodes: string[],\n    serviceId?: string,\n    signingKeyAlgorithm?: typeof SupportedCryptoAlgorithms[number]\n    signingKeyId?: string,\n  }): Promise<DidIonCreateOptions> {\n    const {\n      signingKeyAlgorithm = 'Ed25519', // Generate Ed25519 key pairs, by default.\n      serviceId = '#dwn', // Use default ID value, unless overridden.\n      signingKeyId = '#dwn-sig', // Use default key ID value, unless overridden.\n      encryptionKeyId = '#dwn-enc', // Use default key ID value, unless overridden.\n      serviceEndpointNodes } = options;\n\n    const signingKeyPair = await DidIonMethod.generateJwkKeyPair({\n      keyAlgorithm : signingKeyAlgorithm,\n      keyId        : signingKeyId\n    });\n\n    /** Currently, `dwn-sdk-js` has only implemented support for record\n     * encryption using the `ECIES-ES256K` crypto algorithm. Until the\n     * DWN SDK supports ECIES with EdDSA, the encryption key pair must\n     * use secp256k1. */\n    const encryptionKeyPair = await DidIonMethod.generateJwkKeyPair({\n      keyAlgorithm : 'secp256k1',\n      keyId        : encryptionKeyId\n    });\n\n    const keySet: DidIonKeySet = {\n      verificationMethodKeys: [\n        { ...signingKeyPair, relationships: ['authentication'] },\n        { ...encryptionKeyPair, relationships: ['keyAgreement'] }\n      ]\n    };\n\n    const serviceEndpoint: DwnServiceEndpoint = {\n      encryptionKeys : [encryptionKeyId],\n      nodes          : serviceEndpointNodes,\n      signingKeys    : [signingKeyId]\n    };\n\n    const services: DidService[] = [{\n      id   : serviceId,\n      serviceEndpoint,\n      type : 'DecentralizedWebNode',\n    }];\n\n    return { keySet, services };\n  }\n\n  public static async generateJwkKeyPair(options: {\n    keyAlgorithm: typeof SupportedCryptoAlgorithms[number],\n    keyId?: string\n  }): Promise<JwkKeyPair> {\n    const { keyAlgorithm, keyId } = options;\n\n    let cryptoKeyPair: Web5Crypto.CryptoKeyPair;\n\n    switch (keyAlgorithm) {\n      case 'Ed25519': {\n        cryptoKeyPair = await new EdDsaAlgorithm().generateKey({\n          algorithm   : { name: 'EdDSA', namedCurve: 'Ed25519' },\n          extractable : true,\n          keyUsages   : ['sign', 'verify']\n        });\n        break;\n      }\n\n      case 'secp256k1': {\n        cryptoKeyPair = await new EcdsaAlgorithm().generateKey({\n          algorithm   : { name: 'ECDSA', namedCurve: 'secp256k1' },\n          extractable : true,\n          keyUsages   : ['sign', 'verify']\n        });\n        break;\n      }\n\n      default: {\n        throw new Error(`Unsupported crypto algorithm: '${keyAlgorithm}'`);\n      }\n    }\n\n    // Convert the CryptoKeyPair to JwkKeyPair.\n    const jwkKeyPair = await Jose.cryptoKeyToJwkPair({ keyPair: cryptoKeyPair });\n\n    // Set kid values.\n    if (keyId) {\n      jwkKeyPair.privateKeyJwk.kid = keyId;\n      jwkKeyPair.publicKeyJwk.kid = keyId;\n    } else {\n      // If a key ID is not specified, generate RFC 7638 JWK thumbprint.\n      const jwkThumbprint = await Jose.jwkThumbprint({ key: jwkKeyPair.publicKeyJwk });\n      jwkKeyPair.privateKeyJwk.kid = jwkThumbprint;\n      jwkKeyPair.publicKeyJwk.kid = jwkThumbprint;\n    }\n\n    return jwkKeyPair;\n  }\n\n  public static async generateKeySet(options?: {\n    keyAlgorithm?: typeof SupportedCryptoAlgorithms[number],\n    keySet?: DidIonKeySet\n  }): Promise<DidIonKeySet> {\n    // Generate Ed25519 authentication key pair, by default.\n    let { keyAlgorithm = 'Ed25519', keySet = {} } = options ?? {};\n\n    // If keySet lacks verification method keys, generate one.\n    if (keySet.verificationMethodKeys === undefined) {\n      const authenticationkeyPair = await DidIonMethod.generateJwkKeyPair({\n        keyAlgorithm,\n        keyId: 'dwn-sig'\n      });\n      keySet.verificationMethodKeys = [{\n        ...authenticationkeyPair,\n        relationships: ['authentication', 'assertionMethod']\n      }];\n    }\n\n    // If keySet lacks recovery key, generate one.\n    if (keySet.recoveryKey === undefined) {\n      // Note: ION/Sidetree only supports secp256k1 recovery keys.\n      keySet.recoveryKey = await DidIonMethod.generateJwkKeyPair({\n        keyAlgorithm : 'secp256k1',\n        keyId        : 'ion-recovery-1'\n      });\n    }\n\n    // If keySet lacks update key, generate one.\n    if (keySet.updateKey === undefined) {\n      // Note: ION/Sidetree only supports secp256k1 update keys.\n      keySet.updateKey = await DidIonMethod.generateJwkKeyPair({\n        keyAlgorithm : 'secp256k1',\n        keyId        : 'ion-update-1'\n      });\n    }\n\n    // Generate RFC 7638 JWK thumbprints if `kid` is missing from any key.\n    for (const key of [...keySet.verificationMethodKeys, keySet.recoveryKey, keySet.updateKey]) {\n      if ('publicKeyJwk' in key) key.publicKeyJwk.kid ??= await Jose.jwkThumbprint({ key: key.publicKeyJwk });\n      if ('privateKeyJwk' in key) key.privateKeyJwk.kid ??= await Jose.jwkThumbprint({ key: key.privateKeyJwk });\n    }\n\n    return keySet;\n  }\n\n  /**\n   * Given the W3C DID Document of a `did:ion` DID, return the identifier of\n   * the verification method key that will be used for signing messages and\n   * credentials, by default.\n   *\n   * @param document = DID Document to get the default signing key from.\n   * @returns Verification method identifier for the default signing key.\n   */\n  public static async getDefaultSigningKey(options: {\n      didDocument: DidDocument\n    }): Promise<string | undefined> {\n    const { didDocument } = options;\n\n    if (!didDocument.id) {\n      throw new Error(`DidIonMethod: DID document is missing 'id' property`);\n    }\n\n    /** If the DID document contains a DWN service endpoint in the expected\n     * format, return the first entry in the `signingKeys` array. */\n    const [dwnService] = getServices({ didDocument, type: 'DecentralizedWebNode' });\n    if (isDwnServiceEndpoint(dwnService?.serviceEndpoint)) {\n      const [verificationMethodId] = dwnService.serviceEndpoint.signingKeys;\n      const did = didDocument.id;\n      const signingKeyId = `${did}${verificationMethodId}`;\n      return signingKeyId;\n    }\n\n    /** Otherwise, fallback to a naive approach of returning the first key ID\n     * in the `authentication` verification relationships array. */\n    if (didDocument.authentication\n        && Array.isArray(didDocument.authentication)\n        && didDocument.authentication.length > 0\n        && typeof didDocument.authentication[0] === 'string') {\n      const [verificationMethodId] = didDocument.authentication;\n      const did = didDocument.id;\n      const signingKeyId = `${did}${verificationMethodId}`;\n      return signingKeyId;\n    }\n  }\n\n  public static async getLongFormDid(options: {\n    services: DidService[],\n    keySet: DidIonKeySet\n  }): Promise<string> {\n    const { services = [], keySet } = options;\n\n    // Create ION Document.\n    const ionDocument = await DidIonMethod.createIonDocument({\n      keySet: keySet,\n      services\n    });\n\n    // Filter JWK to only those properties expected by ION/Sidetree.\n    const recoveryKey = DidIonMethod.jwkToIonJwk({ key: keySet.recoveryKey.publicKeyJwk }) as JwkEs256k;\n    const updateKey = DidIonMethod.jwkToIonJwk({ key: keySet.updateKey.publicKeyJwk }) as JwkEs256k;\n\n    // Create an ION DID create request operation.\n    const did = await IonDid.createLongFormDid({\n      document: ionDocument,\n      recoveryKey,\n      updateKey\n    });\n\n    return did;\n  }\n\n  public static async getShortFormDid(options: {\n    didUrl: string\n  }): Promise<string> {\n    const { didUrl } = options;\n\n    const parsedDid = parseDid({ didUrl });\n\n    if (!parsedDid) {\n      throw new Error(`DidIonMethod: Unable to parse DID: ${didUrl}`);\n    }\n\n    const shortFormDid = parsedDid.did.split(':', 3).join(':');\n\n    return shortFormDid;\n  }\n\n  public static async resolve(options: {\n    didUrl: string,\n    resolutionOptions?: DidResolutionOptions\n  }): Promise<DidResolutionResult> {\n    // TODO: Implement resolutionOptions as defined in https://www.w3.org/TR/did-core/#did-resolution\n    const { didUrl, resolutionOptions = {} } = options;\n\n    const parsedDid = parseDid({ didUrl });\n    if (!parsedDid) {\n      return {\n        '@context'            : 'https://w3id.org/did-resolution/v1',\n        didDocument           : undefined,\n        didDocumentMetadata   : {},\n        didResolutionMetadata : {\n          contentType  : 'application/did+ld+json',\n          error        : 'invalidDid',\n          errorMessage : `Cannot parse DID: ${didUrl}`\n        }\n      };\n    }\n\n    if (parsedDid.method !== 'ion') {\n      return {\n        '@context'            : 'https://w3id.org/did-resolution/v1',\n        didDocument           : undefined,\n        didDocumentMetadata   : {},\n        didResolutionMetadata : {\n          contentType  : 'application/did+ld+json',\n          error        : 'methodNotSupported',\n          errorMessage : `Method not supported: ${parsedDid.method}`\n        }\n      };\n    }\n\n    const { resolutionEndpoint = 'https://discover.did.msidentity.com/1.0/identifiers/' } = resolutionOptions;\n    const normalizeUrl = (url: string): string => url.endsWith('/') ? url : url + '/';\n    const resolutionUrl = `${normalizeUrl(resolutionEndpoint)}${parsedDid.did}`;\n\n    const response = await fetch(resolutionUrl);\n\n    let resolutionResult: DidResolutionResult | object;\n    try {\n      resolutionResult = await response.json();\n    } catch (error) {\n      resolutionResult = {};\n    }\n\n    if (response.ok) {\n      return resolutionResult as DidResolutionResult;\n    }\n\n    // Response was not \"OK\" (HTTP 4xx-5xx status code)\n\n    // Return result if it contains DID resolution metadata.\n    if ('didResolutionMetadata' in resolutionResult) {\n      return resolutionResult;\n    }\n\n    // Set default error code and message.\n    let error = 'internalError';\n    let errorMessage = `DID resolver responded with HTTP status code: ${response.status}`;\n\n    /** The Microsoft resolution endpoint does not return a valid DidResolutionResult\n       * when an ION DID is \"not found\" so normalization is needed. */\n    if ('error' in resolutionResult &&\n        typeof resolutionResult.error === 'object' &&\n        'code' in resolutionResult.error &&\n        typeof resolutionResult.error.code === 'string' &&\n        'message' in resolutionResult.error &&\n        typeof resolutionResult.error.message === 'string') {\n      error = resolutionResult.error.code.includes('not_found') ? 'notFound' : error;\n      errorMessage = resolutionResult.error.message ?? errorMessage;\n    }\n\n    return {\n      '@context'            : 'https://w3id.org/did-resolution/v1',\n      didDocument           : undefined,\n      didDocumentMetadata   : {},\n      didResolutionMetadata : {\n        contentType: 'application/did+ld+json',\n        error,\n        errorMessage\n      }\n    };\n  }\n\n  private static async createIonDocument(options: {\n    keySet: DidIonKeySet,\n    services?: DidService[]\n  }): Promise<IonDocumentModel> {\n    const { services = [], keySet } = options;\n\n    /**\n     * STEP 1: Convert key set verification method keys to ION SDK format.\n     */\n\n    const ionPublicKeys: IonPublicKeyModel[] = [];\n\n    for (const key of keySet.verificationMethodKeys) {\n      // Map W3C DID verification relationship names to ION public key purposes.\n      const ionPurposes: IonPublicKeyPurpose[] = [];\n      for (const relationship of key.relationships) {\n        ionPurposes.push(\n          VerificationRelationshipToIonPublicKeyPurpose[relationship]\n        );\n      }\n\n      /** During certain ION operations, JWK validation will throw an error\n       * if key IDs provided as input are prefixed with `#`. ION operation\n       * outputs and DID document resolution always include the `#` prefix\n       * for key IDs resulting in a confusing mismatch between inputs and\n       * outputs.  To improve the developer experience, this inconsistency\n       * is addressed by normalizing input key IDs before being passed\n       * to ION SDK methods. */\n      const publicKeyId = (key.publicKeyJwk.kid.startsWith('#'))\n        ? key.publicKeyJwk.kid.substring(1)\n        : key.publicKeyJwk.kid;\n\n      // Convert public key JWK to ION format.\n      const publicKey: IonPublicKeyModel = {\n        id           : publicKeyId,\n        publicKeyJwk : DidIonMethod.jwkToIonJwk({ key: key.publicKeyJwk }),\n        purposes     : ionPurposes,\n        type         : 'JsonWebKey2020'\n      };\n\n      ionPublicKeys.push(publicKey);\n    }\n\n    /**\n     * STEP 2: Convert service entries, if any, to ION SDK format.\n     */\n    const ionServices = services.map(service => ({\n      ...service,\n      id: service.id.startsWith('#') ? service.id.substring(1) : service.id\n    }));\n\n    /**\n     * STEP 3: Format as ION document.\n     */\n\n    const ionDocumentModel: IonDocumentModel = {\n      publicKeys : ionPublicKeys,\n      services   : ionServices\n    };\n\n    return ionDocumentModel;\n  }\n\n  private static async getIonCreateRequest(options: {\n    ionDocument: IonDocumentModel,\n    recoveryPublicKeyJwk: PublicKeyJwk,\n    updatePublicKeyJwk: PublicKeyJwk\n  }): Promise<IonCreateRequestModel> {\n    const { ionDocument, recoveryPublicKeyJwk, updatePublicKeyJwk } = options;\n\n    // Create an ION DID create request operation.\n    const createRequest = await IonRequest.createCreateRequest({\n      document    : ionDocument,\n      recoveryKey : DidIonMethod.jwkToIonJwk({ key: recoveryPublicKeyJwk }) as JwkEs256k,\n      updateKey   : DidIonMethod.jwkToIonJwk({ key: updatePublicKeyJwk }) as JwkEs256k\n    });\n\n    return createRequest;\n  }\n\n  private static jwkToIonJwk({ key }: { key: PrivateKeyJwk | PublicKeyJwk }): JwkEd25519 | JwkEs256k {\n    let ionJwk: Partial<JwkEd25519 | JwkEs256k> = { };\n\n    if ('crv' in key) {\n      ionJwk.crv = key.crv;\n      ionJwk.kty = key.kty;\n      ionJwk.x = key.x;\n      if ('d' in key) ionJwk.d = key.d;\n\n      if ('y' in key && key.y) {\n        // secp256k1 JWK.\n        return { ...ionJwk, y: key.y} as JwkEs256k;\n      }\n      // Ed25519 JWK.\n      return { ...ionJwk } as JwkEd25519;\n    }\n\n    throw new Error(`jwkToIonJwk: Unsupported key algorithm.`);\n  }\n}", "// NOTE: Aliases to classes and interfaces are used for external consumption.\n\n// SDK exports.\nimport ISigner from './interfaces/ISigner.js';\nimport IonDid from './IonDid.js';\nimport IonDocumentModel from './models/IonDocumentModel.js';\nimport IonKey from './IonKey.js';\nimport IonNetwork from './enums/IonNetwork.js';\nimport IonPublicKeyModel from './models/IonPublicKeyModel.js';\nimport IonPublicKeyPurpose from './enums/IonPublicKeyPurpose.js';\nimport IonRequest from './IonRequest.js';\nimport IonSdkConfig from './IonSdkConfig.js';\nimport IonServiceModel from './models/IonServiceModel.js';\nimport JwkEd25519 from './models/JwkEd25519.js';\nimport JwkEs256k from './models/JwkEs256k.js';\nimport LocalSigner from './LocalSigner.js';\n\nexport {\n  ISigner,\n  IonDid,\n  IonDocumentModel,\n  IonKey,\n  IonNetwork,\n  IonPublicKeyModel,\n  IonPublicKeyPurpose,\n  IonRequest,\n  IonSdkConfig,\n  IonServiceModel,\n  JwkEd25519,\n  JwkEs256k,\n  LocalSigner\n};\n", "import ErrorCode from './ErrorCode.js';\nimport IonError from './IonError.js';\nimport { base64url } from 'multiformats/bases/base64';\n\n/**\n * Class that encodes binary blobs into strings.\n * Note that the encode/decode methods may change underlying encoding scheme.\n */\nexport default class Encoder {\n  /**\n   * Encodes given bytes into a Base64URL string.\n   */\n  public static encode (content: Uint8Array): string {\n    const encodedContent = base64url.baseEncode(content);\n    return encodedContent;\n  }\n\n  /**\n   * Decodes the given Base64URL string into bytes.\n   */\n  public static decodeAsBytes (encodedContent: string, inputContextForErrorLogging: string): Uint8Array {\n    if (!Encoder.isBase64UrlString(encodedContent)) {\n      throw new IonError(ErrorCode.EncodedStringIncorrectEncoding, `Given ${inputContextForErrorLogging} must be base64url string.`);\n    }\n\n    return base64url.baseDecode(encodedContent);\n  }\n\n  /**\n   * Decodes the given Base64URL string into the original string.\n   */\n  public static decodeAsString (encodedContent: string, inputContextForErrorLogging: string): string {\n    const rawBytes = Encoder.decodeAsBytes(encodedContent, inputContextForErrorLogging);\n\n    return Encoder.bytesToString(rawBytes);\n  }\n\n  /**\n   * Tests if the given string is a Base64URL string.\n   */\n  public static isBase64UrlString (input: string): boolean {\n    // NOTE:\n    // /<expression>/ denotes regex.\n    // ^ denotes beginning of string.\n    // $ denotes end of string.\n    // + denotes one or more characters.\n    const isBase64UrlString = /^[A-Za-z0-9_-]+$/.test(input);\n    return isBase64UrlString;\n  }\n\n  /**\n   * Converts input string to bytes.\n   */\n  public static stringToBytes (input: string): Uint8Array {\n    const bytes = new TextEncoder().encode(input);\n    return bytes;\n  }\n\n  /**\n   * Converts bytes to string.\n   */\n  public static bytesToString (input: Uint8Array): string {\n    const output = new TextDecoder().decode(input);\n    return output;\n  }\n}\n", "/**\n * ION SDK error codes.\n */\nexport default {\n  DeltaExceedsMaximumSize: 'DeltaExceedsMaximumSize',\n  DidDocumentPublicKeyIdDuplicated: 'DidDocumentPublicKeyIdDuplicated',\n  DidDocumentPublicKeyMissingOrIncorrectType: 'DidDocumentPublicKeyMissingOrIncorrectType',\n  DidDocumentServiceIdDuplicated: 'DidDocumentServiceIdDuplicated',\n  DidSuffixIncorrectLength: 'DidSuffixIncorrectLength',\n  EncodedStringIncorrectEncoding: 'EncodedStringIncorrectEncoding',\n  IdNotUsingBase64UrlCharacterSet: 'IdNotUsingBase64UrlCharacterSet',\n  IdTooLong: 'IdTooLong',\n  JwkEs256kMissingOrInvalidCrv: 'JwkEs256kMissingOrInvalidCrv',\n  JwkEs256kMissingOrInvalidKty: 'JwkEs256kMissingOrInvalidKty',\n  JwkEs256kHasIncorrectLengthOfX: 'JwkEs256kHasIncorrectLengthOfX',\n  JwkEs256kHasIncorrectLengthOfY: 'JwkEs256kHasIncorrectLengthOfY',\n  JwkEs256kHasIncorrectLengthOfD: 'JwkEs256kHasIncorrectLengthOfD',\n  MultihashStringNotAMultihash: 'MultihashStringNotAMultihash',\n  MultihashUnsupportedHashAlgorithm: 'MultihashUnsupportedHashAlgorithm',\n  PublicKeyJwkEs256kHasUnexpectedProperty: 'PublicKeyJwkEs256kHasUnexpectedProperty',\n  PublicKeyPurposeDuplicated: 'PublicKeyPurposeDuplicated',\n  ServiceEndpointCannotBeAnArray: 'ServiceEndpointCannotBeAnArray',\n  ServiceEndpointStringNotValidUri: 'ServiceEndpointStringNotValidUri',\n  ServiceTypeTooLong: 'ServiceTypeTooLong'\n};\n", "/**\n * A class that represents an ION error.\n */\nexport default class IonError extends Error {\n  constructor (public code: string, message: string) {\n    super(`${code}: ${message}`);\n\n    // NOTE: Extending 'Error' breaks prototype chain since TypeScript 2.1.\n    // The following line restores prototype chain.\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n", "// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n", "import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n", "// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n", "const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n", "// this is dummy module overlayed by interface.ts\n", "import * as URI from 'uri-js';\nimport ErrorCode from './ErrorCode.js';\nimport ISigner from './interfaces/ISigner.js';\nimport InputValidator from './InputValidator.js';\nimport IonCreateRequestModel from './models/IonCreateRequestModel.js';\nimport IonDeactivateRequestModel from './models/IonDeactivateRequestModel.js';\nimport IonDocumentModel from './models/IonDocumentModel.js';\nimport IonError from './IonError.js';\nimport IonPublicKeyModel from './models/IonPublicKeyModel.js';\nimport IonRecoverRequestModel from './models/IonRecoverRequestModel.js';\nimport IonSdkConfig from './IonSdkConfig.js';\nimport IonServiceModel from './models/IonServiceModel.js';\nimport IonUpdateRequestModel from './models/IonUpdateRequestModel.js';\nimport JsonCanonicalizer from './JsonCanonicalizer.js';\nimport JwkEs256k from './models/JwkEs256k.js';\nimport Multihash from './Multihash.js';\nimport OperationKeyType from './enums/OperationKeyType.js';\nimport OperationType from './enums/OperationType.js';\nimport PatchAction from './enums/PatchAction.js';\n\n/**\n * Class containing operations related to ION requests.\n */\nexport default class IonRequest {\n  /**\n   * Creates an ION DID create request.\n   * @param input.document The initial state to be associate with the ION DID to be created using a `replace` document patch action.\n   */\n  public static async createCreateRequest (input: {\n    recoveryKey: JwkEs256k;\n    updateKey: JwkEs256k;\n    document: IonDocumentModel;\n  }): Promise<IonCreateRequestModel> {\n    const recoveryKey = input.recoveryKey;\n    const updateKey = input.updateKey;\n    const didDocumentKeys = input.document.publicKeys;\n    const services = input.document.services;\n\n    // Validate recovery and update public keys.\n    InputValidator.validateEs256kOperationKey(recoveryKey, OperationKeyType.Public);\n    InputValidator.validateEs256kOperationKey(updateKey, OperationKeyType.Public);\n\n    // Validate all given DID Document keys.\n    IonRequest.validateDidDocumentKeys(didDocumentKeys);\n\n    // Validate all given service.\n    IonRequest.validateServices(services);\n\n    const hashAlgorithmInMultihashCode = IonSdkConfig.hashAlgorithmInMultihashCode;\n\n    const patches = [{\n      action: PatchAction.Replace,\n      document: input.document\n    }];\n\n    const delta = {\n      updateCommitment: await Multihash.canonicalizeThenDoubleHashThenEncode(updateKey, hashAlgorithmInMultihashCode),\n      patches\n    };\n\n    IonRequest.validateDeltaSize(delta);\n\n    const deltaHash = await Multihash.canonicalizeThenHashThenEncode(delta, hashAlgorithmInMultihashCode);\n\n    const suffixData = {\n      deltaHash,\n      recoveryCommitment: await Multihash.canonicalizeThenDoubleHashThenEncode(recoveryKey, hashAlgorithmInMultihashCode)\n    };\n\n    const operationRequest = {\n      type: OperationType.Create,\n      suffixData: suffixData,\n      delta: delta\n    };\n\n    return operationRequest;\n  }\n\n  public static async createDeactivateRequest (input: {\n    didSuffix: string,\n    recoveryPublicKey: JwkEs256k,\n    signer: ISigner\n  }): Promise<IonDeactivateRequestModel> {\n    // Validate DID suffix\n    IonRequest.validateDidSuffix(input.didSuffix);\n\n    // Validates recovery public key\n    InputValidator.validateEs256kOperationKey(input.recoveryPublicKey, OperationKeyType.Public);\n\n    const hashAlgorithmInMultihashCode = IonSdkConfig.hashAlgorithmInMultihashCode;\n    const revealValue = await Multihash.canonicalizeThenHashThenEncode(input.recoveryPublicKey, hashAlgorithmInMultihashCode);\n\n    const dataToBeSigned = {\n      didSuffix: input.didSuffix,\n      recoveryKey: input.recoveryPublicKey\n    };\n\n    const compactJws = await input.signer.sign({ alg: 'ES256K' }, dataToBeSigned);\n\n    return {\n      type: OperationType.Deactivate,\n      didSuffix: input.didSuffix,\n      revealValue: revealValue,\n      signedData: compactJws\n    };\n  }\n\n  public static async createRecoverRequest (input: {\n    didSuffix: string,\n    recoveryPublicKey: JwkEs256k,\n    nextRecoveryPublicKey: JwkEs256k,\n    nextUpdatePublicKey: JwkEs256k,\n    document: IonDocumentModel,\n    signer: ISigner\n  }): Promise<IonRecoverRequestModel> {\n    // Validate DID suffix\n    IonRequest.validateDidSuffix(input.didSuffix);\n\n    // Validate recovery public key\n    InputValidator.validateEs256kOperationKey(input.recoveryPublicKey, OperationKeyType.Public);\n\n    // Validate next recovery public key\n    InputValidator.validateEs256kOperationKey(input.nextRecoveryPublicKey, OperationKeyType.Public);\n\n    // Validate next update public key\n    InputValidator.validateEs256kOperationKey(input.nextUpdatePublicKey, OperationKeyType.Public);\n\n    // Validate all given DID Document keys.\n    IonRequest.validateDidDocumentKeys(input.document.publicKeys);\n\n    // Validate all given service.\n    IonRequest.validateServices(input.document.services);\n\n    const hashAlgorithmInMultihashCode = IonSdkConfig.hashAlgorithmInMultihashCode;\n    const revealValue = await Multihash.canonicalizeThenHashThenEncode(input.recoveryPublicKey, hashAlgorithmInMultihashCode);\n\n    const patches = [{\n      action: PatchAction.Replace,\n      document: input.document\n    }];\n\n    const nextUpdateCommitmentHash = await Multihash.canonicalizeThenDoubleHashThenEncode(input.nextUpdatePublicKey, hashAlgorithmInMultihashCode);\n    const delta = {\n      patches,\n      updateCommitment: nextUpdateCommitmentHash\n    };\n\n    const deltaHash = await Multihash.canonicalizeThenHashThenEncode(delta, hashAlgorithmInMultihashCode);\n    const nextRecoveryCommitmentHash = await Multihash.canonicalizeThenDoubleHashThenEncode(input.nextRecoveryPublicKey, hashAlgorithmInMultihashCode);\n\n    const dataToBeSigned = {\n      recoveryCommitment: nextRecoveryCommitmentHash,\n      recoveryKey: input.recoveryPublicKey,\n      deltaHash: deltaHash\n    };\n\n    const compactJws = await input.signer.sign({ alg: 'ES256K' }, dataToBeSigned);\n\n    return {\n      type: OperationType.Recover,\n      didSuffix: input.didSuffix,\n      revealValue: revealValue,\n      delta: delta,\n      signedData: compactJws\n    };\n  }\n\n  public static async createUpdateRequest (input: {\n    didSuffix: string;\n    updatePublicKey: JwkEs256k;\n    nextUpdatePublicKey: JwkEs256k;\n    signer: ISigner;\n    servicesToAdd?: IonServiceModel[];\n    idsOfServicesToRemove?: string[];\n    publicKeysToAdd?: IonPublicKeyModel[];\n    idsOfPublicKeysToRemove?: string[];\n  }): Promise<IonUpdateRequestModel> {\n    // Validate DID suffix\n    IonRequest.validateDidSuffix(input.didSuffix);\n\n    // Validate update public key\n    InputValidator.validateEs256kOperationKey(input.updatePublicKey, OperationKeyType.Public);\n\n    // Validate next update public key\n    InputValidator.validateEs256kOperationKey(input.nextUpdatePublicKey, OperationKeyType.Public);\n\n    // Validate all given service.\n    IonRequest.validateServices(input.servicesToAdd);\n\n    // Validate all given DID Document keys.\n    IonRequest.validateDidDocumentKeys(input.publicKeysToAdd);\n\n    // Validate all given service id to remove.\n    if (input.idsOfServicesToRemove !== undefined) {\n      for (const id of input.idsOfServicesToRemove) {\n        InputValidator.validateId(id);\n      }\n    }\n\n    // Validate all given public key id to remove.\n    if (input.idsOfPublicKeysToRemove !== undefined) {\n      for (const id of input.idsOfPublicKeysToRemove) {\n        InputValidator.validateId(id);\n      }\n    }\n\n    const patches = [];\n    // Create patches for add services\n    const servicesToAdd = input.servicesToAdd;\n    if (servicesToAdd !== undefined && servicesToAdd.length > 0) {\n      const patch = {\n        action: PatchAction.AddServices,\n        services: servicesToAdd\n      };\n\n      patches.push(patch);\n    }\n\n    // Create patches for remove services\n    const idsOfServicesToRemove = input.idsOfServicesToRemove;\n    if (idsOfServicesToRemove !== undefined && idsOfServicesToRemove.length > 0) {\n      const patch = {\n        action: PatchAction.RemoveServices,\n        ids: idsOfServicesToRemove\n      };\n\n      patches.push(patch);\n    }\n\n    // Create patches for adding public keys\n    const publicKeysToAdd = input.publicKeysToAdd;\n    if (publicKeysToAdd !== undefined && publicKeysToAdd.length > 0) {\n      const patch = {\n        action: PatchAction.AddPublicKeys,\n        publicKeys: publicKeysToAdd\n      };\n\n      patches.push(patch);\n    }\n\n    // Create patch for removing public keys\n    const idsOfPublicKeysToRemove = input.idsOfPublicKeysToRemove;\n    if (idsOfPublicKeysToRemove !== undefined && idsOfPublicKeysToRemove.length > 0) {\n      const patch = {\n        action: PatchAction.RemovePublicKeys,\n        ids: idsOfPublicKeysToRemove\n      };\n\n      patches.push(patch);\n    }\n\n    const hashAlgorithmInMultihashCode = IonSdkConfig.hashAlgorithmInMultihashCode;\n    const revealValue = await Multihash.canonicalizeThenHashThenEncode(input.updatePublicKey, hashAlgorithmInMultihashCode);\n\n    const nextUpdateCommitmentHash = await Multihash.canonicalizeThenDoubleHashThenEncode(input.nextUpdatePublicKey, hashAlgorithmInMultihashCode);\n    const delta = {\n      patches,\n      updateCommitment: nextUpdateCommitmentHash\n    };\n    const deltaHash = await Multihash.canonicalizeThenHashThenEncode(delta, hashAlgorithmInMultihashCode);\n\n    const dataToBeSigned = {\n      updateKey: input.updatePublicKey,\n      deltaHash\n    };\n\n    const compactJws = await input.signer.sign({ alg: 'ES256K' }, dataToBeSigned);\n\n    return {\n      type: OperationType.Update,\n      didSuffix: input.didSuffix,\n      revealValue,\n      delta,\n      signedData: compactJws\n    };\n  }\n\n  private static validateDidSuffix (didSuffix: string) {\n    Multihash.validateEncodedHashComputedUsingSupportedHashAlgorithm(didSuffix, 'didSuffix');\n  }\n\n  private static validateDidDocumentKeys (publicKeys?: IonPublicKeyModel[]) {\n    if (publicKeys === undefined) {\n      return;\n    }\n\n    // Validate each public key.\n    const publicKeyIdSet: Set<string> = new Set();\n    for (const publicKey of publicKeys) {\n      if (Array.isArray(publicKey.publicKeyJwk)) {\n        throw new IonError(ErrorCode.DidDocumentPublicKeyMissingOrIncorrectType, `DID Document key 'publicKeyJwk' property is not a non-array object.`);\n      }\n\n      InputValidator.validateId(publicKey.id);\n\n      // 'id' must be unique across all given keys.\n      if (publicKeyIdSet.has(publicKey.id)) {\n        throw new IonError(ErrorCode.DidDocumentPublicKeyIdDuplicated, `DID Document key with ID '${publicKey.id}' already exists.`);\n      }\n      publicKeyIdSet.add(publicKey.id);\n\n      InputValidator.validatePublicKeyPurposes(publicKey.purposes);\n    }\n  }\n\n  private static validateServices (services?: IonServiceModel[]) {\n    if (services !== undefined && services.length !== 0) {\n      const serviceIdSet: Set<string> = new Set();\n      for (const service of services) {\n        IonRequest.validateService(service);\n        if (serviceIdSet.has(service.id)) {\n          throw new IonError(ErrorCode.DidDocumentServiceIdDuplicated, 'Service id has to be unique');\n        }\n        serviceIdSet.add(service.id);\n      }\n    }\n  }\n\n  private static validateService (service: IonServiceModel) {\n    InputValidator.validateId(service.id);\n\n    const maxTypeLength = 30;\n    if (service.type.length > maxTypeLength) {\n      const errorMessage = `Service endpoint type length ${service.type.length} exceeds max allowed length of ${maxTypeLength}.`;\n      throw new IonError(ErrorCode.ServiceTypeTooLong, errorMessage);\n    }\n\n    // Throw error if `serviceEndpoint` is an array.\n    if (Array.isArray(service.serviceEndpoint)) {\n      const errorMessage = 'Service endpoint value cannot be an array.';\n      throw new IonError(ErrorCode.ServiceEndpointCannotBeAnArray, errorMessage);\n    }\n\n    if (typeof service.serviceEndpoint === 'string') {\n      const uri = URI.parse(service.serviceEndpoint);\n      if (uri.error !== undefined) {\n        throw new IonError(ErrorCode.ServiceEndpointStringNotValidUri, `Service endpoint string '${service.serviceEndpoint}' is not a URI.`);\n      }\n    }\n  }\n\n  private static validateDeltaSize (delta: object) {\n    const deltaBytes = JsonCanonicalizer.canonicalizeAsBytes(delta);\n    if (deltaBytes.length > IonSdkConfig.maxCanonicalizedDeltaSizeInBytes) {\n      const errorMessage = `Delta of ${deltaBytes.length} bytes exceeded limit of ${IonSdkConfig.maxCanonicalizedDeltaSizeInBytes} bytes.`;\n      throw new IonError(ErrorCode.DeltaExceedsMaximumSize, errorMessage);\n    }\n  }\n}\n", "import Encoder from './Encoder.js';\nimport ErrorCode from './ErrorCode.js';\nimport IonError from './IonError.js';\nimport IonPublicKeyPurpose from './enums/IonPublicKeyPurpose.js';\nimport JwkEs256k from './models/JwkEs256k.js';\nimport OperationKeyType from './enums/OperationKeyType.js';\n\n/**\n * Class containing input validation methods.\n */\nexport default class InputValidator {\n  /**\n   * Validates the schema of a ES256K JWK key.\n   */\n  public static validateEs256kOperationKey (operationKeyJwk: JwkEs256k, operationKeyType: OperationKeyType) {\n    const allowedProperties = new Set(['kty', 'crv', 'x', 'y']);\n    if (operationKeyType === OperationKeyType.Private) {\n      allowedProperties.add('d');\n    }\n    for (const property in operationKeyJwk) {\n      if (!allowedProperties.has(property)) {\n        throw new IonError(ErrorCode.PublicKeyJwkEs256kHasUnexpectedProperty, `SECP256K1 JWK key has unexpected property '${property}'.`);\n      }\n    }\n\n    if (operationKeyJwk.crv !== 'secp256k1') {\n      throw new IonError(ErrorCode.JwkEs256kMissingOrInvalidCrv, `SECP256K1 JWK 'crv' property must be 'secp256k1' but got '${operationKeyJwk.crv}.'`);\n    }\n\n    if (operationKeyJwk.kty !== 'EC') {\n      throw new IonError(ErrorCode.JwkEs256kMissingOrInvalidKty, `SECP256K1 JWK 'kty' property must be 'EC' but got '${operationKeyJwk.kty}.'`);\n    }\n\n    // `x` and `y` need 43 Base64URL encoded bytes to contain 256 bits.\n    if (operationKeyJwk.x.length !== 43) {\n      throw new IonError(ErrorCode.JwkEs256kHasIncorrectLengthOfX, `SECP256K1 JWK 'x' property must be 43 bytes.`);\n    }\n\n    if (operationKeyJwk.y.length !== 43) {\n      throw new IonError(ErrorCode.JwkEs256kHasIncorrectLengthOfY, `SECP256K1 JWK 'y' property must be 43 bytes.`);\n    }\n\n    if (operationKeyType === OperationKeyType.Private && (operationKeyJwk.d === undefined || operationKeyJwk.d.length !== 43)) {\n      throw new IonError(ErrorCode.JwkEs256kHasIncorrectLengthOfD, `SECP256K1 JWK 'd' property must be 43 bytes.`);\n    }\n  }\n\n  /**\n   * Validates an `id` property (in `IonPublicKeyModel` and `IonServiceModel`).\n   */\n  public static validateId (id: string) {\n    const maxIdLength = 50;\n    if (id.length > maxIdLength) {\n      throw new IonError(ErrorCode.IdTooLong, `Key ID length ${id.length} exceed max allowed length of ${maxIdLength}.`);\n    }\n\n    if (!Encoder.isBase64UrlString(id)) {\n      throw new IonError(ErrorCode.IdNotUsingBase64UrlCharacterSet, `Key ID '${id}' is not a Base64URL string.`);\n    }\n  }\n\n  /**\n   * Validates the given public key purposes.\n   */\n  public static validatePublicKeyPurposes (purposes?: IonPublicKeyPurpose[]) {\n    // Nothing to validate if `purposes` is undefined.\n    if (purposes === undefined) {\n      return;\n    }\n\n    // Validate that all purposes are be unique.\n    const processedPurposes: Set<IonPublicKeyPurpose> = new Set();\n    for (const purpose of purposes) {\n      if (processedPurposes.has(purpose)) {\n        throw new IonError(ErrorCode.PublicKeyPurposeDuplicated, `Public key purpose '${purpose}' already specified.`);\n      }\n      processedPurposes.add(purpose);\n    }\n  }\n}\n", "/**\n * Operation key type, indicates if a key is a public or private key.\n */\nenum OperationKeyType {\n    Public = 'public',\n    Private = 'private'\n  }\n\nexport default OperationKeyType;\n", "import IonNetwork from './enums/IonNetwork.js';\n\n/**\n * Global configuration of the SDK.\n */\nexport default class IonSdkConfig {\n  /**\n   * Default hash algorithm used when hashing is performed.\n   */\n  public static hashAlgorithmInMultihashCode = 18; // SHA256\n\n  /**\n   * Maximum bytes for canonicalized delta.\n   */\n  public static maxCanonicalizedDeltaSizeInBytes: number = 1000;\n\n  /**\n   * Network name in ION DID, okay to leave as `undefined` if mainnet.\n   */\n  public static network: IonNetwork | undefined;\n}\n", "import * as canonicalize from 'canonicalize';\nimport Encoder from './Encoder.js';\n\n/**\n * Class containing reusable JSON canonicalization operations using JSON Canonicalization Scheme (JCS).\n */\nexport default class JsonCanonicalizer {\n  /**\n   * Canonicalizes the given content as bytes.\n   */\n  public static canonicalizeAsBytes (content: object): Uint8Array {\n    // We need to remove all properties with `undefined` as value so that JCS canonicalization will not produce invalid JSON.\n    const contentWithoutUndefinedProperties = JsonCanonicalizer.removeAllUndefinedProperties(content);\n    const canonicalizedString: string = canonicalize.default(contentWithoutUndefinedProperties)!;\n    const contentBytes = Encoder.stringToBytes(canonicalizedString);\n    return contentBytes;\n  }\n\n  /**\n   * Removes all properties within the given object with `undefined` as value.\n   */\n  private static removeAllUndefinedProperties (content: any): any {\n    for (const key in content) {\n      if (typeof content[key] === 'object') {\n        JsonCanonicalizer.removeAllUndefinedProperties(content[key]);\n      } else if (content[key] === undefined) {\n        delete content[key];\n      }\n    }\n\n    return content;\n  }\n}\n", "import * as multihashes from 'multihashes';\nimport Encoder from './Encoder.js';\nimport ErrorCode from './ErrorCode.js';\nimport { HashCode } from 'multihashes';\nimport IonError from './IonError.js';\nimport IonSdkConfig from './IonSdkConfig.js';\nimport JsonCanonicalizer from './JsonCanonicalizer.js';\nimport { sha256 } from 'multiformats/hashes/sha2';\n\n/**\n * Class that performs hashing operations using the multihash format.\n */\nexport default class Multihash {\n  /**\n   * Hashes the content using the hashing algorithm specified.\n   * @param hashAlgorithmInMultihashCode The hashing algorithm to use.\n   */\n  public static async hash (content: Uint8Array, hashAlgorithmInMultihashCode: number): Promise<Uint8Array> {\n    const conventionalHash = await this.hashAsNonMultihashBytes(content, hashAlgorithmInMultihashCode);\n    const multihash = multihashes.encode(conventionalHash, hashAlgorithmInMultihashCode as HashCode);\n\n    return multihash;\n  }\n\n  /**\n   * Hashes the content using the hashing algorithm specified as a generic (non-multihash) hash.\n   * @param hashAlgorithmInMultihashCode The hashing algorithm to use.\n   * @returns A multihash bytes.\n   */\n  public static async hashAsNonMultihashBytes (content: Uint8Array, hashAlgorithmInMultihashCode: number): Promise<Uint8Array> {\n    let hash;\n    switch (hashAlgorithmInMultihashCode) {\n      case 18: // SHA256\n        hash = await sha256.encode(content);\n        break;\n      default:\n        throw new IonError(\n          ErrorCode.MultihashUnsupportedHashAlgorithm,\n          `Hash algorithm defined in multihash code ${hashAlgorithmInMultihashCode} is not supported.`\n        );\n    }\n\n    return hash;\n  }\n\n  /**\n   * Canonicalize the given content, then double hashes the result using the latest supported hash algorithm, then encodes the multihash.\n   * Mainly used for testing purposes.\n   */\n  public static async canonicalizeThenHashThenEncode (content: object, hashAlgorithmInMultihashCode: number): Promise<string> {\n    const canonicalizedStringBytes = JsonCanonicalizer.canonicalizeAsBytes(content);\n\n    const multihashEncodedString = await Multihash.hashThenEncode(canonicalizedStringBytes, hashAlgorithmInMultihashCode);\n    return multihashEncodedString;\n  }\n\n  /**\n   * Canonicalize the given content, then double hashes the result using the latest supported hash algorithm, then encodes the multihash.\n   * Mainly used for testing purposes.\n   */\n  public static async canonicalizeThenDoubleHashThenEncode (content: object, hashAlgorithmInMultihashCode: number): Promise<string> {\n    const contentBytes = JsonCanonicalizer.canonicalizeAsBytes(content);\n\n    // Double hash.\n    const intermediateHashBytes = await Multihash.hashAsNonMultihashBytes(contentBytes, hashAlgorithmInMultihashCode);\n    const multihashEncodedString = await Multihash.hashThenEncode(intermediateHashBytes, hashAlgorithmInMultihashCode);\n    return multihashEncodedString;\n  }\n\n  /**\n   * Hashes the content using the hashing algorithm specified then encodes the multihash bytes as string.\n   * @param hashAlgorithmInMultihashCode The hashing algorithm to use.\n   */\n  public static async hashThenEncode (content: Uint8Array, hashAlgorithmInMultihashCode: number): Promise<string> {\n    const multihashBytes = await Multihash.hash(content, hashAlgorithmInMultihashCode);\n    const multihashEncodedString = Encoder.encode(multihashBytes);\n    return multihashEncodedString;\n  }\n\n  /**\n   * Checks if the given encoded hash is a multihash computed using the configured hashing algorithm.\n   */\n  public static validateEncodedHashComputedUsingSupportedHashAlgorithm (\n    encodedMultihash: string,\n    inputContextForErrorLogging: string\n  ) {\n    let multihash;\n    const multihashBytes = Encoder.decodeAsBytes(encodedMultihash, inputContextForErrorLogging);\n    try {\n      multihash = multihashes.decode(multihashBytes);\n    } catch {\n      throw new IonError(\n        ErrorCode.MultihashStringNotAMultihash,\n        `Given ${inputContextForErrorLogging} string '${encodedMultihash}' is not a multihash after decoding.`);\n    }\n\n    const hashAlgorithmInMultihashCode = IonSdkConfig.hashAlgorithmInMultihashCode;\n\n    if (hashAlgorithmInMultihashCode !== multihash.code) {\n      throw new IonError(\n        ErrorCode.MultihashUnsupportedHashAlgorithm,\n        `Given ${inputContextForErrorLogging} uses unsupported multihash algorithm with code ${multihash.code}, ` +\n        `should use ${hashAlgorithmInMultihashCode} or change IonSdkConfig to desired hashing algorithm.`\n      );\n    }\n  }\n}\n", "/* global crypto */\n\nimport { from } from './hasher.js'\n\n/**\n * @param {AlgorithmIdentifier} name\n */\nconst sha = name =>\n  /**\n   * @param {Uint8Array} data\n   */\n  async data => new Uint8Array(await crypto.subtle.digest(name, data))\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n})\n", "import * as Digest from './digest.js'\n\n/**\n * @template {string} Name\n * @template {number} Code\n * @param {object} options\n * @param {Name} options.name\n * @param {Code} options.code\n * @param {(input: Uint8Array) => Await<Uint8Array>} options.encode\n */\nexport const from = ({ name, code, encode }) => new Hasher(name, code, encode)\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n *\n * @template {string} Name\n * @template {number} Code\n * @class\n * @implements {MultihashHasher<Code>}\n */\nexport class Hasher {\n  /**\n   *\n   * @param {Name} name\n   * @param {Code} code\n   * @param {(input: Uint8Array) => Await<Uint8Array>} encode\n   */\n  constructor (name, code, encode) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  /**\n   * @param {Uint8Array} input\n   * @returns {Await<Digest.Digest<Code, number>>}\n   */\n  digest (input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * @template {number} Alg\n * @typedef {import('./interface.js').MultihashHasher} MultihashHasher\n */\n\n/**\n * @template T\n * @typedef {Promise<T>|T} Await\n */\n", "import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n", "import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n", "var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n", "/**\n * ION operation types.\n */\nenum OperationType {\n  Create = 'create',\n  Update = 'update',\n  Deactivate = 'deactivate',\n  Recover = 'recover'\n}\n\nexport default OperationType;\n", "/**\n * Sidetree patch actions. These are the valid values in the action property of a patch.\n */\nenum PatchAction {\n    Replace = 'replace',\n    AddPublicKeys = 'add-public-keys',\n    RemovePublicKeys = 'remove-public-keys',\n    AddServices = 'add-services',\n    RemoveServices = 'remove-services'\n}\n\nexport default PatchAction;\n", "import Encoder from './Encoder.js';\nimport IonDocumentModel from './models/IonDocumentModel.js';\nimport IonRequest from './IonRequest.js';\nimport IonSdkConfig from './IonSdkConfig.js';\nimport JsonCanonicalizer from './JsonCanonicalizer.js';\nimport JwkEs256k from './models/JwkEs256k.js';\nimport Multihash from './Multihash.js';\n\n/**\n * Class containing DID related operations.\n */\nexport default class IonDid {\n  /**\n   * Creates a long-form DID.\n   * @param input.document The initial state to be associate with the ION DID to be created using a `replace` document patch action.\n   */\n  public static async createLongFormDid (input: {\n    recoveryKey: JwkEs256k;\n    updateKey: JwkEs256k;\n    document: IonDocumentModel;\n  }): Promise<string> {\n    const createRequest = await IonRequest.createCreateRequest(input);\n\n    const didUniqueSuffix = await IonDid.computeDidUniqueSuffix(createRequest.suffixData);\n\n    // Add the network portion if not configured for mainnet.\n    let shortFormDid;\n    if (IonSdkConfig.network === undefined || IonSdkConfig.network === 'mainnet') {\n      shortFormDid = `did:ion:${didUniqueSuffix}`;\n    } else {\n      shortFormDid = `did:ion:${IonSdkConfig.network}:${didUniqueSuffix}`;\n    }\n\n    const initialState = {\n      suffixData: createRequest.suffixData,\n      delta: createRequest.delta\n    };\n\n    // Initial state must be canonicalized as per spec.\n    const canonicalizedInitialStateBytes = JsonCanonicalizer.canonicalizeAsBytes(initialState);\n    const encodedCanonicalizedInitialStateString = Encoder.encode(canonicalizedInitialStateBytes);\n\n    const longFormDid = `${shortFormDid}:${encodedCanonicalizedInitialStateString}`;\n    return longFormDid;\n  }\n\n  /**\n   * Computes the DID unique suffix given the encoded suffix data string.\n   */\n  private static async computeDidUniqueSuffix (suffixData: object): Promise<string> {\n    const canonicalizedStringBytes = JsonCanonicalizer.canonicalizeAsBytes(suffixData);\n    const multihash = await Multihash.hash(canonicalizedStringBytes, IonSdkConfig.hashAlgorithmInMultihashCode);\n    const encodedMultihash = Encoder.encode(multihash);\n    return encodedMultihash;\n  }\n}\n", "/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nconst P = 2n ** 255n - 19n; // ed25519 is twisted edwards curve\nconst N = 2n ** 252n + 27742317777372353535851937790883648493n; // curve's (group) order\nconst Gx = 0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51an; // base point x\nconst Gy = 0x6666666666666666666666666666666666666666666666666666666666666658n; // base point y\nconst CURVE = {\n    a: -1n,\n    d: 37095705934669439343138083508754565189542113879843219016388785533085940283555n,\n    p: P, n: N, h: 8, Gx, Gy // field prime, curve (group) order, cofactor\n};\nconst err = (m = '') => { throw new Error(m); }; // error helper, messes-up stack trace\nconst str = (s) => typeof s === 'string'; // is string\nconst au8 = (a, l) => // is Uint8Array (of specific length)\n !(a instanceof Uint8Array) || (typeof l === 'number' && l > 0 && a.length !== l) ?\n    err('Uint8Array expected') : a;\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst toU8 = (a, len) => au8(str(a) ? h2b(a) : u8n(a), len); // norm(hex/u8a) to u8a\nconst mod = (a, b = P) => { let r = a % b; return r >= 0n ? r : b + r; }; // mod division\nconst isPoint = (p) => (p instanceof Point ? p : err('Point expected')); // is xyzt point\nlet Gpows = undefined; // precomputes for base point G\nclass Point {\n    constructor(ex, ey, ez, et) {\n        this.ex = ex;\n        this.ey = ey;\n        this.ez = ez;\n        this.et = et;\n    }\n    static fromAffine(p) { return new Point(p.x, p.y, 1n, mod(p.x * p.y)); }\n    static fromHex(hex, strict = true) {\n        const { d } = CURVE;\n        hex = toU8(hex, 32);\n        const normed = hex.slice(); // copy the array to not mess it up\n        normed[31] = hex[31] & ~0x80; // adjust first LE byte = last BE byte\n        const y = b2n_LE(normed); // decode as little-endian, convert to num\n        if (y === 0n) { // y=0 is valid, proceed\n        }\n        else {\n            if (strict && !(0n < y && y < P))\n                err('bad y coord 1'); // strict=true [1..P-1]\n            if (!strict && !(0n < y && y < 2n ** 256n))\n                err('bad y coord 2'); // strict=false [1..2^256-1]\n        }\n        const y2 = mod(y * y); // y\u00B2\n        const u = mod(y2 - 1n); // u=y\u00B2-1\n        const v = mod(d * y2 + 1n); // v=dy\u00B2+1\n        let { isValid, value: x } = uvRatio(u, v); // (uv\u00B3)(uv\u2077)^(p-5)/8; square root\n        if (!isValid)\n            err('bad y coordinate 3'); // not square root: bad point\n        const isXOdd = (x & 1n) === 1n; // adjust sign of x coordinate\n        const isHeadOdd = (hex[31] & 0x80) !== 0;\n        if (isHeadOdd !== isXOdd)\n            x = mod(-x);\n        return new Point(x, y, 1n, mod(x * y)); // Z=1, T=xy\n    }\n    get x() { return this.toAffine().x; } // .x, .y will call expensive toAffine.\n    get y() { return this.toAffine().y; } // Should be used with care.\n    equals(other) {\n        const { ex: X1, ey: Y1, ez: Z1 } = this;\n        const { ex: X2, ey: Y2, ez: Z2 } = isPoint(other); // isPoint() checks class equality\n        const X1Z2 = mod(X1 * Z2), X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2), Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    is0() { return this.equals(I); }\n    negate() {\n        return new Point(mod(-this.ex), this.ey, this.ez, mod(-this.et));\n    }\n    double() {\n        const { ex: X1, ey: Y1, ez: Z1 } = this; // Cost: 4M + 4S + 1*a + 6add + 1*2\n        const { a } = CURVE; // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new Point(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this; // Cost: 8M + 1*k + 8add + 1*2.\n        const { ex: X2, ey: Y2, ez: Z2, et: T2 } = isPoint(other); // doesn't check if other on-curve\n        const { a, d } = CURVE; // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-3\n        const A = mod(X1 * X2);\n        const B = mod(Y1 * Y2);\n        const C = mod(T1 * d * T2);\n        const D = mod(Z1 * Z2);\n        const E = mod((X1 + Y1) * (X2 + Y2) - A - B);\n        const F = mod(D - C);\n        const G = mod(D + C);\n        const H = mod(B - a * A);\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new Point(X3, Y3, Z3, T3);\n    }\n    mul(n, safe = true) {\n        if (n === 0n)\n            return safe === true ? err('cannot multiply by 0') : I;\n        if (!(typeof n === 'bigint' && 0n < n && n < N))\n            err('invalid scalar, must be < L');\n        if (!safe && this.is0() || n === 1n)\n            return this; // safe=true bans 0. safe=false allows 0.\n        if (this.equals(G))\n            return wNAF(n).p; // use wNAF precomputes for base points\n        let p = I, f = G; // init result point & fake point\n        for (let d = this; n > 0n; d = d.double(), n >>= 1n) { // double-and-add ladder\n            if (n & 1n)\n                p = p.add(d); // if bit is present, add to point\n            else if (safe)\n                f = f.add(d); // if not, add to fake for timing safety\n        }\n        return p;\n    }\n    multiply(scalar) { return this.mul(scalar); } // Aliases for compatibilty\n    clearCofactor() { return this.mul(BigInt(CURVE.h), false); } // multiply by cofactor\n    isSmallOrder() { return this.clearCofactor().is0(); } // check if P is small order\n    isTorsionFree() {\n        let p = this.mul(N / 2n, false).double(); // ensures the point is not \"bad\".\n        if (N % 2n)\n            p = p.add(this); // P^(N+1)             // P*N == (P*(N/2))*2+P\n        return p.is0();\n    }\n    toAffine() {\n        const { ex: x, ey: y, ez: z } = this; // (x, y, z, t) \u220B (x=x/z, y=y/z, t=xy)\n        if (this.is0())\n            return { x: 0n, y: 0n }; // fast-path for zero point\n        const iz = invert(z); // z^-1: invert z\n        if (mod(z * iz) !== 1n)\n            err('invalid inverse'); // (z * z^-1) must be 1, otherwise bad math\n        return { x: mod(x * iz), y: mod(y * iz) }; // x = x*z^-1; y = y*z^-1\n    }\n    toRawBytes() {\n        const { x, y } = this.toAffine(); // convert to affine 2d point\n        const b = n2b_32LE(y); // encode number to 32 bytes\n        b[31] |= x & 1n ? 0x80 : 0; // store sign in first LE byte\n        return b;\n    }\n    toHex() { return b2h(this.toRawBytes()); } // encode to hex string\n}\nPoint.BASE = new Point(Gx, Gy, 1n, mod(Gx * Gy)); // Generator / Base point\nPoint.ZERO = new Point(0n, 1n, 1n, 0n); // Identity / Zero point\nconst { BASE: G, ZERO: I } = Point; // Generator, identity points\nconst padh = (num, pad) => num.toString(16).padStart(pad, '0');\nconst b2h = (b) => Array.from(b).map(e => padh(e, 2)).join(''); // bytes to hex\nconst h2b = (hex) => {\n    const l = hex.length; // error if not string,\n    if (!str(hex) || l % 2)\n        err('hex invalid 1'); // or has odd length like 3, 5.\n    const arr = u8n(l / 2); // create result array\n    for (let i = 0; i < arr.length; i++) {\n        const j = i * 2;\n        const h = hex.slice(j, j + 2); // hexByte. slice is faster than substr\n        const b = Number.parseInt(h, 16); // byte, created from string part\n        if (Number.isNaN(b) || b < 0)\n            err('hex invalid 2'); // byte must be valid 0 <= byte < 256\n        arr[i] = b;\n    }\n    return arr;\n};\nconst n2b_32LE = (num) => h2b(padh(num, 32 * 2)).reverse(); // number to bytes LE\nconst b2n_LE = (b) => BigInt('0x' + b2h(u8n(au8(b)).reverse())); // bytes LE to num\nconst concatB = (...arrs) => {\n    const r = u8n(arrs.reduce((sum, a) => sum + au8(a).length, 0)); // create u8a of summed length\n    let pad = 0; // walk through each array,\n    arrs.forEach(a => { r.set(a, pad); pad += a.length; }); // ensure they have proper type\n    return r;\n};\nconst invert = (num, md = P) => {\n    if (num === 0n || md <= 0n)\n        err('no inverse n=' + num + ' mod=' + md); // no neg exponent for now\n    let a = mod(num, md), b = md, x = 0n, y = 1n, u = 1n, v = 0n;\n    while (a !== 0n) { // uses euclidean gcd algorithm\n        const q = b / a, r = b % a; // not constant-time\n        const m = x - u * q, n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    return b === 1n ? mod(x, md) : err('no inverse'); // b is gcd at this point\n};\nconst pow2 = (x, power) => {\n    let r = x;\n    while (power-- > 0n) {\n        r *= r;\n        r %= P;\n    }\n    return r;\n};\nconst pow_2_252_3 = (x) => {\n    const x2 = (x * x) % P; // x^2,       bits 1\n    const b2 = (x2 * x) % P; // x^3,       bits 11\n    const b4 = (pow2(b2, 2n) * b2) % P; // x^(2^4-1), bits 1111\n    const b5 = (pow2(b4, 1n) * x) % P; // x^(2^5-1), bits 11111\n    const b10 = (pow2(b5, 5n) * b5) % P; // x^(2^10)\n    const b20 = (pow2(b10, 10n) * b10) % P; // x^(2^20)\n    const b40 = (pow2(b20, 20n) * b20) % P; // x^(2^40)\n    const b80 = (pow2(b40, 40n) * b40) % P; // x^(2^80)\n    const b160 = (pow2(b80, 80n) * b80) % P; // x^(2^160)\n    const b240 = (pow2(b160, 80n) * b80) % P; // x^(2^240)\n    const b250 = (pow2(b240, 10n) * b10) % P; // x^(2^250)\n    const pow_p_5_8 = (pow2(b250, 2n) * x) % P; // < To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n};\nconst RM1 = 19681161376707505956807079304988542015446066515923890162744021073123829784752n; // \u221A-1\nconst uvRatio = (u, v) => {\n    const v3 = mod(v * v * v); // v\u00B3\n    const v7 = mod(v3 * v3 * v); // v\u2077\n    const pow = pow_2_252_3(u * v7).pow_p_5_8; // (uv\u2077)^(p-5)/8\n    let x = mod(u * v3 * pow); // (uv\u00B3)(uv\u2077)^(p-5)/8\n    const vx2 = mod(v * x * x); // vx\u00B2\n    const root1 = x; // First root candidate\n    const root2 = mod(x * RM1); // Second root candidate; RM1 is \u221A-1\n    const useRoot1 = vx2 === u; // If vx\u00B2 = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u); // If vx\u00B2 = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * RM1); // There is no valid root, vx\u00B2 = -u\u221A-1\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if ((mod(x) & 1n) === 1n)\n        x = mod(-x); // edIsNegative\n    return { isValid: useRoot1 || useRoot2, value: x };\n};\nconst modL_LE = (hash) => mod(b2n_LE(hash), N); // modulo L; but little-endian\nlet _shaS;\nconst sha512a = (...m) => etc.sha512Async(...m); // Async SHA512\nconst sha512s = (...m) => // Sync SHA512, not set by default\n typeof _shaS === 'function' ? _shaS(...m) : err('etc.sha512Sync not set');\nconst hash2extK = (hashed) => {\n    const head = hashed.slice(0, 32); // slice creates a copy, unlike subarray\n    head[0] &= 248; // Clamp bits: 0b1111_1000,\n    head[31] &= 127; // 0b0111_1111,\n    head[31] |= 64; // 0b0100_0000\n    const prefix = hashed.slice(32, 64); // private key \"prefix\"\n    const scalar = modL_LE(head); // modular division over curve order\n    const point = G.mul(scalar); // public key point\n    const pointBytes = point.toRawBytes(); // point serialized to Uint8Array\n    return { head, prefix, scalar, point, pointBytes };\n};\n// RFC8032 5.1.5; getPublicKey async, sync. Hash priv key and extract point.\nconst getExtendedPublicKeyAsync = (priv) => sha512a(toU8(priv, 32)).then(hash2extK);\nconst getExtendedPublicKey = (priv) => hash2extK(sha512s(toU8(priv, 32)));\nconst getPublicKeyAsync = (priv) => getExtendedPublicKeyAsync(priv).then(p => p.pointBytes);\nconst getPublicKey = (priv) => getExtendedPublicKey(priv).pointBytes;\nfunction hashFinish(asynchronous, res) {\n    if (asynchronous)\n        return sha512a(res.hashable).then(res.finish);\n    return res.finish(sha512s(res.hashable));\n}\nconst _sign = (e, rBytes, msg) => {\n    const { pointBytes: P, scalar: s } = e;\n    const r = modL_LE(rBytes); // r was created outside, reduce it modulo L\n    const R = G.mul(r).toRawBytes(); // R = [r]B\n    const hashable = concatB(R, P, msg); // dom2(F, C) || R || A || PH(M)\n    const finish = (hashed) => {\n        const S = mod(r + modL_LE(hashed) * s, N); // S = (r + k * s) mod L; 0 <= s < l\n        return au8(concatB(R, n2b_32LE(S)), 64); // 64-byte sig: 32b R.x + 32b LE(S)\n    };\n    return { hashable, finish };\n};\nconst signAsync = async (msg, privKey) => {\n    const m = toU8(msg); // RFC8032 5.1.6: sign msg with key async\n    const e = await getExtendedPublicKeyAsync(privKey); // pub,prfx\n    const rBytes = await sha512a(e.prefix, m); // r = SHA512(dom2(F, C) || prefix || PH(M))\n    return hashFinish(true, _sign(e, rBytes, m)); // gen R, k, S, then 64-byte signature\n};\nconst sign = (msg, privKey) => {\n    const m = toU8(msg); // RFC8032 5.1.6: sign msg with key sync\n    const e = getExtendedPublicKey(privKey); // pub,prfx\n    const rBytes = sha512s(e.prefix, m); // r = SHA512(dom2(F, C) || prefix || PH(M))\n    return hashFinish(false, _sign(e, rBytes, m)); // gen R, k, S, then 64-byte signature\n};\nconst _verify = (sig, msg, pub) => {\n    msg = toU8(msg); // Message hex str/Bytes\n    sig = toU8(sig, 64); // Signature hex str/Bytes, must be 64 bytes\n    const A = Point.fromHex(pub, false); // public key A decoded\n    const R = Point.fromHex(sig.slice(0, 32), false); // 0 <= R < 2^256: ZIP215 R can be >= P\n    const s = b2n_LE(sig.slice(32, 64)); // Decode second half as an integer S\n    const SB = G.mul(s, false); // in the range 0 <= s < L\n    const hashable = concatB(R.toRawBytes(), A.toRawBytes(), msg); // dom2(F, C) || R || A || PH(M)\n    const finish = (hashed) => {\n        const k = modL_LE(hashed); // decode in little-endian, modulo L\n        const RkA = R.add(A.mul(k, false)); // [8]R + [8][k]A'\n        return RkA.add(SB.negate()).clearCofactor().is0(); // [8][S]B = [8]R + [8][k]A'\n    };\n    return { hashable, finish };\n};\n// RFC8032 5.1.7: verification async, sync\nconst verifyAsync = async (s, m, p) => hashFinish(true, _verify(s, m, p));\nconst verify = (s, m, p) => hashFinish(false, _verify(s, m, p));\nconst cr = () => // We support: 1) browsers 2) node.js 19+\n typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\nconst etc = {\n    bytesToHex: b2h, hexToBytes: h2b, concatBytes: concatB,\n    mod, invert,\n    randomBytes: (len) => {\n        const crypto = cr(); // Can be shimmed in node.js <= 18 to prevent error:\n        // import { webcrypto } from 'node:crypto';\n        // if (!globalThis.crypto) globalThis.crypto = webcrypto;\n        if (!crypto)\n            err('crypto.getRandomValues must be defined');\n        return crypto.getRandomValues(u8n(len));\n    },\n    sha512Async: async (...messages) => {\n        const crypto = cr();\n        if (!crypto)\n            err('crypto.subtle or etc.sha512Async must be defined');\n        const m = concatB(...messages);\n        return u8n(await crypto.subtle.digest('SHA-512', m.buffer));\n    },\n    sha512Sync: undefined, // Actual logic below\n};\nObject.defineProperties(etc, { sha512Sync: {\n        configurable: false, get() { return _shaS; }, set(f) { if (!_shaS)\n            _shaS = f; },\n    } });\nconst utils = {\n    getExtendedPublicKeyAsync, getExtendedPublicKey,\n    randomPrivateKey: () => etc.randomBytes(32),\n    precompute(w = 8, p = G) { p.multiply(3n); return p; }, // no-op\n};\nconst W = 8; // Precomputes-related code. W = window size\nconst precompute = () => {\n    const points = []; // 10x sign(), 2x verify(). To achieve this,\n    const windows = 256 / W + 1; // app needs to spend 40ms+ to calculate\n    let p = G, b = p; // a lot of points related to base point G.\n    for (let w = 0; w < windows; w++) { // Points are stored in array and used\n        b = p; // any time Gx multiplication is done.\n        points.push(b); // They consume 16-32 MiB of RAM.\n        for (let i = 1; i < 2 ** (W - 1); i++) {\n            b = b.add(p);\n            points.push(b);\n        }\n        p = b.double(); // Precomputes don't speed-up getSharedKey,\n    } // which multiplies user point by scalar,\n    return points; // when precomputes are using base point\n};\nconst wNAF = (n) => {\n    // Compared to other point mult methods,\n    const comp = Gpows || (Gpows = precompute()); // stores 2x less points using subtraction\n    const neg = (cnd, p) => { let n = p.negate(); return cnd ? n : p; }; // negate\n    let p = I, f = G; // f must be G, or could become I in the end\n    const windows = 1 + 256 / W; // W=8 17 windows\n    const wsize = 2 ** (W - 1); // W=8 128 window size\n    const mask = BigInt(2 ** W - 1); // W=8 will create mask 0b11111111\n    const maxNum = 2 ** W; // W=8 256\n    const shiftBy = BigInt(W); // W=8 8\n    for (let w = 0; w < windows; w++) {\n        const off = w * wsize;\n        let wbits = Number(n & mask); // extract W bits.\n        n >>= shiftBy; // shift number by W bits.\n        if (wbits > wsize) {\n            wbits -= maxNum;\n            n += 1n;\n        } // split if bits > max: +224 => 256-32\n        const off1 = off, off2 = off + Math.abs(wbits) - 1; // offsets, evaluate both\n        const cnd1 = w % 2 !== 0, cnd2 = wbits < 0; // conditions, evaluate both\n        if (wbits === 0) {\n            f = f.add(neg(cnd1, comp[off1])); // bits are 0: add garbage to fake point\n        }\n        else { //          ^ can't add off2, off2 = I\n            p = p.add(neg(cnd2, comp[off2])); // bits are 1: add to result point\n        }\n    }\n    return { p, f }; // return both real and fake points for JIT\n}; // !! you can disable precomputes by commenting-out call of the wNAF() inside Point#mul()\nexport { getPublicKey, getPublicKeyAsync, sign, verify, // Remove the export to easily use in REPL\nsignAsync, verifyAsync, CURVE, etc, utils, Point as ExtendedPoint }; // envs like browser console\n", "/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nconst B256 = 2n ** 256n; // secp256k1 is short weierstrass curve\nconst P = B256 - 0x1000003d1n; // curve's field prime\nconst N = B256 - 0x14551231950b75fc4402da1732fc9bebfn; // curve (group) order\nconst Gx = 0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798n; // base point x\nconst Gy = 0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8n; // base point y\nconst CURVE = { p: P, n: N, a: 0n, b: 7n, Gx, Gy }; // exported variables incl. a, b\nconst fLen = 32; // field / group byte length\nconst crv = (x) => mod(mod(x * x) * x + CURVE.b); // x\u00B3 + ax + b weierstrass formula; no a\nconst err = (m = '') => { throw new Error(m); }; // error helper, messes-up stack trace\nconst big = (n) => typeof n === 'bigint'; // is big integer\nconst str = (s) => typeof s === 'string'; // is string\nconst fe = (n) => big(n) && 0n < n && n < P; // is field element (invertible)\nconst ge = (n) => big(n) && 0n < n && n < N; // is group element\nconst au8 = (a, l) => // is Uint8Array (of specific length)\n !(a instanceof Uint8Array) || (typeof l === 'number' && l > 0 && a.length !== l) ?\n    err('Uint8Array expected') : a;\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst toU8 = (a, len) => au8(str(a) ? h2b(a) : u8n(a), len); // norm(hex/u8a) to u8a\nconst mod = (a, b = P) => { let r = a % b; return r >= 0n ? r : b + r; }; // mod division\nconst isPoint = (p) => (p instanceof Point ? p : err('Point expected')); // is 3d point\nlet Gpows = undefined; // precomputes for base point G\nclass Point {\n    constructor(px, py, pz) {\n        this.px = px;\n        this.py = py;\n        this.pz = pz;\n    } //3d=less inversions\n    static fromAffine(p) { return new Point(p.x, p.y, 1n); }\n    static fromHex(hex) {\n        hex = toU8(hex); // convert hex string to Uint8Array\n        let p = undefined;\n        const head = hex[0], tail = hex.subarray(1); // first byte is prefix, rest is data\n        const x = slcNum(tail, 0, fLen), len = hex.length; // next 32 bytes are x coordinate\n        if (len === 33 && [0x02, 0x03].includes(head)) { // compressed points: 33b, start\n            if (!fe(x))\n                err('Point hex invalid: x not FE'); // with byte 0x02 or 0x03. Check if 0<x<P\n            let y = sqrt(crv(x)); // x\u00B3 + ax + b is right side of equation\n            const isYOdd = (y & 1n) === 1n; // y\u00B2 is equivalent left-side. Calculate y\u00B2:\n            const headOdd = (head & 1) === 1; // y = \u221Ay\u00B2; there are two solutions: y, -y\n            if (headOdd !== isYOdd)\n                y = mod(-y); // determine proper solution\n            p = new Point(x, y, 1n); // create point\n        } // Uncompressed points: 65b, start with 0x04\n        if (len === 65 && head === 0x04)\n            p = new Point(x, slcNum(tail, fLen, 2 * fLen), 1n);\n        return p ? p.ok() : err('Point is not on curve'); // Verify the result\n    }\n    static fromPrivateKey(k) { return G.mul(toPriv(k)); } // Create point from a private key.\n    get x() { return this.aff().x; } // .x, .y will call expensive toAffine:\n    get y() { return this.aff().y; } // should be used with care.\n    equals(other) {\n        const { px: X1, py: Y1, pz: Z1 } = this;\n        const { px: X2, py: Y2, pz: Z2 } = isPoint(other); // isPoint() checks class equality\n        const X1Z2 = mod(X1 * Z2), X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2), Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() { return new Point(this.px, mod(-this.py), this.pz); } // Flip point over y coord\n    double() { return this.add(this); } // Point doubling: P+P, complete formula.\n    add(other) {\n        const { px: X1, py: Y1, pz: Z1 } = this; // free formula from Renes-Costello-Batina\n        const { px: X2, py: Y2, pz: Z2 } = isPoint(other); // https://eprint.iacr.org/2015/1060, algo 1\n        const { a, b } = CURVE; // Cost: 12M + 0S + 3*a + 3*b3 + 23add\n        let X3 = 0n, Y3 = 0n, Z3 = 0n;\n        const b3 = mod(b * 3n);\n        let t0 = mod(X1 * X2), t1 = mod(Y1 * Y2), t2 = mod(Z1 * Z2), t3 = mod(X1 + Y1); // step 1\n        let t4 = mod(X2 + Y2); // step 5\n        t3 = mod(t3 * t4);\n        t4 = mod(t0 + t1);\n        t3 = mod(t3 - t4);\n        t4 = mod(X1 + Z1);\n        let t5 = mod(X2 + Z2); // step 10\n        t4 = mod(t4 * t5);\n        t5 = mod(t0 + t2);\n        t4 = mod(t4 - t5);\n        t5 = mod(Y1 + Z1);\n        X3 = mod(Y2 + Z2); // step 15\n        t5 = mod(t5 * X3);\n        X3 = mod(t1 + t2);\n        t5 = mod(t5 - X3);\n        Z3 = mod(a * t4);\n        X3 = mod(b3 * t2); // step 20\n        Z3 = mod(X3 + Z3);\n        X3 = mod(t1 - Z3);\n        Z3 = mod(t1 + Z3);\n        Y3 = mod(X3 * Z3);\n        t1 = mod(t0 + t0); // step 25\n        t1 = mod(t1 + t0);\n        t2 = mod(a * t2);\n        t4 = mod(b3 * t4);\n        t1 = mod(t1 + t2);\n        t2 = mod(t0 - t2); // step 30\n        t2 = mod(a * t2);\n        t4 = mod(t4 + t2);\n        t0 = mod(t1 * t4);\n        Y3 = mod(Y3 + t0);\n        t0 = mod(t5 * t4); // step 35\n        X3 = mod(t3 * X3);\n        X3 = mod(X3 - t0);\n        t0 = mod(t3 * t1);\n        Z3 = mod(t5 * Z3);\n        Z3 = mod(Z3 + t0); // step 40\n        return new Point(X3, Y3, Z3);\n    }\n    mul(n, safe = true) {\n        if (!safe && n === 0n)\n            return I; // in unsafe mode, allow zero\n        if (!ge(n))\n            err('invalid scalar'); // must be 0 < n < CURVE.n\n        if (this.equals(G))\n            return wNAF(n).p; // use precomputes for base point\n        let p = I, f = G; // init result point & fake point\n        for (let d = this; n > 0n; d = d.double(), n >>= 1n) { // double-and-add ladder\n            if (n & 1n)\n                p = p.add(d); // if bit is present, add to point\n            else if (safe)\n                f = f.add(d); // if not, add to fake for timing safety\n        }\n        return p;\n    }\n    mulAddQUns(R, u1, u2) {\n        return this.mul(u1, false).add(R.mul(u2, false)).ok(); // Unsafe: do NOT use for stuff related\n    } // to private keys. Doesn't use Shamir trick\n    toAffine() {\n        const { px: x, py: y, pz: z } = this; // (x, y, z) \u220B (x=x/z, y=y/z)\n        if (this.equals(I))\n            return { x: 0n, y: 0n }; // fast-path for zero point\n        if (z === 1n)\n            return { x, y }; // if z is 1, pass affine coordinates as-is\n        const iz = inv(z); // z^-1: invert z\n        if (mod(z * iz) !== 1n)\n            err('invalid inverse'); // (z * z^-1) must be 1, otherwise bad math\n        return { x: mod(x * iz), y: mod(y * iz) }; // x = x*z^-1; y = y*z^-1\n    }\n    assertValidity() {\n        const { x, y } = this.aff(); // convert to 2d xy affine point.\n        if (!fe(x) || !fe(y))\n            err('Point invalid: x or y'); // x and y must be in range 0 < n < P\n        return mod(y * y) === crv(x) ? // y\u00B2 = x\u00B3 + ax + b, must be equal\n            this : err('Point invalid: not on curve');\n    }\n    multiply(n) { return this.mul(n); } // Aliases to compress code\n    aff() { return this.toAffine(); }\n    ok() { return this.assertValidity(); }\n    toHex(isCompressed = true) {\n        const { x, y } = this.aff(); // convert to 2d xy affine point\n        const head = isCompressed ? ((y & 1n) === 0n ? '02' : '03') : '04'; // 0x02, 0x03, 0x04 prefix\n        return head + n2h(x) + (isCompressed ? '' : n2h(y)); // prefix||x and ||y\n    }\n    toRawBytes(isCompressed = true) {\n        return h2b(this.toHex(isCompressed)); // re-use toHex(), convert hex to bytes\n    }\n}\nPoint.BASE = new Point(Gx, Gy, 1n); // Generator / base point\nPoint.ZERO = new Point(0n, 1n, 0n); // Identity / zero point\nconst { BASE: G, ZERO: I } = Point; // Generator, identity points\nconst padh = (n, pad) => n.toString(16).padStart(pad, '0');\nconst b2h = (b) => Array.from(b).map(e => padh(e, 2)).join(''); // bytes to hex\nconst h2b = (hex) => {\n    const l = hex.length; // error if not string,\n    if (!str(hex) || l % 2)\n        err('hex invalid 1'); // or has odd length like 3, 5.\n    const arr = u8n(l / 2); // create result array\n    for (let i = 0; i < arr.length; i++) {\n        const j = i * 2;\n        const h = hex.slice(j, j + 2); // hexByte. slice is faster than substr\n        const b = Number.parseInt(h, 16); // byte, created from string part\n        if (Number.isNaN(b) || b < 0)\n            err('hex invalid 2'); // byte must be valid 0 <= byte < 256\n        arr[i] = b;\n    }\n    return arr;\n};\nconst b2n = (b) => BigInt('0x' + (b2h(b) || '0')); // bytes to number\nconst slcNum = (b, from, to) => b2n(b.slice(from, to)); // slice bytes num\nconst n2b = (num) => {\n    return big(num) && num >= 0n && num < B256 ? h2b(padh(num, 2 * fLen)) : err('bigint expected');\n};\nconst n2h = (num) => b2h(n2b(num)); // number to 32b hex\nconst concatB = (...arrs) => {\n    const r = u8n(arrs.reduce((sum, a) => sum + au8(a).length, 0)); // create u8a of summed length\n    let pad = 0; // walk through each array,\n    arrs.forEach(a => { r.set(a, pad); pad += a.length; }); // ensure they have proper type\n    return r;\n};\nconst inv = (num, md = P) => {\n    if (num === 0n || md <= 0n)\n        err('no inverse n=' + num + ' mod=' + md); // no neg exponent for now\n    let a = mod(num, md), b = md, x = 0n, y = 1n, u = 1n, v = 0n;\n    while (a !== 0n) { // uses euclidean gcd algorithm\n        const q = b / a, r = b % a; // not constant-time\n        const m = x - u * q, n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    return b === 1n ? mod(x, md) : err('no inverse'); // b is gcd at this point\n};\nconst sqrt = (n) => {\n    let r = 1n; // So, a special, fast case. Paper: \"Square Roots from 1;24,51,10 to Dan Shanks\".\n    for (let num = n, e = (P + 1n) / 4n; e > 0n; e >>= 1n) { // powMod: modular exponentiation.\n        if (e & 1n)\n            r = (r * num) % P; // Uses exponentiation by squaring.\n        num = (num * num) % P; // Not constant-time.\n    }\n    return mod(r * r) === n ? r : err('sqrt invalid'); // check if result is valid\n};\nconst toPriv = (p) => {\n    if (!big(p))\n        p = b2n(toU8(p, fLen)); // convert to bigint when bytes\n    return ge(p) ? p : err('private key out of range'); // check if bigint is in range\n};\nconst moreThanHalfN = (n) => n > (N >> 1n); // if a number is bigger than CURVE.n/2\nfunction getPublicKey(privKey, isCompressed = true) {\n    return Point.fromPrivateKey(privKey).toRawBytes(isCompressed); // 33b or 65b output\n}\nclass Signature {\n    constructor(r, s, recovery) {\n        this.r = r;\n        this.s = s;\n        this.recovery = recovery;\n        this.assertValidity(); // recovery bit is optional when\n    } // constructed outside.\n    static fromCompact(hex) {\n        hex = toU8(hex, 64); // compact repr is (32b r)||(32b s)\n        return new Signature(slcNum(hex, 0, fLen), slcNum(hex, fLen, 2 * fLen));\n    }\n    assertValidity() { return ge(this.r) && ge(this.s) ? this : err(); } // 0 < r or s < CURVE.n\n    addRecoveryBit(rec) { return new Signature(this.r, this.s, rec); }\n    hasHighS() { return moreThanHalfN(this.s); }\n    recoverPublicKey(msgh) {\n        const { r, s, recovery: rec } = this; // secg.org/sec1-v2.pdf 4.1.6\n        if (![0, 1, 2, 3].includes(rec))\n            err('recovery id invalid'); // check recovery id\n        const h = bits2int_modN(toU8(msgh, 32)); // Truncate hash\n        const radj = rec === 2 || rec === 3 ? r + N : r; // If rec was 2 or 3, q.x is bigger than n\n        if (radj >= P)\n            err('q.x invalid'); // ensure q.x is still a field element\n        const head = (rec & 1) === 0 ? '02' : '03'; // head is 0x02 or 0x03\n        const R = Point.fromHex(head + n2h(radj)); // concat head + hex repr of r\n        const ir = inv(radj, N); // r^-1\n        const u1 = mod(-h * ir, N); // -hr^-1\n        const u2 = mod(s * ir, N); // sr^-1\n        return G.mulAddQUns(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n    }\n    toCompactRawBytes() { return h2b(this.toCompactHex()); } // Uint8Array 64b compact repr\n    toCompactHex() { return n2h(this.r) + n2h(this.s); } // hex 64b compact repr\n}\nconst bits2int = (bytes) => {\n    const delta = bytes.length * 8 - 256; // RFC suggests optional truncating via bits2octets\n    const num = b2n(bytes); // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which\n    return delta > 0 ? num >> BigInt(delta) : num; // matches bits2int. bits2int can produce res>N.\n};\nconst bits2int_modN = (bytes) => {\n    return mod(bits2int(bytes), N); // with 0: BAD for trunc as per RFC vectors\n};\nconst i2o = (num) => n2b(num); // int to octets\nconst cr = () => // We support: 1) browsers 2) node.js 19+ 3) deno, other envs with crypto\n typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\nlet _hmacSync; // Can be redefined by use in utils; built-ins don't provide it\nconst optS = { lowS: true }; // opts for sign()\nconst optV = { lowS: true }; // standard opts for verify()\nfunction prepSig(msgh, priv, opts = optS) {\n    if (['der', 'recovered', 'canonical'].some(k => k in opts)) // Ban legacy options\n        err('sign() legacy options not supported');\n    let { lowS } = opts; // generates low-s sigs by default\n    if (lowS == null)\n        lowS = true; // RFC6979 3.2: we skip step A\n    const h1i = bits2int_modN(toU8(msgh)); // msg bigint\n    const h1o = i2o(h1i); // msg octets\n    const d = toPriv(priv); // validate private key, convert to bigint\n    const seed = [i2o(d), h1o]; // Step D of RFC6979 3.2\n    let ent = opts.extraEntropy; // RFC6979 3.6: additional k' (optional)\n    if (ent) { // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n        if (ent === true)\n            ent = etc.randomBytes(fLen); // if true, use CSPRNG to generate data\n        const e = toU8(ent); // convert Hex|Bytes to Bytes\n        if (e.length !== fLen)\n            err(); // Expected 32 bytes of extra data\n        seed.push(e);\n    }\n    const m = h1i; // convert msg to bigint\n    const k2sig = (kBytes) => {\n        const k = bits2int(kBytes); // RFC6979 method.\n        if (!ge(k))\n            return; // Check 0 < k < CURVE.n\n        const ik = inv(k, N); // k^-1 mod n, NOT mod P\n        const q = G.mul(k).aff(); // q = Gk\n        const r = mod(q.x, N); // r = q.x mod n\n        if (r === 0n)\n            return; // r=0 invalid\n        const s = mod(ik * mod(m + mod(d * r, N), N), N); // s = k^-1(m + rd) mod n\n        if (s === 0n)\n            return; // s=0 invalid\n        let normS = s; // normalized S\n        let rec = (q.x === r ? 0 : 2) | Number(q.y & 1n); // recovery bit\n        if (lowS && moreThanHalfN(s)) { // if lowS was passed, ensure s is always\n            normS = mod(-s, N); // in the bottom half of CURVE.n\n            rec ^= 1;\n        }\n        return new Signature(r, normS, rec); // use normS, not s\n    };\n    return { seed: concatB(...seed), k2sig };\n}\nfunction hmacDrbg(asynchronous) {\n    let v = u8n(fLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(fLen); // Steps B, C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => { v.fill(1); k.fill(0); i = 0; };\n    const _e = 'drbg: tried 1000 values';\n    if (asynchronous) { // asynchronous=true\n        const h = (...b) => etc.hmacSha256Async(k, v, ...b); // hmac(k)(v, ...values)\n        const reseed = async (seed = u8n()) => {\n            k = await h(u8n([0x00]), seed); // k = hmac(K || V || 0x00 || seed)\n            v = await h(); // v = hmac(K || V)\n            if (seed.length === 0)\n                return;\n            k = await h(u8n([0x01]), seed); // k = hmac(K || V || 0x01 || seed)\n            v = await h(); // v = hmac(K || V)\n        };\n        const gen = async () => {\n            if (i++ >= 1000)\n                err(_e);\n            v = await h(); // v = hmac(K || V)\n            return v;\n        };\n        return async (seed, pred) => {\n            reset(); // the returned fn, don't, it's: 1. slower (JIT). 2. unsafe (async race conditions)\n            await reseed(seed); // Steps D-G\n            let res = undefined; // Step H: grind until k is in [1..n-1]\n            while (!(res = pred(await gen())))\n                await reseed(); // test predicate until it returns ok\n            reset();\n            return res;\n        };\n    }\n    else {\n        const h = (...b) => {\n            const f = _hmacSync;\n            if (!f)\n                err('etc.hmacSha256Sync not set');\n            return f(k, v, ...b); // hmac(k)(v, ...values)\n        };\n        const reseed = (seed = u8n()) => {\n            k = h(u8n([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n            v = h(); // v = hmac(k || v)\n            if (seed.length === 0)\n                return;\n            k = h(u8n([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n            v = h(); // v = hmac(k || v)\n        };\n        const gen = () => {\n            if (i++ >= 1000)\n                err(_e);\n            v = h(); // v = hmac(k || v)\n            return v;\n        };\n        return (seed, pred) => {\n            reset();\n            reseed(seed); // Steps D-G\n            let res = undefined; // Step H: grind until k is in [1..n-1]\n            while (!(res = pred(gen())))\n                reseed(); // test predicate until it returns ok\n            reset();\n            return res;\n        };\n    }\n}\n// ECDSA signature generation. via secg.org/sec1-v2.pdf 4.1.2 + RFC6979 deterministic k\nasync function signAsync(msgh, priv, opts = optS) {\n    const { seed, k2sig } = prepSig(msgh, priv, opts); // Extract arguments for hmac-drbg\n    return hmacDrbg(true)(seed, k2sig); // Re-run hmac-drbg until k2sig returns ok\n}\nfunction sign(msgh, priv, opts = optS) {\n    const { seed, k2sig } = prepSig(msgh, priv, opts); // Extract arguments for hmac-drbg\n    return hmacDrbg(false)(seed, k2sig); // Re-run hmac-drbg until k2sig returns ok\n}\nfunction verify(sig, msgh, pub, opts = optV) {\n    let { lowS } = opts; // ECDSA signature verification\n    if (lowS == null)\n        lowS = true; // Default lowS=true\n    if ('strict' in opts)\n        err('verify() legacy options not supported'); // legacy param\n    let sig_, h, P; // secg.org/sec1-v2.pdf 4.1.4\n    const rs = sig && typeof sig === 'object' && 'r' in sig; // Previous ver supported DER sigs. We\n    if (!rs && (toU8(sig).length !== 2 * fLen)) // throw error when DER is suspected now.\n        err('signature must be 64 bytes');\n    try {\n        sig_ = rs ? new Signature(sig.r, sig.s).assertValidity() : Signature.fromCompact(sig);\n        h = bits2int_modN(toU8(msgh, fLen)); // Truncate hash\n        P = pub instanceof Point ? pub.ok() : Point.fromHex(pub); // Validate public key\n    }\n    catch (e) {\n        return false;\n    } // Check sig for validity in both cases\n    if (!sig_)\n        return false;\n    const { r, s } = sig_;\n    if (lowS && moreThanHalfN(s))\n        return false; // lowS bans sig.s >= CURVE.n/2\n    let R;\n    try {\n        const is = inv(s, N); // s^-1\n        const u1 = mod(h * is, N); // u1 = hs^-1 mod n\n        const u2 = mod(r * is, N); // u2 = rs^-1 mod n\n        R = G.mulAddQUns(P, u1, u2).aff(); // R = u1\u22C5G + u2\u22C5P\n    }\n    catch (error) {\n        return false;\n    }\n    if (!R)\n        return false; // stop if R is identity / zero point\n    const v = mod(R.x, N); // <== The weird ECDSA part. R.x must be in N's field, not P's\n    return v === r; // mod(R.x, n) == r\n}\nfunction getSharedSecret(privA, pubB, isCompressed = true) {\n    return Point.fromHex(pubB).mul(toPriv(privA)).toRawBytes(isCompressed); // ECDH\n}\nfunction hashToPrivateKey(hash) {\n    hash = toU8(hash); // produces private keys with modulo bias\n    const minLen = fLen + 8; // being neglible.\n    if (hash.length < minLen || hash.length > 1024)\n        err('expected proper params');\n    const num = mod(b2n(hash), N - 1n) + 1n; // takes at least n+8 bytes\n    return n2b(num);\n}\nconst etc = {\n    hexToBytes: h2b, bytesToHex: b2h,\n    concatBytes: concatB, bytesToNumberBE: b2n, numberToBytesBE: n2b,\n    mod, invert: inv,\n    hmacSha256Async: async (key, ...msgs) => {\n        const crypto = cr(); // HMAC-SHA256 async. No sync built-in!\n        if (!crypto)\n            return err('etc.hmacSha256Async not set'); // Uses webcrypto: native cryptography.\n        const s = crypto.subtle;\n        const k = await s.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n        return u8n(await s.sign('HMAC', k, concatB(...msgs)));\n    },\n    hmacSha256Sync: _hmacSync,\n    hashToPrivateKey,\n    randomBytes: (len) => {\n        const crypto = cr(); // Can be shimmed in node.js <= 18 to prevent error:\n        // import { webcrypto } from 'node:crypto';\n        // if (!globalThis.crypto) globalThis.crypto = webcrypto;\n        if (!crypto)\n            err('crypto.getRandomValues must be defined');\n        return crypto.getRandomValues(u8n(len));\n    },\n};\nconst utils = {\n    normPrivateKeyToScalar: toPriv,\n    isValidPrivateKey: (key) => { try {\n        return !!toPriv(key);\n    }\n    catch (e) {\n        return false;\n    } },\n    randomPrivateKey: () => hashToPrivateKey(etc.randomBytes(fLen + 8)),\n    precompute(w = 8, p = G) { p.multiply(3n); return p; }, // no-op\n};\nObject.defineProperties(etc, { hmacSha256Sync: {\n        configurable: false, get() { return _hmacSync; }, set(f) { if (!_hmacSync)\n            _hmacSync = f; },\n    } });\nconst W = 8; // Precomputes-related code. W = window size\nconst precompute = () => {\n    const points = []; // 10x sign(), 2x verify(). To achieve this,\n    const windows = 256 / W + 1; // app needs to spend 40ms+ to calculate\n    let p = G, b = p; // a lot of points related to base point G.\n    for (let w = 0; w < windows; w++) { // Points are stored in array and used\n        b = p; // any time Gx multiplication is done.\n        points.push(b); // They consume 16-32 MiB of RAM.\n        for (let i = 1; i < 2 ** (W - 1); i++) {\n            b = b.add(p);\n            points.push(b);\n        }\n        p = b.double(); // Precomputes don't speed-up getSharedKey,\n    } // which multiplies user point by scalar,\n    return points; // when precomputes are using base point\n};\nconst wNAF = (n) => {\n    // Compared to other point mult methods,\n    const comp = Gpows || (Gpows = precompute()); // stores 2x less points using subtraction\n    const neg = (cnd, p) => { let n = p.negate(); return cnd ? n : p; }; // negate\n    let p = I, f = G; // f must be G, or could become I in the end\n    const windows = 1 + 256 / W; // W=8 17 windows\n    const wsize = 2 ** (W - 1); // W=8 128 window size\n    const mask = BigInt(2 ** W - 1); // W=8 will create mask 0b11111111\n    const maxNum = 2 ** W; // W=8 256\n    const shiftBy = BigInt(W); // W=8 8\n    for (let w = 0; w < windows; w++) {\n        const off = w * wsize;\n        let wbits = Number(n & mask); // extract W bits.\n        n >>= shiftBy; // shift number by W bits.\n        if (wbits > wsize) {\n            wbits -= maxNum;\n            n += 1n;\n        } // split if bits > max: +224 => 256-32\n        const off1 = off, off2 = off + Math.abs(wbits) - 1; // offsets, evaluate both\n        const cnd1 = w % 2 !== 0, cnd2 = wbits < 0; // conditions, evaluate both\n        if (wbits === 0) {\n            f = f.add(neg(cnd1, comp[off1])); // bits are 0: add garbage to fake point\n        }\n        else { //          ^ can't add off2, off2 = I\n            p = p.add(neg(cnd2, comp[off2])); // bits are 1: add to result point\n        }\n    }\n    return { p, f }; // return both real and fake points for JIT\n}; // !! you can disable precomputes by commenting-out call of the wNAF() inside Point#mul()\nexport { getPublicKey, sign, signAsync, verify, CURVE, // Remove the export to easily use in REPL\ngetSharedSecret, etc, utils, Point as ProjectivePoint, Signature }; // envs like browser console\n", "/**\n * Supported ION networks.\n */\nenum IonNetwork {\n  Mainnet = 'mainnet',\n  Testnet = 'test'\n}\n\nexport default IonNetwork;\n", "/**\n * DID Document key purpose.\n */\nenum IonPublicKeyPurpose {\n  Authentication = 'authentication',\n  AssertionMethod = 'assertionMethod',\n  CapabilityInvocation = 'capabilityInvocation',\n  CapabilityDelegation = 'capabilityDelegation',\n  KeyAgreement = 'keyAgreement'\n}\n\nexport default IonPublicKeyPurpose;\n", "import type { PrivateKeyJwk, PublicKeyJwk, Web5Crypto } from '@web5/crypto';\n\nimport { universalTypeOf } from '@web5/common';\nimport {\n  Jose,\n  Ed25519,\n  Secp256k1,\n  EcdsaAlgorithm,\n  EdDsaAlgorithm,\n  utils as cryptoUtils,\n} from '@web5/crypto';\n\nimport type {\n  DidMethod,\n  DidDocument,\n  PortableDid,\n  VerificationMethod,\n  DidResolutionResult,\n  DidResolutionOptions,\n  DidKeySetVerificationMethodKey,\n} from './types.js';\n\nimport { getVerificationMethodTypes, parseDid } from './utils.js';\n\nconst SupportedCryptoAlgorithms = [\n  'Ed25519',\n  'secp256k1'\n] as const;\n\nconst SupportedPublicKeyFormats = [\n  'Ed25519VerificationKey2020',\n  'JsonWebKey2020',\n  'X25519KeyAgreementKey2020'\n];\n\nconst VERIFICATION_METHOD_TYPES: Record<string, string> = {\n  'Ed25519VerificationKey2020' : 'https://w3id.org/security/suites/ed25519-2020/v1',\n  'JsonWebKey2020'             : 'https://w3id.org/security/suites/jws-2020/v1',\n  'X25519KeyAgreementKey2020'  : 'https://w3id.org/security/suites/x25519-2020/v1',\n} as const;\n\nexport type DidVerificationMethodType = keyof typeof VERIFICATION_METHOD_TYPES;\n\nconst MULTICODEC_PUBLIC_KEY_LENGTH: Record<number, number> = {\n  // secp256k1-pub - Secp256k1 public key (compressed) - 33 bytes\n  0xe7: 33,\n\n  // x25519-pub - Curve25519 public key - 32 bytes\n  0xec: 32,\n\n  // ed25519-pub - Ed25519 public key - 32 bytes\n  0xed: 32\n};\n\nexport type DidKeyCreateOptions = {\n  enableEncryptionKeyDerivation?: boolean;\n  keyAlgorithm?: typeof SupportedCryptoAlgorithms[number];\n  keySet?: DidKeyKeySet;\n  publicKeyFormat?: DidVerificationMethodType;\n}\n\nexport type DidKeyCreateDocumentOptions = {\n  defaultContext?: string;\n  did: string;\n  enableEncryptionKeyDerivation?: boolean;\n  enableExperimentalPublicKeyTypes?: boolean;\n  publicKeyFormat?: DidVerificationMethodType;\n}\n\nexport type DidKeyDeriveEncryptionKeyResult = {\n  key: Uint8Array;\n  multicodecCode: number;\n}\n\nexport type DidKeyIdentifier = {\n  fragment: string;\n  method: string;\n  multibaseValue: string;\n  scheme: string;\n  version: string;\n}\n\nexport type DidKeyKeySet = {\n  verificationMethodKeys?: DidKeySetVerificationMethodKey[];\n}\n\nexport class DidKeyMethod implements DidMethod {\n  /**\n   * Name of the DID method\n  */\n  public static methodName = 'key';\n\n  public static async create(options?: DidKeyCreateOptions): Promise<PortableDid> {\n    let {\n      enableEncryptionKeyDerivation = false,\n      keyAlgorithm,\n      keySet,\n      publicKeyFormat = 'JsonWebKey2020'\n    } = options ?? { };\n\n    // If keySet not given, generate a default key set.\n    if (keySet === undefined) {\n      keySet = await DidKeyMethod.generateKeySet({ keyAlgorithm });\n    }\n\n    const portableDid: Partial<PortableDid> = {};\n    let multibaseId = '';\n\n    if (keySet.verificationMethodKeys?.[0]?.publicKeyJwk) {\n      // Compute the multibase identifier based on the JSON Web Key.\n      const publicKeyJwk = keySet.verificationMethodKeys[0].publicKeyJwk;\n      multibaseId = await Jose.jwkToMultibaseId({ key: publicKeyJwk });\n    }\n\n    if (!multibaseId) {\n      throw new Error('DidKeyMethod: Failed to create DID with given input.');\n    }\n\n    // Concatenate the DID identifier.\n    portableDid.did = `did:key:${multibaseId}`;\n\n    // Expand the DID identifier to a DID document.\n    portableDid.document = await DidKeyMethod.createDocument({\n      did: portableDid.did,\n      publicKeyFormat,\n      enableEncryptionKeyDerivation\n    });\n\n    // Return the given or generated key set.\n    portableDid.keySet = keySet;\n\n    return portableDid as PortableDid;\n  }\n\n  /**\n   * Expands a did:key identifier to a DID Document.\n   *\n   * Reference: https://w3c-ccg.github.io/did-method-key/#document-creation-algorithm\n   *\n   * @param options\n   * @returns - A DID dodcument.\n   */\n  public static async createDocument(options: DidKeyCreateDocumentOptions): Promise<DidDocument> {\n    const {\n      defaultContext = 'https://www.w3.org/ns/did/v1',\n      did,\n      enableEncryptionKeyDerivation = false,\n      enableExperimentalPublicKeyTypes = false,\n      publicKeyFormat = 'JsonWebKey2020'\n    } = options;\n\n    /**\n     * 1. Initialize document to an empty object.\n     */\n    const document: Partial<DidDocument> = {};\n\n    /**\n     * 2. Using a colon (:) as the delimiter, split the identifier into its\n     * components: a scheme, a method, a version, and a multibaseValue.\n     * If there are only three components set the version to the string\n     * value 1 and use the last value as the multibaseValue.\n     *\n     * Note: The W3C DID specification makes no mention of a version value\n     *       being part of the DID syntax.  Additionally, there does not\n     *       appear to be any real-world usage of the version number.\n     *       Consequently, this implementation will ignore the version\n     *       related guidance in the did:key specification.\n     */\n    let multibaseValue: string;\n    try {\n      ({ id: multibaseValue } = parseDid({ didUrl: did }));\n    } catch (error: any) {\n      throw new Error(`invalidDid: Unknown format: ${did}`);\n    }\n\n    /**\n     * 3. Check the validity of the input identifier.\n     * The scheme MUST be the value did. The method MUST be the value key.\n     * The version MUST be convertible to a positive integer value. The\n     * multibaseValue MUST be a string and begin with the letter z. If any\n     * of these requirements fail, an invalidDid error MUST be raised.\n     */\n    if (!DidKeyMethod.validateIdentifier({ did })) {\n      throw new Error(`invalidDid: Invalid identifier format: ${did}`);\n    }\n\n    /**\n     * 4. Initialize the signatureVerificationMethod to the result of passing\n     * identifier, multibaseValue, and options to a\n     *  {@link https://w3c-ccg.github.io/did-method-key/#signature-method-creation-algorithm | Signature Method Creation Algorithm}.\n     */\n    const signatureVerificationMethod = await DidKeyMethod.createSignatureMethod({\n      did,\n      enableExperimentalPublicKeyTypes,\n      multibaseValue,\n      publicKeyFormat\n    });\n\n    /**\n     * 5. Set document.id to identifier. If document.id is not a valid DID,\n     * an invalidDid error MUST be raised.\n     *\n     * Note: Identifier was already confirmed to be valid in Step 3, so\n     *       skipping the redundant validation.\n     */\n    document.id = did;\n\n    /**\n     * 6. Initialize the verificationMethod property in document to an array\n     * where the first value is the signatureVerificationMethod.\n     */\n    document.verificationMethod = [signatureVerificationMethod];\n\n    /**\n     * 7. Initialize the authentication, assertionMethod, capabilityInvocation,\n     * and the capabilityDelegation properties in document to an array where\n     * the first item is the value of the id property in\n     * signatureVerificationMethod.\n     */\n    document.authentication = [signatureVerificationMethod.id];\n    document.assertionMethod = [signatureVerificationMethod.id];\n    document.capabilityInvocation = [signatureVerificationMethod.id];\n    document.capabilityDelegation = [signatureVerificationMethod.id];\n\n    /**\n     * 8. If options.enableEncryptionKeyDerivation is set to true:\n     * Add the encryptionVerificationMethod value to the verificationMethod\n     * array. Initialize the keyAgreement property in document to an array\n     * where the first item is the value of the id property in\n     * encryptionVerificationMethod.\n     */\n    if (enableEncryptionKeyDerivation === true) {\n      /**\n       * Although not covered by the did:key method specification, a sensible\n       * default will be taken to use the 'X25519KeyAgreementKey2020'\n       * verification method type if the given publicKeyFormat is\n       * 'Ed25519VerificationKey2020' and 'JsonWebKey2020' otherwise.\n       */\n      const encryptionPublicKeyFormat =\n        (publicKeyFormat === 'Ed25519VerificationKey2020')\n          ? 'X25519KeyAgreementKey2020'\n          : 'JsonWebKey2020';\n\n      /**\n       * 8.1 Initialize the encryptionVerificationMethod to the result of\n       * passing identifier, multibaseValue, and options to an\n     * {@link https://w3c-ccg.github.io/did-method-key/#encryption-method-creation-algorithm | Encryption Method Creation Algorithm}.\n       */\n      const encryptionVerificationMethod = await this.createEncryptionMethod({\n        did,\n        enableExperimentalPublicKeyTypes,\n        multibaseValue,\n        publicKeyFormat: encryptionPublicKeyFormat\n      });\n\n      /**\n       * 8.2 Add the encryptionVerificationMethod value to the\n       * verificationMethod array.\n       */\n      document.verificationMethod.push(encryptionVerificationMethod);\n\n      /**\n       * 8.3. Initialize the keyAgreement property in document to an array\n       * where the first item is the value of the id property in\n       * encryptionVerificationMethod.\n       */\n      document.keyAgreement = [encryptionVerificationMethod.id];\n    }\n\n    /**\n     * 9. Initialize the @context property in document to the result of passing\n     * document and options to the Context Creation algorithm.\n     */\n    // Set contextArray to an array that is initialized to\n    // options.defaultContext.\n    const contextArray = [defaultContext];\n\n    // For every object in every verification relationship listed in document,\n    // add a string value to the contextArray based on the object type value,\n    // if it doesn't already exist, according to the following table:\n    // {@link https://w3c-ccg.github.io/did-method-key/#context-creation-algorithm | Context Type URL}\n    const verificationMethodTypes = getVerificationMethodTypes({ didDocument: document });\n    verificationMethodTypes.forEach((typeName: string) => {\n      const typeUrl = VERIFICATION_METHOD_TYPES[typeName];\n      contextArray.push(typeUrl);\n    });\n    document['@context'] = contextArray;\n\n    /**\n     * 10. Return document.\n     */\n    return document as DidDocument;\n  }\n\n  /**\n   * Decoding a multibase-encoded multicodec value into a verification method\n   * that is suitable for verifying that encrypted information will be\n   * received by the intended recipient.\n   */\n  public static async createEncryptionMethod(options: {\n    did: string,\n    enableExperimentalPublicKeyTypes: boolean,\n    multibaseValue: string,\n    publicKeyFormat: DidVerificationMethodType\n  }): Promise<VerificationMethod> {\n    const { did, enableExperimentalPublicKeyTypes, multibaseValue, publicKeyFormat } = options;\n\n    /**\n     * 1. Initialize verificationMethod to an empty object.\n     */\n    const verificationMethod: Partial<VerificationMethod> = {};\n\n    /**\n     * 2. Set multicodecValue and rawPublicKeyBytes to the result of passing\n     * multibaseValue and options to a Derive Encryption Key algorithm.\n     */\n    const {\n      key: rawPublicKeyBytes,\n      multicodecCode: multicodecValue,\n    } = await DidKeyMethod.deriveEncryptionKey({ multibaseValue });\n\n    /**\n     * 3. Ensure the proper key length of rawPublicKeyBytes based on the\n     * multicodecValue table provided below:\n     *\n     * Multicodec hexadecimal value: 0xec\n     *\n     * If the byte length of rawPublicKeyBytes\n     * does not match the expected public key length for the associated\n     * multicodecValue, an invalidPublicKeyLength error MUST be raised.\n     */\n    const actualLength = rawPublicKeyBytes.byteLength;\n    const expectedLength = MULTICODEC_PUBLIC_KEY_LENGTH[multicodecValue];\n    if (actualLength !== expectedLength) {\n      throw new Error(`invalidPublicKeyLength: Expected ${actualLength} bytes. Actual ${expectedLength} bytes.`);\n    }\n\n    /**\n     * 4. Create the multibaseValue by concatenating the letter 'z' and the\n     * base58-btc encoding of the concatenation of the multicodecValue and\n     * the rawPublicKeyBytes.\n     */\n    const kemMultibaseValue = cryptoUtils.keyToMultibaseId({\n      key            : rawPublicKeyBytes,\n      multicodecCode : multicodecValue\n    });\n\n    /**\n     * 5. Set the verificationMethod.id value by concatenating identifier,\n     * a hash character (#), and the multibaseValue. If verificationMethod.id\n     * is not a valid DID URL, an invalidDidUrl error MUST be raised.\n     */\n    verificationMethod.id = `${did}#${kemMultibaseValue}`;\n    try {\n      new URL(verificationMethod.id);\n    } catch (error: any) {\n      throw new Error('invalidDidUrl: Verification Method ID is not a valid DID URL.');\n    }\n\n    /**\n     * 6. Set the publicKeyFormat value to the options.publicKeyFormat value.\n     * 7. If publicKeyFormat is not known to the implementation, an\n     * unsupportedPublicKeyType error MUST be raised.\n     */\n    if (!(SupportedPublicKeyFormats.includes(publicKeyFormat))) {\n      throw new Error(`unsupportedPublicKeyType: Unsupported format: ${publicKeyFormat}`);\n    }\n\n    /**\n     * 8. If options.enableExperimentalPublicKeyTypes is set to false and\n     * publicKeyFormat is not Multikey, JsonWebKey2020, or\n     * X25519KeyAgreementKey2020, an invalidPublicKeyType error MUST be\n     * raised.\n     */\n    const StandardPublicKeyTypes = ['Multikey', 'JsonWebKey2020', 'X25519KeyAgreementKey2020'];\n    if (enableExperimentalPublicKeyTypes === false\n      && !(StandardPublicKeyTypes.includes(publicKeyFormat))) {\n      throw new Error(`invalidPublicKeyType: Specified '${publicKeyFormat}' without setting enableExperimentalPublicKeyTypes to true.`);\n    }\n\n    /**\n     * 9. Set verificationMethod.type to the publicKeyFormat value.\n     */\n    verificationMethod.type = publicKeyFormat;\n\n    /**\n     * 10. Set verificationMethod.controller to the identifier value.\n     * If verificationMethod.controller is not a valid DID, an invalidDid\n     * error MUST be raised.\n     */\n    verificationMethod.controller = did;\n    if (!DidKeyMethod.validateIdentifier({ did })) {\n      throw new Error(`invalidDid: Invalid identifier format: ${did}`);\n    }\n\n    /**\n     * 11. If publicKeyFormat is Multikey or X25519KeyAgreementKey2020,\n     * set the verificationMethod.publicKeyMultibase value to multibaseValue.\n     *\n     * Note: This implementation does not currently support the Multikey\n     *       format.\n     */\n    if (publicKeyFormat === 'X25519KeyAgreementKey2020') {\n      verificationMethod.publicKeyMultibase = kemMultibaseValue;\n    }\n\n    /**\n     * 12. If publicKeyFormat is JsonWebKey2020, set the\n     * verificationMethod.publicKeyJwk value to the result of passing\n     * multicodecValue and rawPublicKeyBytes to a JWK encoding algorithm.\n     */\n    if (publicKeyFormat === 'JsonWebKey2020') {\n      const jwkParams = await Jose.multicodecToJose({ code: multicodecValue });\n      const jsonWebKey = await Jose.keyToJwk({\n        keyMaterial : rawPublicKeyBytes,\n        keyType     : 'public',\n        ...jwkParams\n      });\n      // Ensure that \"d\" is NOT present.\n      if ('x' in jsonWebKey && !('d' in jsonWebKey)) {\n        verificationMethod.publicKeyJwk = jsonWebKey;\n      }\n    }\n\n    /**\n     * 13. Return verificationMethod.\n     */\n    return verificationMethod as VerificationMethod;\n  }\n\n  /**\n   * Transform a multibase-encoded multicodec value to public encryption key\n   * components that are suitable for encrypting messages to a receiver. A\n   * mathematical proof elaborating on the safety of performing this operation\n   * is available in:\n   * {@link https://eprint.iacr.org/2021/509.pdf | On using the same key pair for Ed25519 and an X25519 based KEM}\n   */\n  public static async deriveEncryptionKey(options: {\n    multibaseValue: string\n  }): Promise<DidKeyDeriveEncryptionKeyResult> {\n    const { multibaseValue } = options;\n\n    /**\n     * 1. Set publicEncryptionKey to an empty object.\n     */\n    let publicEncryptionKey: Partial<DidKeyDeriveEncryptionKeyResult> = {};\n\n    /**\n     * 2. Decode multibaseValue using the base58-btc multibase alphabet and\n     * set multicodecValue to the multicodec header for the decoded value.\n     * Implementers are cautioned to ensure that the multicodecValue is set\n     * to the result after performing varint decoding.\n     *\n     * 3. Set the rawPublicKeyBytes to the bytes remaining after the multicodec\n     * header.\n     */\n    const {\n      key: rawPublicKeyBytes,\n      multicodecCode: multicodecValue\n    } = cryptoUtils.multibaseIdToKey({ multibaseKeyId: multibaseValue });\n\n    /**\n     * 4. If the multicodecValue is 0xed, derive a public X25519 encryption key\n     * by using the rawPublicKeyBytes and the algorithm defined in\n     * {@link https://datatracker.ietf.org/doc/html/draft-ietf-core-oscore-groupcomm | Group OSCORE - Secure Group Communication for CoAP}\n     * for Curve25519 in Section 2.4.2: ECDH with Montgomery Coordinates and\n     * set generatedPublicEncryptionKeyBytes to the result.\n     */\n    if (multicodecValue === 0xed) {\n      const generatedPublicEncryptionKeyBytes = await Ed25519.convertPublicKeyToX25519({\n        publicKey: rawPublicKeyBytes\n      });\n\n      /**\n       * 5. Set multicodecValue in publicEncryptionKey to 0xec.\n       *\n       * 6. Set rawPublicKeyBytes in publicEncryptionKey to\n       * generatedPublicEncryptionKeyBytes.\n       */\n      publicEncryptionKey = {\n        key            : generatedPublicEncryptionKeyBytes,\n        multicodecCode : 0xec\n      };\n    }\n\n    /**\n     * 7. Return publicEncryptionKey.\n     */\n    return publicEncryptionKey as DidKeyDeriveEncryptionKeyResult;\n  }\n\n  /**\n   * Decodes a multibase-encoded multicodec value into a verification method\n   * that is suitable for verifying digital signatures.\n   * @param options - Signature method creation algorithm inputs.\n   * @returns - A verification method.\n   */\n  public static async createSignatureMethod(options: {\n    did: string,\n    enableExperimentalPublicKeyTypes: boolean,\n    multibaseValue: string,\n    publicKeyFormat: DidVerificationMethodType\n  }): Promise<VerificationMethod> {\n    const { did, enableExperimentalPublicKeyTypes, multibaseValue, publicKeyFormat } = options;\n\n    /**\n     * 1. Initialize verificationMethod to an empty object.\n     */\n    const verificationMethod: Partial<VerificationMethod> = {};\n\n    /**\n     * 2. Set multicodecValue and rawPublicKeyBytes to the result of passing\n     * multibaseValue and options to a Decode Public Key algorithm.\n     */\n    const {\n      key: rawPublicKeyBytes,\n      multicodecCode: multicodecValue,\n      multicodecName\n    } = cryptoUtils.multibaseIdToKey({ multibaseKeyId: multibaseValue });\n\n    /**\n     * 3. Ensure the proper key length of rawPublicKeyBytes based on the\n     * multicodecValue {@link https://w3c-ccg.github.io/did-method-key/#signature-method-creation-algorithm | table provided}.\n     * If the byte length of rawPublicKeyBytes does not match the expected\n     * public key length for the associated multicodecValue, an\n     * invalidPublicKeyLength error MUST be raised.\n     */\n    const actualLength = rawPublicKeyBytes.byteLength;\n    const expectedLength = MULTICODEC_PUBLIC_KEY_LENGTH[multicodecValue];\n    if (actualLength !== expectedLength) {\n      throw new Error(`invalidPublicKeyLength: Expected ${actualLength} bytes. Actual ${expectedLength} bytes.`);\n    }\n\n    /**\n     * 4. Ensure the rawPublicKeyBytes are a proper encoding of the public\n     * key type as specified by the multicodecValue. This validation is often\n     * done by a cryptographic library when importing the public key by,\n     * for example, ensuring that an Elliptic Curve public key is a specific\n     * coordinate that exists on the elliptic curve. If an invalid public key\n     * value is detected, an invalidPublicKey error MUST be raised.\n     */\n    let isValid = false;\n    switch (multicodecName) {\n      case 'secp256k1-pub':\n        isValid = await Secp256k1.validatePublicKey({ key: rawPublicKeyBytes });\n        break;\n      case 'ed25519-pub':\n        isValid = await Ed25519.validatePublicKey({ key: rawPublicKeyBytes });\n        break;\n      case 'x25519-pub':\n        // TODO: Validate key once/if X25519.validatePublicKey() is implemented.\n        // isValid = X25519.validatePublicKey({ key: rawPublicKeyBytes})\n        isValid = true;\n        break;\n    }\n    if (!isValid) {\n      throw new Error('invalidPublicKey: Invalid public key detected.');\n    }\n\n    /**\n     * 5. Set the verificationMethod.id value by concatenating identifier,\n     * a hash character (#), and the multibaseValue. If verificationMethod.id\n     * is not a valid DID URL, an invalidDidUrl error MUST be raised.\n     */\n    verificationMethod.id = `${did}#${multibaseValue}`;\n    try {\n      new URL(verificationMethod.id);\n    } catch (error: any) {\n      throw new Error('invalidDidUrl: Verification Method ID is not a valid DID URL.');\n    }\n\n    /**\n     * 6. Set the publicKeyFormat value to the options.publicKeyFormat value.\n     * 7. If publicKeyFormat is not known to the implementation, an\n     * unsupportedPublicKeyType error MUST be raised.\n     */\n    if (!(SupportedPublicKeyFormats.includes(publicKeyFormat))) {\n      throw new Error(`unsupportedPublicKeyType: Unsupported format: ${publicKeyFormat}`);\n    }\n\n    /**\n     * 8. If options.enableExperimentalPublicKeyTypes is set to false and\n     * publicKeyFormat is not Multikey, JsonWebKey2020, or\n     * Ed25519VerificationKey2020, an invalidPublicKeyType error MUST be\n     * raised.\n     */\n    const StandardPublicKeyTypes = ['Multikey', 'JsonWebKey2020', 'Ed25519VerificationKey2020'];\n    if (enableExperimentalPublicKeyTypes === false\n      && !(StandardPublicKeyTypes.includes(publicKeyFormat))) {\n      throw new Error(`invalidPublicKeyType: Specified '${publicKeyFormat}' without setting enableExperimentalPublicKeyTypes to true.`);\n    }\n\n    /**\n     * 9. Set verificationMethod.type to the publicKeyFormat value.\n     */\n    verificationMethod.type = publicKeyFormat;\n\n    /**\n     * 10. Set verificationMethod.controller to the identifier value.\n     * If verificationMethod.controller is not a valid DID, an invalidDid\n     * error MUST be raised.\n     */\n    verificationMethod.controller = did;\n    if (!DidKeyMethod.validateIdentifier({ did })) {\n      throw new Error(`invalidDid: Invalid identifier format: ${did}`);\n    }\n\n    /**\n     * 11. If publicKeyFormat is Multikey or Ed25519VerificationKey2020,\n     * set the verificationMethod.publicKeyMultibase value to multibaseValue.\n     *\n     * Note: This implementation does not currently support the Multikey\n     *       format.\n     */\n    if (publicKeyFormat === 'Ed25519VerificationKey2020') {\n      verificationMethod.publicKeyMultibase = multibaseValue;\n    }\n\n    /**\n     * 12. If publicKeyFormat is JsonWebKey2020, set the\n     * verificationMethod.publicKeyJwk value to the result of passing\n     * multicodecValue and rawPublicKeyBytes to a JWK encoding algorithm.\n     */\n    if (publicKeyFormat === 'JsonWebKey2020') {\n      const jwkParams = await Jose.multicodecToJose({ code: multicodecValue });\n      const jsonWebKey = await Jose.keyToJwk({\n        keyMaterial : rawPublicKeyBytes,\n        keyType     : 'public',\n        ...jwkParams\n      });\n      // Ensure that \"d\" is NOT present.\n      if ('x' in jsonWebKey && !('d' in jsonWebKey)) {\n        verificationMethod.publicKeyJwk = jsonWebKey;\n      }\n    }\n\n    /**\n     * 13. Return verificationMethod.\n     */\n    return verificationMethod as VerificationMethod;\n  }\n\n  public static async generateKeySet(options?: {\n    keyAlgorithm?: typeof SupportedCryptoAlgorithms[number]\n  }): Promise<DidKeyKeySet> {\n    // Generate Ed25519 keys, by default.\n    const { keyAlgorithm = 'Ed25519' } = options ?? {};\n\n    let keyPair: Web5Crypto.CryptoKeyPair;\n\n    switch (keyAlgorithm) {\n      case 'Ed25519': {\n        keyPair = await new EdDsaAlgorithm().generateKey({\n          algorithm   : { name: 'EdDSA', namedCurve: 'Ed25519' },\n          extractable : true,\n          keyUsages   : ['sign', 'verify']\n        });\n        break;\n      }\n\n      case 'secp256k1': {\n        keyPair = await new EcdsaAlgorithm().generateKey({\n          algorithm   : { name: 'ECDSA', namedCurve: 'secp256k1' },\n          extractable : true,\n          keyUsages   : ['sign', 'verify']\n        });\n        break;\n      }\n\n      default: {\n        throw new Error(`Unsupported crypto algorithm: '${keyAlgorithm}'`);\n      }\n    }\n\n    const publicKeyJwk = await Jose.cryptoKeyToJwk({ key: keyPair.publicKey }) as PublicKeyJwk;\n    const privateKeyJwk = await Jose.cryptoKeyToJwk({ key: keyPair.privateKey }) as PrivateKeyJwk;\n\n    const keySet: DidKeyKeySet = {\n      verificationMethodKeys: [{\n        publicKeyJwk,\n        privateKeyJwk,\n        relationships: ['authentication']\n      }]\n    };\n\n    return keySet;\n  }\n\n  /**\n   * Given the W3C DID Document of a `did:key` DID, return the identifier of\n   * the verification method key that will be used for signing messages and\n   * credentials, by default.\n   *\n   * @param document = DID Document to get the default signing key from.\n   * @returns Verification method identifier for the default signing key.\n   */\n  public static async getDefaultSigningKey(options: {\n    didDocument: DidDocument\n  }): Promise<string | undefined> {\n    const { didDocument } = options;\n\n    if (didDocument.authentication\n      && Array.isArray(didDocument.authentication)\n      && didDocument.authentication.length > 0\n      && typeof didDocument.authentication[0] === 'string') {\n\n      const [verificationMethodId] = didDocument.authentication;\n      const signingKeyId = verificationMethodId;\n\n      return signingKeyId;\n    }\n  }\n\n  public static async resolve(options: {\n    didUrl: string,\n    resolutionOptions?: DidResolutionOptions\n  }): Promise<DidResolutionResult> {\n    const { didUrl, resolutionOptions: _ } = options;\n    // TODO: Implement resolutionOptions as defined in https://www.w3.org/TR/did-core/#did-resolution\n\n    const parsedDid = parseDid({ didUrl });\n    if (!parsedDid) {\n      return {\n        '@context'            : 'https://w3id.org/did-resolution/v1',\n        didDocument           : undefined,\n        didDocumentMetadata   : {},\n        didResolutionMetadata : {\n          contentType  : 'application/did+ld+json',\n          error        : 'invalidDid',\n          errorMessage : `Cannot parse DID: ${didUrl}`\n        }\n      };\n    }\n\n    if (parsedDid.method !== 'key') {\n      return {\n        '@context'            : 'https://w3id.org/did-resolution/v1',\n        didDocument           : undefined,\n        didDocumentMetadata   : {},\n        didResolutionMetadata : {\n          contentType  : 'application/did+ld+json',\n          error        : 'methodNotSupported',\n          errorMessage : `Method not supported: ${parsedDid.method}`\n        }\n      };\n    }\n\n    const didDocument = await DidKeyMethod.createDocument({ did: parsedDid.did });\n\n    return {\n      '@context'            : 'https://w3id.org/did-resolution/v1',\n      didDocument,\n      didDocumentMetadata   : {},\n      didResolutionMetadata : {\n        contentType : 'application/did+ld+json',\n        did         : {\n          didString        : parsedDid.did,\n          methodSpecificId : parsedDid.id,\n          method           : parsedDid.method\n        }\n      }\n    };\n  }\n\n  public static validateIdentifier(options: {\n    did: string\n  }): boolean {\n    const { did } = options;\n\n    const { method, id: multibaseValue } = parseDid({ didUrl: did });\n    const [scheme] = did.split(':', 1);\n\n    /**\n     * Note: The W3C DID specification makes no mention of a version value\n     *       being part of the DID syntax.  Additionally, there does not\n     *       appear to be any real-world usage of the version number.\n     *       Consequently, this implementation will ignore the version\n     *       related guidance in the did:key specification.\n     */\n    const version = '1';\n\n    return (\n      scheme !== 'did' ||\n      method !== 'key' ||\n      parseInt(version) > 0 ||\n      universalTypeOf(multibaseValue) !== 'String' ||\n      !multibaseValue.startsWith('z')\n    );\n  }\n}", "import type {\n  DidResolverCache,\n  DidMethodResolver,\n  DidResolutionResult,\n  DidResolutionOptions,\n} from './types.js';\n\nimport { parseDid } from './utils.js';\nimport { DidResolverCacheNoop } from './resolver-cache-noop.js';\n\nexport type DidResolverOptions = {\n  didResolvers: DidMethodResolver[];\n  cache?: DidResolverCache;\n}\n\n/**\n * The `DidResolver` class is responsible for resolving DIDs to DID documents.\n * It uses method resolvers to resolve DIDs of different methods and a cache\n * to store resolved DID documents.\n */\nexport class DidResolver {\n  /**\n   * A cache for storing resolved DID documents.\n   */\n  private cache: DidResolverCache;\n\n  /**\n   * A map to store method resolvers against method names.\n   */\n  private didResolvers: Map<string, DidMethodResolver> = new Map();\n\n  /**\n   * Constructs a new `DidResolver`.\n   *\n   * @param options - The options for constructing the `DidResolver`.\n   * @param options.didResolvers - An array of `DidMethodResolver` instances.\n   * @param options.cache - Optional. A cache for storing resolved DID documents. If not provided, a no-operation cache is used.\n   */\n  constructor(options: DidResolverOptions) {\n    this.cache = options.cache || DidResolverCacheNoop;\n\n    for (const resolver of options.didResolvers) {\n      this.didResolvers.set(resolver.methodName, resolver);\n    }\n  }\n\n  /**\n   * Resolves a DID to a DID Resolution Result.\n   * If the DID Resolution Result is present in the cache, it returns the cached\n   * result. Otherwise, it uses the appropriate method resolver to resolve\n   * the DID, stores the resolution result in the cache, and returns the\n   * resolultion result.\n   *\n   * Note: The method signature for resolve() in this implementation must match\n   * the `DidResolver` implementation in\n   * {@link https://github.com/TBD54566975/dwn-sdk-js | dwn-sdk-js} so that\n   * Web5 apps and the underlying DWN instance can share the same DID\n   * resolution cache.\n   *\n   * @param didUrl - The DID or DID URL to resolve.\n   * @returns A promise that resolves to the DID Resolution Result.\n   */\n  async resolve(didUrl: string, resolutionOptions?: DidResolutionOptions): Promise<DidResolutionResult> {\n\n    const parsedDid = parseDid({ didUrl });\n    if (!parsedDid) {\n      return {\n        '@context'            : 'https://w3id.org/did-resolution/v1',\n        didDocument           : undefined,\n        didDocumentMetadata   : {},\n        didResolutionMetadata : {\n          contentType  : 'application/did+ld+json',\n          error        : 'invalidDid',\n          errorMessage : `Cannot parse DID: ${didUrl}`\n        }\n      };\n    }\n\n    const resolver = this.didResolvers.get(parsedDid.method);\n    if (!resolver) {\n      return {\n        '@context'            : 'https://w3id.org/did-resolution/v1',\n        didDocument           : undefined,\n        didDocumentMetadata   : {},\n        didResolutionMetadata : {\n          contentType  : 'application/did+ld+json',\n          error        : 'methodNotSupported',\n          errorMessage : `Method not supported: ${parsedDid.method}`\n        }\n      };\n    }\n\n    const cachedResolutionResult = await this.cache.get(parsedDid.did);\n\n    if (cachedResolutionResult) {\n      return cachedResolutionResult;\n    } else {\n      const resolutionResult = await resolver.resolve({\n        didUrl: parsedDid.did,\n        resolutionOptions\n      });\n      await this.cache.set(parsedDid.did, resolutionResult);\n\n      return resolutionResult;\n    }\n  }\n}", "import type { DidResolutionResult, DidResolverCache } from './types.js';\n\n/**\n * no-op cache that is used as the default cache for did-resolver.\n * The motivation behind using a no-op cache as the default stems from\n * the desire to maximize the potential for this library to be used\n * in as many JS runtimes as possible\n */\nexport const DidResolverCacheNoop: DidResolverCache = {\n  get: function (_key: string): Promise<DidResolutionResult> {\n    return null as any;\n  },\n  set: function (_key: string, _value: DidResolutionResult): Promise<void> {\n    return null as any;\n  },\n  delete: function (_key: string): Promise<void> {\n    return null as any;\n  },\n  clear: function (): Promise<void> {\n    return null as any;\n  },\n  close: function (): Promise<void> {\n    return null as any;\n  }\n};", "import type { DidResolutionResult, DidResolverCache } from './types.js';\n\nimport ms from 'ms';\nimport { Level } from 'level';\n\nexport type DidResolverCacheOptions = {\n  location?: string;\n  ttl?: string;\n}\n\ntype CacheWrapper = {\n  ttlMillis: number;\n  value: DidResolutionResult;\n}\n\n/**\n * Naive level-based cache for did resolution results. It just so happens that level aggressively keeps as much as it\n * can in memory when possible while also writing to the filesystem (in node runtime) and indexedDB (in browser runtime).\n * the persistent aspect is especially useful across page refreshes.\n */\nexport class DidResolverCacheLevel implements DidResolverCache {\n  private cache: Level<string, string>;\n  private ttl: number;\n\n  private static defaultOptions: Required<DidResolverCacheOptions> = {\n    location : 'DATA/AGENT/DID_RESOLVERCACHE',\n    ttl      : '15m'\n  };\n\n  constructor(options: DidResolverCacheOptions = {}) {\n    let { location, ttl } = options;\n\n    location ??= DidResolverCacheLevel.defaultOptions.location;\n    ttl ??= DidResolverCacheLevel.defaultOptions.ttl;\n\n    this.cache = new Level(location);\n    this.ttl = ms(ttl);\n  }\n\n  async get(did: string): Promise<DidResolutionResult | void> {\n    try {\n      const str = await this.cache.get(did);\n      const cacheWrapper: CacheWrapper = JSON.parse(str);\n\n      if (Date.now() >= cacheWrapper.ttlMillis) {\n        // defer deletion to be called in the next tick of the js event loop\n        this.cache.nextTick(() => this.cache.del(did));\n\n        return;\n      } else {\n        return cacheWrapper.value;\n      }\n\n    } catch(error: any) {\n      // Don't throw when a key wasn't found.\n      if (error.code === 'LEVEL_NOT_FOUND') {\n        return;\n      }\n\n      throw error;\n    }\n  }\n\n  set(did: string, value: DidResolutionResult): Promise<void> {\n    const cacheWrapper: CacheWrapper = { ttlMillis: Date.now() + this.ttl, value };\n    const str = JSON.stringify(cacheWrapper);\n\n    return this.cache.put(did, str);\n  }\n\n  delete(did: string): Promise<void> {\n    return this.cache.del(did);\n  }\n\n  clear(): Promise<void> {\n    return this.cache.clear();\n  }\n\n  close(): Promise<void> {\n    return this.cache.close();\n  }\n}", "import type { KeyValueStore } from '@web5/common';\nimport type { PrivateKeyJwk, PublicKeyJwk } from '@web5/crypto';\n\nimport { DidKeyKeySet } from './did-key.js';\nimport { DidIonKeySet } from './did-ion.js';\nimport { DidDhtKeySet } from './did-dht.js';\n\nexport type DidDocument = {\n  '@context'?: 'https://www.w3.org/ns/did/v1' | string | string[];\n  id: string;\n  alsoKnownAs?: string[];\n  controller?: string | string[];\n  verificationMethod?: VerificationMethod[];\n  service?: DidService[];\n  assertionMethod?: VerificationMethod[] | string[];\n  authentication?: VerificationMethod[] | string[];\n  keyAgreement?: VerificationMethod[] | string[];\n  capabilityDelegation?: VerificationMethod[] | string[];\n  capabilityInvocation?: VerificationMethod[] | string[];\n}\n\nexport type DidDocumentMetadata = {\n  // indicates the timestamp of the Create operation. ISO8601 timestamp\n  created?: string\n  // indicates the timestamp of the last Update operation for the document version which was\n  // resolved. ISO8601 timestamp\n  updated?: string\n  // indicates whether the DID has been deactivated\n  deactivated?: boolean\n  // indicates the version of the last Update operation for the document version which\n  // was resolved\n  versionId?: string\n  // indicates the timestamp of the next Update operation if the resolved document version\n  // is not the latest version of the document.\n  nextUpdate?: string\n  // indicates the version of the next Update operation if the resolved document version\n  // is not the latest version of the document.\n  nextVersionId?: string\n  // @see https://www.w3.org/TR/did-core/#dfn-equivalentid\n  equivalentId?: string\n  // @see https://www.w3.org/TR/did-core/#dfn-canonicalid\n  canonicalId?: string\n  // Additional output metadata generated during DID Resolution.\n  [key: string]: any\n};\n\nexport type DidKeySet = DidKeyKeySet | DidIonKeySet | DidDhtKeySet;\n\nexport type DidKeySetVerificationMethodKey = {\n  /** Unique identifier for the key in the KeyManager store. */\n  keyManagerId?: string;\n  publicKeyJwk?: PublicKeyJwk;\n  privateKeyJwk?: PrivateKeyJwk;\n  relationships: VerificationRelationship[];\n}\n\nexport type DidMetadata = {\n  /**\n   * Additional properties of any type.\n   */\n  [key: string]: any;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface DidMethod {}\n\nexport interface DidMethodApi extends DidMethodOperator, DidMethodResolver {\n  new (): DidMethod;\n  methodName: string;\n}\n\nexport interface DidMethodResolver {\n  new (): DidMethod;\n  methodName: string;\n\n  resolve(options: {\n    didUrl: string,\n    resolutionOptions?: DidResolutionOptions\n  }): Promise<DidResolutionResult>;\n}\n\nexport interface DidMethodOperator {\n  new (): DidMethod;\n  methodName: string;\n\n  create(options: any): Promise<PortableDid>;\n\n  generateKeySet(): Promise<DidKeySet>;\n\n  getDefaultSigningKey(options: { didDocument: DidDocument }): Promise<string | undefined>;\n}\n\n/**\n * Services are used in DID documents to express ways of communicating with the DID subject or associated entities.\n * A service can be any type of service the DID subject wants to advertise.\n *\n * @see {@link https://www.w3.org/TR/did-core/#services}\n */\nexport type DidService = {\n  id: string;\n  type: string;\n  serviceEndpoint: string | DidServiceEndpoint | DidServiceEndpoint[];\n  description?: string;\n};\n\n/**\n * A service endpoint is a URI (Uniform Resource Identifier) that can be used to interact with the service.\n *\n * @see {@link https://www.w3.org/TR/did-core/#dfn-serviceendpoint}\n */\nexport interface DidServiceEndpoint {\n  [key: string]: any;\n}\n\nexport interface DwnServiceEndpoint extends DidServiceEndpoint {\n  encryptionKeys?: string[];\n  nodes: string[];\n  signingKeys: string[];\n}\n\nexport type DidResolutionMetadata = {\n  contentType?: string\n\n  error?:\n    /**\n     * When an unexpected error occurs during DID Resolution or DID URL dereferencing, the value of the DID Resolution or DID URL Dereferencing Metadata error property MUST be internalError.\n     */\n    | 'internalError'\n\n    /**\n     * If an invalid DID is detected during DID Resolution, the value of the\n     * DID Resolution Metadata error property MUST be invalidDid.\n     */\n    | 'invalidDid'\n\n    /**\n     * If a DID method is not supported during DID Resolution or DID URL\n     * dereferencing, the value of the DID Resolution or DID URL Dereferencing\n     * Metadata error property MUST be methodNotSupported.\n     */\n    | 'methodNotSupported'\n\n    /**\n     * If during DID Resolution or DID URL dereferencing a DID or DID URL\n     * doesn't exist, the value of the DID Resolution or DID URL dereferencing\n     * Metadata error property MUST be notFound.\n     */\n    | 'notFound'\n\n    /**\n     * If a DID document representation is not supported during DID Resolution\n     * or DID URL dereferencing, the value of the DID Resolution Metadata error\n     * property MUST be representationNotSupported.\n     */\n    | 'representationNotSupported'\n    | string\n\n  // Additional output metadata generated during DID Resolution.\n  [key: string]: any\n};\n\n/**\n * DID Resolution input metadata.\n *\n * @see {@link https://www.w3.org/TR/did-core/#did-resolution-options}\n */\nexport interface DidResolutionOptions {\n  accept?: string\n\n  // Additional properties used during DID Resolution.\n  [key: string]: any\n}\n\nexport type DidResolutionResult = {\n  '@context'?: 'https://w3id.org/did-resolution/v1' | string | string[]\n  didResolutionMetadata: DidResolutionMetadata\n  didDocument?: DidDocument\n  didDocumentMetadata: DidDocumentMetadata\n};\n\n/**\n * implement this interface to provide your own cache for did resolution results. can be plugged in through Web5 API\n */\nexport type DidResolverCache = KeyValueStore<string, DidResolutionResult | void>;\n\n/**\n * Format to document a DID identifier, along with its associated data,\n * which can be exported, saved to a file, or imported. The intent is\n * bundle all of the necessary metadata to enable usage of the DID in\n * different contexts.\n */\nexport interface PortableDid {\n  did: string;\n\n  /**\n   * A DID method can define different forms of a DID that are logically\n   * equivalent. An example is when a DID takes one form prior to registration\n   * in a verifiable data registry and another form after such registration.\n   * This is the purpose of the canonicalId property.\n   *\n   * The `canonicalId` must be used as the primary ID for the DID subject,\n   * with all other equivalent values treated as secondary aliases.\n   *\n   * @see {@link https://www.w3.org/TR/did-core/#dfn-canonicalid | W3C DID Document Metadata}\n   */\n  canonicalId?: string;\n\n  /**\n   * A set of data describing the DID subject, including mechanisms, such as\n   * cryptographic public keys, that the DID subject or a DID delegate can use\n   * to authenticate itself and prove its association with the DID.\n   */\n  document: DidDocument;\n\n  /**\n   * A collection of cryptographic keys associated with the DID subject. The\n   * `keySet` encompasses various forms, such as recovery keys, update keys,\n   * and verification method keys, to enable authentication and verification\n   * of the DID subject's association with the DID.\n   */\n  keySet: DidKeySet;\n\n  /**\n   * This property can be used to store method specific data about\n   * each managed DID and additional properties of any type.\n   */\n  metadata?: DidMetadata;\n}\n\nexport type VerificationMethod = {\n  id: string;\n  // one of the valid verification method types as per\n  // https://www.w3.org/TR/did-spec-registries/#verification-method-types\n  type: string;\n  // DID of the key's controller\n  controller: string;\n  // a JSON Web Key that conforms to https://datatracker.ietf.org/doc/html/rfc7517\n  publicKeyJwk?: PublicKeyJwk;\n  // an encoded (e.g, base58) key with a Multibase-prefix that conforms to\n  // https://datatracker.ietf.org/doc/draft-multiformats-multibase/\n  publicKeyMultibase?: string;\n};\n\nexport type VerificationRelationship =\n  /**\n   * Used to specify how the DID subject is expected to express claims, such\n   * as for the purposes of issuing a Verifiable Credential\n   */\n  | 'assertionMethod'\n\n  /**\n   * Used to specify how the DID subject is expected to be authenticated, for\n   * purposes such as logging into a website or engaging in any sort of\n   * challenge-response protocol.\n   */\n  | 'authentication'\n\n  /**\n   * Used to specify how an entity can generate encryption material in order to\n   * transmit confidential information intended for the DID subject, such as\n   * for the purposes of establishing a secure communication channel with the\n   * recipient.\n   */\n  | 'keyAgreement'\n\n  /**\n   * Used to specify a mechanism that might be used by the DID subject to\n   * delegate a cryptographic capability to another party, such as delegating\n   * the authority to access a specific HTTP API to a subordinate.\n   */\n  | 'capabilityDelegation'\n\n  /**\n   * Used to specify a verification method that might be used by the DID\n   * subject to invoke a cryptographic capability, such as the authorization\n   * to update the DID Document.\n   */\n  | 'capabilityInvocation';\n"],
  "mappings": "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e,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,YAAa,MACb,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB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",
  "names": ["require_base64_js", "__commonJSMin", "exports", "import_buffer_polyfill", "byteLength", "toByteArray", "fromByteArray", "lookup", "revLookup", "Arr", "code", "i", "len", "getLens", "b64", "validLen", "placeHoldersLen", "lens", "_byteLength", "tmp", "arr", "curByte", "tripletToBase64", "num", "encodeChunk", "uint8", "start", "end", "output", "extraBytes", "parts", "maxChunkLength", "len2", "require_ieee754", "__commonJSMin", "exports", "import_buffer_polyfill", "buffer", "offset", "isLE", "mLen", "nBytes", "e", "m", "eLen", "eMax", "eBias", "nBits", "i", "d", "s", "value", "rt", "require_buffer", "__commonJSMin", "exports", "import_buffer_polyfill", "base64", "ieee754", "customInspectSymbol", "Buffer", "SlowBuffer", "K_MAX_LENGTH", "typedArraySupport", "arr", "proto", "createBuffer", "length", "buf", "arg", "encodingOrOffset", "allocUnsafe", "from", "value", "fromString", "fromArrayView", "isInstance", "fromArrayBuffer", "valueOf", "b", "fromObject", "assertSize", "size", "alloc", "fill", "encoding", "checked", "string", "byteLength", "actual", "fromArrayLike", "array", "arrayView", "copy", "byteOffset", "obj", "len", "numberIsNaN", "a", "x", "y", "i", "list", "buffer", "pos", "mustMatch", "loweredCase", "utf8ToBytes", "base64ToBytes", "slowToString", "start", "end", "hexSlice", "utf8Slice", "asciiSlice", "latin1Slice", "base64Slice", "utf16leSlice", "swap", "n", "m", "str", "max", "target", "thisStart", "thisEnd", "thisCopy", "targetCopy", "bidirectionalIndexOf", "val", "dir", "arrayIndexOf", "indexSize", "arrLength", "valLength", "read", "foundIndex", "found", "j", "hexWrite", "offset", "remaining", "strLen", "parsed", "utf8Write", "blitBuffer", "asciiWrite", "asciiToBytes", "base64Write", "ucs2Write", "utf16leToBytes", "res", "firstByte", "codePoint", "bytesPerSequence", "secondByte", "thirdByte", "fourthByte", "tempCodePoint", "decodeCodePointsArray", "MAX_ARGUMENTS_LENGTH", "codePoints", "ret", "out", "hexSliceLookupTable", "bytes", "newBuf", "checkOffset", "ext", "noAssert", "mul", "defineBigIntMethod", "validateNumber", "first", "last", "boundsError", "lo", "hi", "checkInt", "min", "maxBytes", "wrtBigUInt64LE", "checkIntBI", "wrtBigUInt64BE", "limit", "sub", "checkIEEE754", "writeFloat", "littleEndian", "writeDouble", "targetStart", "code", "errors", "E", "sym", "getMessage", "Base", "name", "range", "input", "msg", "received", "addNumericalSeparator", "checkBounds", "type", "INVALID_BASE64_RE", "base64clean", "units", "leadSurrogate", "byteArray", "c", "src", "dst", "alphabet", "table", "i16", "fn", "BufferBigIntNotDefined", "require_buffer_polyfill", "__commonJSMin", "polyfilledBuffer", "Buffer", "require_level_supports", "__commonJSMin", "exports", "import_buffer_polyfill", "manifests", "manifest", "acc", "m", "require_module_error", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "message", "options", "require_text_endec", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "lazy", "require_encoding", "__commonJSMin", "exports", "import_buffer_polyfill", "ModuleError", "formats", "Encoding", "options", "require_formats", "__commonJSMin", "exports", "import_buffer_polyfill", "Buffer", "Encoding", "textEndec", "BufferFormat", "options", "ViewFormat", "data", "view", "UTF8Format", "textEncoder", "textDecoder", "require_encodings", "__commonJSMin", "exports", "import_buffer_polyfill", "Buffer", "textEncoder", "textDecoder", "BufferFormat", "ViewFormat", "UTF8Format", "identity", "v", "data", "buffer", "require_level_transcoder", "__commonJSMin", "exports", "import_buffer_polyfill", "ModuleError", "encodings", "Encoding", "BufferFormat", "ViewFormat", "UTF8Format", "kFormats", "kEncodings", "validFormats", "Transcoder", "formats", "f", "k", "err", "encoding", "resolved", "lookup", "from", "name", "format", "options", "maybeType", "anonymousCount", "detectFormat", "aliases", "require_events", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "R", "ReflectApply", "target", "receiver", "args", "ReflectOwnKeys", "ProcessEmitWarning", "warning", "NumberIsNaN", "value", "EventEmitter", "once", "defaultMaxListeners", "checkListener", "listener", "arg", "n", "_getMaxListeners", "that", "type", "doError", "events", "er", "err", "handler", "len", "listeners", "arrayClone", "_addListener", "prepend", "m", "existing", "w", "onceWrapper", "_onceWrap", "state", "wrapped", "list", "position", "i", "originalListener", "spliceOne", "keys", "key", "_listeners", "unwrap", "evlistener", "unwrapListeners", "emitter", "listenerCount", "arr", "copy", "index", "ret", "name", "resolve", "reject", "errorListener", "resolver", "eventTargetAgnosticAddListener", "addErrorHandlerIfEventEmitter", "flags", "wrapListener", "require_next_tick_browser", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "fn", "require_catering", "__commonJSMin", "exports", "import_buffer_polyfill", "nextTick", "callback", "symbol", "promise", "resolve", "reject", "err", "res", "require_common", "__commonJSMin", "exports", "import_buffer_polyfill", "options", "callback", "def", "require_abstract_iterator", "__commonJSMin", "exports", "import_buffer_polyfill", "fromCallback", "ModuleError", "getOptions", "getCallback", "kPromise", "kCallback", "kWorking", "kHandleOne", "kHandleMany", "kAutoClose", "kFinishWork", "kReturnMany", "kClosing", "kHandleClose", "kClosed", "kCloseCallbacks", "kKeyEncoding", "kValueEncoding", "kAbortOnClose", "kLegacy", "kKeys", "kValues", "kLimit", "kCount", "emptyOptions", "noop", "warnedEnd", "CommonIterator", "db", "options", "legacy", "hint", "callback", "promise", "resolve", "reject", "err", "key", "value", "size", "acc", "onnext", "count", "nextv", "onnextv", "items", "cb", "target", "keyEncoding", "keyFormat", "mapped", "callbacks", "item", "AbstractIterator", "IteratorDecodeError", "entries", "entry", "AbstractKeyIterator", "keys", "i", "AbstractValueIterator", "values", "subject", "cause", "k", "require_default_kv_iterator", "__commonJSMin", "exports", "import_buffer_polyfill", "AbstractKeyIterator", "AbstractValueIterator", "kIterator", "kCallback", "kHandleOne", "kHandleMany", "DefaultKeyIterator", "db", "options", "DefaultValueIterator", "Iterator", "keys", "mapEntry", "entry", "callback", "err", "key", "value", "size", "entries", "target", "require_deferred_iterator", "__commonJSMin", "exports", "import_buffer_polyfill", "AbstractIterator", "AbstractKeyIterator", "AbstractValueIterator", "ModuleError", "kNut", "kUndefer", "kFactory", "DeferredIterator", "db", "options", "DeferredKeyIterator", "DeferredValueIterator", "Iterator", "callback", "size", "target", "require_abstract_chained_batch", "__commonJSMin", "exports", "import_buffer_polyfill", "fromCallback", "ModuleError", "getCallback", "getOptions", "kPromise", "kStatus", "kOperations", "kFinishClose", "kCloseCallbacks", "AbstractChainedBatch", "db", "hint", "key", "value", "options", "err", "original", "keyEncoding", "valueEncoding", "keyFormat", "mappedKey", "mappedValue", "callback", "callbacks", "cb", "require_default_chained_batch", "__commonJSMin", "exports", "import_buffer_polyfill", "AbstractChainedBatch", "ModuleError", "kEncoded", "DefaultChainedBatch", "db", "key", "value", "options", "callback", "require_range_options", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "ModuleError", "hasOwnProperty", "rangeOptions", "options", "keyEncoding", "result", "k", "require_queue_microtask", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "promise", "cb", "err", "require_next_tick_browser", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "queueMicrotask", "fn", "args", "require_abstract_sublevel_iterator", "__commonJSMin", "exports", "import_buffer_polyfill", "AbstractIterator", "AbstractKeyIterator", "AbstractValueIterator", "kUnfix", "kIterator", "kHandleOne", "kHandleMany", "kCallback", "AbstractSublevelIterator", "db", "options", "iterator", "unfix", "err", "key", "value", "callback", "entries", "entry", "AbstractSublevelKeyIterator", "keys", "i", "AbstractSublevelValueIterator", "Iterator", "size", "target", "require_abstract_sublevel", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "ModuleError", "Buffer", "AbstractSublevelIterator", "AbstractSublevelKeyIterator", "AbstractSublevelValueIterator", "kPrefix", "kUpperBound", "kPrefixRange", "kParent", "kUnfix", "textEncoder", "defaults", "AbstractLevel", "AbstractSublevel", "options", "db", "name", "separator", "manifest", "forward", "trim", "reserved", "parent", "x", "mergeManifests", "prefix", "upperBound", "MultiFormat", "Unfixer", "key", "keyFormat", "view", "result", "buffer", "range", "callback", "value", "keys", "operations", "iterator", "unfix", "supportsEncoding", "encoding", "prefixLength", "str", "char", "start", "end", "require_abstract_level", "__commonJSMin", "exports", "import_buffer_polyfill", "supports", "Transcoder", "EventEmitter", "fromCallback", "ModuleError", "AbstractIterator", "DefaultKeyIterator", "DefaultValueIterator", "DeferredIterator", "DeferredKeyIterator", "DeferredValueIterator", "DefaultChainedBatch", "getCallback", "getOptions", "rangeOptions", "kPromise", "kLanded", "kResources", "kCloseResources", "kOperations", "kUndefer", "kDeferOpen", "kOptions", "kStatus", "kDefaultOptions", "kTranscoder", "kKeyEncoding", "kValueEncoding", "noop", "AbstractLevel", "manifest", "options", "keyEncoding", "valueEncoding", "passive", "forward", "formats", "encoding", "callback", "maybeOpened", "err", "maybeClosed", "cancel", "pending", "sync", "next", "resource", "key", "maybeError", "keyFormat", "valueFormat", "value", "keys", "mappedKeys", "i", "values", "mappedKey", "mappedValue", "operations", "mapped", "ke", "ve", "op", "db", "valueErr", "name", "AbstractSublevel", "original", "fn", "k", "require_abstract_level", "__commonJSMin", "exports", "import_buffer_polyfill", "require_run_parallel_limit", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "runParallelLimit", "queueMicrotask", "tasks", "limit", "cb", "results", "len", "pending", "keys", "isErrored", "isSync", "next", "done", "err", "end", "each", "i", "result", "key", "task", "require_key_range", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "options", "lower", "upper", "lowerExclusive", "upperExclusive", "require_deserialize", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "textEncoder", "data", "require_iterator", "__commonJSMin", "exports", "import_buffer_polyfill", "AbstractIterator", "createKeyRange", "deserialize", "kCache", "kFinished", "kOptions", "kCurrentOptions", "kPosition", "kLocation", "kFirst", "emptyOptions", "Iterator", "db", "location", "options", "size", "callback", "keyRange", "transaction", "store", "entries", "method", "ev", "cursor", "key", "value", "maybeCommit", "keys", "values", "complete", "length", "i", "err", "cache", "target", "require_clear", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "db", "location", "keyRange", "options", "callback", "transaction", "store", "count", "method", "direction", "ev", "cursor", "require_browser_level", "__commonJSMin", "exports", "import_buffer_polyfill", "AbstractLevel", "ModuleError", "parallel", "fromCallback", "Iterator", "deserialize", "clear", "createKeyRange", "DEFAULT_PREFIX", "kIDB", "kNamePrefix", "kLocation", "kVersion", "kStore", "kOnComplete", "kPromise", "BrowserLevel", "location", "options", "_", "prefix", "version", "forward", "callback", "req", "ev", "db", "mode", "request", "transaction", "key", "store", "err", "value", "keys", "tasks", "next", "operations", "index", "error", "loop", "op", "keyRange", "require_browser", "__commonJSMin", "exports", "import_buffer_polyfill", "require_ascii", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "byteLength", "string", "toString", "buffer", "len", "result", "write", "offset", "length", "i", "require_base64", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "alphabet", "codes", "i", "byteLength", "string", "len", "toString", "buffer", "result", "write", "offset", "length", "j", "a", "b", "c", "d", "require_hex", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "byteLength", "string", "toString", "buffer", "len", "result", "write", "offset", "length", "i", "a", "hexValue", "b", "char", "require_utf8", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "byteLength", "string", "length", "i", "n", "code", "toString", "decoder", "buffer", "len", "output", "byte", "bytesNeeded", "codePoint", "k", "write", "encoder", "offset", "j", "count", "bits", "require_utf16le", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "byteLength", "string", "toString", "buffer", "len", "result", "write", "offset", "length", "units", "i", "c", "hi", "lo", "require_browser", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "ascii", "base64", "hex", "utf8", "utf16le", "LE", "codecFor", "encoding", "isBuffer", "value", "isEncoding", "alloc", "size", "fill", "buffer", "allocUnsafe", "allocUnsafeSlow", "byteLength", "string", "compare", "a", "b", "len", "x", "y", "concat", "buffers", "totalLength", "result", "offset", "sub", "copy", "source", "target", "targetStart", "start", "end", "equals", "i", "from", "encodingOrOffset", "length", "fromString", "fromArray", "fromBuffer", "fromArrayBuffer", "codec", "array", "arrayBuffer", "byteOffset", "includes", "indexOf", "bidirectionalIndexOf", "first", "foundIndex", "found", "j", "lastIndexOf", "swap", "n", "m", "swap16", "swap32", "swap64", "toBuffer", "toString", "write", "writeDoubleLE", "writeFloatLE", "writeUInt32LE", "writeInt32LE", "readDoubleLE", "readFloatLE", "readUInt32LE", "readInt32LE", "require_z32", "__commonJSMin", "exports", "import_buffer_polyfill", "b4a", "ALPHABET", "MIN", "MAX", "REVERSE", "i", "v", "encode", "decode", "s", "out", "pb", "ps", "r", "q", "a", "quintet", "b", "c", "d", "e", "f", "g", "h", "buf", "max", "p", "j", "of", "l", "bits", "require_types", "__commonJSMin", "exports", "import_buffer_polyfill", "type", "name", "require_rcodes", "__commonJSMin", "exports", "import_buffer_polyfill", "rcode", "code", "require_opcodes", "__commonJSMin", "exports", "import_buffer_polyfill", "opcode", "code", "require_classes", "__commonJSMin", "exports", "import_buffer_polyfill", "klass", "name", "require_optioncodes", "__commonJSMin", "exports", "import_buffer_polyfill", "type", "name", "m", "require_ip_codec", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "ipCodec", "decode", "encode", "familyOf", "sizeOf", "v4Regex", "v4Size", "v6Regex", "v6Size", "v4", "ip", "buff", "offset", "max", "n", "i", "c", "v6", "end", "fill", "hexN", "decN", "prevColon", "useDec", "result", "name", "string", "size", "length", "require_dns_packet", "__commonJSMin", "exports", "import_buffer_polyfill", "Buffer", "types", "rcodes", "opcodes", "classes", "optioncodes", "ip", "QUERY_FLAG", "RESPONSE_FLAG", "FLUSH_MASK", "NOT_FLUSH_MASK", "QU_MASK", "NOT_QU_MASK", "name", "str", "buf", "offset", "mail", "oldOffset", "n", "list", "localPart", "label", "i", "len", "totalLength", "consumedBytes", "jumped", "jumpOffset", "string", "s", "header", "h", "flags", "type", "runknown", "data", "rns", "dd", "rsoa", "rtxt", "d", "remaining", "length", "rnull", "rhinfo", "rptr", "rcname", "rdname", "rsrv", "rcaa", "rmx", "ra", "host", "raaaa", "roption", "option", "code", "spl", "fam", "ipBuf", "ipLen", "tagsLen", "tag", "padded", "ropt", "options", "rdlen", "encodingLengthList", "encodeList", "o", "rdnskey", "key", "keydata", "rrrsig", "sig", "signature", "rrp", "typebitmap", "typelist", "typesByWindow", "typeid", "windowBuf", "window", "windowLength", "b", "j", "extents", "rnsec", "record", "rnsec3", "salt", "nextDomain", "saltLength", "hashLength", "rds", "digest", "digestdata", "rsshfp", "hashType", "fingerprintBuf", "fingerprintLength", "rnaptr", "rtlsa", "cert", "certdata", "renc", "answer", "a", "klass", "enc", "question", "q", "result", "allocing", "decodeList", "sbuf", "combine", "require_nanoassert", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "assert", "AssertionError", "t", "m", "err", "require_randombytes", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "assert", "randombytes", "QUOTA", "crypto", "browserBytes", "out", "n", "i", "nodeBytes", "noImpl", "__require", "require_memory", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "sodium_malloc", "n", "sodium_free", "sodium_memzero", "loadSink", "arr", "sink", "MessageChannel", "require_crypto_verify", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "crypto_verify_16", "crypto_verify_32", "crypto_verify_64", "vn", "x", "xi", "y", "yi", "d", "i", "require_helpers", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "assert", "vn", "sodium_increment", "n", "nlen", "c", "sodium_memcmp", "a", "b", "sodium_is_zero", "arr", "d", "i", "require_sha512", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "assert", "b4a", "Sha512", "BLOCKSIZE", "K", "input", "enc", "inputBuf", "len", "formatInput", "full", "pos", "compress", "offset", "ts64", "resultBuf", "x", "i", "h", "l", "result", "hh", "hl", "m", "n", "wh", "wl", "bh0", "bh1", "bh2", "bh3", "bh4", "bh5", "bh6", "bh7", "bl0", "bl1", "bl2", "bl3", "bl4", "bl5", "bl6", "bl7", "th", "tl", "j", "a", "b", "c", "d", "ah0", "ah1", "ah2", "ah3", "ah4", "ah5", "ah6", "ah7", "al0", "al1", "al2", "al3", "al4", "al5", "al6", "al7", "HMAC", "key", "keyhash", "require_sha512", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "__commonJS", "cb", "mod", "__toBinary", "table", "i", "base64", "n", "bytes2", "i2", "j", "c0", "c1", "c2", "c3", "exports2", "module2", "bytes", "compiled", "imports", "require_sha512_wasm", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "assert", "b4a", "wasm", "args", "int", "arg", "head", "freeList", "Sha512", "SHA512_BYTES", "INPUT_OFFSET", "STATEBYTES", "BLOCKSIZE", "size", "input", "enc", "inputBuf", "length", "formatInput", "roundUp", "offset", "paddingStart", "resultBuf", "i", "cb", "noop", "HMAC", "key", "keyhash", "result", "n", "base", "require_sha512_universal", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "js", "wasm", "Proto", "cb", "SHA512_BYTES", "err", "require_crypto_auth", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "crypto_verify_32", "Sha512", "assert", "crypto_auth_BYTES", "crypto_auth_KEYBYTES", "crypto_auth", "out", "input", "k", "out0", "hmac", "crypto_auth_verify", "h", "correct", "require_crypto_hash", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "sha512", "assert", "crypto_hash_sha512_BYTES", "crypto_hash_BYTES", "crypto_hash_sha512", "out", "m", "n", "crypto_hash", "require_ed25519", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "gf", "init", "i", "r", "_0", "_9", "gf0", "gf1", "_121665", "D", "D2", "X", "Y", "I", "A", "o", "a", "b", "Z", "M", "v", "c", "t0", "t1", "t2", "t3", "t4", "t5", "t6", "t7", "t8", "t9", "t10", "t11", "t12", "t13", "t14", "t15", "t16", "t17", "t18", "t19", "t20", "t21", "t22", "t23", "t24", "t25", "t26", "t27", "t28", "t29", "t30", "b0", "b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "b9", "b10", "b11", "b12", "b13", "b14", "b15", "S", "sel25519", "p", "q", "t", "pack25519", "n", "j", "m", "car25519", "unpack25519", "inv25519", "require_crypto_scalarmult", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "_9", "_121665", "gf", "inv25519", "pack25519", "unpack25519", "sel25519", "A", "M", "Z", "S", "crypto_scalarmult_BYTES", "crypto_scalarmult_SCALARBYTES", "crypto_scalarmult", "crypto_scalarmult_base", "q", "n", "p", "check", "z", "x", "i", "a", "b", "c", "d", "e", "f", "x32", "x16", "buf", "len", "require_blake2b", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "__commonJS", "cb", "mod", "__toBinary", "table", "i", "base64", "n", "bytes2", "i2", "j", "c0", "c1", "c2", "c3", "exports2", "module2", "bytes", "compiled", "imports", "require_blake2b_wasm", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "assert", "b4a", "wasm", "wasmPromise", "mod", "head", "freeList", "Blake2b", "BYTES_MIN", "BYTES_MAX", "BYTES", "KEYBYTES_MIN", "KEYBYTES_MAX", "KEYBYTES", "SALTBYTES", "PERSONALBYTES", "digestLength", "key", "salt", "personal", "noAssert", "size", "input", "enc", "i", "cb", "noop", "ph", "require_blake2b", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "assert", "b2wasm", "ADD64AA", "v", "a", "b", "o0", "o1", "ADD64AC", "b0", "b1", "B2B_GET32", "arr", "i", "B2B_G", "c", "d", "ix", "iy", "x0", "m", "x1", "y0", "y1", "xor0", "xor1", "BLAKE2B_IV32", "SIGMA8", "SIGMA82", "x", "blake2bCompress", "ctx", "last", "parameter_block", "Blake2b", "outlen", "key", "salt", "personal", "blake2bUpdate", "input", "out", "buf", "blake2bFinal", "hexSlice", "cb", "str", "toHex", "n", "Proto", "noAssert", "BYTES_MIN", "BYTES_MAX", "KEYBYTES_MIN", "KEYBYTES_MAX", "SALTBYTES", "PERSONALBYTES", "BYTES", "KEYBYTES", "err", "require_crypto_generichash", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "blake2b", "output", "input", "key", "inputArray", "ctx", "i", "outlen", "_", "require_xsalsa20", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "__commonJS", "cb", "mod", "__toBinary", "table", "i", "base64", "n", "bytes2", "i2", "j", "c0", "c1", "c2", "c3", "exports2", "module2", "bytes", "compiled", "imports", "require_xsalsa20", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "xsalsa20", "SIGMA", "head", "top", "free", "XSalsa20", "core_hsalsa20", "nonce", "key", "WASM", "Fallback", "input", "output", "size", "len", "start", "i", "x", "u", "b", "z", "mpos", "cpos", "core_salsa20", "o", "p", "k", "c", "j0", "j1", "j2", "j3", "j4", "j5", "j6", "j7", "j8", "j9", "j10", "j11", "j12", "j13", "j14", "j15", "x0", "x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "x10", "x11", "x12", "x13", "x14", "x15", "require_crypto_stream", "__commonJSMin", "exports", "import_buffer_polyfill", "xsalsa20", "c", "nonce", "key", "m", "xor", "XOR", "out", "inp", "require_poly1305", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "poly1305", "key", "t0", "t1", "t2", "t3", "t4", "t5", "t6", "t7", "m", "mpos", "bytes", "hibit", "c", "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "h0", "h1", "h2", "h3", "h4", "h5", "h6", "h7", "h8", "h9", "r0", "r1", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9", "mac", "macpos", "g", "mask", "f", "i", "want", "require_crypto_onetimeauth", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "assert", "Poly1305", "crypto_verify_16", "crypto_onetimeauth_BYTES", "crypto_onetimeauth_KEYBYTES", "crypto_onetimeauth_PRIMITIVE", "crypto_onetimeauth", "crypto_onetimeauth_verify", "mac", "msg", "key", "s", "tmp", "require_crypto_secretbox", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "assert", "crypto_stream", "crypto_stream_xor", "crypto_onetimeauth", "crypto_onetimeauth_verify", "crypto_onetimeauth_BYTES", "crypto_onetimeauth_KEYBYTES", "crypto_secretbox_KEYBYTES", "crypto_secretbox_NONCEBYTES", "crypto_secretbox_ZEROBYTES", "crypto_secretbox_BOXZEROBYTES", "crypto_secretbox_MACBYTES", "crypto_secretbox", "crypto_secretbox_open", "crypto_secretbox_detached", "crypto_secretbox_open_detached", "crypto_secretbox_easy", "crypto_secretbox_open_easy", "c", "m", "n", "k", "mlen", "x", "o", "mac", "msg", "tmp", "box", "require_crypto_box", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "crypto_hash_sha512", "crypto_scalarmult", "crypto_scalarmult_base", "randombytes", "crypto_generichash_batch", "crypto_stream_xsalsa20_MESSAGEBYTES_MAX", "crypto_secretbox_open_easy", "crypto_secretbox_easy", "crypto_secretbox_detached", "crypto_secretbox_open_detached", "xsalsa20", "assert", "crypto_box_PUBLICKEYBYTES", "crypto_box_SECRETKEYBYTES", "crypto_box_NONCEBYTES", "crypto_box_ZEROBYTES", "crypto_box_BOXZEROBYTES", "crypto_box_SEALBYTES", "crypto_box_SEEDBYTES", "crypto_box_BEFORENMBYTES", "crypto_box_MACBYTES", "crypto_box_curve25519xsalsa20poly1305_MACBYTES", "crypto_box_MESSAGEBYTES_MAX", "crypto_box_easy", "crypto_box_open_easy", "crypto_box_keypair", "crypto_box_seed_keypair", "crypto_box_seal", "crypto_box_seal_open", "pk", "sk", "check", "seed", "hash", "c", "m", "epk", "esk", "n", "s", "k", "zero", "cleanup", "crypto_box_beforenm", "crypto_box_detached_afternm", "mac", "crypto_box_detached", "ret", "crypto_box_open_detached_afternm", "crypto_box_open_detached", "buf", "len", "arr", "i", "require_sha256", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "assert", "b4a", "Sha256", "SHA256_BYTES", "BLOCKSIZE", "K", "expand", "a", "b", "c", "d", "b_", "d_", "compress", "state", "words", "ch", "maj", "s0", "s1", "T1", "T2", "e", "f", "g", "h", "w", "i", "bswap", "round", "n", "input", "enc", "inputBuf", "len", "formatInput", "offset", "view", "resultBuf", "HMAC", "key", "keyhash", "result", "r", "l", "require_sha256", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "__commonJS", "cb", "mod", "__toBinary", "table", "i", "base64", "n", "bytes2", "i2", "j", "c0", "c1", "c2", "c3", "exports2", "module2", "bytes", "compiled", "imports", "require_sha256_wasm", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "assert", "b4a", "wasm", "args", "int", "arg", "head", "freeList", "Sha256", "SHA256_BYTES", "INPUT_OFFSET", "STATEBYTES", "BLOCKSIZE", "size", "input", "enc", "inputBuf", "length", "formatInput", "roundUp", "offset", "paddingStart", "resultBuf", "i", "cb", "noop", "HMAC", "key", "keyhash", "result", "n", "base", "require_sha256_universal", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "js", "wasm", "Proto", "cb", "SHA256_BYTES", "err", "require_crypto_hash_sha256", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "sha256", "assert", "crypto_hash_sha256_BYTES", "crypto_hash_sha256", "out", "m", "n", "require_crypto_kdf", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "assert", "randombytes_buf", "blake2b", "STORE64_LE", "dest", "int", "mul", "subkey", "subkey_id", "ctx", "key", "ctx_padded", "salt", "outlen", "out", "require_crypto_kx", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "crypto_scalarmult_base", "crypto_generichash", "randombytes_buf", "assert", "crypto_kx_SEEDBYTES", "crypto_kx_PUBLICKEYBYTES", "crypto_kx_SECRETKEYBYTES", "crypto_kx_keypair", "pk", "sk", "crypto_kx_seed_keypair", "seed", "require_chacha20_universal", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "assert", "Chacha20", "constant", "nonce", "key", "counter", "n", "k", "i", "output", "input", "len", "offset", "j", "keyStream", "chacha20Block", "state", "ws", "QR", "rotl", "a", "b", "obj", "c", "d", "require_crypto_stream_chacha20", "__commonJSMin", "exports", "import_buffer_polyfill", "assert", "Chacha20", "c", "n", "k", "m", "xor", "ic", "require_crypto_aead", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "crypto_stream_chacha20_ietf", "crypto_stream_chacha20_ietf_xor_ic", "crypto_verify_16", "Poly1305", "assert", "crypto_aead_chacha20poly1305_ietf_KEYBYTES", "crypto_aead_chacha20poly1305_ietf_NSECBYTES", "crypto_aead_chacha20poly1305_ietf_NPUBBYTES", "crypto_aead_chacha20poly1305_ietf_ABYTES", "crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX", "_pad0", "crypto_aead_chacha20poly1305_ietf_encrypt", "c", "m", "ad", "nsec", "npub", "k", "ret", "crypto_aead_chacha20poly1305_ietf_encrypt_detached", "mac", "block0", "slen", "poly", "write64LE", "crypto_aead_chacha20poly1305_ietf_decrypt", "crypto_aead_chacha20poly1305_ietf_decrypt_detached", "computed_mac", "mlen", "buf", "offset", "int", "view", "require_hchacha20", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "sodium_malloc", "assert", "crypto_core_hchacha20_OUTPUTBYTES", "crypto_core_hchacha20_INPUTBYTES", "crypto_core_hchacha20_KEYBYTES", "crypto_core_hchacha20_CONSTBYTES", "ROTL32", "x", "b", "LOAD32_LE", "src", "offset", "w", "STORE32_LE", "dest", "int", "mul", "i", "QUARTERROUND", "l", "A", "B", "C", "D", "crypto_core_hchacha20", "out", "_in", "k", "c", "crypto_core_hchacha20_outputbytes", "crypto_core_hchacha20_inputbytes", "crypto_core_hchacha20_keybytes", "crypto_core_hchacha20_constbytes", "require_crypto_secretstream", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "assert", "randombytes_buf", "crypto_stream_chacha20_ietf", "crypto_stream_chacha20_ietf_xor", "crypto_stream_chacha20_ietf_xor_ic", "crypto_stream_chacha20_ietf_KEYBYTES", "crypto_core_hchacha20", "crypto_core_hchacha20_INPUTBYTES", "Poly1305", "sodium_increment", "sodium_is_zero", "sodium_memcmp", "crypto_onetimeauth_poly1305_BYTES", "crypto_secretstream_xchacha20poly1305_COUNTERBYTES", "crypto_secretstream_xchacha20poly1305_INONCEBYTES", "crypto_aead_xchacha20poly1305_ietf_KEYBYTES", "crypto_secretstream_xchacha20poly1305_KEYBYTES", "crypto_aead_xchacha20poly1305_ietf_NPUBBYTES", "crypto_secretstream_xchacha20poly1305_HEADERBYTES", "crypto_aead_xchacha20poly1305_ietf_ABYTES", "crypto_secretstream_xchacha20poly1305_ABYTES", "crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX", "crypto_secretstream_xchacha20poly1305_TAGBYTES", "crypto_secretstream_xchacha20poly1305_TAG_MESSAGE", "crypto_secretstream_xchacha20poly1305_TAG_PUSH", "crypto_secretstream_xchacha20poly1305_TAG_REKEY", "crypto_secretstream_xchacha20poly1305_TAG_FINAL", "crypto_secretstream_xchacha20poly1305_STATEBYTES", "KEY_OFFSET", "NONCE_OFFSET", "PAD_OFFSET", "_pad0", "STORE64_LE", "dest", "int", "mul", "crypto_secretstream_xchacha20poly1305_counter_reset", "state", "nonce", "i", "crypto_secretstream_xchacha20poly1305_keygen", "k", "crypto_secretstream_xchacha20poly1305_init_push", "out", "key", "pad", "crypto_secretstream_xchacha20poly1305_init_pull", "_in", "crypto_secretstream_xchacha20poly1305_rekey", "new_key_and_inonce", "crypto_secretstream_xchacha20poly1305_push", "m", "ad", "tag", "block", "slen", "poly", "c", "mac", "xor_buf", "crypto_secretstream_xchacha20poly1305_pull", "mlen", "stored_mac", "n", "require_siphash24", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "__commonJS", "cb", "mod", "__toBinary", "table", "i", "base64", "n", "bytes2", "i2", "j", "c0", "c1", "c2", "c3", "exports2", "module2", "bytes", "compiled", "imports", "require_fallback", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "fallback", "_add", "a", "b", "rl", "a2", "_xor", "_rotl", "n", "_rotl32", "al", "_compress", "v0", "v1", "v2", "v3", "_get_int", "offset", "out", "m", "key", "k0", "k1", "mi", "mp", "ml", "ml7", "buf", "ic", "h", "require_siphash24", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "assert", "wasm", "fallback", "siphash24", "BYTES", "KEYBYTES", "memory", "data", "key", "out", "noAssert", "realloc", "size", "require_crypto_shorthash", "__commonJSMin", "exports", "import_buffer_polyfill", "siphash", "shorthash", "out", "data", "key", "noAssert", "require_crypto_sign", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "crypto_verify_32", "crypto_hash", "gf", "gf0", "gf1", "D", "D2", "X", "Y", "I", "A", "Z", "M", "S", "sel25519", "pack25519", "inv25519", "unpack25519", "randombytes", "crypto_scalarmult_BYTES", "crypto_hash_sha512_BYTES", "assert", "crypto_sign_ed25519_PUBLICKEYBYTES", "crypto_sign_ed25519_SECRETKEYBYTES", "crypto_sign_ed25519_SEEDBYTES", "crypto_sign_ed25519_BYTES", "crypto_sign_BYTES", "crypto_sign_PUBLICKEYBYTES", "crypto_sign_SECRETKEYBYTES", "crypto_sign_SEEDBYTES", "crypto_sign_keypair", "crypto_sign_seed_keypair", "crypto_sign", "crypto_sign_detached", "crypto_sign_open", "crypto_sign_verify_detached", "crypto_sign_ed25519_pk_to_curve25519", "crypto_sign_ed25519_sk_to_curve25519", "crypto_sign_ed25519_sk_to_pk", "unpackneg", "pack", "set25519", "r", "a", "i", "pow2523", "o", "c", "add", "p", "q", "b", "d", "e", "f", "g", "h", "t", "cswap", "tx", "ty", "zi", "par25519", "scalarmult", "s", "scalarbase", "pk", "sk", "seeded", "check", "seed", "L", "modL", "x", "carry", "j", "k", "reduce", "sm", "m", "n", "smlen", "sig", "chk", "num", "den", "den2", "den4", "den6", "neq25519", "msg", "mlen", "ed25519_mul_l", "ed25519_is_on_main_subgroup", "pl", "zero", "x25519_pk", "ed25519_pk", "one_minus_y", "isSmallOrder", "bad_points", "curveSk", "edSk", "buf", "len", "arg", "require_sodium_javascript", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "forward", "submodule", "prop", "require_sodium_universal", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "require_browser_ponyfill", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "global", "__self__", "F", "self", "irrelevant", "support", "isDataView", "obj", "viewClasses", "isArrayBufferView", "normalizeName", "name", "normalizeValue", "value", "iteratorFor", "items", "iterator", "Headers", "headers", "header", "oldValue", "callback", "thisArg", "consumed", "body", "fileReaderReady", "reader", "resolve", "reject", "readBlobAsArrayBuffer", "blob", "promise", "readBlobAsText", "readArrayBufferAsText", "buf", "view", "chars", "i", "bufferClone", "Body", "rejected", "decode", "methods", "normalizeMethod", "method", "upcased", "Request", "input", "options", "form", "bytes", "split", "parseHeaders", "rawHeaders", "preProcessedHeaders", "line", "parts", "key", "Response", "bodyInit", "response", "redirectStatuses", "url", "status", "message", "error", "fetch", "init", "request", "xhr", "abortXhr", "ctx", "require_index_umd", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "global", "factory", "__awaiter", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "e", "rejected", "result", "Mutex", "begin", "res", "fn", "unlock", "_a", "getGlobal", "globalObject", "nodeBuffer", "textEncoder", "intArrayToString", "arr", "len", "hexCharCodesToInt", "a", "b", "writeHexToUInt8", "buf", "str", "size", "i", "index", "hexStringEqualsUInt8", "strIndex", "alpha", "digit", "getDigestHex", "tmpBuffer", "input", "hashLength", "p", "nibble", "getUInt8Buffer", "data", "base64Chars", "base64Lookup", "encodeBase64", "pad", "extraBytes", "parts", "len2", "tmp", "triplet", "c", "getDecodeBase64Length", "bufferLength", "decodeBase64", "bytes", "encoded1", "encoded2", "encoded3", "encoded4", "MAX_HEAP", "WASM_FUNC_HASH_LENGTH", "wasmMutex", "wasmModuleCache", "WASMInterface", "binary", "wasmInstance", "memoryView", "initialized", "writeMemory", "offset", "getMemory", "getExports", "setMemorySize", "totalSize", "arrayOffset", "memoryBuffer", "getStateSize", "loadWASMPromise", "asm", "promise", "setupInterface", "init", "bits", "updateUInt8Array", "read", "chunk", "update", "Uint8Buffer", "digestChars", "digest", "outputType", "padding", "save", "stateOffset", "stateLength", "internalState", "prefixedState", "load", "state", "overallLength", "isDataShort", "canSimplify", "initParam", "calculate", "digestParam", "buffer", "name$k", "data$k", "hash$k", "wasmJson$k", "lockedCreate", "mutex", "wasm", "mutex$l", "wasmCache$l", "adler32", "hash", "err", "createAdler32", "obj", "name$j", "data$j", "hash$j", "wasmJson$j", "mutex$k", "wasmCache$k", "validateBits$4", "getInitParam$1", "outputBits", "keyBits", "blake2b", "key", "keyBuffer", "createBLAKE2b", "outputSize", "name$i", "data$i", "hash$i", "wasmJson$i", "encodeResult", "salt", "options", "parameters", "uint32View", "int32LE", "x", "hashFunc", "blake512", "blake", "r", "ret", "vp", "partialBytesNeeded", "blakeSmall", "getHashType", "type", "argon2Internal", "parallelism", "iterations", "password", "version", "hashType", "memorySize", "argon2Interface", "initVector", "initVectorView", "lanes", "param", "H0", "lane", "position", "C", "validateOptions$3", "argon2i", "argon2id", "argon2d", "getHashParameters", "encoded", "regex", "match", "parsedParameters", "paramMap", "n", "v", "validateVerifyOptions$1", "argon2Verify", "params", "hashStart", "name$h", "data$h", "hash$h", "wasmJson$h", "mutex$j", "wasmCache$j", "validateBits$3", "getInitParam", "blake2s", "createBLAKE2s", "name$g", "data$g", "hash$g", "wasmJson$g", "mutex$i", "wasmCache$i", "validateBits$2", "blake3", "createBLAKE3", "name$f", "data$f", "hash$f", "wasmJson$f", "mutex$h", "wasmCache$h", "crc32", "createCRC32", "mutex$g", "wasmCache$g", "crc32c", "createCRC32C", "name$e", "data$e", "hash$e", "wasmJson$e", "mutex$f", "wasmCache$f", "md4", "createMD4", "name$d", "data$d", "hash$d", "wasmJson$d", "mutex$e", "wasmCache$e", "md5", "createMD5", "name$c", "data$c", "hash$c", "wasmJson$c", "mutex$d", "wasmCache$d", "sha1", "createSHA1", "name$b", "data$b", "hash$b", "wasmJson$b", "mutex$c", "wasmCache$c", "validateBits$1", "sha3", "createSHA3", "mutex$b", "wasmCache$b", "validateBits", "keccak", "createKeccak", "name$a", "data$a", "hash$a", "wasmJson$a", "mutex$a", "wasmCache$a", "sha224", "createSHA224", "mutex$9", "wasmCache$9", "sha256", "createSHA256", "name$9", "data$9", "hash$9", "wasmJson$9", "mutex$8", "wasmCache$8", "sha384", "createSHA384", "mutex$7", "wasmCache$7", "sha512", "createSHA512", "name$8", "data$8", "hash$8", "wasmJson$8", "mutex$6", "wasmCache$6", "validateSeed$3", "seed", "xxhash32", "createXXHash32", "name$7", "data$7", "hash$7", "wasmJson$7", "mutex$5", "wasmCache$5", "seedBuffer$2", "validateSeed$2", "writeSeed$2", "low", "high", "xxhash64", "seedLow", "seedHigh", "createXXHash64", "instanceBuffer", "name$6", "data$6", "hash$6", "wasmJson$6", "mutex$4", "wasmCache$4", "seedBuffer$1", "validateSeed$1", "writeSeed$1", "xxhash3", "createXXHash3", "name$5", "data$5", "hash$5", "wasmJson$5", "mutex$3", "wasmCache$3", "seedBuffer", "validateSeed", "writeSeed", "xxhash128", "createXXHash128", "name$4", "data$4", "hash$4", "wasmJson$4", "mutex$2", "wasmCache$2", "ripemd160", "createRIPEMD160", "calculateKeyBuffer", "hasher", "blockSize", "uintArr", "calculateHmac", "keyBuf", "opad", "createHMAC", "calculatePBKDF2", "DK", "block1", "block1View", "saltBuffer", "saltUIntBuffer", "destPos", "hLen", "l", "T", "U", "j", "k", "validateOptions$2", "pbkdf2", "hmac", "name$3", "data$3", "hash$3", "wasmJson$3", "scryptInternal", "costFactor", "SHA256Hasher", "blockData", "scryptInterface", "VSize", "XYSize", "expensiveSalt", "outputData", "isPowerOfTwo", "validateOptions$1", "scrypt", "name$2", "data$2", "hash$2", "wasmJson$2", "bcryptInternal", "bcryptInterface", "passwordBuffer", "shouldEncode", "memory", "validateOptions", "bcrypt", "validateHashCharacters", "validateVerifyOptions", "bcryptVerify", "name$1", "data$1", "hash$1", "wasmJson$1", "mutex$1", "wasmCache$1", "whirlpool", "createWhirlpool", "name", "wasmJson", "wasmCache", "sm3", "createSM3", "require_src", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "fetch", "hash", "buffer", "size", "randomString", "getChallengeUri", "solveChallengeUri", "requestBody", "result", "getChallengeResponse", "challengeBody", "challengeNonce", "largestAllowedHash", "validDuration", "answerHash", "answerNonce", "startTime", "response", "responseText", "merge", "sets", "_len", "_key", "length", "slice", "xl", "x", "join", "subexp", "str", "typeOf", "o", "undefined", "Object", "prototype", "toString", "call", "split", "pop", "shift", "toLowerCase", "toUpperCase", "toArray", "obj", "Array", "setInterval", "assign", "target", "source", "key", "buildExps", "isIRI", "ALPHA$$", "CR$", "DIGIT$$", "DQUOTE$$", "HEXDIG$$", "SP$$", "PCT_ENCODED$", "SUB_DELIMS$$", "RESERVED$$", "GEN_DELIMS$$", "UCSCHAR$$", "SCHEME$", "USERINFO$", "UNRESERVED$$", "DEC_OCTET$", "DEC_OCTET_RELAXED$", "H16$", "LS32$", "IPV4ADDRESS$", "IPV6ADDRESS1$", "IPV6ADDRESS2$", "IPV6ADDRESS3$", "IPV6ADDRESS4$", "IPV6ADDRESS5$", "IPV6ADDRESS6$", "IPV6ADDRESS7$", "IPV6ADDRESS8$", "IPV6ADDRESS9$", "ZONEID$", "IPV6ADDRESS$", "IP_LITERAL$", "IPV6ADDRZ_RELAXED$", "IPVFUTURE$", "HOST$", "REG_NAME$", "PORT$", "AUTHORITY$", "PCHAR$", "SEGMENT$", "SEGMENT_NZ$", "SEGMENT_NZ_NC$", "PATH_ABEMPTY$", "PATH_ABSOLUTE$", "PATH$", "PATH_NOSCHEME$", "PATH_ROOTLESS$", "PATH_EMPTY$", "QUERY$", "IPRIVATE$$", "FRAGMENT$", "HIER_PART$", "URI$", "RELATIVE_PART$", "RELATIVE$", "URI_REFERENCE$", "ABSOLUTE_URI$", "GENERIC_REF$", "RELATIVE_REF$", "ABSOLUTE_REF$", "SAMEDOC_REF$", "AUTHORITY_REF$", "RegExp", "URI_PROTOCOL", "IRI_PROTOCOL", "maxInt", "base", "tMin", "tMax", "skew", "damp", "initialBias", "initialN", "delimiter", "regexPunycode", "regexNonASCII", "regexSeparators", "errors", "baseMinusTMin", "floor", "Math", "stringFromCharCode", "String", "fromCharCode", "error", "type", "RangeError", "map", "array", "fn", "result", "mapDomain", "string", "parts", "replace", "labels", "encoded", "ucs2decode", "output", "counter", "value", "charCodeAt", "extra", "push", "ucs2encode", "fromCodePoint", "toConsumableArray", "basicToDigit", "codePoint", "digitToBasic", "digit", "flag", "adapt", "delta", "numPoints", "firstTime", "k", "decode", "input", "inputLength", "i", "n", "bias", "basic", "lastIndexOf", "j", "index", "oldi", "w", "t", "baseMinusT", "out", "splice", "encode", "_step", "_iteratorNormalCompletion", "_iterator", "currentValue", "basicLength", "handledCPCount", "m", "_step2", "_iteratorNormalCompletion2", "_iterator2", "handledCPCountPlusOne", "_step3", "_iteratorNormalCompletion3", "_iterator3", "q", "qMinusT", "toUnicode", "test", "toASCII", "punycode", "SCHEMES", "pctEncChar", "chr", "c", "e", "pctDecChars", "newStr", "il", "parseInt", "substr", "c2", "c3", "_normalizeComponentEncoding", "components", "protocol", "decodeUnreserved", "decStr", "match", "UNRESERVED", "scheme", "PCT_ENCODED", "NOT_SCHEME", "userinfo", "NOT_USERINFO", "host", "NOT_HOST", "path", "NOT_PATH", "NOT_PATH_NOSCHEME", "query", "NOT_QUERY", "fragment", "NOT_FRAGMENT", "_stripLeadingZeros", "_normalizeIPv4", "matches", "IPV4ADDRESS", "address", "_matches", "_normalizeIPv6", "IPV6ADDRESS", "_matches2", "zone", "reverse", "last", "_address$toLowerCase$2", "first", "firstFields", "lastFields", "isLastFieldIPv4Address", "fieldCount", "lastFieldsStart", "fields", "allZeroFields", "reduce", "acc", "field", "lastLongest", "longestZeroFields", "sort", "a", "b", "newHost", "newFirst", "newLast", "URI_PARSE", "NO_MATCH_IS_UNDEFINED", "parse", "uriString", "options", "iri", "reference", "port", "isNaN", "indexOf", "schemeHandler", "unicodeSupport", "domainHost", "_recomposeAuthority", "uriTokens", "_", "$1", "$2", "RDS1", "RDS2", "RDS3", "RDS5", "removeDotSegments", "im", "s", "Error", "serialize", "authority", "charAt", "absolutePath", "resolveComponents", "relative", "skipNormalization", "tolerant", "resolve", "baseURI", "relativeURI", "schemelessOptions", "normalize", "uri", "equal", "uriA", "uriB", "escapeComponent", "ESCAPE", "unescapeComponent", "handler", "secure", "http", "isSecure", "wsComponents", "resourceName", "_wsComponents$resourc2", "ws", "O", "ATEXT$$", "QTEXT$$", "VCHAR$$", "SOME_DELIMS$$", "NOT_LOCAL_PART", "NOT_HFNAME", "NOT_HFVALUE", "mailtoComponents", "to", "unknownHeaders", "headers", "hfields", "hfield", "toAddrs", "subject", "body", "addr", "toAddr", "atIdx", "localPart", "domain", "name", "URN_PARSE", "urnComponents", "nid", "nss", "urnScheme", "uriComponents", "UUID", "uuidComponents", "uuid", "https", "wss", "mailto", "urn", "require_canonicalize", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "serialize", "object", "t", "cv", "ci", "comma", "require_src", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "base", "ALPHABET", "BASE_MAP", "j", "x", "xc", "BASE", "LEADER", "FACTOR", "iFACTOR", "encode", "source", "zeroes", "length", "pbegin", "pend", "size", "b58", "carry", "i", "it1", "it2", "str", "decodeUnsafe", "psz", "b256", "it3", "it4", "vch", "decode", "string", "buffer", "require_util", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "textDecoder", "decodeText", "bytes", "textEncoder", "encodeText", "text", "concat", "arrs", "length", "output", "offset", "arr", "require_base", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "encodeText", "Base", "name", "code", "factory", "alphabet", "buf", "string", "char", "require_rfc4648", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "decode", "string", "alphabet", "bitsPerChar", "codes", "i", "end", "out", "bits", "buffer", "written", "value", "encode", "data", "pad", "mask", "rfc4648", "input", "require_constants", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "baseX", "Base", "rfc4648", "decodeText", "encodeText", "identity", "constants", "names", "prev", "tupple", "codes", "require_src", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "constants", "encodeText", "decodeText", "concat", "multibase", "nameOrCode", "buf", "name", "codeBuf", "encoding", "validEncode", "encode", "enc", "data", "decode", "prefix", "isEncoded", "encodingFromData", "names", "codes", "require_encode", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "encode", "MSB", "REST", "MSBALL", "INT", "num", "out", "offset", "oldOffset", "require_decode", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "read", "MSB", "REST", "buf", "offset", "res", "shift", "counter", "b", "l", "require_length", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "value", "require_varint", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "require_constants", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "names", "base", "ALPHABET", "name", "BASE_MAP", "j", "i", "x", "xc", "BASE", "LEADER", "FACTOR", "iFACTOR", "encode", "source", "zeroes", "length", "pbegin", "pend", "size", "b58", "carry", "it1", "it2", "str", "decodeUnsafe", "psz", "b256", "it3", "it4", "vch", "decode", "string", "buffer", "import_buffer_polyfill", "src", "_brrp__multiformats_scope_baseX", "base_x_default", "init_base_x", "__esmMin", "import_buffer_polyfill", "empty", "equals", "coerce", "fromString", "toString", "init_bytes", "__esmMin", "aa", "bb", "ii", "o", "str", "b", "import_buffer_polyfill", "Encoder", "Decoder", "ComposedDecoder", "or", "Codec", "from", "baseX", "decode", "encode", "rfc4648", "init_base", "__esmMin", "init_base_x", "init_bytes", "name", "prefix", "baseEncode", "bytes", "baseDecode", "text", "decoder", "decoders", "input", "left", "right", "alphabet", "base_x_default", "coerce", "string", "bitsPerChar", "codes", "i", "end", "out", "bits", "buffer", "written", "value", "data", "pad", "mask", "identity_exports", "__export", "identity", "import_buffer_polyfill", "init_identity", "__esmMin", "init_base", "init_bytes", "from", "buf", "toString", "str", "fromString", "base2_exports", "__export", "base2", "import_buffer_polyfill", "init_base2", "__esmMin", "init_base", "rfc4648", "base8_exports", "__export", "base8", "import_buffer_polyfill", "init_base8", "__esmMin", "init_base", "rfc4648", "base10_exports", "__export", "base10", "import_buffer_polyfill", "init_base10", "__esmMin", "init_base", "baseX", "base16_exports", "__export", "base16", "base16upper", "import_buffer_polyfill", "init_base16", "__esmMin", "init_base", "rfc4648", "base32_exports", "__export", "base32", "base32hex", "base32hexpad", "base32hexpadupper", "base32hexupper", "base32pad", "base32padupper", "base32upper", "base32z", "import_buffer_polyfill", "init_base32", "__esmMin", "init_base", "rfc4648", "base36_exports", "__export", "base36", "base36upper", "import_buffer_polyfill", "init_base36", "__esmMin", "init_base", "baseX", "base58_exports", "__export", "base58btc", "base58flickr", "import_buffer_polyfill", "init_base58", "__esmMin", "init_base", "baseX", "base64_exports", "__export", "base64", "base64pad", "base64url", "base64urlpad", "import_buffer_polyfill", "init_base64", "__esmMin", "init_base", "rfc4648", "base256emoji_exports", "__export", "base256emoji", "encode", "data", "p", "c", "alphabetBytesToChars", "decode", "str", "byts", "char", "byt", "alphabetCharsToBytes", "import_buffer_polyfill", "alphabet", "init_base256emoji", "__esmMin", "init_base", "i", "from", "encode", "num", "out", "offset", "oldOffset", "INT", "MSB", "MSBALL", "read", "buf", "res", "shift", "counter", "b", "l", "REST$1", "MSB$1", "import_buffer_polyfill", "encode_1", "REST", "decode", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "length", "varint", "_brrp_varint", "varint_default", "init_varint", "__esmMin", "value", "import_buffer_polyfill", "decode", "encodeTo", "encodingLength", "init_varint", "__esmMin", "data", "offset", "varint_default", "int", "target", "import_buffer_polyfill", "create", "decode", "equals", "Digest", "init_digest", "__esmMin", "init_bytes", "init_varint", "code", "digest", "size", "sizeOffset", "encodingLength", "digestOffset", "bytes", "encodeTo", "multihash", "coerce", "a", "b", "import_buffer_polyfill", "from", "Hasher", "init_hasher", "__esmMin", "init_digest", "name", "code", "encode", "input", "result", "create", "digest", "sha2_browser_exports", "__export", "sha256", "sha512", "import_buffer_polyfill", "sha", "init_sha2_browser", "__esmMin", "init_hasher", "name", "data", "from", "identity_exports", "__export", "identity", "import_buffer_polyfill", "code", "name", "encode", "digest", "init_identity", "__esmMin", "init_bytes", "init_digest", "coerce", "input", "create", "import_buffer_polyfill", "init_raw", "__esmMin", "init_bytes", "import_buffer_polyfill", "textEncoder", "textDecoder", "init_json", "__esmMin", "import_buffer_polyfill", "CID", "parseCIDtoBytes", "toStringV0", "toStringV1", "DAG_PB_CODE", "SHA_256_CODE", "encodeCID", "cidSymbol", "readonly", "hidden", "version", "deprecate", "IS_CID_DEPRECATION", "init_cid", "__esmMin", "init_varint", "init_digest", "init_base58", "init_base32", "init_bytes", "code", "multihash", "bytes", "digest", "create", "other", "equals", "base", "_baseCache", "base58btc", "base32", "value", "decode", "cid", "remainder", "specs", "prefixSize", "multihashBytes", "coerce", "digestBytes", "Digest", "initialBytes", "offset", "next", "i", "length", "codec", "multihashCode", "digestSize", "size", "multihashSize", "source", "prefix", "decoder", "cache", "codeOffset", "encodingLength", "hashOffset", "encodeTo", "range", "message", "import_buffer_polyfill", "init_src", "__esmMin", "init_cid", "init_varint", "init_bytes", "init_hasher", "init_digest", "import_buffer_polyfill", "bases", "hashes", "init_basics", "__esmMin", "init_identity", "init_base2", "init_base8", "init_base10", "init_base16", "init_base32", "init_base36", "init_base58", "init_base64", "init_base256emoji", "init_sha2_browser", "init_raw", "init_json", "init_src", "identity_exports", "base2_exports", "base8_exports", "base10_exports", "base16_exports", "base32_exports", "base36_exports", "base58_exports", "base64_exports", "base256emoji_exports", "sha2_browser_exports", "asUint8Array", "buf", "import_buffer_polyfill", "init_as_uint8array", "__esmMin", "allocUnsafe", "size", "asUint8Array", "import_buffer_polyfill", "init_alloc", "__esmMin", "init_as_uint8array", "createCodec", "name", "prefix", "encode", "decode", "import_buffer_polyfill", "string", "ascii", "BASES", "bases_default", "init_bases", "__esmMin", "init_basics", "init_alloc", "buf", "str", "i", "allocUnsafe", "bases", "to_string_exports", "__export", "toString", "array", "encoding", "base", "bases_default", "import_buffer_polyfill", "init_to_string", "__esmMin", "init_bases", "from_string_exports", "__export", "fromString", "string", "encoding", "base", "bases_default", "asUint8Array", "import_buffer_polyfill", "init_from_string", "__esmMin", "init_bases", "init_as_uint8array", "concat_exports", "__export", "concat", "arrays", "length", "acc", "curr", "output", "allocUnsafe", "offset", "arr", "asUint8Array", "import_buffer_polyfill", "init_concat", "__esmMin", "init_alloc", "init_as_uint8array", "require_src", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "multibase", "varint", "names", "uint8ArrayToString", "uint8ArrayFromString", "uint8ArrayConcat", "codes", "key", "name", "toHexString", "hash", "fromHexString", "toB58String", "fromB58String", "encoded", "decode", "bytes", "code", "isValidCode", "len", "encode", "digest", "length", "hashfn", "coerceCode", "isAppCode", "validate", "multihash", "prefix", "require_ms", "__commonJSMin", "exports", "module", "import_buffer_polyfill", "s", "m", "h", "d", "w", "y", "val", "options", "type", "parse", "fmtLong", "fmtShort", "str", "match", "n", "ms", "msAbs", "plural", "name", "isPlural", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "CryptoError", "InvalidAccessError", "CryptoError", "NotSupportedError", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "CryptoAlgorithm", "options", "algorithmName", "NotSupportedError", "key", "keyAlgorithmName", "InvalidAccessError", "keyType", "allowedKeyType", "keyUsages", "allowedKeyUsages", "allowedUsages", "usage", "utils_exports", "__export", "checkRequiredProperty", "checkValidProperty", "isBytesKeyPair", "isCryptoKeyPair", "isWebCryptoSupported", "keyToMultibaseId", "multibaseIdToKey", "randomBytes", "randomUuid", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "base", "ALPHABET", "name", "BASE_MAP", "j", "i", "x", "xc", "BASE", "LEADER", "FACTOR", "iFACTOR", "encode", "source", "zeroes", "length", "pbegin", "pend", "size", "b58", "carry", "it1", "it2", "str", "decodeUnsafe", "psz", "b256", "it3", "it4", "vch", "decode", "string", "buffer", "src", "_brrp__multiformats_scope_baseX", "base_x_default", "import_buffer_polyfill", "empty", "equals", "aa", "bb", "ii", "coerce", "o", "import_buffer_polyfill", "Encoder", "name", "prefix", "baseEncode", "bytes", "Decoder", "baseDecode", "text", "decoder", "or", "ComposedDecoder", "decoders", "input", "left", "right", "Codec", "from", "encode", "decode", "baseX", "alphabet", "base_x_default", "coerce", "string", "bitsPerChar", "codes", "i", "end", "out", "bits", "buffer", "written", "value", "data", "pad", "mask", "rfc4648", "base58btc", "baseX", "base58flickr", "import_buffer_polyfill", "base64", "rfc4648", "base64pad", "base64url", "base64urlpad", "import_buffer_polyfill", "isArrayBufferSlice", "arrayBufferView", "universalTypeOf", "value", "match", "_", "type", "textEncoder", "textDecoder", "Convert", "data", "format", "base58btc", "base64url", "universalTypeOf", "isArrayBufferSlice", "u8a", "string", "hexes", "v", "hex", "dataType", "i", "byteValue", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "varint_exports", "__export", "decode", "encodeTo", "encodingLength", "import_buffer_polyfill", "import_buffer_polyfill", "encode_1", "encode", "MSB", "REST", "MSBALL", "INT", "num", "out", "offset", "oldOffset", "decode", "read", "MSB$1", "REST$1", "buf", "res", "shift", "counter", "b", "l", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "length", "value", "varint", "_brrp_varint", "varint_default", "decode", "data", "offset", "varint_default", "encodeTo", "int", "target", "encodingLength", "import_buffer_polyfill", "create", "code", "digest", "size", "sizeOffset", "encodingLength", "digestOffset", "bytes", "encodeTo", "Digest", "decode", "multihash", "coerce", "equals", "a", "b", "data", "import_buffer_polyfill", "base32", "rfc4648", "base32upper", "base32pad", "base32padupper", "base32hex", "base32hexupper", "base32hexpad", "base32hexpadupper", "base32z", "import_buffer_polyfill", "format", "link", "base", "bytes", "version", "toStringV0", "baseCache", "base58btc", "toStringV1", "base32", "cache", "baseCache", "cid", "CID", "version", "code", "multihash", "bytes", "DAG_PB_CODE", "SHA_256_CODE", "digest", "create", "other", "self", "unknown", "equals", "base", "format", "input", "value", "encodeCID", "cidSymbol", "decode", "remainder", "specs", "prefixSize", "multihashBytes", "coerce", "digestBytes", "Digest", "initialBytes", "offset", "next", "i", "length", "codec", "multihashCode", "digestSize", "size", "multihashSize", "source", "prefix", "parseCIDtoBytes", "decoder", "base58btc", "base32", "toStringV0", "toStringV1", "codeOffset", "encodingLength", "hashOffset", "encodeTo", "import_buffer_polyfill", "import_buffer_polyfill", "Multicodec", "options", "code", "data", "name", "_a", "prefixLength", "varint_exports", "dataWithPrefix", "prefixedData", "_", "codec", "codeByteLength", "import_buffer_polyfill", "removeUndefinedProperties", "obj", "key", "import_level", "import_buffer_polyfill", "import_buffer_polyfill", "crypto", "u8a", "a", "createView", "arr", "rotr", "word", "shift", "isLE", "hexes", "v", "i", "bytesToHex", "bytes", "u8a", "hex", "utf8ToBytes", "str", "toBytes", "data", "u8a", "concatBytes", "arrays", "r", "sum", "a", "pad", "Hash", "wrapConstructor", "hashCons", "hashC", "msg", "toBytes", "tmp", "randomBytes", "bytesLength", "crypto", "checkRequiredProperty", "options", "property", "inObject", "checkValidProperty", "allowedProperties", "validProperties", "isBytesKeyPair", "key", "universalTypeOf", "isCryptoKeyPair", "keyToMultibaseId", "multicodecCode", "multicodecName", "prefixedKey", "Multicodec", "prefixedKeyB58", "Convert", "isWebCryptoSupported", "multibaseIdToKey", "multibaseKeyId", "code", "data", "name", "randomBytes", "bytesLength", "randomUuid", "bytes", "hex", "bytesToHex", "segments", "uuid", "__awaiter", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "e", "rejected", "result", "BaseEllipticCurveAlgorithm", "CryptoAlgorithm", "options", "algorithm", "keyUsages", "checkRequiredProperty", "checkValidProperty", "InvalidAccessError", "import_buffer_polyfill", "import_buffer_polyfill", "__awaiter", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "e", "rejected", "result", "BaseEcdsaAlgorithm", "BaseEllipticCurveAlgorithm", "options", "algorithm", "checkRequiredProperty", "checkValidProperty", "InvalidAccessError", "import_buffer_polyfill", "__awaiter", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "e", "rejected", "result", "BaseEdDsaAlgorithm", "BaseEllipticCurveAlgorithm", "options", "algorithm", "InvalidAccessError", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "CryptoKey", "algorithm", "extractable", "material", "type", "usages", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "number", "n", "bool", "b", "bytes", "lengths", "hash", "exists", "instance", "checkFinished", "output", "out", "min", "assert", "assert_default", "setBigUint64", "view", "byteOffset", "value", "isLE", "_32n", "_u32_max", "wh", "wl", "h", "l", "SHA2", "Hash", "blockLen", "outputLen", "padOffset", "createView", "data", "assert_default", "buffer", "toBytes", "len", "pos", "take", "dataView", "out", "i", "oview", "outLen", "state", "res", "to", "length", "finished", "destroyed", "import_buffer_polyfill", "U32_MASK64", "_32n", "fromBig", "n", "le", "split", "lst", "Ah", "Al", "i", "h", "l", "toBig", "shrSH", "s", "shrSL", "rotrSH", "rotrSL", "rotrBH", "rotrBL", "rotr32H", "rotr32L", "rotlSH", "rotlSL", "rotlBH", "rotlBL", "add", "Bh", "Bl", "add3L", "Cl", "add3H", "low", "Ch", "add4L", "Dl", "add4H", "Dh", "add5L", "El", "add5H", "Eh", "u64", "u64_default", "SHA512_Kh", "SHA512_Kl", "u64_default", "n", "SHA512_W_H", "SHA512_W_L", "SHA512", "SHA2", "Ah", "Al", "Bh", "Bl", "Ch", "Cl", "Dh", "Dl", "Eh", "El", "Fh", "Fl", "Gh", "Gl", "Hh", "Hl", "view", "offset", "i", "W15h", "W15l", "s0h", "s0l", "W2h", "W2l", "s1h", "s1l", "SUMl", "SUMh", "sigma1h", "sigma1l", "CHIh", "CHIl", "T1ll", "T1h", "T1l", "sigma0h", "sigma0l", "MAJh", "MAJl", "All", "SHA512_224", "SHA512_256", "SHA384", "sha512", "wrapConstructor", "sha512_224", "sha512_256", "sha384", "import_buffer_polyfill", "import_buffer_polyfill", "utils_exports", "__export", "bitGet", "bitLen", "bitMask", "bitSet", "bytesToHex", "bytesToNumberBE", "bytesToNumberLE", "concatBytes", "createHmacDrbg", "ensureBytes", "equalBytes", "hexToBytes", "hexToNumber", "numberToBytesBE", "numberToBytesLE", "numberToHexUnpadded", "numberToVarBytesBE", "utf8ToBytes", "validateObject", "import_buffer_polyfill", "_0n", "_1n", "_2n", "u8a", "a", "hexes", "v", "i", "bytes", "hex", "num", "len", "array", "j", "hexByte", "byte", "n", "title", "expectedLength", "res", "e", "arrays", "r", "sum", "pad", "b1", "b2", "str", "pos", "value", "u8n", "data", "u8fr", "arr", "hashLen", "qByteLen", "hmacFn", "k", "reset", "h", "b", "reseed", "seed", "gen", "out", "sl", "pred", "validatorFns", "val", "object", "validators", "optValidators", "checkField", "fieldName", "type", "isOptional", "checkVal", "_0n", "_1n", "_2n", "_3n", "_4n", "_5n", "_8n", "_9n", "_16n", "mod", "a", "b", "result", "pow", "num", "power", "modulo", "res", "pow2", "x", "invert", "number", "y", "u", "v", "q", "r", "m", "n", "tonelliShanks", "P", "legendreC", "Q", "S", "Z", "p1div4", "Fp", "root", "Q1div2", "g", "t2", "ge", "FpSqrt", "c1", "n2", "nv", "i", "isNegativeLE", "FIELD_FIELDS", "validateField", "field", "initial", "opts", "map", "val", "validateObject", "FpPow", "f", "p", "d", "FpInvertBatch", "nums", "tmp", "lastMultiplied", "acc", "inverted", "nLength", "n", "nBitLength", "_nBitLength", "nByteLength", "Field", "ORDER", "bitLen", "isLE", "redef", "_0n", "BITS", "BYTES", "sqrtP", "FpSqrt", "f", "bitMask", "_1n", "num", "mod", "lhs", "rhs", "power", "FpPow", "invert", "lst", "FpInvertBatch", "a", "b", "c", "numberToBytesLE", "numberToBytesBE", "bytes", "bytesToNumberLE", "bytesToNumberBE", "FpSqrtEven", "Fp", "elm", "root", "hashToPrivateScalar", "hash", "groupOrder", "isLE", "ensureBytes", "hashLen", "minLen", "nLength", "num", "bytesToNumberLE", "bytesToNumberBE", "mod", "_1n", "import_buffer_polyfill", "_0n", "_1n", "wNAF", "c", "bits", "constTimeNegate", "condition", "item", "neg", "opts", "W", "windows", "windowSize", "elm", "n", "p", "d", "points", "base", "window", "i", "precomputes", "f", "mask", "maxNumber", "shiftBy", "offset", "wbits", "offset1", "offset2", "cond1", "cond2", "P", "precomputesMap", "transform", "comp", "validateBasic", "curve", "validateField", "validateObject", "nLength", "_0n", "_1n", "_2n", "_8n", "VERIFY_DEFAULT", "validateOpts", "curve", "opts", "validateBasic", "validateObject", "twistedEdwards", "curveDef", "CURVE", "Fp", "CURVE_ORDER", "prehash", "cHash", "randomBytes", "nByteLength", "cofactor", "MASK", "modP", "uvRatio", "u", "v", "adjustScalarBytes", "bytes", "domain", "data", "ctx", "phflag", "inBig", "n", "inRange", "max", "in0MaskRange", "assertInRange", "assertGE0", "pointPrecomputes", "isPoint", "other", "Point", "ex", "ey", "ez", "et", "p", "x", "y", "points", "toInv", "i", "windowSize", "a", "d", "X", "Y", "Z", "T", "X2", "Y2", "Z2", "Z4", "aX2", "left", "right", "XY", "ZT", "X1", "Y1", "Z1", "X1Z2", "X2Z1", "Y1Z2", "Y2Z1", "A", "B", "C", "D", "x1y1", "E", "G", "F", "H", "X3", "Y3", "T3", "Z3", "T1", "T2", "wnaf", "scalar", "f", "I", "iz", "z", "is0", "ax", "ay", "zz", "hex", "zip215", "len", "ensureBytes", "normed", "lastByte", "bytesToNumberLE", "y2", "isValid", "isXOdd", "isLastByteOdd", "privKey", "getExtendedPublicKey", "numberToBytesLE", "bytesToHex", "wNAF", "modN", "mod", "modN_LE", "hash", "key", "hashed", "head", "prefix", "point", "pointBytes", "getPublicKey", "hashDomainToScalar", "context", "msgs", "msg", "concatBytes", "sign", "options", "r", "R", "k", "s", "res", "verifyOpts", "verify", "sig", "publicKey", "SB", "import_buffer_polyfill", "_0n", "_1n", "validateOpts", "curve", "validateObject", "montgomery", "curveDef", "CURVE", "P", "modP", "n", "mod", "montgomeryBits", "montgomeryBytes", "fieldLen", "adjustScalarBytes", "bytes", "powPminus2", "x", "pow", "cswap", "swap", "x_2", "x_3", "dummy", "assertFieldElement", "a24", "montgomeryLadder", "pointU", "scalar", "u", "x_1", "z_2", "z_3", "sw", "t", "k_t", "A", "AA", "B", "BB", "E", "C", "D", "DA", "CB", "dacb", "da_cb", "z2", "encodeUCoordinate", "numberToBytesLE", "decodeUCoordinate", "uEnc", "ensureBytes", "bytesToNumberLE", "decodeScalar", "scalarMult", "_scalar", "pu", "GuBytes", "scalarMultBase", "privateKey", "publicKey", "import_buffer_polyfill", "ED25519_P", "ED25519_SQRT_M1", "_0n", "_1n", "_2n", "_5n", "_10n", "_20n", "_40n", "_80n", "ed25519_pow_2_252_3", "x", "P", "b2", "b4", "pow2", "b5", "b10", "b20", "b40", "b80", "b160", "b240", "b250", "adjustScalarBytes", "bytes", "uvRatio", "u", "v", "v3", "mod", "v7", "pow", "vx2", "root1", "root2", "useRoot1", "useRoot2", "noRoot", "isNegativeLE", "Fp", "Field", "ED25519_P", "ed25519Defaults", "sha512", "randomBytes", "adjustScalarBytes", "uvRatio", "ed25519", "twistedEdwards", "ed25519_domain", "data", "ctx", "phflag", "concatBytes", "utf8ToBytes", "ed25519ctx", "ed25519ph", "x25519", "montgomery", "x", "P", "pow_p_5_8", "b2", "ed25519_pow_2_252_3", "mod", "pow2", "edwardsToMontgomeryPub", "edwardsPub", "y", "_1n", "edwardsToMontgomeryPriv", "edwardsPriv", "hashed", "ed25519Defaults", "ELL2_C1", "Fp", "ELL2_C2", "_2n", "ELL2_C3", "ELL2_C4", "ELL2_J", "ELL2_C1_EDWARDS", "FpSqrtEven", "Fp", "SQRT_AD_MINUS_ONE", "INVSQRT_A_MINUS_D", "ONE_MINUS_D_SQ", "D_MINUS_ONE_SQ", "MAX_255B", "__awaiter", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "e", "rejected", "result", "X25519", "privateKey", "x25519", "publicKey", "options", "_options", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "__awaiter", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "e", "rejected", "result", "Ed25519", "options", "privateKey", "edwardsToMontgomeryPriv", "publicKey", "edwardsToMontgomeryPub", "ed25519", "key", "data", "signature", "import_buffer_polyfill", "import_buffer_polyfill", "Chi", "a", "b", "c", "Maj", "SHA256_K", "IV", "SHA256_W", "SHA256", "SHA2", "A", "B", "C", "D", "E", "F", "G", "H", "view", "offset", "i", "W15", "W2", "s0", "rotr", "s1", "sigma1", "T1", "T2", "SHA224", "sha256", "wrapConstructor", "sha224", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "validatePointOpts", "curve", "opts", "validateBasic", "validateObject", "endo", "Fp", "a", "b2n", "h2b", "utils_exports", "DER", "m", "data", "E", "len", "res", "hex", "l", "r", "sBytes", "s", "rBytesLeft", "sig", "slice", "h", "num", "shl", "rhl", "sl", "rl", "_0n", "_1n", "_2n", "_3n", "_4n", "weierstrassPoints", "CURVE", "toBytes", "c", "point", "isCompressed", "concatBytes", "fromBytes", "bytes", "tail", "x", "y", "weierstrassEquation", "b", "x2", "x3", "isWithinCurveOrder", "assertGE", "normPrivateKeyToScalar", "key", "lengths", "nByteLength", "wrapPrivateKey", "n", "bytesToHex", "bytesToNumberBE", "ensureBytes", "mod", "pointPrecomputes", "assertPrjPoint", "other", "Point", "px", "py", "pz", "p", "is0", "i", "points", "toInv", "P", "privateKey", "windowSize", "left", "right", "X1", "Y1", "Z1", "X2", "Y2", "Z2", "U1", "U2", "b3", "X3", "Y3", "Z3", "t0", "t1", "t2", "t3", "t4", "t5", "wnaf", "comp", "I", "k1neg", "k1", "k2neg", "k2", "k1p", "k2p", "d", "scalar", "fake", "f1p", "f2p", "f", "Q", "G", "mul", "sum", "iz", "z", "ax", "ay", "zz", "cofactor", "isTorsionFree", "clearCofactor", "_bits", "wNAF", "validateOpts", "weierstrass", "curveDef", "CURVE_ORDER", "compressedLen", "uncompressedLen", "isValidFieldElement", "modN", "invN", "invert", "cat", "head", "y2", "isYOdd", "numToNByteStr", "numberToBytesBE", "isBiggerThanHalfOrder", "number", "HALF", "normalizeS", "slcNum", "from", "to", "Signature", "recovery", "msgHash", "rec", "bits2int_modN", "radj", "prefix", "R", "ir", "u1", "u2", "hexToBytes", "utils", "rand", "hashToPrivateScalar", "getPublicKey", "isProbPub", "item", "arr", "str", "getSharedSecret", "privateA", "publicB", "bits2int", "delta", "ORDER_MASK", "bitMask", "int2octets", "prepSig", "defaultSigOpts", "k", "hash", "randomBytes", "lowS", "prehash", "ent", "h1int", "seedArgs", "e", "seed", "k2sig", "kBytes", "ik", "q", "normS", "defaultVerOpts", "sign", "privKey", "C", "createHmacDrbg", "verify", "signature", "publicKey", "sg", "_sig", "derError", "error", "is", "import_buffer_polyfill", "import_buffer_polyfill", "HMAC", "Hash", "hash", "_key", "assert_default", "key", "toBytes", "blockLen", "pad", "i", "buf", "out", "to", "oHash", "iHash", "finished", "destroyed", "outputLen", "hmac", "message", "getHash", "hash", "key", "msgs", "hmac", "concatBytes", "randomBytes", "createCurve", "curveDef", "defHash", "create", "weierstrass", "secp256k1P", "secp256k1N", "_1n", "_2n", "divNearest", "a", "b", "sqrtMod", "y", "P", "_3n", "_6n", "_11n", "_22n", "_23n", "_44n", "_88n", "b2", "b3", "b6", "pow2", "b9", "b11", "b22", "b44", "b88", "b176", "b220", "b223", "t1", "t2", "root", "Fp", "Field", "secp256k1", "createCurve", "k", "n", "a1", "b1", "a2", "POW_2_128", "c1", "c2", "k1", "mod", "k2", "k1neg", "k2neg", "sha256", "_0n", "Point", "secp256k1", "__awaiter", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "e", "rejected", "result", "Secp256k1", "options", "publicKey", "compressedPublicKey", "secp256k1", "privateKey", "key", "point", "x", "numberToBytesBE", "y", "data", "hash", "hashFunction", "digest", "signature", "sha256", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "u8a", "a", "u32", "arr", "createView", "isLE", "utf8ToBytes", "str", "toBytes", "data", "utf8ToBytes", "u8a", "isPlainObject", "obj", "checkOpts", "defaults", "opts", "ensureBytes", "b", "len", "equalBytes", "a", "isSame", "setBigUint64", "view", "byteOffset", "value", "isLE", "_32n", "_u32_max", "wh", "wl", "h", "l", "import_buffer_polyfill", "import_buffer_polyfill", "number", "n", "bool", "b", "bytes", "lengths", "hash", "exists", "instance", "checkFinished", "output", "out", "min", "assert", "number", "bool", "bytes", "hash", "exists", "output", "assert_default", "u8to16", "a", "i", "Poly1305", "key", "toBytes", "ensureBytes", "t0", "t1", "t2", "t3", "t4", "t5", "t6", "t7", "data", "offset", "isLast", "hibit", "h", "r", "r0", "r1", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9", "h0", "h1", "h2", "h3", "h4", "h5", "h6", "h7", "h8", "h9", "c", "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "pad", "g", "mask", "f", "assert_default", "buffer", "blockLen", "len", "pos", "take", "out", "opos", "outputLen", "res", "wrapConstructorWithKey", "hashCons", "hashC", "msg", "tmp", "poly1305", "import_buffer_polyfill", "sigma16", "utf8ToBytes", "sigma32", "sigma16_32", "u32", "sigma32_32", "isAligned32", "b", "salsaBasic", "opts", "core", "rounds", "counterRight", "counterLen", "allow128bitKeys", "extendNonceFn", "blockLen", "checkOpts", "assert_default", "blockLen32", "key", "nonce", "data", "output", "counter", "toClean", "k", "sigma", "nonceLen", "nc", "block", "b32", "k32", "n32", "d32", "o32", "len", "pos", "ctr", "take", "pos32", "j", "i", "rotl", "a", "b", "chachaCore", "c", "k", "n", "out", "cnt", "rounds", "y00", "y01", "y02", "y03", "y04", "y05", "y06", "y07", "y08", "y09", "y10", "y11", "y12", "y13", "y14", "y15", "x00", "x01", "x02", "x03", "x04", "x05", "x06", "x07", "x08", "x09", "x10", "x11", "x12", "x13", "x14", "x15", "i", "oi", "hchacha", "key", "src", "k32", "u32", "i32", "o32", "chacha20orig", "salsaBasic", "chacha20", "xchacha20", "chacha8", "chacha12", "ZERO", "updatePadded", "h", "msg", "left", "computeTag", "fn", "nonce", "data", "AAD", "authKey", "poly1305", "num", "view", "createView", "setBigUint64", "res", "_poly1305_aead", "ensureBytes", "plaintext", "tag", "ciphertext", "realTag", "equalBytes", "chacha20_poly1305", "xchacha20_poly1305", "import_buffer_polyfill", "import_buffer_polyfill", "__awaiter", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "e", "rejected", "result", "EcdsaAlgorithm", "BaseEcdsaAlgorithm", "options", "_a", "algorithm", "extractable", "keyUsages", "keyPair", "cryptoKeyPair", "Secp256k1", "isBytesKeyPair", "CryptoKey", "key", "data", "signature", "keyAlgorithm", "isValid", "import_buffer_polyfill", "__awaiter", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "e", "rejected", "result", "EdDsaAlgorithm", "BaseEdDsaAlgorithm", "options", "algorithm", "extractable", "keyUsages", "keyPair", "cryptoKeyPair", "Ed25519", "isBytesKeyPair", "CryptoKey", "key", "data", "signature", "keyAlgorithm", "isValid", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "__awaiter", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "e", "rejected", "result", "__rest", "s", "p", "i", "joseToWebCryptoMapping", "webCryptoToJoseMapping", "multicodecToJoseMapping", "joseToMulticodecMapping", "Jose", "options", "algorithm", "extractable", "material", "type", "usages", "jsonWebKey", "keyPair", "privateKeyJwk", "publicKeyJwk", "params", "lookupKey", "name", "Multicodec", "webCrypto", "key", "keyType", "normalizedJwk", "removeUndefinedProperties", "serializedJwk", "utf8Bytes", "Convert", "digest", "sha256", "keyMaterial", "keyUsage", "CryptoKey", "prefix", "x", "y", "multicodecName", "Secp256k1", "keyToMultibaseId", "_a", "_b", "_c", "jsonWebKeyOptions", "publicKey", "Ed25519", "X25519", "points", "code", "jose", "obj", "sortedObj", "acc", "CryptoKeyToJwkMixin", "Base", "CryptoKeyWithJwk", "import_buffer_polyfill", "import_buffer_polyfill", "DHT", "dht_browser_default", "import_z32", "import_dns_packet", "import_buffer_polyfill", "import_sodium_universal", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "alphabet", "encodeLookup", "decodeLookup", "i", "concat", "chunks", "size", "length", "i", "b", "offset", "chars", "lookup", "i", "decoder", "arr2text", "data", "enc", "encoder", "text2arr", "str", "scope", "crypto", "subtle", "import_buffer_polyfill", "digitCount", "value", "sign", "getType", "encode", "data", "buffer", "offset", "buffers", "result", "concat", "getType", "buffE", "buffD", "buffL", "text2arr", "hi", "lo", "val", "j", "k", "keys", "kl", "key", "i", "c", "item", "encode_default", "import_buffer_polyfill", "INTEGER_START", "STRING_DELIM", "DICTIONARY_START", "LIST_START", "END_OF_TYPE", "getIntFromBuffer", "buffer", "start", "end", "sum", "sign", "i", "num", "decode", "data", "encoding", "text2arr", "chr", "c", "d", "dict", "arr2text", "lst", "number", "sep", "length", "decode_default", "import_buffer_polyfill", "listLength", "list", "length", "value", "encodingLength", "mapLength", "map", "key", "keyLength", "text2arr", "digitCount", "objectLength", "keys", "stringLength", "arrayBufferLength", "type", "getType", "encoding_length_default", "encodingLength", "encoding_length_default", "bencode_default", "encode_default", "decode_default", "import_z32", "verify", "sodium", "randomBytes", "n", "buf", "encodeSigData", "msg", "ref", "bencode_default", "generateKeyPair", "seed", "publicKey", "sodium", "secretKey", "decodeKey", "url", "keyBytes", "z32", "import_buffer_polyfill", "import_z32", "import_dns_packet", "import_sodium_universal", "verify", "sodium", "SignedPacket", "#publicKey", "#packet", "#bytes", "#timestamp", "keypair", "packet", "options", "origin", "z32", "answer", "normalizeName", "signedPacket", "timestamp", "encodedPacket", "dns", "signable", "encodeSigData", "signature", "bytes", "publicKey", "buffer", "seq", "v", "sig", "args", "name", "normalizedName", "rr", "parts", "last", "SignedPacket", "z32", "_z32", "Pkarr", "relay", "signedPacket", "id", "z32", "url", "publicKey", "response", "bytes", "SignedPacket", "dht", "dht_browser_default", "key", "options", "result", "decodeKey", "error", "__publicField", "generateKeyPair", "randomBytes", "import_dns_packet", "PKARR_RELAY", "TTL", "DidDht", "did", "packet", "document", "keyLookup", "answer", "dataStr", "id", "t", "k", "keyConfig", "publicKeyJwk", "Jose", "Convert", "sId", "sType", "uri", "potentialRootNames", "actualRootName", "root", "record", "type", "ids", "idList", "relay", "didFragment", "publicKeyBytes", "z32", "resolved", "Pkarr", "keyPair", "didDocument", "pkarrKeypair", "signedPacket", "SignedPacket", "vmIds", "svcIds", "rootRecord", "vm", "recordIdentifier", "vmId", "keyType", "cryptoKey", "keyBase64Url", "keyRecord", "service", "index", "serviceRecord", "authIds", "identifier", "data", "acc", "pair", "key", "value", "import_buffer_polyfill", "import_z32", "utils_exports", "__export", "DID_REGEX", "getServices", "getVerificationMethodIds", "getVerificationMethodTypes", "isDwnServiceEndpoint", "parseDid", "import_buffer_polyfill", "import_buffer_polyfill", "PCT_ENCODED", "ID_CHAR", "METHOD", "METHOD_ID", "PARAM_CHAR", "PARAM", "PARAMS", "PATH", "QUERY", "FRAGMENT", "DID_MATCHER", "RegExp", "parse", "didUrl", "sections", "match", "parts", "did", "method", "id", "params", "slice", "split", "p", "kv", "path", "query", "fragment", "DID_REGEX", "getServices", "options", "didDocument", "id", "type", "service", "getVerificationMethodIds", "publicKeyJwk", "publicKeyMultibase", "method", "getVerificationMethodTypes", "types", "key", "isDwnServiceEndpoint", "endpoint", "parseDid", "didUrl", "parse", "DidDhtMethod", "options", "publish", "initialKeySet", "services", "keySet", "id", "relationshipsMap", "verificationMethods", "key", "relationship", "service", "document", "keyAlgorithm", "keyId", "cryptoKeyPair", "EdDsaAlgorithm", "EcdsaAlgorithm", "jwkKeyPair", "Jose", "jwkThumbprint", "identityKeySetVerificationMethod", "cryptoKey", "z32", "didDocument", "publicCryptoKey", "privateCryptoKey", "DidDht", "didUrl", "_", "parsedDid", "parseDid", "import_buffer_polyfill", "import_ion_pow_sdk", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "ErrorCode_default", "import_buffer_polyfill", "IonError", "code", "message", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "empty", "import_buffer_polyfill", "Encoder", "name", "prefix", "baseEncode", "bytes", "Decoder", "baseDecode", "text", "decoder", "or", "ComposedDecoder", "decoders", "input", "left", "right", "Codec", "from", "encode", "decode", "decode", "string", "alphabet", "bitsPerChar", "name", "codes", "i", "end", "out", "bits", "buffer", "written", "value", "encode", "data", "pad", "mask", "rfc4648", "prefix", "from", "input", "base64", "rfc4648", "base64pad", "base64url", "base64urlpad", "Encoder", "content", "base64url", "encodedContent", "inputContextForErrorLogging", "IonError", "ErrorCode_default", "rawBytes", "input", "URI", "import_buffer_polyfill", "import_buffer_polyfill", "OperationKeyType", "OperationKeyType_default", "InputValidator", "operationKeyJwk", "operationKeyType", "allowedProperties", "OperationKeyType_default", "property", "IonError", "ErrorCode_default", "id", "Encoder", "purposes", "processedPurposes", "purpose", "import_buffer_polyfill", "IonSdkConfig", "import_buffer_polyfill", "canonicalize", "JsonCanonicalizer", "content", "contentWithoutUndefinedProperties", "canonicalizedString", "Encoder", "key", "multihashes", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "import_buffer_polyfill", "encode_1", "encode", "MSB", "REST", "MSBALL", "INT", "num", "out", "offset", "oldOffset", "decode", "read", "MSB$1", "REST$1", "buf", "res", "shift", "counter", "b", "l", "N1", "N2", "N3", "N5", "N6", "N7", "N8", "N9", "length", "value", "varint", "_brrp_varint", "varint_default", "encodeTo", "int", "target", "offset", "varint_default", "encodingLength", "create", "code", "digest", "size", "sizeOffset", "encodingLength", "digestOffset", "bytes", "encodeTo", "Digest", "Digest", "code", "size", "digest", "bytes", "from", "name", "code", "encode", "Hasher", "input", "result", "create", "digest", "sha", "name", "data", "sha256", "from", "sha512", "Multihash", "content", "hashAlgorithmInMultihashCode", "conventionalHash", "hash", "sha256", "IonError", "ErrorCode_default", "canonicalizedStringBytes", "JsonCanonicalizer", "contentBytes", "intermediateHashBytes", "multihashBytes", "Encoder", "encodedMultihash", "inputContextForErrorLogging", "multihash", "IonSdkConfig", "import_buffer_polyfill", "OperationType", "OperationType_default", "import_buffer_polyfill", "PatchAction", "PatchAction_default", "IonRequest", "input", "recoveryKey", "updateKey", "didDocumentKeys", "services", "InputValidator", "OperationKeyType_default", "hashAlgorithmInMultihashCode", "IonSdkConfig", "patches", "PatchAction_default", "delta", "Multihash", "suffixData", "OperationType_default", "revealValue", "dataToBeSigned", "compactJws", "nextUpdateCommitmentHash", "deltaHash", "id", "servicesToAdd", "patch", "idsOfServicesToRemove", "publicKeysToAdd", "idsOfPublicKeysToRemove", "didSuffix", "publicKeys", "publicKeyIdSet", "publicKey", "IonError", "ErrorCode_default", "serviceIdSet", "service", "maxTypeLength", "errorMessage", "deltaBytes", "JsonCanonicalizer", "IonDid", "input", "createRequest", "IonRequest", "didUniqueSuffix", "shortFormDid", "IonSdkConfig", "initialState", "canonicalizedInitialStateBytes", "JsonCanonicalizer", "encodedCanonicalizedInitialStateString", "Encoder", "suffixData", "canonicalizedStringBytes", "multihash", "Multihash", "import_buffer_polyfill", "P", "N", "Gx", "Gy", "CURVE", "err", "m", "str", "s", "au8", "a", "l", "u8n", "data", "toU8", "len", "h2b", "mod", "b", "r", "isPoint", "p", "Point", "Gpows", "ex", "ey", "ez", "et", "hex", "strict", "d", "normed", "y", "b2n_LE", "y2", "u", "v", "isValid", "x", "uvRatio", "isXOdd", "other", "X1", "Y1", "Z1", "X2", "Y2", "Z2", "X1Z2", "X2Z1", "Y1Z2", "Y2Z1", "I", "A", "B", "C", "D", "x1y1", "E", "G", "F", "H", "X3", "Y3", "T3", "Z3", "T1", "T2", "n", "safe", "wNAF", "f", "scalar", "z", "iz", "invert", "n2b_32LE", "b2h", "padh", "num", "pad", "arr", "j", "h", "concatB", "arrs", "sum", "md", "q", "pow2", "power", "pow_2_252_3", "b2", "b4", "b5", "b10", "b20", "b40", "b80", "b160", "b240", "b250", "RM1", "v3", "v7", "pow", "vx2", "root1", "root2", "useRoot1", "useRoot2", "noRoot", "_shaS", "cr", "etc", "b2h", "h2b", "concatB", "mod", "invert", "len", "crypto", "err", "u8n", "messages", "m", "_shaS", "f", "W", "precompute", "points", "windows", "p", "G", "b", "w", "i", "wNAF", "n", "comp", "Gpows", "neg", "cnd", "I", "f", "wsize", "mask", "maxNum", "shiftBy", "off", "wbits", "off1", "off2", "cnd1", "cnd2", "import_buffer_polyfill", "B256", "P", "N", "Gx", "Gy", "CURVE", "fLen", "crv", "x", "mod", "err", "m", "big", "n", "str", "s", "fe", "ge", "au8", "a", "l", "u8n", "data", "toU8", "len", "h2b", "b", "r", "isPoint", "p", "Point", "Gpows", "px", "py", "pz", "hex", "head", "tail", "slcNum", "y", "sqrt", "isYOdd", "k", "G", "toPriv", "other", "X1", "Y1", "Z1", "X2", "Y2", "Z2", "X1Z2", "X2Z1", "Y1Z2", "Y2Z1", "X3", "Y3", "Z3", "b3", "t0", "t1", "t2", "t3", "t4", "t5", "safe", "I", "wNAF", "f", "d", "R", "u1", "u2", "z", "iz", "inv", "isCompressed", "n2h", "padh", "pad", "b2h", "arr", "j", "h", "b2n", "from", "to", "n2b", "num", "concatB", "arrs", "sum", "md", "u", "v", "q", "e", "cr", "_hmacSync", "hashToPrivateKey", "hash", "toU8", "minLen", "fLen", "err", "num", "mod", "b2n", "N", "n2b", "etc", "h2b", "b2h", "concatB", "inv", "key", "msgs", "crypto", "cr", "s", "k", "u8n", "_hmacSync", "len", "etc", "_hmacSync", "f", "W", "precompute", "points", "windows", "p", "G", "b", "w", "i", "wNAF", "n", "comp", "Gpows", "neg", "cnd", "I", "wsize", "mask", "maxNum", "shiftBy", "off", "wbits", "off1", "off2", "cnd1", "cnd2", "import_buffer_polyfill", "IonNetwork", "import_buffer_polyfill", "IonPublicKeyPurpose", "IonPublicKeyPurpose_default", "VerificationRelationshipToIonPublicKeyPurpose", "IonPublicKeyPurpose_default", "_DidIonMethod", "options", "challengeEnabled", "challengeEndpoint", "keySet", "services", "operationsEndpoint", "ionDocument", "createRequest", "resolutionResult", "response", "IonProofOfWork", "universalTypeOf", "anchor", "keyAlgorithm", "did", "didResolutionResult", "didUrl", "parsedDid", "parseDid", "Convert", "signingKeyAlgorithm", "serviceId", "signingKeyId", "encryptionKeyId", "serviceEndpointNodes", "signingKeyPair", "encryptionKeyPair", "keyId", "cryptoKeyPair", "EdDsaAlgorithm", "EcdsaAlgorithm", "jwkKeyPair", "Jose", "jwkThumbprint", "authenticationkeyPair", "key", "didDocument", "dwnService", "getServices", "isDwnServiceEndpoint", "verificationMethodId", "recoveryKey", "updateKey", "IonDid", "resolutionOptions", "resolutionEndpoint", "resolutionUrl", "url", "error", "errorMessage", "ionPublicKeys", "ionPurposes", "relationship", "publicKey", "ionServices", "service", "recoveryPublicKeyJwk", "updatePublicKeyJwk", "IonRequest", "ionJwk", "DidIonMethod", "import_buffer_polyfill", "SupportedPublicKeyFormats", "VERIFICATION_METHOD_TYPES", "MULTICODEC_PUBLIC_KEY_LENGTH", "_DidKeyMethod", "options", "enableEncryptionKeyDerivation", "keyAlgorithm", "keySet", "publicKeyFormat", "portableDid", "multibaseId", "publicKeyJwk", "Jose", "defaultContext", "did", "enableExperimentalPublicKeyTypes", "document", "multibaseValue", "parseDid", "signatureVerificationMethod", "encryptionPublicKeyFormat", "encryptionVerificationMethod", "contextArray", "getVerificationMethodTypes", "typeName", "typeUrl", "verificationMethod", "rawPublicKeyBytes", "multicodecValue", "actualLength", "expectedLength", "kemMultibaseValue", "utils_exports", "jwkParams", "jsonWebKey", "publicEncryptionKey", "Ed25519", "multicodecName", "isValid", "Secp256k1", "keyPair", "EdDsaAlgorithm", "EcdsaAlgorithm", "privateKeyJwk", "didDocument", "verificationMethodId", "didUrl", "_", "parsedDid", "method", "scheme", "universalTypeOf", "DidKeyMethod", "import_buffer_polyfill", "import_buffer_polyfill", "DidResolverCacheNoop", "_key", "_value", "DidResolver", "options", "DidResolverCacheNoop", "resolver", "didUrl", "resolutionOptions", "parsedDid", "parseDid", "cachedResolutionResult", "resolutionResult", "import_buffer_polyfill", "import_ms", "import_level", "_DidResolverCacheLevel", "options", "location", "ttl", "ms", "did", "str", "cacheWrapper", "error", "value", "DidResolverCacheLevel", "import_buffer_polyfill"]
}
