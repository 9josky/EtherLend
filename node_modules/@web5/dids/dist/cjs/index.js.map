{
  "version": 3,
  "sources": ["../../../../node_modules/debug/src/common.js", "../../../../node_modules/debug/src/browser.js", "../../../../node_modules/has-flag/index.js", "../../../../node_modules/supports-color/index.js", "../../../../node_modules/debug/src/node.js", "../../../../node_modules/debug/src/index.js", "../../../../node_modules/randombytes/index.js", "../../../../node_modules/k-bucket/index.js", "../../../../node_modules/k-rpc-socket/node_modules/bencode/lib/util.js", "../../../../node_modules/k-rpc-socket/node_modules/bencode/lib/encode.js", "../../../../node_modules/k-rpc-socket/node_modules/bencode/lib/decode.js", "../../../../node_modules/k-rpc-socket/node_modules/bencode/lib/encoding-length.js", "../../../../node_modules/k-rpc-socket/node_modules/bencode/lib/index.js", "../../../../node_modules/k-rpc-socket/index.js", "../../../../node_modules/k-rpc/index.js", "../../../../node_modules/last-one-wins/index.js", "../../../../node_modules/inherits/inherits_browser.js", "../../../../node_modules/inherits/inherits.js", "../../../../node_modules/lru/index.js", "../../../../node_modules/b4a/index.js", "../../../../node_modules/record-cache/index.js", "../../../../node_modules/safety-catch/index.js", "../../../../node_modules/graceful-goodbye/index.js", "../../../../node_modules/uri-js/src/index.ts", "../../../../node_modules/uri-js/src/schemes/urn-uuid.ts", "../../../../node_modules/uri-js/src/schemes/urn.ts", "../../../../node_modules/uri-js/src/schemes/mailto.ts", "../../../../node_modules/uri-js/src/schemes/wss.ts", "../../../../node_modules/uri-js/src/schemes/ws.ts", "../../../../node_modules/uri-js/src/schemes/https.ts", "../../../../node_modules/uri-js/src/schemes/http.ts", "../../../../node_modules/uri-js/src/uri.ts", "../../../../node_modules/uri-js/node_modules/punycode/punycode.es6.js", "../../../../node_modules/uri-js/src/regexps-iri.ts", "../../../../node_modules/uri-js/src/regexps-uri.ts", "../../../../node_modules/uri-js/src/util.ts", "../../../../node_modules/canonicalize/lib/canonicalize.js", "../../../../node_modules/@multiformats/base-x/src/index.js", "../../../../node_modules/multibase/src/util.js", "../../../../node_modules/multibase/src/base.js", "../../../../node_modules/multibase/src/rfc4648.js", "../../../../node_modules/multibase/src/constants.js", "../../../../node_modules/multibase/src/index.js", "../../../../node_modules/multihashes/node_modules/varint/encode.js", "../../../../node_modules/multihashes/node_modules/varint/decode.js", "../../../../node_modules/multihashes/node_modules/varint/length.js", "../../../../node_modules/multihashes/node_modules/varint/index.js", "../../../../node_modules/multihashes/src/constants.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/vendor/base-x.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/bytes.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/bases/base.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/bases/identity.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/bases/base2.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/bases/base8.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/bases/base10.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/bases/base16.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/bases/base32.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/bases/base36.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/bases/base58.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/bases/base64.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/bases/base256emoji.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/vendor/varint.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/varint.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/hashes/digest.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/hashes/hasher.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/hashes/sha2.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/hashes/identity.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/codecs/raw.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/codecs/json.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/cid.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/index.js", "../../../../node_modules/uint8arrays/node_modules/multiformats/cjs/src/basics.js", "../../../../node_modules/uint8arrays/cjs/src/util/as-uint8array.js", "../../../../node_modules/uint8arrays/cjs/src/alloc.js", "../../../../node_modules/uint8arrays/cjs/src/util/bases.js", "../../../../node_modules/uint8arrays/cjs/src/to-string.js", "../../../../node_modules/uint8arrays/cjs/src/from-string.js", "../../../../node_modules/uint8arrays/cjs/src/concat.js", "../../../../node_modules/multihashes/src/index.js", "../../src/index.ts", "../../src/dht.ts", "../../../../node_modules/bittorrent-dht/client.js", "../../../../node_modules/uint8-util/util.js", "../../../../node_modules/uint8-util/_node.js", "../../../../node_modules/bittorrent-dht/node_modules/bencode/lib/util.js", "../../../../node_modules/bittorrent-dht/node_modules/bencode/lib/encode.js", "../../../../node_modules/bittorrent-dht/node_modules/bencode/lib/decode.js", "../../../../node_modules/bittorrent-dht/node_modules/bencode/lib/encoding-length.js", "../../../../node_modules/bittorrent-dht/node_modules/bencode/index.js", "../../../../node_modules/pkarr/lib/dht.js", "../../../../node_modules/pkarr/lib/tools.js", "../../../../node_modules/bencode/lib/util.js", "../../../../node_modules/bencode/lib/encode.js", "../../../../node_modules/bencode/lib/decode.js", "../../../../node_modules/bencode/lib/encoding-length.js", "../../../../node_modules/bencode/index.js", "../../../../node_modules/pkarr/index.js", "../../../../node_modules/pkarr/lib/signed_packet.js", "../../src/did-dht.ts", "../../src/utils.ts", "../../src/did-ion.ts", "../../../../node_modules/@decentralized-identity/ion-sdk/lib/ErrorCode.ts", "../../../../node_modules/@decentralized-identity/ion-sdk/lib/IonError.ts", "../../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/src/bytes.js", "../../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/src/bases/base.js", "../../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/src/bases/base64.js", "../../../../node_modules/@decentralized-identity/ion-sdk/lib/Encoder.ts", "../../../../node_modules/@decentralized-identity/ion-sdk/lib/IonRequest.ts", "../../../../node_modules/@decentralized-identity/ion-sdk/lib/enums/OperationKeyType.ts", "../../../../node_modules/@decentralized-identity/ion-sdk/lib/InputValidator.ts", "../../../../node_modules/@decentralized-identity/ion-sdk/lib/IonSdkConfig.ts", "../../../../node_modules/@decentralized-identity/ion-sdk/lib/JsonCanonicalizer.ts", "../../../../node_modules/@decentralized-identity/ion-sdk/lib/Multihash.ts", "../../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/src/hashes/sha2.js", "../../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/vendor/varint.js", "../../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/src/varint.js", "../../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/src/hashes/digest.js", "../../../../node_modules/@decentralized-identity/ion-sdk/node_modules/multiformats/src/hashes/hasher.js", "../../../../node_modules/@decentralized-identity/ion-sdk/lib/enums/OperationType.ts", "../../../../node_modules/@decentralized-identity/ion-sdk/lib/enums/PatchAction.ts", "../../../../node_modules/@decentralized-identity/ion-sdk/lib/IonDid.ts", "../../../../node_modules/@noble/ed25519/index.js", "../../../../node_modules/@noble/secp256k1/index.js", "../../../../node_modules/@decentralized-identity/ion-sdk/lib/enums/IonNetwork.ts", "../../../../node_modules/@decentralized-identity/ion-sdk/lib/enums/IonPublicKeyPurpose.ts", "../../src/did-key.ts", "../../src/resolver-cache-noop.ts", "../../src/did-resolver.ts", "../../src/resolver-cache-level.ts"],
  "sourcesContent": ["\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n", "'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n", "/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n", "/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n", "module.exports = require('crypto').randomBytes\n", "/*\nindex.js - Kademlia DHT K-bucket implementation as a binary tree.\n\nThe MIT License (MIT)\n\nCopyright (c) 2013-2021 Tristan Slominski\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n'use strict'\n\nconst randomBytes = require('randombytes')\nconst { EventEmitter } = require('events')\n\n/**\n * @param  {Uint8Array} array1\n * @param  {Uint8Array} array2\n * @return {Boolean}\n */\nfunction arrayEquals (array1, array2) {\n  if (array1 === array2) {\n    return true\n  }\n  if (array1.length !== array2.length) {\n    return false\n  }\n  for (let i = 0, length = array1.length; i < length; ++i) {\n    if (array1[i] !== array2[i]) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction createNode () {\n  return { contacts: [], dontSplit: false, left: null, right: null }\n}\n\nfunction ensureInt8 (name, val) {\n  if (!(val instanceof Uint8Array)) {\n    throw new TypeError(name + ' is not a Uint8Array')\n  }\n}\n\n/**\n * Implementation of a Kademlia DHT k-bucket used for storing\n * contact (peer node) information.\n *\n * @extends EventEmitter\n */\nclass KBucket extends EventEmitter {\n  /**\n   * `options`:\n   *   `distance`: _Function_\n   *     `function (firstId, secondId) { return distance }` An optional\n   *     `distance` function that gets two `id` Uint8Arrays\n   *     and return distance (as number) between them.\n   *   `arbiter`: _Function_ _(Default: vectorClock arbiter)_\n   *     `function (incumbent, candidate) { return contact; }` An optional\n   *     `arbiter` function that givent two `contact` objects with the same `id`\n   *     returns the desired object to be used for updating the k-bucket. For\n   *     more details, see [arbiter function](#arbiter-function).\n   *   `localNodeId`: _Uint8Array_ An optional Uint8Array representing the local node id.\n   *     If not provided, a local node id will be created via `randomBytes(20)`.\n   *     `metadata`: _Object_ _(Default: {})_ Optional satellite data to include\n   *     with the k-bucket. `metadata` property is guaranteed not be altered by,\n   *     it is provided as an explicit container for users of k-bucket to store\n   *     implementation-specific data.\n   *   `numberOfNodesPerKBucket`: _Integer_ _(Default: 20)_ The number of nodes\n   *     that a k-bucket can contain before being full or split.\n   *     `numberOfNodesToPing`: _Integer_ _(Default: 3)_ The number of nodes to\n   *     ping when a bucket that should not be split becomes full. KBucket will\n   *     emit a `ping` event that contains `numberOfNodesToPing` nodes that have\n   *     not been contacted the longest.\n   *\n   * @param {Object=} options optional\n   */\n  constructor (options = {}) {\n    super()\n\n    this.localNodeId = options.localNodeId || randomBytes(20)\n    this.numberOfNodesPerKBucket = options.numberOfNodesPerKBucket || 20\n    this.numberOfNodesToPing = options.numberOfNodesToPing || 3\n    this.distance = options.distance || KBucket.distance\n    // use an arbiter from options or vectorClock arbiter by default\n    this.arbiter = options.arbiter || KBucket.arbiter\n    this.metadata = Object.assign({}, options.metadata)\n\n    ensureInt8('option.localNodeId as parameter 1', this.localNodeId)\n\n    this.root = createNode()\n  }\n\n  /**\n   * Default arbiter function for contacts with the same id. Uses\n   * contact.vectorClock to select which contact to update the k-bucket with.\n   * Contact with larger vectorClock field will be selected. If vectorClock is\n   * the same, candidat will be selected.\n   *\n   * @param  {Object} incumbent Contact currently stored in the k-bucket.\n   * @param  {Object} candidate Contact being added to the k-bucket.\n   * @return {Object}           Contact to updated the k-bucket with.\n   */\n  static arbiter (incumbent, candidate) {\n    return incumbent.vectorClock > candidate.vectorClock ? incumbent : candidate\n  }\n\n  /**\n   * Default distance function. Finds the XOR\n   * distance between firstId and secondId.\n   *\n   * @param  {Uint8Array} firstId  Uint8Array containing first id.\n   * @param  {Uint8Array} secondId Uint8Array containing second id.\n   * @return {Number}              Integer The XOR distance between firstId\n   *                               and secondId.\n   */\n  static distance (firstId, secondId) {\n    let distance = 0\n    let i = 0\n    const min = Math.min(firstId.length, secondId.length)\n    const max = Math.max(firstId.length, secondId.length)\n    for (; i < min; ++i) {\n      distance = distance * 256 + (firstId[i] ^ secondId[i])\n    }\n    for (; i < max; ++i) distance = distance * 256 + 255\n    return distance\n  }\n\n  /**\n   * Adds a contact to the k-bucket.\n   *\n   * @param {Object} contact the contact object to add\n   */\n  add (contact) {\n    ensureInt8('contact.id', (contact || {}).id)\n\n    let bitIndex = 0\n    let node = this.root\n\n    while (node.contacts === null) {\n      // this is not a leaf node but an inner node with 'low' and 'high'\n      // branches; we will check the appropriate bit of the identifier and\n      // delegate to the appropriate node for further processing\n      node = this._determineNode(node, contact.id, bitIndex++)\n    }\n\n    // check if the contact already exists\n    const index = this._indexOf(node, contact.id)\n    if (index >= 0) {\n      this._update(node, index, contact)\n      return this\n    }\n\n    if (node.contacts.length < this.numberOfNodesPerKBucket) {\n      node.contacts.push(contact)\n      this.emit('added', contact)\n      return this\n    }\n\n    // the bucket is full\n    if (node.dontSplit) {\n      // we are not allowed to split the bucket\n      // we need to ping the first this.numberOfNodesToPing\n      // in order to determine if they are alive\n      // only if one of the pinged nodes does not respond, can the new contact\n      // be added (this prevents DoS flodding with new invalid contacts)\n      this.emit('ping', node.contacts.slice(0, this.numberOfNodesToPing), contact)\n      return this\n    }\n\n    this._split(node, bitIndex)\n    return this.add(contact)\n  }\n\n  /**\n   * Get the n closest contacts to the provided node id. \"Closest\" here means:\n   * closest according to the XOR metric of the contact node id.\n   *\n   * @param  {Uint8Array} id  Contact node id\n   * @param  {Number=} n      Integer (Default: Infinity) The maximum number of\n   *                          closest contacts to return\n   * @return {Array}          Array Maximum of n closest contacts to the node id\n   */\n  closest (id, n = Infinity) {\n    ensureInt8('id', id)\n\n    if ((!Number.isInteger(n) && n !== Infinity) || n <= 0) {\n      throw new TypeError('n is not positive number')\n    }\n\n    let contacts = []\n\n    for (let nodes = [this.root], bitIndex = 0; nodes.length > 0 && contacts.length < n;) {\n      const node = nodes.pop()\n      if (node.contacts === null) {\n        const detNode = this._determineNode(node, id, bitIndex++)\n        nodes.push(node.left === detNode ? node.right : node.left)\n        nodes.push(detNode)\n      } else {\n        contacts = contacts.concat(node.contacts)\n      }\n    }\n\n    return contacts\n      .map(a => [this.distance(a.id, id), a])\n      .sort((a, b) => a[0] - b[0])\n      .slice(0, n)\n      .map(a => a[1])\n  }\n\n  /**\n   * Counts the total number of contacts in the tree.\n   *\n   * @return {Number} The number of contacts held in the tree\n   */\n  count () {\n    // return this.toArray().length\n    let count = 0\n    for (const nodes = [this.root]; nodes.length > 0;) {\n      const node = nodes.pop()\n      if (node.contacts === null) nodes.push(node.right, node.left)\n      else count += node.contacts.length\n    }\n    return count\n  }\n\n  /**\n   * Determines whether the id at the bitIndex is 0 or 1.\n   * Return left leaf if `id` at `bitIndex` is 0, right leaf otherwise\n   *\n   * @param  {Object} node     internal object that has 2 leafs: left and right\n   * @param  {Uint8Array} id   Id to compare localNodeId with.\n   * @param  {Number} bitIndex Integer (Default: 0) The bit index to which bit\n   *                           to check in the id Uint8Array.\n   * @return {Object}          left leaf if id at bitIndex is 0, right leaf otherwise.\n   */\n  _determineNode (node, id, bitIndex) {\n    // **NOTE** remember that id is a Uint8Array and has granularity of\n    // bytes (8 bits), whereas the bitIndex is the _bit_ index (not byte)\n\n    // id's that are too short are put in low bucket (1 byte = 8 bits)\n    // (bitIndex >> 3) finds how many bytes the bitIndex describes\n    // bitIndex % 8 checks if we have extra bits beyond byte multiples\n    // if number of bytes is <= no. of bytes described by bitIndex and there\n    // are extra bits to consider, this means id has less bits than what\n    // bitIndex describes, id therefore is too short, and will be put in low\n    // bucket\n    const bytesDescribedByBitIndex = bitIndex >> 3\n    const bitIndexWithinByte = bitIndex % 8\n    if ((id.length <= bytesDescribedByBitIndex) && (bitIndexWithinByte !== 0)) {\n      return node.left\n    }\n\n    const byteUnderConsideration = id[bytesDescribedByBitIndex]\n\n    // byteUnderConsideration is an integer from 0 to 255 represented by 8 bits\n    // where 255 is 11111111 and 0 is 00000000\n    // in order to find out whether the bit at bitIndexWithinByte is set\n    // we construct (1 << (7 - bitIndexWithinByte)) which will consist\n    // of all bits being 0, with only one bit set to 1\n    // for example, if bitIndexWithinByte is 3, we will construct 00010000 by\n    // (1 << (7 - 3)) -> (1 << 4) -> 16\n    if (byteUnderConsideration & (1 << (7 - bitIndexWithinByte))) {\n      return node.right\n    }\n\n    return node.left\n  }\n\n  /**\n   * Get a contact by its exact ID.\n   * If this is a leaf, loop through the bucket contents and return the correct\n   * contact if we have it or null if not. If this is an inner node, determine\n   * which branch of the tree to traverse and repeat.\n   *\n   * @param  {Uint8Array} id The ID of the contact to fetch.\n   * @return {Object|Null}   The contact if available, otherwise null\n   */\n  get (id) {\n    ensureInt8('id', id)\n\n    let bitIndex = 0\n\n    let node = this.root\n    while (node.contacts === null) {\n      node = this._determineNode(node, id, bitIndex++)\n    }\n\n    // index of uses contact id for matching\n    const index = this._indexOf(node, id)\n    return index >= 0 ? node.contacts[index] : null\n  }\n\n  /**\n   * Returns the index of the contact with provided\n   * id if it exists, returns -1 otherwise.\n   *\n   * @param  {Object} node    internal object that has 2 leafs: left and right\n   * @param  {Uint8Array} id  Contact node id.\n   * @return {Number}         Integer Index of contact with provided id if it\n   *                          exists, -1 otherwise.\n   */\n  _indexOf (node, id) {\n    for (let i = 0; i < node.contacts.length; ++i) {\n      if (arrayEquals(node.contacts[i].id, id)) return i\n    }\n\n    return -1\n  }\n\n  /**\n   * Removes contact with the provided id.\n   *\n   * @param  {Uint8Array} id The ID of the contact to remove.\n   * @return {Object}        The k-bucket itself.\n   */\n  remove (id) {\n    ensureInt8('the id as parameter 1', id)\n\n    let bitIndex = 0\n    let node = this.root\n\n    while (node.contacts === null) {\n      node = this._determineNode(node, id, bitIndex++)\n    }\n\n    const index = this._indexOf(node, id)\n    if (index >= 0) {\n      const contact = node.contacts.splice(index, 1)[0]\n      this.emit('removed', contact)\n    }\n\n    return this\n  }\n\n  /**\n   * Splits the node, redistributes contacts to the new nodes, and marks the\n   * node that was split as an inner node of the binary tree of nodes by\n   * setting this.root.contacts = null\n   *\n   * @param  {Object} node     node for splitting\n   * @param  {Number} bitIndex the bitIndex to which byte to check in the\n   *                           Uint8Array for navigating the binary tree\n   */\n  _split (node, bitIndex) {\n    node.left = createNode()\n    node.right = createNode()\n\n    // redistribute existing contacts amongst the two newly created nodes\n    for (const contact of node.contacts) {\n      this._determineNode(node, contact.id, bitIndex).contacts.push(contact)\n    }\n\n    node.contacts = null // mark as inner tree node\n\n    // don't split the \"far away\" node\n    // we check where the local node would end up and mark the other one as\n    // \"dontSplit\" (i.e. \"far away\")\n    const detNode = this._determineNode(node, this.localNodeId, bitIndex)\n    const otherNode = node.left === detNode ? node.right : node.left\n    otherNode.dontSplit = true\n  }\n\n  /**\n   * Returns all the contacts contained in the tree as an array.\n   * If this is a leaf, return a copy of the bucket. If this is not a leaf,\n   * return the union of the low and high branches (themselves also as arrays).\n   *\n   * @return {Array} All of the contacts in the tree, as an array\n   */\n  toArray () {\n    let result = []\n    for (const nodes = [this.root]; nodes.length > 0;) {\n      const node = nodes.pop()\n      if (node.contacts === null) nodes.push(node.right, node.left)\n      else result = result.concat(node.contacts)\n    }\n    return result\n  }\n\n  /**\n   * Similar to `toArray()` but instead of buffering everything up into an\n   * array before returning it, yields contacts as they are encountered while\n   * walking the tree.\n   *\n   * @return {Iterable} All of the contacts in the tree, as an iterable\n   */\n  * toIterable () {\n    for (const nodes = [this.root]; nodes.length > 0;) {\n      const node = nodes.pop()\n      if (node.contacts === null) {\n        nodes.push(node.right, node.left)\n      } else {\n        yield * node.contacts\n      }\n    }\n  }\n\n  /**\n   * Updates the contact selected by the arbiter.\n   * If the selection is our old contact and the candidate is some new contact\n   * then the new contact is abandoned (not added).\n   * If the selection is our old contact and the candidate is our old contact\n   * then we are refreshing the contact and it is marked as most recently\n   * contacted (by being moved to the right/end of the bucket array).\n   * If the selection is our new contact, the old contact is removed and the new\n   * contact is marked as most recently contacted.\n   *\n   * @param  {Object} node    internal object that has 2 leafs: left and right\n   * @param  {Number} index   the index in the bucket where contact exists\n   *                          (index has already been computed in a previous\n   *                          calculation)\n   * @param  {Object} contact The contact object to update.\n   */\n  _update (node, index, contact) {\n    // sanity check\n    if (!arrayEquals(node.contacts[index].id, contact.id)) {\n      throw new Error('wrong index for _update')\n    }\n\n    const incumbent = node.contacts[index]\n    const selection = this.arbiter(incumbent, contact)\n    // if the selection is our old contact and the candidate is some new\n    // contact, then there is nothing to do\n    if (selection === incumbent && incumbent !== contact) return\n\n    node.contacts.splice(index, 1) // remove old contact\n    node.contacts.push(selection) // add more recent contact version\n    this.emit('updated', incumbent, selection)\n  }\n}\n\nmodule.exports = KBucket\n", "const util = module.exports\n\nutil.digitCount = function digitCount (value) {\n  // Add a digit for negative numbers, as the sign will be prefixed\n  const sign = value < 0 ? 1 : 0\n  // Guard against negative numbers & zero going into log10(),\n  // as that would return -Infinity\n  value = Math.abs(Number(value || 1))\n  return Math.floor(Math.log10(value)) + 1 + sign\n}\n\nutil.getType = function getType (value) {\n  if (Buffer.isBuffer(value)) return 'buffer'\n  if (ArrayBuffer.isView(value)) return 'arraybufferview'\n  if (Array.isArray(value)) return 'array'\n  if (value instanceof Number) return 'number'\n  if (value instanceof Boolean) return 'boolean'\n  if (value instanceof Set) return 'set'\n  if (value instanceof Map) return 'map'\n  if (value instanceof String) return 'string'\n  if (value instanceof ArrayBuffer) return 'arraybuffer'\n  return typeof value\n}\n", "const { getType } = require('./util.js')\n\n/**\n * Encodes data in bencode.\n *\n * @param  {Buffer|Array|String|Object|Number|Boolean} data\n * @return {Buffer}\n */\nfunction encode (data, buffer, offset) {\n  const buffers = []\n  let result = null\n\n  encode._encode(buffers, data)\n  result = Buffer.concat(buffers)\n  encode.bytes = result.length\n\n  if (Buffer.isBuffer(buffer)) {\n    result.copy(buffer, offset)\n    return buffer\n  }\n\n  return result\n}\n\nencode.bytes = -1\nencode._floatConversionDetected = false\n\nencode._encode = function (buffers, data) {\n  if (data == null) { return }\n\n  switch (getType(data)) {\n    case 'buffer': encode.buffer(buffers, data); break\n    case 'object': encode.dict(buffers, data); break\n    case 'map': encode.dictMap(buffers, data); break\n    case 'array': encode.list(buffers, data); break\n    case 'set': encode.listSet(buffers, data); break\n    case 'string': encode.string(buffers, data); break\n    case 'number': encode.number(buffers, data); break\n    case 'boolean': encode.number(buffers, data); break\n    case 'arraybufferview': encode.buffer(buffers, Buffer.from(data.buffer, data.byteOffset, data.byteLength)); break\n    case 'arraybuffer': encode.buffer(buffers, Buffer.from(data)); break\n  }\n}\n\nconst buffE = Buffer.from('e')\nconst buffD = Buffer.from('d')\nconst buffL = Buffer.from('l')\n\nencode.buffer = function (buffers, data) {\n  buffers.push(Buffer.from(data.length + ':'), data)\n}\n\nencode.string = function (buffers, data) {\n  buffers.push(Buffer.from(Buffer.byteLength(data) + ':' + data))\n}\n\nencode.number = function (buffers, data) {\n  const maxLo = 0x80000000\n  const hi = (data / maxLo) << 0\n  const lo = (data % maxLo) << 0\n  const val = hi * maxLo + lo\n\n  buffers.push(Buffer.from('i' + val + 'e'))\n\n  if (val !== data && !encode._floatConversionDetected) {\n    encode._floatConversionDetected = true\n    console.warn(\n      'WARNING: Possible data corruption detected with value \"' + data + '\":',\n      'Bencoding only defines support for integers, value was converted to \"' + val + '\"'\n    )\n    console.trace()\n  }\n}\n\nencode.dict = function (buffers, data) {\n  buffers.push(buffD)\n\n  let j = 0\n  let k\n  // fix for issue #13 - sorted dicts\n  const keys = Object.keys(data).sort()\n  const kl = keys.length\n\n  for (; j < kl; j++) {\n    k = keys[j]\n    if (data[k] == null) continue\n    encode.string(buffers, k)\n    encode._encode(buffers, data[k])\n  }\n\n  buffers.push(buffE)\n}\n\nencode.dictMap = function (buffers, data) {\n  buffers.push(buffD)\n\n  const keys = Array.from(data.keys()).sort()\n\n  for (const key of keys) {\n    if (data.get(key) == null) continue\n    Buffer.isBuffer(key)\n      ? encode._encode(buffers, key)\n      : encode.string(buffers, String(key))\n    encode._encode(buffers, data.get(key))\n  }\n\n  buffers.push(buffE)\n}\n\nencode.list = function (buffers, data) {\n  let i = 0\n  const c = data.length\n  buffers.push(buffL)\n\n  for (; i < c; i++) {\n    if (data[i] == null) continue\n    encode._encode(buffers, data[i])\n  }\n\n  buffers.push(buffE)\n}\n\nencode.listSet = function (buffers, data) {\n  buffers.push(buffL)\n\n  for (const item of data) {\n    if (item == null) continue\n    encode._encode(buffers, item)\n  }\n\n  buffers.push(buffE)\n}\n\nmodule.exports = encode\n", "const INTEGER_START = 0x69 // 'i'\nconst STRING_DELIM = 0x3A // ':'\nconst DICTIONARY_START = 0x64 // 'd'\nconst LIST_START = 0x6C // 'l'\nconst END_OF_TYPE = 0x65 // 'e'\n\n/**\n * replaces parseInt(buffer.toString('ascii', start, end)).\n * For strings with less then ~30 charachters, this is actually a lot faster.\n *\n * @param {Buffer} data\n * @param {Number} start\n * @param {Number} end\n * @return {Number} calculated number\n */\nfunction getIntFromBuffer (buffer, start, end) {\n  let sum = 0\n  let sign = 1\n\n  for (let i = start; i < end; i++) {\n    const num = buffer[i]\n\n    if (num < 58 && num >= 48) {\n      sum = sum * 10 + (num - 48)\n      continue\n    }\n\n    if (i === start && num === 43) { // +\n      continue\n    }\n\n    if (i === start && num === 45) { // -\n      sign = -1\n      continue\n    }\n\n    if (num === 46) { // .\n      // its a float. break here.\n      break\n    }\n\n    throw new Error('not a number: buffer[' + i + '] = ' + num)\n  }\n\n  return sum * sign\n}\n\n/**\n * Decodes bencoded data.\n *\n * @param  {Buffer} data\n * @param  {Number} start (optional)\n * @param  {Number} end (optional)\n * @param  {String} encoding (optional)\n * @return {Object|Array|Buffer|String|Number}\n */\nfunction decode (data, start, end, encoding) {\n  if (data == null || data.length === 0) {\n    return null\n  }\n\n  if (typeof start !== 'number' && encoding == null) {\n    encoding = start\n    start = undefined\n  }\n\n  if (typeof end !== 'number' && encoding == null) {\n    encoding = end\n    end = undefined\n  }\n\n  decode.position = 0\n  decode.encoding = encoding || null\n\n  decode.data = !(Buffer.isBuffer(data))\n    ? Buffer.from(data)\n    : data.slice(start, end)\n\n  decode.bytes = decode.data.length\n\n  return decode.next()\n}\n\ndecode.bytes = 0\ndecode.position = 0\ndecode.data = null\ndecode.encoding = null\n\ndecode.next = function () {\n  switch (decode.data[decode.position]) {\n    case DICTIONARY_START:\n      return decode.dictionary()\n    case LIST_START:\n      return decode.list()\n    case INTEGER_START:\n      return decode.integer()\n    default:\n      return decode.buffer()\n  }\n}\n\ndecode.find = function (chr) {\n  let i = decode.position\n  const c = decode.data.length\n  const d = decode.data\n\n  while (i < c) {\n    if (d[i] === chr) return i\n    i++\n  }\n\n  throw new Error(\n    'Invalid data: Missing delimiter \"' +\n    String.fromCharCode(chr) + '\" [0x' +\n    chr.toString(16) + ']'\n  )\n}\n\ndecode.dictionary = function () {\n  decode.position++\n\n  const dict = {}\n\n  while (decode.data[decode.position] !== END_OF_TYPE) {\n    dict[decode.buffer()] = decode.next()\n  }\n\n  decode.position++\n\n  return dict\n}\n\ndecode.list = function () {\n  decode.position++\n\n  const lst = []\n\n  while (decode.data[decode.position] !== END_OF_TYPE) {\n    lst.push(decode.next())\n  }\n\n  decode.position++\n\n  return lst\n}\n\ndecode.integer = function () {\n  const end = decode.find(END_OF_TYPE)\n  const number = getIntFromBuffer(decode.data, decode.position + 1, end)\n\n  decode.position += end + 1 - decode.position\n\n  return number\n}\n\ndecode.buffer = function () {\n  let sep = decode.find(STRING_DELIM)\n  const length = getIntFromBuffer(decode.data, decode.position, sep)\n  const end = ++sep + length\n\n  decode.position = end\n\n  return decode.encoding\n    ? decode.data.toString(decode.encoding, sep, end)\n    : decode.data.slice(sep, end)\n}\n\nmodule.exports = decode\n", "const { digitCount, getType } = require('./util.js')\n\nfunction listLength (list) {\n  let length = 1 + 1 // type marker + end-of-type marker\n\n  for (const value of list) {\n    length += encodingLength(value)\n  }\n\n  return length\n}\n\nfunction mapLength (map) {\n  let length = 1 + 1 // type marker + end-of-type marker\n\n  for (const [key, value] of map) {\n    const keyLength = Buffer.byteLength(key)\n    length += digitCount(keyLength) + 1 + keyLength\n    length += encodingLength(value)\n  }\n\n  return length\n}\n\nfunction objectLength (value) {\n  let length = 1 + 1 // type marker + end-of-type marker\n  const keys = Object.keys(value)\n\n  for (let i = 0; i < keys.length; i++) {\n    const keyLength = Buffer.byteLength(keys[i])\n    length += digitCount(keyLength) + 1 + keyLength\n    length += encodingLength(value[keys[i]])\n  }\n\n  return length\n}\n\nfunction stringLength (value) {\n  const length = Buffer.byteLength(value)\n  return digitCount(length) + 1 + length\n}\n\nfunction arrayBufferLength (value) {\n  const length = value.byteLength - value.byteOffset\n  return digitCount(length) + 1 + length\n}\n\nfunction encodingLength (value) {\n  const length = 0\n\n  if (value == null) return length\n\n  const type = getType(value)\n\n  switch (type) {\n    case 'buffer': return digitCount(value.length) + 1 + value.length\n    case 'arraybufferview': return arrayBufferLength(value)\n    case 'string': return stringLength(value)\n    case 'array': case 'set': return listLength(value)\n    case 'number': return 1 + digitCount(Math.floor(value)) + 1\n    case 'bigint': return 1 + value.toString().length + 1\n    case 'object': return objectLength(value)\n    case 'map': return mapLength(value)\n    default:\n      throw new TypeError(`Unsupported value of type \"${type}\"`)\n  }\n}\n\nmodule.exports = encodingLength\n", "const bencode = module.exports\n\nbencode.encode = require('./encode.js')\nbencode.decode = require('./decode.js')\n\n/**\n * Determines the amount of bytes\n * needed to encode the given value\n * @param  {Object|Array|Buffer|String|Number|Boolean} value\n * @return {Number} byteCount\n */\nbencode.byteLength = bencode.encodingLength = require('./encoding-length.js')\n", "var dgram = require('dgram')\nvar bencode = require('bencode')\nvar isIP = require('net').isIP\nvar dns = require('dns')\nvar util = require('util')\nvar events = require('events')\n\nvar ETIMEDOUT = new Error('Query timed out')\nETIMEDOUT.code = 'ETIMEDOUT'\n\nvar EUNEXPECTEDNODE = new Error('Unexpected node id')\nEUNEXPECTEDNODE.code = 'EUNEXPECTEDNODE'\n\nmodule.exports = RPC\n\nfunction RPC (opts) {\n  if (!(this instanceof RPC)) return new RPC(opts)\n  if (!opts) opts = {}\n\n  var self = this\n\n  this.timeout = opts.timeout || 2000\n  this.inflight = 0\n  this.destroyed = false\n  this.isIP = opts.isIP || isIP\n  this.socket = opts.socket || dgram.createSocket('udp4')\n  this.socket.on('message', onmessage)\n  this.socket.on('error', onerror)\n  this.socket.on('listening', onlistening)\n\n  this._tick = 0\n  this._ids = []\n  this._reqs = []\n  this._timer = setInterval(check, Math.floor(this.timeout / 4))\n\n  events.EventEmitter.call(this)\n\n  function check () {\n    var missing = self.inflight\n    if (!missing) return\n    for (var i = 0; i < self._reqs.length; i++) {\n      var req = self._reqs[i]\n      if (!req) continue\n      if (req.ttl) req.ttl--\n      else self._cancel(i, ETIMEDOUT)\n      if (!--missing) return\n    }\n  }\n\n  function onlistening () {\n    self.emit('listening')\n  }\n\n  function onerror (err) {\n    if (err.code === 'EACCES' || err.code === 'EADDRINUSE') self.emit('error', err)\n    else self.emit('warning', err)\n  }\n\n  function onmessage (buf, rinfo) {\n    if (self.destroyed) return\n    if (!rinfo.port) return // seems like a node bug that this is nessesary?\n\n    try {\n      var message = bencode.decode(buf)\n    } catch (e) {\n      return self.emit('warning', e)\n    }\n\n    var type = message && message.y && message.y.toString()\n\n    if (type === 'r' || type === 'e') {\n      if (!Buffer.isBuffer(message.t)) return\n\n      try {\n        var tid = message.t.readUInt16BE(0)\n      } catch (err) {\n        return self.emit('warning', err)\n      }\n\n      var index = self._ids.indexOf(tid)\n      if (index === -1 || tid === 0) {\n        self.emit('response', message, rinfo)\n        self.emit('warning', new Error('Unexpected transaction id: ' + tid))\n        return\n      }\n\n      var req = self._reqs[index]\n      if (req.peer.host !== rinfo.address) {\n        self.emit('response', message, rinfo)\n        self.emit('warning', new Error('Out of order response'))\n        return\n      }\n\n      self._ids[index] = 0\n      self._reqs[index] = null\n      self.inflight--\n\n      if (type === 'e') {\n        var isArray = Array.isArray(message.e)\n        var err = new Error(isArray ? message.e.join(' ') : 'Unknown error')\n        err.code = isArray && message.e.length && typeof message.e[0] === 'number' ? message.e[0] : 0\n        req.callback(err, message, rinfo, req.message)\n        self.emit('update')\n        self.emit('postupdate')\n        return\n      }\n\n      var rid = message.r && message.r.id\n      if (req.peer && req.peer.id && rid && !req.peer.id.equals(rid)) {\n        req.callback(EUNEXPECTEDNODE, null, rinfo)\n        self.emit('update')\n        self.emit('postupdate')\n        return\n      }\n\n      req.callback(null, message, rinfo, req.message)\n      self.emit('update')\n      self.emit('postupdate')\n      self.emit('response', message, rinfo)\n    } else if (type === 'q') {\n      self.emit('query', message, rinfo)\n    } else {\n      self.emit('warning', new Error('Unknown type: ' + type))\n    }\n  }\n}\n\nutil.inherits(RPC, events.EventEmitter)\n\nRPC.prototype.address = function () {\n  return this.socket.address()\n}\n\nRPC.prototype.response = function (peer, req, res, cb) {\n  this.send(peer, { t: req.t, y: 'r', r: res }, cb)\n}\n\nRPC.prototype.error = function (peer, req, error, cb) {\n  this.send(peer, { t: req.t, y: 'e', e: [].concat(error.message || error) }, cb)\n}\n\nRPC.prototype.send = function (peer, message, cb) {\n  var buf = bencode.encode(message)\n  this.socket.send(buf, 0, buf.length, peer.port, peer.address || peer.host, cb || noop)\n}\n\n// bind([port], [address], [callback])\nRPC.prototype.bind = function () {\n  this.socket.bind.apply(this.socket, arguments)\n}\n\nRPC.prototype.destroy = function (cb) {\n  this.destroyed = true\n  clearInterval(this._timer)\n  if (cb) this.socket.on('close', cb)\n  for (var i = 0; i < this._ids.length; i++) this._cancel(i)\n  this.socket.close()\n}\n\nRPC.prototype.query = function (peer, query, cb) {\n  if (!cb) cb = noop\n  if (!this.isIP(peer.host)) return this._resolveAndQuery(peer, query, cb)\n\n  var message = {\n    t: Buffer.allocUnsafe(2),\n    y: 'q',\n    q: query.q,\n    a: query.a\n  }\n\n  var req = {\n    ttl: 4,\n    peer: peer,\n    message: message,\n    callback: cb\n  }\n\n  if (this._tick === 65535) this._tick = 0\n  var tid = ++this._tick\n\n  var free = this._ids.indexOf(0)\n  if (free === -1) free = this._ids.push(0) - 1\n  this._ids[free] = tid\n  while (this._reqs.length < free) this._reqs.push(null)\n  this._reqs[free] = req\n\n  this.inflight++\n  message.t.writeUInt16BE(tid, 0)\n  this.send(peer, message)\n  return tid\n}\n\nRPC.prototype.cancel = function (tid, err) {\n  var index = this._ids.indexOf(tid)\n  if (index > -1) this._cancel(index, err)\n}\n\nRPC.prototype._cancel = function (index, err) {\n  var req = this._reqs[index]\n  this._ids[index] = 0\n  this._reqs[index] = null\n  if (req) {\n    this.inflight--\n    req.callback(err || new Error('Query was cancelled'), null, req.peer)\n    this.emit('update')\n    this.emit('postupdate')\n  }\n}\n\nRPC.prototype._resolveAndQuery = function (peer, query, cb) {\n  var self = this\n\n  dns.lookup(peer.host, function (err, ip) {\n    if (err) return cb(err)\n    if (self.destroyed) return cb(new Error('k-rpc-socket is destroyed'))\n    self.query({ host: ip, port: peer.port }, query, cb)\n  })\n}\n\nfunction noop () {}\n", "var socket = require('k-rpc-socket')\nvar KBucket = require('k-bucket')\nvar events = require('events')\nvar randombytes = require('randombytes')\nvar util = require('util')\n\nvar K = 20\nvar MAX_CONCURRENCY = 16\nvar BOOTSTRAP_NODES = [\n  { host: 'router.bittorrent.com', port: 6881 },\n  { host: 'router.utorrent.com', port: 6881 },\n  { host: 'dht.transmissionbt.com', port: 6881 }\n]\n\nmodule.exports = RPC\n\nfunction RPC (opts) {\n  if (!(this instanceof RPC)) return new RPC(opts)\n  if (!opts) opts = {}\n\n  var self = this\n\n  this._idLength = opts.idLength || 20\n  this.id = toBuffer(opts.id || opts.nodeId || randombytes(this._idLength))\n  this.socket = opts.krpcSocket || socket(opts)\n  this.bootstrap = toBootstrapArray(opts.nodes || opts.bootstrap)\n  this.concurrency = opts.concurrency || MAX_CONCURRENCY\n  this.backgroundConcurrency = opts.backgroundConcurrency || (this.concurrency / 4) | 0\n  this.k = opts.k || K\n  this.destroyed = false\n\n  this.pending = []\n  this.nodes = null\n\n  this.socket.setMaxListeners(0)\n  this.socket.on('query', onquery)\n  this.socket.on('response', onresponse)\n  this.socket.on('warning', onwarning)\n  this.socket.on('error', onerror)\n  this.socket.on('update', onupdate)\n  this.socket.on('listening', onlistening)\n\n  events.EventEmitter.call(this)\n  this.clear()\n\n  function onupdate () {\n    while (self.pending.length && self.socket.inflight < self.concurrency) {\n      var next = self.pending.shift()\n      self.query(next[0], next[1], next[2])\n    }\n  }\n\n  function onerror (err) {\n    self.emit('error', err)\n  }\n\n  function onlistening () {\n    self.emit('listening')\n  }\n\n  function onwarning (err) {\n    self.emit('warning', err)\n  }\n\n  function onquery (query, peer) {\n    addNode(query.a, peer)\n    self.emit('query', query, peer)\n  }\n\n  function onresponse (reply, peer) {\n    addNode(reply.r, peer)\n  }\n\n  function addNode (data, peer) {\n    if (data && isNodeId(data.id, self._idLength) && !data.id.equals(self.id)) {\n      var old = self.nodes.get(data.id)\n      if (old) {\n        old.seen = Date.now()\n        return\n      }\n      self._addNode({\n        id: data.id,\n        host: peer.address || peer.host,\n        port: peer.port,\n        distance: 0,\n        seen: Date.now()\n      })\n    }\n  }\n}\n\nutil.inherits(RPC, events.EventEmitter)\n\nRPC.prototype.response = function (node, query, response, nodes, cb) {\n  if (typeof nodes === 'function') {\n    cb = nodes\n    nodes = null\n  }\n\n  if (!response.id) response.id = this.id\n  if (nodes) response.nodes = encodeNodes(nodes, this._idLength)\n  this.socket.response(node, query, response, cb)\n}\n\nRPC.prototype.error = function (node, query, error, cb) {\n  this.socket.error(node, query, error, cb)\n}\n\n// bind([port], [address], [callback])\nRPC.prototype.bind = function () {\n  this.socket.bind.apply(this.socket, arguments)\n}\n\nRPC.prototype.address = function () {\n  return this.socket.address()\n}\n\nRPC.prototype.queryAll = function (nodes, message, visit, cb) {\n  if (!message.a) message.a = {}\n  if (!message.a.id) message.a.id = this.id\n\n  var stop = false\n  var missing = nodes.length\n  var hits = 0\n  var error = null\n\n  if (!missing) return cb(new Error('No nodes to query'), 0)\n\n  for (var i = 0; i < nodes.length; i++) {\n    this.query(nodes[i], message, done)\n  }\n\n  function done (err, res, peer) {\n    if (!err) hits++\n    else if (err.code >= 300 && err.code < 400) error = err\n    if (!err && !stop) {\n      if (visit && visit(res, peer) === false) stop = true\n    }\n    if (!--missing) cb(hits ? null : error || new Error('All queries failed'), hits)\n  }\n}\n\nRPC.prototype.query = function (node, message, cb) {\n  if (this.socket.inflight >= this.concurrency) {\n    this.pending.push([node, message, cb])\n  } else {\n    if (!message.a) message.a = {}\n    if (!message.a.id) message.a.id = this.id\n    if (node.token) message.a.token = node.token\n    this.socket.query(node, message, cb)\n  }\n}\n\nRPC.prototype.destroy = function (cb) {\n  this.destroyed = true\n  this.socket.destroy(cb)\n}\n\nRPC.prototype.clear = function () {\n  var self = this\n\n  this.nodes = new KBucket({\n    localNodeId: this.id,\n    numberOfNodesPerKBucket: this.k,\n    numberOfNodesToPing: this.concurrency\n  })\n\n  this.nodes.on('ping', onping)\n\n  function onping (older, newer) {\n    self.emit('ping', older, function swap (deadNode) {\n      if (!deadNode) return\n      if (deadNode.id) self.nodes.remove(deadNode.id)\n      self._addNode(newer)\n    })\n  }\n}\n\nRPC.prototype.populate = function (target, message, cb) {\n  this._closest(target, message, true, null, cb)\n}\n\nRPC.prototype.closest = function (target, message, visit, cb) {\n  this._closest(target, message, false, visit, cb)\n}\n\nRPC.prototype._addNode = function (node) {\n  var old = this.nodes.get(node.id)\n  this.nodes.add(node)\n  if (!old) this.emit('node', node)\n}\n\nRPC.prototype._closest = function (target, message, background, visit, cb) {\n  if (!cb) cb = noop\n\n  var self = this\n  var count = 0\n  var queried = {}\n  var pending = 0\n  var once = true\n  var stop = false\n\n  if (!message.a) message.a = {}\n  if (!message.a.id) message.a.id = this.id\n\n  var table = new KBucket({\n    localNodeId: target,\n    numberOfNodesPerKBucket: this.k,\n    numberOfNodesToPing: this.concurrency\n  })\n\n  var evt = background ? 'postupdate' : 'update'\n  this.socket.on(evt, kick)\n  kick()\n\n  function kick () {\n    if (self.destroyed || self.socket.inflight >= self.concurrency) return\n\n    var otherInflight = self.pending.length + self.socket.inflight - pending\n    if (background && self.socket.inflight >= self.backgroundConcurrency && otherInflight) return\n\n    var closest = table.closest(target, self.k)\n    if (!closest.length || closest.length < self.bootstrap.length) {\n      closest = self.nodes.closest(target, self.k)\n      if (!closest.length || closest.length < self.bootstrap.length) bootstrap()\n    }\n\n    for (var i = 0; i < closest.length; i++) {\n      if (stop) break\n      if (self.socket.inflight >= self.concurrency) return\n\n      var peer = closest[i]\n      var id = peer.host + ':' + peer.port\n      if (queried[id]) continue\n      queried[id] = true\n\n      pending++\n      self.socket.query(peer, message, afterQuery)\n    }\n\n    if (!pending) {\n      self.socket.removeListener(evt, kick)\n      process.nextTick(done)\n    }\n  }\n\n  function done () {\n    cb(null, count)\n  }\n\n  function bootstrap () {\n    if (!once) return\n    once = false\n    self.bootstrap.forEach(function (peer) {\n      pending++\n      self.socket.query(peer, message, afterQuery)\n    })\n  }\n\n  function afterQuery (err, res, peer) {\n    pending--\n    if (peer) queried[(peer.address || peer.host) + ':' + peer.port] = true // need this for bootstrap nodes\n\n    if (peer && peer.id && self.nodes.get(peer.id)) {\n      if (err && (err.code === 'EUNEXPECTEDNODE' || err.code === 'ETIMEDOUT')) {\n        self.nodes.remove(peer.id)\n      }\n    }\n\n    var r = res && res.r\n    if (!r) return kick()\n\n    if (!err && isNodeId(r.id, self._idLength)) {\n      count++\n      add({\n        id: r.id,\n        port: peer.port,\n        host: peer.host || peer.address,\n        distance: 0\n      })\n    }\n\n    var nodes = r.nodes ? parseNodes(r.nodes, self._idLength) : []\n    for (var i = 0; i < nodes.length; i++) add(nodes[i])\n\n    if (visit && visit(res, peer) === false) stop = true\n\n    kick()\n  }\n\n  function add (node) {\n    if (node.id.equals(self.id)) return\n    table.add(node)\n  }\n}\n\nfunction toBootstrapArray (val) {\n  if (val === false) return []\n  if (val === true) return BOOTSTRAP_NODES\n  return [].concat(val || BOOTSTRAP_NODES).map(parsePeer)\n}\n\nfunction isNodeId (id, idLength) {\n  return id && Buffer.isBuffer(id) && id.length === idLength\n}\n\nfunction encodeNodes (nodes, idLength) {\n  var buf = Buffer.allocUnsafe(nodes.length * (idLength + 6))\n  var ptr = 0\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i]\n    if (!isNodeId(node.id, idLength)) continue\n    node.id.copy(buf, ptr)\n    ptr += idLength\n    var ip = (node.host || node.address).split('.')\n    for (var j = 0; j < 4; j++) buf[ptr++] = parseInt(ip[j] || 0, 10)\n    buf.writeUInt16BE(node.port, ptr)\n    ptr += 2\n  }\n\n  if (ptr === buf.length) return buf\n  return buf.slice(0, ptr)\n}\n\nfunction parseNodes (buf, idLength) {\n  var contacts = []\n\n  try {\n    for (var i = 0; i < buf.length; i += (idLength + 6)) {\n      var port = buf.readUInt16BE(i + (idLength + 4))\n      if (!port) continue\n      contacts.push({\n        id: buf.slice(i, i + idLength),\n        host: parseIp(buf, i + idLength),\n        port: port,\n        distance: 0,\n        token: null\n      })\n    }\n  } catch (err) {\n    // do nothing\n  }\n\n  return contacts\n}\n\nfunction parseIp (buf, offset) {\n  return buf[offset++] + '.' + buf[offset++] + '.' + buf[offset++] + '.' + buf[offset++]\n}\n\nfunction parsePeer (peer) {\n  if (typeof peer === 'string') return { host: peer.split(':')[0], port: Number(peer.split(':')[1]) }\n  return peer\n}\n\nfunction noop () {}\n\nfunction toBuffer (str) {\n  if (Buffer.isBuffer(str)) return str\n  if (ArrayBuffer.isView(str)) return Buffer.from(str.buffer, str.byteOffset, str.byteLength)\n  if (typeof str === 'string') return Buffer.from(str, 'hex')\n  throw new Error('Pass a buffer or a string')\n}\n", "module.exports = function (work) {\n  var pending = null\n  var callback = null\n  var callbacks = null\n  var next = null\n\n  return function (val, cb) {\n    next = val\n    update(cb || noop)\n  }\n\n  function update (cb) {\n    if (callback) {\n      if (!pending) pending = []\n      pending.push(cb)\n      return\n    }\n\n    var val = next\n    next = null\n    callback = cb\n    work(val, done)\n  }\n\n  function done (err) {\n    var cb = callback\n    var cbs = callbacks\n    callbacks = null\n    callback = null\n\n    if (pending) {\n      callbacks = pending\n      pending = null\n      update(noop)\n    }\n\n    if (cbs) {\n      for (var i = 0; i < cbs.length; i++) cbs[i](err)\n    }\n    cb(err)\n  }\n}\n\nfunction noop (_) {}\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n", "var events = require('events')\nvar inherits = require('inherits')\n\nmodule.exports = LRU\n\nfunction LRU (opts) {\n  if (!(this instanceof LRU)) return new LRU(opts)\n  if (typeof opts === 'number') opts = {max: opts}\n  if (!opts) opts = {}\n  events.EventEmitter.call(this)\n  this.cache = {}\n  this.head = this.tail = null\n  this.length = 0\n  this.max = opts.max || 1000\n  this.maxAge = opts.maxAge || 0\n}\n\ninherits(LRU, events.EventEmitter)\n\nObject.defineProperty(LRU.prototype, 'keys', {\n  get: function () { return Object.keys(this.cache) }\n})\n\nLRU.prototype.clear = function () {\n  this.cache = {}\n  this.head = this.tail = null\n  this.length = 0\n}\n\nLRU.prototype.remove = function (key) {\n  if (typeof key !== 'string') key = '' + key\n  if (!this.cache.hasOwnProperty(key)) return\n\n  var element = this.cache[key]\n  delete this.cache[key]\n  this._unlink(key, element.prev, element.next)\n  return element.value\n}\n\nLRU.prototype._unlink = function (key, prev, next) {\n  this.length--\n\n  if (this.length === 0) {\n    this.head = this.tail = null\n  } else {\n    if (this.head === key) {\n      this.head = prev\n      this.cache[this.head].next = null\n    } else if (this.tail === key) {\n      this.tail = next\n      this.cache[this.tail].prev = null\n    } else {\n      this.cache[prev].next = next\n      this.cache[next].prev = prev\n    }\n  }\n}\n\nLRU.prototype.peek = function (key) {\n  if (!this.cache.hasOwnProperty(key)) return\n\n  var element = this.cache[key]\n\n  if (!this._checkAge(key, element)) return\n  return element.value\n}\n\nLRU.prototype.set = function (key, value) {\n  if (typeof key !== 'string') key = '' + key\n\n  var element\n\n  if (this.cache.hasOwnProperty(key)) {\n    element = this.cache[key]\n    element.value = value\n    if (this.maxAge) element.modified = Date.now()\n\n    // If it's already the head, there's nothing more to do:\n    if (key === this.head) return value\n    this._unlink(key, element.prev, element.next)\n  } else {\n    element = {value: value, modified: 0, next: null, prev: null}\n    if (this.maxAge) element.modified = Date.now()\n    this.cache[key] = element\n\n    // Eviction is only possible if the key didn't already exist:\n    if (this.length === this.max) this.evict()\n  }\n\n  this.length++\n  element.next = null\n  element.prev = this.head\n\n  if (this.head) this.cache[this.head].next = key\n  this.head = key\n\n  if (!this.tail) this.tail = key\n  return value\n}\n\nLRU.prototype._checkAge = function (key, element) {\n  if (this.maxAge && (Date.now() - element.modified) > this.maxAge) {\n    this.remove(key)\n    this.emit('evict', {key: key, value: element.value})\n    return false\n  }\n  return true\n}\n\nLRU.prototype.get = function (key) {\n  if (typeof key !== 'string') key = '' + key\n  if (!this.cache.hasOwnProperty(key)) return\n\n  var element = this.cache[key]\n\n  if (!this._checkAge(key, element)) return\n\n  if (this.head !== key) {\n    if (key === this.tail) {\n      this.tail = element.next\n      this.cache[this.tail].prev = null\n    } else {\n      // Set prev.next -> element.next:\n      this.cache[element.prev].next = element.next\n    }\n\n    // Set element.next.prev -> element.prev:\n    this.cache[element.next].prev = element.prev\n\n    // Element is the new head\n    this.cache[this.head].next = key\n    element.prev = this.head\n    element.next = null\n    this.head = key\n  }\n\n  return element.value\n}\n\nLRU.prototype.evict = function () {\n  if (!this.tail) return\n  var key = this.tail\n  var value = this.remove(this.tail)\n  this.emit('evict', {key: key, value: value})\n}\n", "function isBuffer (value) {\n  return Buffer.isBuffer(value) || value instanceof Uint8Array\n}\n\nfunction isEncoding (encoding) {\n  return Buffer.isEncoding(encoding)\n}\n\nfunction alloc (size, fill, encoding) {\n  return Buffer.alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  return Buffer.allocUnsafe(size)\n}\n\nfunction allocUnsafeSlow (size) {\n  return Buffer.allocUnsafeSlow(size)\n}\n\nfunction byteLength (string, encoding) {\n  return Buffer.byteLength(string, encoding)\n}\n\nfunction compare (a, b) {\n  return Buffer.compare(a, b)\n}\n\nfunction concat (buffers, totalLength) {\n  return Buffer.concat(buffers, totalLength)\n}\n\nfunction copy (source, target, targetStart, start, end) {\n  return toBuffer(source).copy(target, targetStart, start, end)\n}\n\nfunction equals (a, b) {\n  return toBuffer(a).equals(b)\n}\n\nfunction fill (buffer, value, offset, end, encoding) {\n  return toBuffer(buffer).fill(value, offset, end, encoding)\n}\n\nfunction from (value, encodingOrOffset, length) {\n  return Buffer.from(value, encodingOrOffset, length)\n}\n\nfunction includes (buffer, value, byteOffset, encoding) {\n  return toBuffer(buffer).includes(value, byteOffset, encoding)\n}\n\nfunction indexOf (buffer, value, byfeOffset, encoding) {\n  return toBuffer(buffer).indexOf(value, byfeOffset, encoding)\n}\n\nfunction lastIndexOf (buffer, value, byteOffset, encoding) {\n  return toBuffer(buffer).lastIndexOf(value, byteOffset, encoding)\n}\n\nfunction swap16 (buffer) {\n  return toBuffer(buffer).swap16()\n}\n\nfunction swap32 (buffer) {\n  return toBuffer(buffer).swap32()\n}\n\nfunction swap64 (buffer) {\n  return toBuffer(buffer).swap64()\n}\n\nfunction toBuffer (buffer) {\n  if (Buffer.isBuffer(buffer)) return buffer\n  return Buffer.from(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n}\n\nfunction toString (buffer, encoding, start, end) {\n  return toBuffer(buffer).toString(encoding, start, end)\n}\n\nfunction write (buffer, string, offset, length, encoding) {\n  return toBuffer(buffer).write(string, offset, length, encoding)\n}\n\nfunction writeDoubleLE (buffer, value, offset) {\n  return toBuffer(buffer).writeDoubleLE(value, offset)\n}\n\nfunction writeFloatLE (buffer, value, offset) {\n  return toBuffer(buffer).writeFloatLE(value, offset)\n}\n\nfunction writeUInt32LE (buffer, value, offset) {\n  return toBuffer(buffer).writeUInt32LE(value, offset)\n}\n\nfunction writeInt32LE (buffer, value, offset) {\n  return toBuffer(buffer).writeInt32LE(value, offset)\n}\n\nfunction readDoubleLE (buffer, offset) {\n  return toBuffer(buffer).readDoubleLE(offset)\n}\n\nfunction readFloatLE (buffer, offset) {\n  return toBuffer(buffer).readFloatLE(offset)\n}\n\nfunction readUInt32LE (buffer, offset) {\n  return toBuffer(buffer).readUInt32LE(offset)\n}\n\nfunction readInt32LE (buffer, offset) {\n  return toBuffer(buffer).readInt32LE(offset)\n}\n\nmodule.exports = {\n  isBuffer,\n  isEncoding,\n  alloc,\n  allocUnsafe,\n  allocUnsafeSlow,\n  byteLength,\n  compare,\n  concat,\n  copy,\n  equals,\n  fill,\n  from,\n  includes,\n  indexOf,\n  lastIndexOf,\n  swap16,\n  swap32,\n  swap64,\n  toBuffer,\n  toString,\n  write,\n  writeDoubleLE,\n  writeFloatLE,\n  writeUInt32LE,\n  writeInt32LE,\n  readDoubleLE,\n  readFloatLE,\n  readUInt32LE,\n  readInt32LE\n}\n", "const b4a = require('b4a')\n\nvar EMPTY = []\n\nmodule.exports = RecordCache\n\nfunction RecordSet () {\n  this.list = []\n  this.map = new Map()\n}\n\nRecordSet.prototype.add = function (record, value) {\n  var k = toString(record)\n  var r = this.map.get(k)\n  if (r) return false\n\n  r = {index: this.list.length, record: value || record}\n  this.list.push(r)\n  this.map.set(k, r)\n  return true\n}\n\nRecordSet.prototype.remove = function (record) {\n  var k = toString(record)\n  var r = this.map.get(k)\n  if (!r) return false\n\n  swap(this.list, r.index, this.list.length - 1)\n  this.list.pop()\n  this.map.delete(k)\n  return true\n}\n\nfunction RecordStore () {\n  this.records = new Map()\n  this.size = 0\n}\n\nRecordStore.prototype.add = function (name, record, value) {\n  var r = this.records.get(name)\n\n  if (!r) {\n    r = new RecordSet()\n    this.records.set(name, r)\n  }\n\n  if (r.add(record, value)) {\n    this.size++\n    return true\n  }\n\n  return false\n}\n\nRecordStore.prototype.remove = function (name, record, value) {\n  var r = this.records.get(name)\n  if (!r) return false\n\n  if (r.remove(record, value)) {\n    this.size--\n    if (!r.map.size) this.records.delete(name)\n    return true\n  }\n\n  return false\n}\n\nRecordStore.prototype.get = function (name) {\n  var r = this.records.get(name)\n  return r ? r.list : EMPTY\n}\n\nfunction RecordCache (opts) {\n  if (!(this instanceof RecordCache)) return new RecordCache(opts)\n  if (!opts) opts = {}\n\n  this.maxSize = opts.maxSize || Infinity\n  this.maxAge = opts.maxAge || 0\n\n  this._onstale = opts.onStale || opts.onstale || null\n  this._fresh = new RecordStore()\n  this._stale = new RecordStore()\n  this._interval = null\n  this._gced = false\n\n  if (this.maxAge && this.maxAge < Infinity) {\n    // 2/3 gives us a span of 0.66-1.33 maxAge or avg maxAge\n    var tick = Math.ceil(2 / 3 * this.maxAge)\n    this._interval = setInterval(this._gcAuto.bind(this), tick)\n    if (this._interval.unref) this._interval.unref()\n  }\n}\n\nObject.defineProperty(RecordCache.prototype, 'size', {\n  get: function () {\n    return this._fresh.size + this._stale.size\n  }\n})\n\nRecordCache.prototype.add = function (name, record, value) {\n  this._stale.remove(name, record, value)\n  if (this._fresh.add(name, record, value) && this._fresh.size > this.maxSize) {\n    this._gc()\n  }\n}\n\nRecordCache.prototype.remove = function (name, record, value) {\n  this._fresh.remove(name, record, value)\n  this._stale.remove(name, record, value)\n}\n\nRecordCache.prototype.get = function (name, n) {\n  var a = this._fresh.get(name)\n  var b = this._stale.get(name)\n  var aLen = a.length\n  var bLen = b.length\n  var len = aLen + bLen\n\n  if (n > len || !n) n = len\n  var result = new Array(n)\n\n  for (var i = 0; i < n; i++) {\n    var j = Math.floor(Math.random() * (aLen + bLen))\n    if (j < aLen) {\n      result[i] = a[j].record\n      swap(a, j, --aLen)\n    } else {\n      j -= aLen\n      result[i] = b[j].record\n      swap(b, j, --bLen)\n    }\n  }\n\n  return result\n}\n\nRecordCache.prototype._gcAuto = function () {\n  if (!this._gced) this._gc()\n  this._gced = false\n}\n\nRecordCache.prototype._gc = function () {\n  if (this._onstale && this._stale.size > 0) this._onstale(this._stale)\n  this._stale = this._fresh\n  this._fresh = new RecordStore()\n  this._gced = true\n}\n\nRecordCache.prototype.clear = function () {\n  this._gc()\n  this._gc()\n}\n\nRecordCache.prototype.destroy = function () {\n  this.clear()\n  clearInterval(this._interval)\n  this._interval = null\n}\n\nfunction toString (record) {\n  return b4a.isBuffer(record) ? b4a.toString(record, 'hex') : record\n}\n\nfunction swap (list, a, b) {\n  var tmp = list[a]\n  tmp.index = b\n  list[b].index = a\n  list[a] = list[b]\n  list[b] = tmp\n}\n", "module.exports = safetyCatch\n\nfunction isActuallyUncaught (err) {\n  if (!err) return false\n  return err instanceof TypeError ||\n    err instanceof SyntaxError ||\n    err instanceof ReferenceError ||\n    err instanceof EvalError ||\n    err instanceof RangeError ||\n    err instanceof URIError ||\n    err.code === 'ERR_ASSERTION'\n}\n\nfunction throwErrorNT (err) {\n  queueMicrotask(() => { throw err })\n}\n\nfunction safetyCatch (err) {\n  if (isActuallyUncaught(err)) {\n    throwErrorNT(err)\n    throw err\n  }\n}\n", "const safetyCatch = require('safety-catch')\n\nmodule.exports = goodbye\n\nconst handlers = []\n\nlet exitCode = 0\nlet forceExit = false\n\ngoodbye.exiting = false\ngoodbye.exit = exit\n\nconst onsigint = onsignal.bind(null, 'SIGINT')\nconst onsigterm = onsignal.bind(null, 'SIGTERM')\n\nfunction onsignal (name) {\n  forceExit = forceExit || process.listenerCount(name) === 1\n  process.removeListener('SIGINT', onsigint)\n  process.removeListener('SIGTERM', onsigterm)\n  exitCode = 130\n  onexit()\n}\n\nfunction onexit () {\n  if (goodbye.exiting) return\n  goodbye.exiting = true\n\n  process.removeListener('beforeExit', onexit)\n\n  const order = []\n\n  for (const h of handlers.sort((a, b) => b.position - a.position)) {\n    if (!order.length || order[order.length - 1][0].position !== h.position) order.push([])\n    order[order.length - 1].push(h)\n  }\n\n  loop()\n\n  function loop () {\n    if (!order.length) return done()\n    Promise.allSettled(order.pop().map(run)).then(loop, loop)\n  }\n\n  function done () {\n    if (forceExit) process.exit(exitCode)\n  }\n}\n\nasync function run (h) {\n  try {\n    await h.fn()\n  } catch (e) {\n    safetyCatch(e)\n  }\n}\n\nfunction setup () {\n  process.prependListener('beforeExit', onexit)\n  process.prependListener('SIGINT', onsigint)\n  process.prependListener('SIGTERM', onsigterm)\n}\n\nfunction cleanup () {\n  process.removeListener('beforeExit', onexit)\n  process.removeListener('SIGINT', onsigint)\n  process.removeListener('SIGTERM', onsigterm)\n}\n\nfunction goodbye (fn, position = 0) {\n  if (handlers.length === 0) setup()\n  const handler = { position, fn }\n  handlers.push(handler)\n\n  return function unregister () {\n    const i = handlers.indexOf(handler)\n    if (i > -1) handlers.splice(i, 1)\n    if (!handlers.length) cleanup()\n  }\n}\n\nfunction exit () {\n  forceExit = true\n  process.removeListener('SIGINT', onsigint)\n  process.removeListener('SIGTERM', onsigterm)\n  onexit()\n}\n", "import { SCHEMES } from \"./uri\";\n\nimport http from \"./schemes/http\";\nSCHEMES[http.scheme] = http;\n\nimport https from \"./schemes/https\";\nSCHEMES[https.scheme] = https;\n\nimport ws from \"./schemes/ws\";\nSCHEMES[ws.scheme] = ws;\n\nimport wss from \"./schemes/wss\";\nSCHEMES[wss.scheme] = wss;\n\nimport mailto from \"./schemes/mailto\";\nSCHEMES[mailto.scheme] = mailto;\n\nimport urn from \"./schemes/urn\";\nSCHEMES[urn.scheme] = urn;\n\nimport uuid from \"./schemes/urn-uuid\";\nSCHEMES[uuid.scheme] = uuid;\n\nexport * from \"./uri\";\n", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { URNComponents } from \"./urn\";\nimport { SCHEMES } from \"../uri\";\n\nexport interface UUIDComponents extends URNComponents {\n\tuuid?: string;\n}\n\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\nconst UUID_PARSE = /^[0-9A-Fa-f\\-]{36}/;\n\n//RFC 4122\nconst handler:URISchemeHandler<UUIDComponents, URIOptions, URNComponents> = {\n\tscheme : \"urn:uuid\",\n\n\tparse : function (urnComponents:URNComponents, options:URIOptions):UUIDComponents {\n\t\tconst uuidComponents = urnComponents as UUIDComponents;\n\t\tuuidComponents.uuid = uuidComponents.nss;\n\t\tuuidComponents.nss = undefined;\n\n\t\tif (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n\t\t\tuuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n\t\t}\n\n\t\treturn uuidComponents;\n\t},\n\n\tserialize : function (uuidComponents:UUIDComponents, options:URIOptions):URNComponents {\n\t\tconst urnComponents = uuidComponents as URNComponents;\n\t\t//normalize UUID\n\t\turnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n\t\treturn urnComponents;\n\t},\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, SCHEMES } from \"../uri\";\n\nexport interface URNComponents extends URIComponents {\n\tnid?:string;\n\tnss?:string;\n}\n\nexport interface URNOptions extends URIOptions {\n\tnid?:string;\n}\n\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n\n//RFC 2141\nconst handler:URISchemeHandler<URNComponents,URNOptions> = {\n\tscheme : \"urn\",\n\n\tparse : function (components:URIComponents, options:URNOptions):URNComponents {\n\t\tconst matches = components.path && components.path.match(URN_PARSE);\n\t\tlet urnComponents = components as URNComponents;\n\n\t\tif (matches) {\n\t\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\t\tconst nid = matches[1].toLowerCase();\n\t\t\tconst nss = matches[2];\n\t\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\t\turnComponents.nid = nid;\n\t\t\turnComponents.nss = nss;\n\t\t\turnComponents.path = undefined;\n\n\t\t\tif (schemeHandler) {\n\t\t\t\turnComponents = schemeHandler.parse(urnComponents, options) as URNComponents;\n\t\t\t}\n\t\t} else {\n\t\t\turnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n\t\t}\n\n\t\treturn urnComponents;\n\t},\n\n\tserialize : function (urnComponents:URNComponents, options:URNOptions):URIComponents {\n\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\tconst nid = urnComponents.nid;\n\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\tif (schemeHandler) {\n\t\t\turnComponents = schemeHandler.serialize(urnComponents, options) as URNComponents;\n\t\t}\n\n\t\tconst uriComponents = urnComponents as URIComponents;\n\t\tconst nss = urnComponents.nss;\n\t\turiComponents.path = `${nid || options.nid}:${nss}`;\n\n\t\treturn uriComponents;\n\t},\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\nimport punycode from \"punycode\";\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\n\nexport interface MailtoHeaders {\n\t[hfname:string]:string\n}\n\nexport interface MailtoComponents extends URIComponents {\n\tto:Array<string>,\n\theaders?:MailtoHeaders,\n\tsubject?:string,\n\tbody?:string\n}\n\nconst O:MailtoHeaders = {};\nconst isIRI = true;\n\n//RFC 3986\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nconst HEXDIG$$ = \"[0-9A-Fa-f]\";  //case-insensitive\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$));  //expanded\n\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\n\n//RFC 6068\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\";  //%d33-90 / %d94-126\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\nconst HFVALUE$ = HFNAME$;\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\n\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nconst NOT_HFVALUE = NOT_HFNAME;\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\n\nfunction decodeUnreserved(str:string):string {\n\tconst decStr = pctDecChars(str);\n\treturn (!decStr.match(UNRESERVED) ? str : decStr);\n}\n\nconst handler:URISchemeHandler<MailtoComponents> =  {\n\tscheme : \"mailto\",\n\n\tparse : function (components:URIComponents, options:URIOptions):MailtoComponents {\n\t\tconst mailtoComponents = components as MailtoComponents;\n\t\tconst to = mailtoComponents.to = (mailtoComponents.path ? mailtoComponents.path.split(\",\") : []);\n\t\tmailtoComponents.path = undefined;\n\n\t\tif (mailtoComponents.query) {\n\t\t\tlet unknownHeaders = false\n\t\t\tconst headers:MailtoHeaders = {};\n\t\t\tconst hfields = mailtoComponents.query.split(\"&\");\n\n\t\t\tfor (let x = 0, xl = hfields.length; x < xl; ++x) {\n\t\t\t\tconst hfield = hfields[x].split(\"=\");\n\n\t\t\t\tswitch (hfield[0]) {\n\t\t\t\t\tcase \"to\":\n\t\t\t\t\t\tconst toAddrs = hfield[1].split(\",\");\n\t\t\t\t\t\tfor (let x = 0, xl = toAddrs.length; x < xl; ++x) {\n\t\t\t\t\t\t\tto.push(toAddrs[x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"subject\":\n\t\t\t\t\t\tmailtoComponents.subject = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\tmailtoComponents.body = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tunknownHeaders = true;\n\t\t\t\t\t\theaders[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknownHeaders) mailtoComponents.headers = headers;\n\t\t}\n\n\t\tmailtoComponents.query = undefined;\n\n\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\tconst addr = to[x].split(\"@\");\n\n\t\t\taddr[0] = unescapeComponent(addr[0]);\n\n\t\t\tif (!options.unicodeSupport) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\taddr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taddr[1] = unescapeComponent(addr[1], options).toLowerCase();\n\t\t\t}\n\n\t\t\tto[x] = addr.join(\"@\");\n\t\t}\n\n\t\treturn mailtoComponents;\n\t},\n\n\tserialize : function (mailtoComponents:MailtoComponents, options:URIOptions):URIComponents {\n\t\tconst components = mailtoComponents as URIComponents;\n\t\tconst to = toArray(mailtoComponents.to);\n\t\tif (to) {\n\t\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\t\tconst toAddr = String(to[x]);\n\t\t\t\tconst atIdx = toAddr.lastIndexOf(\"@\");\n\t\t\t\tconst localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n\t\t\t\tlet domain = toAddr.slice(atIdx + 1);\n\n\t\t\t\t//convert IDN via punycode\n\t\t\t\ttry {\n\t\t\t\t\tdomain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t\t}\n\n\t\t\t\tto[x] = localPart + \"@\" + domain;\n\t\t\t}\n\n\t\t\tcomponents.path = to.join(\",\");\n\t\t}\n\n\t\tconst headers = mailtoComponents.headers = mailtoComponents.headers || {};\n\n\t\tif (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n\t\tif (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n\n\t\tconst fields = [];\n\t\tfor (const name in headers) {\n\t\t\tif (headers[name] !== O[name]) {\n\t\t\t\tfields.push(\n\t\t\t\t\tname.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\theaders[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (fields.length) {\n\t\t\tcomponents.query = fields.join(\"&\");\n\t\t}\n\n\t\treturn components;\n\t}\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport ws from \"./ws\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"wss\",\n\tdomainHost : ws.domainHost,\n\tparse : ws.parse,\n\tserialize : ws.serialize\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nexport interface WSComponents extends URIComponents {\n\tresourceName?: string;\n\tsecure?: boolean;\n}\n\nfunction isSecure(wsComponents:WSComponents):boolean {\n\treturn typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n\n//RFC 6455\nconst handler:URISchemeHandler = {\n\tscheme : \"ws\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):WSComponents {\n\t\tconst wsComponents = components as WSComponents;\n\n\t\t//indicate if the secure flag is set\n\t\twsComponents.secure = isSecure(wsComponents);\n\n\t\t//construct resouce name\n\t\twsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n\t\twsComponents.path = undefined;\n\t\twsComponents.query = undefined;\n\n\t\treturn wsComponents;\n\t},\n\n\tserialize : function (wsComponents:WSComponents, options:URIOptions):URIComponents {\n\t\t//normalize the default port\n\t\tif (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n\t\t\twsComponents.port = undefined;\n\t\t}\n\n\t\t//ensure scheme matches secure flag\n\t\tif (typeof wsComponents.secure === 'boolean') {\n\t\t\twsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws');\n\t\t\twsComponents.secure = undefined;\n\t\t}\n\n\t\t//reconstruct path from resource name\n\t\tif (wsComponents.resourceName) {\n\t\t\tconst [path, query] = wsComponents.resourceName.split('?');\n\t\t\twsComponents.path = (path && path !== '/' ? path : undefined);\n\t\t\twsComponents.query = query;\n\t\t\twsComponents.resourceName = undefined;\n\t\t}\n\n\t\t//forbid fragment component\n\t\twsComponents.fragment = undefined;\n\n\t\treturn wsComponents;\n\t}\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport http from \"./http\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"https\",\n\tdomainHost : http.domainHost,\n\tparse : http.parse,\n\tserialize : http.serialize\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"http\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//report missing host\n\t\tif (!components.host) {\n\t\t\tcomponents.error = components.error || \"HTTP URIs must have a host.\";\n\t\t}\n\n\t\treturn components;\n\t},\n\n\tserialize : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\tconst secure = String(components.scheme).toLowerCase() === \"https\";\n\n\t\t//normalize the default port\n\t\tif (components.port === (secure ? 443 : 80) || components.port === \"\") {\n\t\t\tcomponents.port = undefined;\n\t\t}\n\t\t\n\t\t//normalize the empty path\n\t\tif (!components.path) {\n\t\t\tcomponents.path = \"/\";\n\t\t}\n\n\t\t//NOTE: We do not parse query strings for HTTP URIs\n\t\t//as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n\t\t//and not the HTTP spec.\n\n\t\treturn components;\n\t}\n};\n\nexport default handler;", "/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\n\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\n\nexport interface URIComponents {\n\tscheme?:string;\n\tuserinfo?:string;\n\thost?:string;\n\tport?:number|string;\n\tpath?:string;\n\tquery?:string;\n\tfragment?:string;\n\treference?:string;\n\terror?:string;\n}\n\nexport interface URIOptions {\n\tscheme?:string;\n\treference?:string;\n\ttolerant?:boolean;\n\tabsolutePath?:boolean;\n\tiri?:boolean;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n}\n\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n\tscheme:string;\n\tparse(components:ParentComponents, options:Options):Components;\n\tserialize(components:Components, options:Options):ParentComponents;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n\tabsolutePath?:boolean;\n}\n\nexport interface URIRegExps {\n\tNOT_SCHEME : RegExp,\n\tNOT_USERINFO : RegExp,\n\tNOT_HOST : RegExp,\n\tNOT_PATH : RegExp,\n\tNOT_PATH_NOSCHEME : RegExp,\n\tNOT_QUERY : RegExp,\n\tNOT_FRAGMENT : RegExp,\n\tESCAPE : RegExp,\n\tUNRESERVED : RegExp,\n\tOTHER_CHARS : RegExp,\n\tPCT_ENCODED : RegExp,\n\tIPV4ADDRESS : RegExp,\n\tIPV6ADDRESS : RegExp,\n}\n\nexport const SCHEMES:{[scheme:string]:URISchemeHandler} = {};\n\nexport function pctEncChar(chr:string):string {\n\tconst c = chr.charCodeAt(0);\n\tlet e:string;\n\n\tif (c < 16) e = \"%0\" + c.toString(16).toUpperCase();\n\telse if (c < 128) e = \"%\" + c.toString(16).toUpperCase();\n\telse if (c < 2048) e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\telse e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\n\treturn e;\n}\n\nexport function pctDecChars(str:string):string {\n\tlet newStr = \"\";\n\tlet i = 0;\n\tconst il = str.length;\n\n\twhile (i < il) {\n\t\tconst c = parseInt(str.substr(i + 1, 2), 16);\n\n\t\tif (c < 128) {\n\t\t\tnewStr += String.fromCharCode(c);\n\t\t\ti += 3;\n\t\t}\n\t\telse if (c >= 194 && c < 224) {\n\t\t\tif ((il - i) >= 6) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 6);\n\t\t\t}\n\t\t\ti += 6;\n\t\t}\n\t\telse if (c >= 224) {\n\t\t\tif ((il - i) >= 9) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tconst c3 = parseInt(str.substr(i + 7, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 9);\n\t\t\t}\n\t\t\ti += 9;\n\t\t}\n\t\telse {\n\t\t\tnewStr += str.substr(i, 3);\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\treturn newStr;\n}\n\nfunction _normalizeComponentEncoding(components:URIComponents, protocol:URIRegExps) {\n\tfunction decodeUnreserved(str:string):string {\n\t\tconst decStr = pctDecChars(str);\n\t\treturn (!decStr.match(protocol.UNRESERVED) ? str : decStr);\n\t}\n\n\tif (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n\tif (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\n\treturn components;\n};\n\nfunction _stripLeadingZeros(str:string):string {\n\treturn str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV4ADDRESS) || [];\n\tconst [, address] = matches;\n\t\n\tif (address) {\n\t\treturn address.split(\".\").map(_stripLeadingZeros).join(\".\");\n\t} else {\n\t\treturn host;\n\t}\n}\n\nfunction _normalizeIPv6(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV6ADDRESS) || [];\n\tconst [, address, zone] = matches;\n\n\tif (address) {\n\t\tconst [last, first] = address.toLowerCase().split('::').reverse();\n\t\tconst firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n\t\tconst lastFields = last.split(\":\").map(_stripLeadingZeros);\n\t\tconst isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n\t\tconst fieldCount = isLastFieldIPv4Address ? 7 : 8;\n\t\tconst lastFieldsStart = lastFields.length - fieldCount;\n\t\tconst fields = Array<string>(fieldCount);\n\n\t\tfor (let x = 0; x < fieldCount; ++x) {\n\t\t\tfields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n\t\t}\n\n\t\tif (isLastFieldIPv4Address) {\n\t\t\tfields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n\t\t}\n\n\t\tconst allZeroFields = fields.reduce<Array<{index:number,length:number}>>((acc, field, index) => {\n\t\t\tif (!field || field === \"0\") {\n\t\t\t\tconst lastLongest = acc[acc.length - 1];\n\t\t\t\tif (lastLongest && lastLongest.index + lastLongest.length === index) {\n\t\t\t\t\tlastLongest.length++;\n\t\t\t\t} else {\n\t\t\t\t\tacc.push({ index, length : 1 });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\n\t\tconst longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n\n\t\tlet newHost:string;\n\t\tif (longestZeroFields && longestZeroFields.length > 1) {\n\t\t\tconst newFirst = fields.slice(0, longestZeroFields.index) ;\n\t\t\tconst newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n\t\t\tnewHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n\t\t} else {\n\t\t\tnewHost = fields.join(\":\");\n\t\t}\n\n\t\tif (zone) {\n\t\t\tnewHost += \"%\" + zone;\n\t\t}\n\n\t\treturn newHost;\n\t} else {\n\t\treturn host;\n\t}\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = (<RegExpMatchArray>(\"\").match(/(){0}/))[1] === undefined;\n\nexport function parse(uriString:string, options:URIOptions = {}):URIComponents {\n\tconst components:URIComponents = {};\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\n\tif (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n\n\tconst matches = uriString.match(URI_PARSE);\n\n\tif (matches) {\n\t\tif (NO_MATCH_IS_UNDEFINED) {\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1];\n\t\t\tcomponents.userinfo = matches[3];\n\t\t\tcomponents.host = matches[4];\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = matches[7];\n\t\t\tcomponents.fragment = matches[8];\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = matches[5];\n\t\t\t}\n\t\t} else {  //IE FIX for improper RegExp matching\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1] || undefined;\n\t\t\tcomponents.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\n\t\t\tcomponents.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\n\t\t\tcomponents.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (components.host) {\n\t\t\t//normalize IP hosts\n\t\t\tcomponents.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n\t\t}\n\n\t\t//determine reference type\n\t\tif (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n\t\t\tcomponents.reference = \"same-document\";\n\t\t} else if (components.scheme === undefined) {\n\t\t\tcomponents.reference = \"relative\";\n\t\t} else if (components.fragment === undefined) {\n\t\t\tcomponents.reference = \"absolute\";\n\t\t} else {\n\t\t\tcomponents.reference = \"uri\";\n\t\t}\n\n\t\t//check for reference errors\n\t\tif (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n\t\t\tcomponents.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n\t\t}\n\n\t\t//find scheme handler\n\t\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t\t//check if scheme can't handle IRIs\n\t\tif (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n\t\t\t//if host component is a domain name\n\t\t\tif (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\tcomponents.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//convert IRI -> URI\n\t\t\t_normalizeComponentEncoding(components, URI_PROTOCOL);\n\t\t} else {\n\t\t\t//normalize encodings\n\t\t\t_normalizeComponentEncoding(components, protocol);\n\t\t}\n\n\t\t//perform scheme specific parsing\n\t\tif (schemeHandler && schemeHandler.parse) {\n\t\t\tschemeHandler.parse(components, options);\n\t\t}\n\t} else {\n\t\tcomponents.error = components.error || \"URI can not be parsed.\";\n\t}\n\n\treturn components;\n};\n\nfunction _recomposeAuthority(components:URIComponents, options:URIOptions):string|undefined {\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\tif (components.userinfo !== undefined) {\n\t\turiTokens.push(components.userinfo);\n\t\turiTokens.push(\"@\");\n\t}\n\n\tif (components.host !== undefined) {\n\t\t//normalize IP hosts, add brackets and escape zone separator for IPv6\n\t\turiTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n\t}\n\n\tif (typeof components.port === \"number\" || typeof components.port === \"string\") {\n\t\turiTokens.push(\":\");\n\t\turiTokens.push(String(components.port));\n\t}\n\n\treturn uriTokens.length ? uriTokens.join(\"\") : undefined;\n};\n\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n\nexport function removeDotSegments(input:string):string {\n\tconst output:Array<string> = [];\n\n\twhile (input.length) {\n\t\tif (input.match(RDS1)) {\n\t\t\tinput = input.replace(RDS1, \"\");\n\t\t} else if (input.match(RDS2)) {\n\t\t\tinput = input.replace(RDS2, \"/\");\n\t\t} else if (input.match(RDS3)) {\n\t\t\tinput = input.replace(RDS3, \"/\");\n\t\t\toutput.pop();\n\t\t} else if (input === \".\" || input === \"..\") {\n\t\t\tinput = \"\";\n\t\t} else {\n\t\t\tconst im = input.match(RDS5);\n\t\t\tif (im) {\n\t\t\t\tconst s = im[0];\n\t\t\t\tinput = input.slice(s.length);\n\t\t\t\toutput.push(s);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected dot segment condition\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nexport function serialize(components:URIComponents, options:URIOptions = {}):string {\n\tconst protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\t//find scheme handler\n\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t//perform scheme specific serialization\n\tif (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n\tif (components.host) {\n\t\t//if host component is an IPv6 address\n\t\tif (protocol.IPV6ADDRESS.test(components.host)) {\n\t\t\t//TODO: normalize IPv6 address as per RFC 5952\n\t\t}\n\n\t\t//if host component is a domain name\n\t\telse if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\n\t\t\t//convert IDN via punycode\n\t\t\ttry {\n\t\t\t\tcomponents.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\n\t\t\t} catch (e) {\n\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t}\n\t\t}\n\t}\n\n\t//normalize encoding\n\t_normalizeComponentEncoding(components, protocol);\n\n\tif (options.reference !== \"suffix\" && components.scheme) {\n\t\turiTokens.push(components.scheme);\n\t\turiTokens.push(\":\");\n\t}\n\n\tconst authority = _recomposeAuthority(components, options);\n\tif (authority !== undefined) {\n\t\tif (options.reference !== \"suffix\") {\n\t\t\turiTokens.push(\"//\");\n\t\t}\n\n\t\turiTokens.push(authority);\n\n\t\tif (components.path && components.path.charAt(0) !== \"/\") {\n\t\t\turiTokens.push(\"/\");\n\t\t}\n\t}\n\n\tif (components.path !== undefined) {\n\t\tlet s = components.path;\n\n\t\tif (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n\t\t\ts = removeDotSegments(s);\n\t\t}\n\n\t\tif (authority === undefined) {\n\t\t\ts = s.replace(/^\\/\\//, \"/%2F\");  //don't allow the path to start with \"//\"\n\t\t}\n\n\t\turiTokens.push(s);\n\t}\n\n\tif (components.query !== undefined) {\n\t\turiTokens.push(\"?\");\n\t\turiTokens.push(components.query);\n\t}\n\n\tif (components.fragment !== undefined) {\n\t\turiTokens.push(\"#\");\n\t\turiTokens.push(components.fragment);\n\t}\n\n\treturn uriTokens.join(\"\");  //merge tokens into a string\n};\n\nexport function resolveComponents(base:URIComponents, relative:URIComponents, options:URIOptions = {}, skipNormalization?:boolean):URIComponents {\n\tconst target:URIComponents = {};\n\n\tif (!skipNormalization) {\n\t\tbase = parse(serialize(base, options), options);  //normalize base components\n\t\trelative = parse(serialize(relative, options), options);  //normalize relative components\n\t}\n\toptions = options || {};\n\n\tif (!options.tolerant && relative.scheme) {\n\t\ttarget.scheme = relative.scheme;\n\t\t//target.authority = relative.authority;\n\t\ttarget.userinfo = relative.userinfo;\n\t\ttarget.host = relative.host;\n\t\ttarget.port = relative.port;\n\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\ttarget.query = relative.query;\n\t} else {\n\t\tif (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n\t\t\t//target.authority = relative.authority;\n\t\t\ttarget.userinfo = relative.userinfo;\n\t\t\ttarget.host = relative.host;\n\t\t\ttarget.port = relative.port;\n\t\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\t\ttarget.query = relative.query;\n\t\t} else {\n\t\t\tif (!relative.path) {\n\t\t\t\ttarget.path = base.path;\n\t\t\t\tif (relative.query !== undefined) {\n\t\t\t\t\ttarget.query = relative.query;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.query = base.query;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (relative.path.charAt(0) === \"/\") {\n\t\t\t\t\ttarget.path = removeDotSegments(relative.path);\n\t\t\t\t} else {\n\t\t\t\t\tif ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n\t\t\t\t\t\ttarget.path = \"/\" + relative.path;\n\t\t\t\t\t} else if (!base.path) {\n\t\t\t\t\t\ttarget.path = relative.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.path = removeDotSegments(target.path);\n\t\t\t\t}\n\t\t\t\ttarget.query = relative.query;\n\t\t\t}\n\t\t\t//target.authority = base.authority;\n\t\t\ttarget.userinfo = base.userinfo;\n\t\t\ttarget.host = base.host;\n\t\t\ttarget.port = base.port;\n\t\t}\n\t\ttarget.scheme = base.scheme;\n\t}\n\n\ttarget.fragment = relative.fragment;\n\n\treturn target;\n};\n\nexport function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string {\n\tconst schemelessOptions = assign({ scheme : 'null' }, options);\n\treturn serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n};\n\nexport function normalize(uri:string, options?:URIOptions):string;\nexport function normalize(uri:URIComponents, options?:URIOptions):URIComponents;\nexport function normalize(uri:any, options?:URIOptions):any {\n\tif (typeof uri === \"string\") {\n\t\turi = serialize(parse(uri, options), options);\n\t} else if (typeOf(uri) === \"object\") {\n\t\turi = parse(serialize(<URIComponents>uri, options), options);\n\t}\n\n\treturn uri;\n};\n\nexport function equal(uriA:string, uriB:string, options?: URIOptions):boolean;\nexport function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;\nexport function equal(uriA:any, uriB:any, options?:URIOptions):boolean {\n\tif (typeof uriA === \"string\") {\n\t\turiA = serialize(parse(uriA, options), options);\n\t} else if (typeOf(uriA) === \"object\") {\n\t\turiA = serialize(<URIComponents>uriA, options);\n\t}\n\n\tif (typeof uriB === \"string\") {\n\t\turiB = serialize(parse(uriB, options), options);\n\t} else if (typeOf(uriB) === \"object\") {\n\t\turiB = serialize(<URIComponents>uriB, options);\n\t}\n\n\treturn uriA === uriB;\n};\n\nexport function escapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\n};\n\nexport function unescapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\n};\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport default punycode;\n", "import { URIRegExps } from \"./uri\";\nimport { buildExps } from \"./regexps-uri\";\n\nexport default buildExps(true);\n", "import { URIRegExps } from \"./uri\";\nimport { merge, subexp } from \"./util\";\n\nexport function buildExps(isIRI:boolean):URIRegExps {\n\tconst\n\t\tALPHA$$ = \"[A-Za-z]\",\n\t\tCR$ = \"[\\\\x0D]\",\n\t\tDIGIT$$ = \"[0-9]\",\n\t\tDQUOTE$$ = \"[\\\\x22]\",\n\t\tHEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),  //case-insensitive\n\t\tLF$$ = \"[\\\\x0A]\",\n\t\tSP$$ = \"[\\\\x20]\",\n\t\tPCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),  //expanded\n\t\tGEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n\t\tSUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n\t\tRESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n\t\tUCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",  //subset, excludes bidi control characters\n\t\tIPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",  //subset\n\t\tUNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n\t\tSCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n\t\tUSERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n\t\tDEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n\t\tDEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),  //relaxed parsing rules\n\t\tIPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n\t\tH16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n\t\tLS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n\t\tIPV6ADDRESS1$ = subexp(                                                            subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\n\t\tIPV6ADDRESS2$ = subexp(                                                 \"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\n\t\tIPV6ADDRESS3$ = subexp(subexp(                                 H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n\t\tIPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n\t\tIPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n\t\tIPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" +        H16$ + \"\\\\:\"          + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n\t\tIPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\"                                + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n\t\tIPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\"                                + H16$ ), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n\t\tIPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"                                       ), //[ *6( h16 \":\" ) h16 ] \"::\"\n\t\tIPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n\t\tZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),  //RFC 6874\n\t\tIPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),  //RFC 6874\n\t\tIPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),  //RFC 6874, with relaxed parsing rules\n\t\tIPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n\t\tIP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),  //RFC 6874\n\t\tREG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n\t\tHOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n\t\tPORT$ = subexp(DIGIT$$ + \"*\"),\n\t\tAUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n\t\tPCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n\t\tSEGMENT$ = subexp(PCHAR$ + \"*\"),\n\t\tSEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n\t\tSEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n\t\tPATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n\t\tPATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),  //simplified\n\t\tPATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n\t\tPATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tQUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n\t\tFRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n\t\tHIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tURI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tRELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n\t\tRELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tURI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n\t\tABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n\n\t\tGENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tRELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n\t\tSAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tAUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\"\n\t;\n\n\treturn {\n\t\tNOT_SCHEME : new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n\t\tNOT_USERINFO : new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_HOST : new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH : new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH_NOSCHEME : new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_QUERY : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n\t\tNOT_FRAGMENT : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n\t\tESCAPE : new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tUNRESERVED : new RegExp(UNRESERVED$$, \"g\"),\n\t\tOTHER_CHARS : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n\t\tPCT_ENCODED : new RegExp(PCT_ENCODED$, \"g\"),\n\t\tIPV4ADDRESS : new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n\t\tIPV6ADDRESS : new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\")  //RFC 6874, with relaxed parsing rules\n\t};\n}\n\nexport default buildExps(false);\n", "export function merge(...sets:Array<string>):string {\n\tif (sets.length > 1) {\n\t\tsets[0] = sets[0].slice(0, -1);\n\t\tconst xl = sets.length - 1;\n\t\tfor (let x = 1; x < xl; ++x) {\n\t\t\tsets[x] = sets[x].slice(1, -1);\n\t\t}\n\t\tsets[xl] = sets[xl].slice(1);\n\t\treturn sets.join('');\n\t} else {\n\t\treturn sets[0];\n\t}\n}\n\nexport function subexp(str:string):string {\n\treturn \"(?:\" + str + \")\";\n}\n\nexport function typeOf(o:any):string {\n\treturn o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\n\nexport function toUpperCase(str:string):string {\n\treturn str.toUpperCase();\n}\n\nexport function toArray(obj:any):Array<any> {\n\treturn obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\n\n\nexport function assign(target: object, source: any): any {\n\tconst obj = target as any;\n\tif (source) {\n\t\tfor (const key in source) {\n\t\t\tobj[key] = source[key];\n\t\t}\n\t}\n\treturn obj;\n}", "/* jshint esversion: 6 */\n/* jslint node: true */\n'use strict';\n\nmodule.exports = function serialize (object) {\n  if (typeof object === 'number' && isNaN(object)) {\n    throw new Error('NaN is not allowed');\n  }\n\n  if (typeof object === 'number' && !isFinite(object)) {\n    throw new Error('Infinity is not allowed');\n  }\n\n  if (object === null || typeof object !== 'object') {\n    return JSON.stringify(object);\n  }\n\n  if (object.toJSON instanceof Function) {\n    return serialize(object.toJSON());\n  }\n\n  if (Array.isArray(object)) {\n    const values = object.reduce((t, cv, ci) => {\n      const comma = ci === 0 ? '' : ',';\n      const value = cv === undefined || typeof cv === 'symbol' ? null : cv;\n      return `${t}${comma}${serialize(value)}`;\n    }, '');\n    return `[${values}]`;\n  }\n\n  const values = Object.keys(object).sort().reduce((t, cv) => {\n    if (object[cv] === undefined ||\n        typeof object[cv] === 'symbol') {\n      return t;\n    }\n    const comma = t.length === 0 ? '' : ',';\n    return `${t}${comma}${serialize(cv)}:${serialize(object[cv])}`;\n  }, '');\n  return `{${values}}`;\n};\n", "'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n", "'use strict'\n\nconst textDecoder = new TextDecoder()\n/**\n * @param {ArrayBufferView|ArrayBuffer} bytes\n * @returns {string}\n */\nconst decodeText = (bytes) => textDecoder.decode(bytes)\n\nconst textEncoder = new TextEncoder()\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nconst encodeText = (text) => textEncoder.encode(text)\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Arrays\n *\n * @param {Array<ArrayLike<number>>} arrs\n * @param {number} length\n * @returns {Uint8Array}\n */\nfunction concat (arrs, length) {\n  const output = new Uint8Array(length)\n  let offset = 0\n\n  for (const arr of arrs) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return output\n}\n\nmodule.exports = { decodeText, encodeText, concat }\n", "'use strict'\n\nconst { encodeText } = require('./util')\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n\n/**\n * Class to encode/decode in the supported Bases\n *\n */\nclass Base {\n  /**\n   * @param {BaseName} name\n   * @param {BaseCode} code\n   * @param {CodecFactory} factory\n   * @param {string} alphabet\n   */\n  constructor (name, code, factory, alphabet) {\n    this.name = name\n    this.code = code\n    this.codeBuf = encodeText(this.code)\n    this.alphabet = alphabet\n    this.codec = factory(alphabet)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   * @returns {string}\n   */\n  encode (buf) {\n    return this.codec.encode(buf)\n  }\n\n  /**\n   * @param {string} string\n   * @returns {Uint8Array}\n   */\n  decode (string) {\n    for (const char of string) {\n      if (this.alphabet && this.alphabet.indexOf(char) < 0) {\n        throw new Error(`invalid character '${char}' in '${string}'`)\n      }\n    }\n    return this.codec.decode(string)\n  }\n}\n\nmodule.exports = Base\n", "'use strict'\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[i])\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @param {number} bitsPerChar\n * @returns {CodecFactory}\n */\nconst rfc4648 = (bitsPerChar) => (alphabet) => {\n  return {\n    /**\n     * @param {Uint8Array} input\n     * @returns {string}\n     */\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    /**\n     * @param {string} input\n     * @returns {Uint8Array}\n     */\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar)\n    }\n  }\n}\n\nmodule.exports = { rfc4648 }\n", "'use strict'\n\nconst baseX = require('@multiformats/base-x')\nconst Base = require('./base.js')\nconst { rfc4648 } = require('./rfc4648')\nconst { decodeText, encodeText } = require('./util')\n\n/** @typedef {import('./types').CodecFactory} CodecFactory */\n/** @typedef {import('./types').Codec} Codec */\n/** @typedef {import('./types').BaseName} BaseName */\n/** @typedef {import('./types').BaseCode} BaseCode */\n\n/** @type {CodecFactory} */\nconst identity = () => {\n  return {\n    encode: decodeText,\n    decode: encodeText\n  }\n}\n\n/**\n *\n * name, code, implementation, alphabet\n *\n * @type {Array<[BaseName, BaseCode, CodecFactory, string]>}\n */\nconst constants = [\n  ['identity', '\\x00', identity, ''],\n  ['base2', '0', rfc4648(1), '01'],\n  ['base8', '7', rfc4648(3), '01234567'],\n  ['base10', '9', baseX, '0123456789'],\n  ['base16', 'f', rfc4648(4), '0123456789abcdef'],\n  ['base16upper', 'F', rfc4648(4), '0123456789ABCDEF'],\n  ['base32hex', 'v', rfc4648(5), '0123456789abcdefghijklmnopqrstuv'],\n  ['base32hexupper', 'V', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV'],\n  ['base32hexpad', 't', rfc4648(5), '0123456789abcdefghijklmnopqrstuv='],\n  ['base32hexpadupper', 'T', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV='],\n  ['base32', 'b', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567'],\n  ['base32upper', 'B', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'],\n  ['base32pad', 'c', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567='],\n  ['base32padupper', 'C', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='],\n  ['base32z', 'h', rfc4648(5), 'ybndrfg8ejkmcpqxot1uwisza345h769'],\n  ['base36', 'k', baseX, '0123456789abcdefghijklmnopqrstuvwxyz'],\n  ['base36upper', 'K', baseX, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'],\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\n  ['base64', 'm', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\n  ['base64pad', 'M', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\n  ['base64url', 'u', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\n  ['base64urlpad', 'U', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\n]\n\n/** @type {Record<BaseName,Base>} */\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\n  return prev\n}, /** @type {Record<BaseName,Base>} */({}))\n\n/** @type {Record<BaseCode,Base>} */\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]]\n  return prev\n}, /** @type {Record<BaseCode,Base>} */({}))\n\nmodule.exports = {\n  names,\n  codes\n}\n", "/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n *\n */\n'use strict'\n\nconst constants = require('./constants')\nconst { encodeText, decodeText, concat } = require('./util')\n\n/** @typedef {import('./base')} Base */\n/** @typedef {import(\"./types\").BaseNameOrCode} BaseNameOrCode */\n/** @typedef {import(\"./types\").BaseCode} BaseCode */\n/** @typedef {import(\"./types\").BaseName} BaseName */\n\n/**\n * Create a new Uint8Array with the multibase varint+code.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be prefixed with multibase.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction multibase (nameOrCode, buf) {\n  if (!buf) {\n    throw new Error('requires an encoded Uint8Array')\n  }\n  const { name, codeBuf } = encoding(nameOrCode)\n  validEncode(name, buf)\n\n  return concat([codeBuf, buf], codeBuf.length + buf.length)\n}\n\n/**\n * Encode data with the specified base and add the multibase prefix.\n *\n * @param {BaseNameOrCode} nameOrCode - The multibase name or code number.\n * @param {Uint8Array} buf - The data to be encoded.\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction encode (nameOrCode, buf) {\n  const enc = encoding(nameOrCode)\n  const data = encodeText(enc.encode(buf))\n\n  return concat([enc.codeBuf, data], enc.codeBuf.length + data.length)\n}\n\n/**\n * Takes a Uint8Array or string encoded with multibase header, decodes it and\n * returns the decoded buffer\n *\n * @param {Uint8Array|string} data\n * @returns {Uint8Array}\n * @throws {Error} Will throw if the encoding is not supported\n *\n */\nfunction decode (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n  const prefix = data[0]\n\n  // Make all encodings case-insensitive except the ones that include upper and lower chars in the alphabet\n  if (['f', 'F', 'v', 'V', 't', 'T', 'b', 'B', 'c', 'C', 'h', 'k', 'K'].includes(prefix)) {\n    data = data.toLowerCase()\n  }\n  const enc = encoding(/** @type {BaseCode} */(data[0]))\n  return enc.decode(data.substring(1))\n}\n\n/**\n * Is the given data multibase encoded?\n *\n * @param {Uint8Array|string} data\n */\nfunction isEncoded (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n\n  // Ensure bufOrString is a string\n  if (Object.prototype.toString.call(data) !== '[object String]') {\n    return false\n  }\n\n  try {\n    const enc = encoding(/** @type {BaseCode} */(data[0]))\n    return enc.name\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * Validate encoded data\n *\n * @param {BaseNameOrCode} name\n * @param {Uint8Array} buf\n * @returns {void}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction validEncode (name, buf) {\n  const enc = encoding(name)\n  enc.decode(decodeText(buf))\n}\n\n/**\n * Get the encoding by name or code\n *\n * @param {BaseNameOrCode} nameOrCode\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encoding (nameOrCode) {\n  if (Object.prototype.hasOwnProperty.call(constants.names, /** @type {BaseName} */(nameOrCode))) {\n    return constants.names[/** @type {BaseName} */(nameOrCode)]\n  } else if (Object.prototype.hasOwnProperty.call(constants.codes, /** @type {BaseCode} */(nameOrCode))) {\n    return constants.codes[/** @type {BaseCode} */(nameOrCode)]\n  } else {\n    throw new Error(`Unsupported encoding: ${nameOrCode}`)\n  }\n}\n\n/**\n * Get encoding from data\n *\n * @param {string|Uint8Array} data\n * @returns {Base}\n * @throws {Error} Will throw if the encoding is not supported\n */\nfunction encodingFromData (data) {\n  if (data instanceof Uint8Array) {\n    data = decodeText(data)\n  }\n\n  return encoding(/** @type {BaseCode} */(data[0]))\n}\n\nexports = module.exports = multibase\nexports.encode = encode\nexports.decode = decode\nexports.isEncoded = isEncoded\nexports.encoding = encoding\nexports.encodingFromData = encodingFromData\nconst names = Object.freeze(constants.names)\nconst codes = Object.freeze(constants.codes)\nexports.names = names\nexports.codes = codes\n", "module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n", "module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n", "\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n", "module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n", "/* eslint quote-props: off */\n'use strict'\n\n/**\n * Names for all available hashes\n *\n * @typedef { \"identity\" | \"sha1\" | \"sha2-256\" | \"sha2-512\" | \"sha3-512\" | \"sha3-384\" | \"sha3-256\" | \"sha3-224\" | \"shake-128\" | \"shake-256\" | \"keccak-224\" | \"keccak-256\" | \"keccak-384\" | \"keccak-512\" | \"blake3\" | \"murmur3-128\" | \"murmur3-32\" | \"dbl-sha2-256\" | \"md4\" | \"md5\" | \"bmt\" | \"sha2-256-trunc254-padded\" | \"ripemd-128\" | \"ripemd-160\" | \"ripemd-256\" | \"ripemd-320\" | \"x11\" | \"kangarootwelve\" | \"sm3-256\" | \"blake2b-8\" | \"blake2b-16\" | \"blake2b-24\" | \"blake2b-32\" | \"blake2b-40\" | \"blake2b-48\" | \"blake2b-56\" | \"blake2b-64\" | \"blake2b-72\" | \"blake2b-80\" | \"blake2b-88\" | \"blake2b-96\" | \"blake2b-104\" | \"blake2b-112\" | \"blake2b-120\" | \"blake2b-128\" | \"blake2b-136\" | \"blake2b-144\" | \"blake2b-152\" | \"blake2b-160\" | \"blake2b-168\" | \"blake2b-176\" | \"blake2b-184\" | \"blake2b-192\" | \"blake2b-200\" | \"blake2b-208\" | \"blake2b-216\" | \"blake2b-224\" | \"blake2b-232\" | \"blake2b-240\" | \"blake2b-248\" | \"blake2b-256\" | \"blake2b-264\" | \"blake2b-272\" | \"blake2b-280\" | \"blake2b-288\" | \"blake2b-296\" | \"blake2b-304\" | \"blake2b-312\" | \"blake2b-320\" | \"blake2b-328\" | \"blake2b-336\" | \"blake2b-344\" | \"blake2b-352\" | \"blake2b-360\" | \"blake2b-368\" | \"blake2b-376\" | \"blake2b-384\" | \"blake2b-392\" | \"blake2b-400\" | \"blake2b-408\" | \"blake2b-416\" | \"blake2b-424\" | \"blake2b-432\" | \"blake2b-440\" | \"blake2b-448\" | \"blake2b-456\" | \"blake2b-464\" | \"blake2b-472\" | \"blake2b-480\" | \"blake2b-488\" | \"blake2b-496\" | \"blake2b-504\" | \"blake2b-512\" | \"blake2s-8\" | \"blake2s-16\" | \"blake2s-24\" | \"blake2s-32\" | \"blake2s-40\" | \"blake2s-48\" | \"blake2s-56\" | \"blake2s-64\" | \"blake2s-72\" | \"blake2s-80\" | \"blake2s-88\" | \"blake2s-96\" | \"blake2s-104\" | \"blake2s-112\" | \"blake2s-120\" | \"blake2s-128\" | \"blake2s-136\" | \"blake2s-144\" | \"blake2s-152\" | \"blake2s-160\" | \"blake2s-168\" | \"blake2s-176\" | \"blake2s-184\" | \"blake2s-192\" | \"blake2s-200\" | \"blake2s-208\" | \"blake2s-216\" | \"blake2s-224\" | \"blake2s-232\" | \"blake2s-240\" | \"blake2s-248\" | \"blake2s-256\" | \"skein256-8\" | \"skein256-16\" | \"skein256-24\" | \"skein256-32\" | \"skein256-40\" | \"skein256-48\" | \"skein256-56\" | \"skein256-64\" | \"skein256-72\" | \"skein256-80\" | \"skein256-88\" | \"skein256-96\" | \"skein256-104\" | \"skein256-112\" | \"skein256-120\" | \"skein256-128\" | \"skein256-136\" | \"skein256-144\" | \"skein256-152\" | \"skein256-160\" | \"skein256-168\" | \"skein256-176\" | \"skein256-184\" | \"skein256-192\" | \"skein256-200\" | \"skein256-208\" | \"skein256-216\" | \"skein256-224\" | \"skein256-232\" | \"skein256-240\" | \"skein256-248\" | \"skein256-256\" | \"skein512-8\" | \"skein512-16\" | \"skein512-24\" | \"skein512-32\" | \"skein512-40\" | \"skein512-48\" | \"skein512-56\" | \"skein512-64\" | \"skein512-72\" | \"skein512-80\" | \"skein512-88\" | \"skein512-96\" | \"skein512-104\" | \"skein512-112\" | \"skein512-120\" | \"skein512-128\" | \"skein512-136\" | \"skein512-144\" | \"skein512-152\" | \"skein512-160\" | \"skein512-168\" | \"skein512-176\" | \"skein512-184\" | \"skein512-192\" | \"skein512-200\" | \"skein512-208\" | \"skein512-216\" | \"skein512-224\" | \"skein512-232\" | \"skein512-240\" | \"skein512-248\" | \"skein512-256\" | \"skein512-264\" | \"skein512-272\" | \"skein512-280\" | \"skein512-288\" | \"skein512-296\" | \"skein512-304\" | \"skein512-312\" | \"skein512-320\" | \"skein512-328\" | \"skein512-336\" | \"skein512-344\" | \"skein512-352\" | \"skein512-360\" | \"skein512-368\" | \"skein512-376\" | \"skein512-384\" | \"skein512-392\" | \"skein512-400\" | \"skein512-408\" | \"skein512-416\" | \"skein512-424\" | \"skein512-432\" | \"skein512-440\" | \"skein512-448\" | \"skein512-456\" | \"skein512-464\" | \"skein512-472\" | \"skein512-480\" | \"skein512-488\" | \"skein512-496\" | \"skein512-504\" | \"skein512-512\" | \"skein1024-8\" | \"skein1024-16\" | \"skein1024-24\" | \"skein1024-32\" | \"skein1024-40\" | \"skein1024-48\" | \"skein1024-56\" | \"skein1024-64\" | \"skein1024-72\" | \"skein1024-80\" | \"skein1024-88\" | \"skein1024-96\" | \"skein1024-104\" | \"skein1024-112\" | \"skein1024-120\" | \"skein1024-128\" | \"skein1024-136\" | \"skein1024-144\" | \"skein1024-152\" | \"skein1024-160\" | \"skein1024-168\" | \"skein1024-176\" | \"skein1024-184\" | \"skein1024-192\" | \"skein1024-200\" | \"skein1024-208\" | \"skein1024-216\" | \"skein1024-224\" | \"skein1024-232\" | \"skein1024-240\" | \"skein1024-248\" | \"skein1024-256\" | \"skein1024-264\" | \"skein1024-272\" | \"skein1024-280\" | \"skein1024-288\" | \"skein1024-296\" | \"skein1024-304\" | \"skein1024-312\" | \"skein1024-320\" | \"skein1024-328\" | \"skein1024-336\" | \"skein1024-344\" | \"skein1024-352\" | \"skein1024-360\" | \"skein1024-368\" | \"skein1024-376\" | \"skein1024-384\" | \"skein1024-392\" | \"skein1024-400\" | \"skein1024-408\" | \"skein1024-416\" | \"skein1024-424\" | \"skein1024-432\" | \"skein1024-440\" | \"skein1024-448\" | \"skein1024-456\" | \"skein1024-464\" | \"skein1024-472\" | \"skein1024-480\" | \"skein1024-488\" | \"skein1024-496\" | \"skein1024-504\" | \"skein1024-512\" | \"skein1024-520\" | \"skein1024-528\" | \"skein1024-536\" | \"skein1024-544\" | \"skein1024-552\" | \"skein1024-560\" | \"skein1024-568\" | \"skein1024-576\" | \"skein1024-584\" | \"skein1024-592\" | \"skein1024-600\" | \"skein1024-608\" | \"skein1024-616\" | \"skein1024-624\" | \"skein1024-632\" | \"skein1024-640\" | \"skein1024-648\" | \"skein1024-656\" | \"skein1024-664\" | \"skein1024-672\" | \"skein1024-680\" | \"skein1024-688\" | \"skein1024-696\" | \"skein1024-704\" | \"skein1024-712\" | \"skein1024-720\" | \"skein1024-728\" | \"skein1024-736\" | \"skein1024-744\" | \"skein1024-752\" | \"skein1024-760\" | \"skein1024-768\" | \"skein1024-776\" | \"skein1024-784\" | \"skein1024-792\" | \"skein1024-800\" | \"skein1024-808\" | \"skein1024-816\" | \"skein1024-824\" | \"skein1024-832\" | \"skein1024-840\" | \"skein1024-848\" | \"skein1024-856\" | \"skein1024-864\" | \"skein1024-872\" | \"skein1024-880\" | \"skein1024-888\" | \"skein1024-896\" | \"skein1024-904\" | \"skein1024-912\" | \"skein1024-920\" | \"skein1024-928\" | \"skein1024-936\" | \"skein1024-944\" | \"skein1024-952\" | \"skein1024-960\" | \"skein1024-968\" | \"skein1024-976\" | \"skein1024-984\" | \"skein1024-992\" | \"skein1024-1000\" | \"skein1024-1008\" | \"skein1024-1016\" | \"skein1024-1024\" | \"poseidon-bls12_381-a2-fc1\" | \"poseidon-bls12_381-a2-fc1-sc\" } HashName\n */\n/**\n * Codes for all available hashes\n *\n * @typedef { 0x00 | 0x11 | 0x12 | 0x13 | 0x14 | 0x15 | 0x16 | 0x17 | 0x18 | 0x19 | 0x1a | 0x1b | 0x1c | 0x1d | 0x1e | 0x22 | 0x23 | 0x56 | 0xd4 | 0xd5 | 0xd6 | 0x1012 | 0x1052 | 0x1053 | 0x1054 | 0x1055 | 0x1100 | 0x1d01 | 0x534d | 0xb201 | 0xb202 | 0xb203 | 0xb204 | 0xb205 | 0xb206 | 0xb207 | 0xb208 | 0xb209 | 0xb20a | 0xb20b | 0xb20c | 0xb20d | 0xb20e | 0xb20f | 0xb210 | 0xb211 | 0xb212 | 0xb213 | 0xb214 | 0xb215 | 0xb216 | 0xb217 | 0xb218 | 0xb219 | 0xb21a | 0xb21b | 0xb21c | 0xb21d | 0xb21e | 0xb21f | 0xb220 | 0xb221 | 0xb222 | 0xb223 | 0xb224 | 0xb225 | 0xb226 | 0xb227 | 0xb228 | 0xb229 | 0xb22a | 0xb22b | 0xb22c | 0xb22d | 0xb22e | 0xb22f | 0xb230 | 0xb231 | 0xb232 | 0xb233 | 0xb234 | 0xb235 | 0xb236 | 0xb237 | 0xb238 | 0xb239 | 0xb23a | 0xb23b | 0xb23c | 0xb23d | 0xb23e | 0xb23f | 0xb240 | 0xb241 | 0xb242 | 0xb243 | 0xb244 | 0xb245 | 0xb246 | 0xb247 | 0xb248 | 0xb249 | 0xb24a | 0xb24b | 0xb24c | 0xb24d | 0xb24e | 0xb24f | 0xb250 | 0xb251 | 0xb252 | 0xb253 | 0xb254 | 0xb255 | 0xb256 | 0xb257 | 0xb258 | 0xb259 | 0xb25a | 0xb25b | 0xb25c | 0xb25d | 0xb25e | 0xb25f | 0xb260 | 0xb301 | 0xb302 | 0xb303 | 0xb304 | 0xb305 | 0xb306 | 0xb307 | 0xb308 | 0xb309 | 0xb30a | 0xb30b | 0xb30c | 0xb30d | 0xb30e | 0xb30f | 0xb310 | 0xb311 | 0xb312 | 0xb313 | 0xb314 | 0xb315 | 0xb316 | 0xb317 | 0xb318 | 0xb319 | 0xb31a | 0xb31b | 0xb31c | 0xb31d | 0xb31e | 0xb31f | 0xb320 | 0xb321 | 0xb322 | 0xb323 | 0xb324 | 0xb325 | 0xb326 | 0xb327 | 0xb328 | 0xb329 | 0xb32a | 0xb32b | 0xb32c | 0xb32d | 0xb32e | 0xb32f | 0xb330 | 0xb331 | 0xb332 | 0xb333 | 0xb334 | 0xb335 | 0xb336 | 0xb337 | 0xb338 | 0xb339 | 0xb33a | 0xb33b | 0xb33c | 0xb33d | 0xb33e | 0xb33f | 0xb340 | 0xb341 | 0xb342 | 0xb343 | 0xb344 | 0xb345 | 0xb346 | 0xb347 | 0xb348 | 0xb349 | 0xb34a | 0xb34b | 0xb34c | 0xb34d | 0xb34e | 0xb34f | 0xb350 | 0xb351 | 0xb352 | 0xb353 | 0xb354 | 0xb355 | 0xb356 | 0xb357 | 0xb358 | 0xb359 | 0xb35a | 0xb35b | 0xb35c | 0xb35d | 0xb35e | 0xb35f | 0xb360 | 0xb361 | 0xb362 | 0xb363 | 0xb364 | 0xb365 | 0xb366 | 0xb367 | 0xb368 | 0xb369 | 0xb36a | 0xb36b | 0xb36c | 0xb36d | 0xb36e | 0xb36f | 0xb370 | 0xb371 | 0xb372 | 0xb373 | 0xb374 | 0xb375 | 0xb376 | 0xb377 | 0xb378 | 0xb379 | 0xb37a | 0xb37b | 0xb37c | 0xb37d | 0xb37e | 0xb37f | 0xb380 | 0xb381 | 0xb382 | 0xb383 | 0xb384 | 0xb385 | 0xb386 | 0xb387 | 0xb388 | 0xb389 | 0xb38a | 0xb38b | 0xb38c | 0xb38d | 0xb38e | 0xb38f | 0xb390 | 0xb391 | 0xb392 | 0xb393 | 0xb394 | 0xb395 | 0xb396 | 0xb397 | 0xb398 | 0xb399 | 0xb39a | 0xb39b | 0xb39c | 0xb39d | 0xb39e | 0xb39f | 0xb3a0 | 0xb3a1 | 0xb3a2 | 0xb3a3 | 0xb3a4 | 0xb3a5 | 0xb3a6 | 0xb3a7 | 0xb3a8 | 0xb3a9 | 0xb3aa | 0xb3ab | 0xb3ac | 0xb3ad | 0xb3ae | 0xb3af | 0xb3b0 | 0xb3b1 | 0xb3b2 | 0xb3b3 | 0xb3b4 | 0xb3b5 | 0xb3b6 | 0xb3b7 | 0xb3b8 | 0xb3b9 | 0xb3ba | 0xb3bb | 0xb3bc | 0xb3bd | 0xb3be | 0xb3bf | 0xb3c0 | 0xb3c1 | 0xb3c2 | 0xb3c3 | 0xb3c4 | 0xb3c5 | 0xb3c6 | 0xb3c7 | 0xb3c8 | 0xb3c9 | 0xb3ca | 0xb3cb | 0xb3cc | 0xb3cd | 0xb3ce | 0xb3cf | 0xb3d0 | 0xb3d1 | 0xb3d2 | 0xb3d3 | 0xb3d4 | 0xb3d5 | 0xb3d6 | 0xb3d7 | 0xb3d8 | 0xb3d9 | 0xb3da | 0xb3db | 0xb3dc | 0xb3dd | 0xb3de | 0xb3df | 0xb3e0 | 0xb401 | 0xb402 } HashCode\n */\n\n/**\n * @type { Record<HashName,HashCode> }\n */\nconst names = Object.freeze({\n  'identity': 0x00,\n  'sha1': 0x11,\n  'sha2-256': 0x12,\n  'sha2-512': 0x13,\n  'sha3-512': 0x14,\n  'sha3-384': 0x15,\n  'sha3-256': 0x16,\n  'sha3-224': 0x17,\n  'shake-128': 0x18,\n  'shake-256': 0x19,\n  'keccak-224': 0x1a,\n  'keccak-256': 0x1b,\n  'keccak-384': 0x1c,\n  'keccak-512': 0x1d,\n  'blake3': 0x1e,\n  'murmur3-128': 0x22,\n  'murmur3-32': 0x23,\n  'dbl-sha2-256': 0x56,\n  'md4': 0xd4,\n  'md5': 0xd5,\n  'bmt': 0xd6,\n  'sha2-256-trunc254-padded': 0x1012,\n  'ripemd-128': 0x1052,\n  'ripemd-160': 0x1053,\n  'ripemd-256': 0x1054,\n  'ripemd-320': 0x1055,\n  'x11': 0x1100,\n  'kangarootwelve': 0x1d01,\n  'sm3-256': 0x534d,\n  'blake2b-8': 0xb201,\n  'blake2b-16': 0xb202,\n  'blake2b-24': 0xb203,\n  'blake2b-32': 0xb204,\n  'blake2b-40': 0xb205,\n  'blake2b-48': 0xb206,\n  'blake2b-56': 0xb207,\n  'blake2b-64': 0xb208,\n  'blake2b-72': 0xb209,\n  'blake2b-80': 0xb20a,\n  'blake2b-88': 0xb20b,\n  'blake2b-96': 0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8': 0xb241,\n  'blake2s-16': 0xb242,\n  'blake2s-24': 0xb243,\n  'blake2s-32': 0xb244,\n  'blake2s-40': 0xb245,\n  'blake2s-48': 0xb246,\n  'blake2s-56': 0xb247,\n  'blake2s-64': 0xb248,\n  'blake2s-72': 0xb249,\n  'blake2s-80': 0xb24a,\n  'blake2s-88': 0xb24b,\n  'blake2s-96': 0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'skein256-8': 0xb301,\n  'skein256-16': 0xb302,\n  'skein256-24': 0xb303,\n  'skein256-32': 0xb304,\n  'skein256-40': 0xb305,\n  'skein256-48': 0xb306,\n  'skein256-56': 0xb307,\n  'skein256-64': 0xb308,\n  'skein256-72': 0xb309,\n  'skein256-80': 0xb30a,\n  'skein256-88': 0xb30b,\n  'skein256-96': 0xb30c,\n  'skein256-104': 0xb30d,\n  'skein256-112': 0xb30e,\n  'skein256-120': 0xb30f,\n  'skein256-128': 0xb310,\n  'skein256-136': 0xb311,\n  'skein256-144': 0xb312,\n  'skein256-152': 0xb313,\n  'skein256-160': 0xb314,\n  'skein256-168': 0xb315,\n  'skein256-176': 0xb316,\n  'skein256-184': 0xb317,\n  'skein256-192': 0xb318,\n  'skein256-200': 0xb319,\n  'skein256-208': 0xb31a,\n  'skein256-216': 0xb31b,\n  'skein256-224': 0xb31c,\n  'skein256-232': 0xb31d,\n  'skein256-240': 0xb31e,\n  'skein256-248': 0xb31f,\n  'skein256-256': 0xb320,\n  'skein512-8': 0xb321,\n  'skein512-16': 0xb322,\n  'skein512-24': 0xb323,\n  'skein512-32': 0xb324,\n  'skein512-40': 0xb325,\n  'skein512-48': 0xb326,\n  'skein512-56': 0xb327,\n  'skein512-64': 0xb328,\n  'skein512-72': 0xb329,\n  'skein512-80': 0xb32a,\n  'skein512-88': 0xb32b,\n  'skein512-96': 0xb32c,\n  'skein512-104': 0xb32d,\n  'skein512-112': 0xb32e,\n  'skein512-120': 0xb32f,\n  'skein512-128': 0xb330,\n  'skein512-136': 0xb331,\n  'skein512-144': 0xb332,\n  'skein512-152': 0xb333,\n  'skein512-160': 0xb334,\n  'skein512-168': 0xb335,\n  'skein512-176': 0xb336,\n  'skein512-184': 0xb337,\n  'skein512-192': 0xb338,\n  'skein512-200': 0xb339,\n  'skein512-208': 0xb33a,\n  'skein512-216': 0xb33b,\n  'skein512-224': 0xb33c,\n  'skein512-232': 0xb33d,\n  'skein512-240': 0xb33e,\n  'skein512-248': 0xb33f,\n  'skein512-256': 0xb340,\n  'skein512-264': 0xb341,\n  'skein512-272': 0xb342,\n  'skein512-280': 0xb343,\n  'skein512-288': 0xb344,\n  'skein512-296': 0xb345,\n  'skein512-304': 0xb346,\n  'skein512-312': 0xb347,\n  'skein512-320': 0xb348,\n  'skein512-328': 0xb349,\n  'skein512-336': 0xb34a,\n  'skein512-344': 0xb34b,\n  'skein512-352': 0xb34c,\n  'skein512-360': 0xb34d,\n  'skein512-368': 0xb34e,\n  'skein512-376': 0xb34f,\n  'skein512-384': 0xb350,\n  'skein512-392': 0xb351,\n  'skein512-400': 0xb352,\n  'skein512-408': 0xb353,\n  'skein512-416': 0xb354,\n  'skein512-424': 0xb355,\n  'skein512-432': 0xb356,\n  'skein512-440': 0xb357,\n  'skein512-448': 0xb358,\n  'skein512-456': 0xb359,\n  'skein512-464': 0xb35a,\n  'skein512-472': 0xb35b,\n  'skein512-480': 0xb35c,\n  'skein512-488': 0xb35d,\n  'skein512-496': 0xb35e,\n  'skein512-504': 0xb35f,\n  'skein512-512': 0xb360,\n  'skein1024-8': 0xb361,\n  'skein1024-16': 0xb362,\n  'skein1024-24': 0xb363,\n  'skein1024-32': 0xb364,\n  'skein1024-40': 0xb365,\n  'skein1024-48': 0xb366,\n  'skein1024-56': 0xb367,\n  'skein1024-64': 0xb368,\n  'skein1024-72': 0xb369,\n  'skein1024-80': 0xb36a,\n  'skein1024-88': 0xb36b,\n  'skein1024-96': 0xb36c,\n  'skein1024-104': 0xb36d,\n  'skein1024-112': 0xb36e,\n  'skein1024-120': 0xb36f,\n  'skein1024-128': 0xb370,\n  'skein1024-136': 0xb371,\n  'skein1024-144': 0xb372,\n  'skein1024-152': 0xb373,\n  'skein1024-160': 0xb374,\n  'skein1024-168': 0xb375,\n  'skein1024-176': 0xb376,\n  'skein1024-184': 0xb377,\n  'skein1024-192': 0xb378,\n  'skein1024-200': 0xb379,\n  'skein1024-208': 0xb37a,\n  'skein1024-216': 0xb37b,\n  'skein1024-224': 0xb37c,\n  'skein1024-232': 0xb37d,\n  'skein1024-240': 0xb37e,\n  'skein1024-248': 0xb37f,\n  'skein1024-256': 0xb380,\n  'skein1024-264': 0xb381,\n  'skein1024-272': 0xb382,\n  'skein1024-280': 0xb383,\n  'skein1024-288': 0xb384,\n  'skein1024-296': 0xb385,\n  'skein1024-304': 0xb386,\n  'skein1024-312': 0xb387,\n  'skein1024-320': 0xb388,\n  'skein1024-328': 0xb389,\n  'skein1024-336': 0xb38a,\n  'skein1024-344': 0xb38b,\n  'skein1024-352': 0xb38c,\n  'skein1024-360': 0xb38d,\n  'skein1024-368': 0xb38e,\n  'skein1024-376': 0xb38f,\n  'skein1024-384': 0xb390,\n  'skein1024-392': 0xb391,\n  'skein1024-400': 0xb392,\n  'skein1024-408': 0xb393,\n  'skein1024-416': 0xb394,\n  'skein1024-424': 0xb395,\n  'skein1024-432': 0xb396,\n  'skein1024-440': 0xb397,\n  'skein1024-448': 0xb398,\n  'skein1024-456': 0xb399,\n  'skein1024-464': 0xb39a,\n  'skein1024-472': 0xb39b,\n  'skein1024-480': 0xb39c,\n  'skein1024-488': 0xb39d,\n  'skein1024-496': 0xb39e,\n  'skein1024-504': 0xb39f,\n  'skein1024-512': 0xb3a0,\n  'skein1024-520': 0xb3a1,\n  'skein1024-528': 0xb3a2,\n  'skein1024-536': 0xb3a3,\n  'skein1024-544': 0xb3a4,\n  'skein1024-552': 0xb3a5,\n  'skein1024-560': 0xb3a6,\n  'skein1024-568': 0xb3a7,\n  'skein1024-576': 0xb3a8,\n  'skein1024-584': 0xb3a9,\n  'skein1024-592': 0xb3aa,\n  'skein1024-600': 0xb3ab,\n  'skein1024-608': 0xb3ac,\n  'skein1024-616': 0xb3ad,\n  'skein1024-624': 0xb3ae,\n  'skein1024-632': 0xb3af,\n  'skein1024-640': 0xb3b0,\n  'skein1024-648': 0xb3b1,\n  'skein1024-656': 0xb3b2,\n  'skein1024-664': 0xb3b3,\n  'skein1024-672': 0xb3b4,\n  'skein1024-680': 0xb3b5,\n  'skein1024-688': 0xb3b6,\n  'skein1024-696': 0xb3b7,\n  'skein1024-704': 0xb3b8,\n  'skein1024-712': 0xb3b9,\n  'skein1024-720': 0xb3ba,\n  'skein1024-728': 0xb3bb,\n  'skein1024-736': 0xb3bc,\n  'skein1024-744': 0xb3bd,\n  'skein1024-752': 0xb3be,\n  'skein1024-760': 0xb3bf,\n  'skein1024-768': 0xb3c0,\n  'skein1024-776': 0xb3c1,\n  'skein1024-784': 0xb3c2,\n  'skein1024-792': 0xb3c3,\n  'skein1024-800': 0xb3c4,\n  'skein1024-808': 0xb3c5,\n  'skein1024-816': 0xb3c6,\n  'skein1024-824': 0xb3c7,\n  'skein1024-832': 0xb3c8,\n  'skein1024-840': 0xb3c9,\n  'skein1024-848': 0xb3ca,\n  'skein1024-856': 0xb3cb,\n  'skein1024-864': 0xb3cc,\n  'skein1024-872': 0xb3cd,\n  'skein1024-880': 0xb3ce,\n  'skein1024-888': 0xb3cf,\n  'skein1024-896': 0xb3d0,\n  'skein1024-904': 0xb3d1,\n  'skein1024-912': 0xb3d2,\n  'skein1024-920': 0xb3d3,\n  'skein1024-928': 0xb3d4,\n  'skein1024-936': 0xb3d5,\n  'skein1024-944': 0xb3d6,\n  'skein1024-952': 0xb3d7,\n  'skein1024-960': 0xb3d8,\n  'skein1024-968': 0xb3d9,\n  'skein1024-976': 0xb3da,\n  'skein1024-984': 0xb3db,\n  'skein1024-992': 0xb3dc,\n  'skein1024-1000': 0xb3dd,\n  'skein1024-1008': 0xb3de,\n  'skein1024-1016': 0xb3df,\n  'skein1024-1024': 0xb3e0,\n  'poseidon-bls12_381-a2-fc1': 0xb401,\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402\n})\n\nmodule.exports = { names }\n", "'use strict';\n\nfunction base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n\nmodule.exports = _brrp__multiformats_scope_baseX;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\n\nexports.coerce = coerce;\nexports.empty = empty;\nexports.equals = equals;\nexports.fromHex = fromHex;\nexports.fromString = fromString;\nexports.isBinary = isBinary;\nexports.toHex = toHex;\nexports.toString = toString;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar baseX$1 = require('../../vendor/base-x.js');\nvar bytes = require('../bytes.js');\n\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nconst or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nclass Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nconst from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nconst baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = baseX$1(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => bytes.coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nconst rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};\n\nexports.Codec = Codec;\nexports.baseX = baseX;\nexports.from = from;\nexports.or = or;\nexports.rfc4648 = rfc4648;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\nvar bytes = require('../bytes.js');\n\nconst identity = base.from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => bytes.toString(buf),\n  decode: str => bytes.fromString(str)\n});\n\nexports.identity = identity;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base2 = base.rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});\n\nexports.base2 = base2;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base8 = base.rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});\n\nexports.base8 = base8;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base10 = base.baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});\n\nexports.base10 = base10;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base16 = base.rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nconst base16upper = base.rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});\n\nexports.base16 = base16;\nexports.base16upper = base16upper;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base32 = base.rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nconst base32upper = base.rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nconst base32pad = base.rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nconst base32padupper = base.rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nconst base32hex = base.rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nconst base32hexupper = base.rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nconst base32hexpad = base.rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nconst base32hexpadupper = base.rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nconst base32z = base.rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});\n\nexports.base32 = base32;\nexports.base32hex = base32hex;\nexports.base32hexpad = base32hexpad;\nexports.base32hexpadupper = base32hexpadupper;\nexports.base32hexupper = base32hexupper;\nexports.base32pad = base32pad;\nexports.base32padupper = base32padupper;\nexports.base32upper = base32upper;\nexports.base32z = base32z;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base36 = base.baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nconst base36upper = base.baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n\nexports.base36 = base36;\nexports.base36upper = base36upper;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base58btc = base.baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nconst base58flickr = base.baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n\nexports.base58btc = base58btc;\nexports.base58flickr = base58flickr;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base64 = base.rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nconst base64pad = base.rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nconst base64url = base.rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nconst base64urlpad = base.rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});\n\nexports.base64 = base64;\nexports.base64pad = base64pad;\nexports.base64url = base64url;\nexports.base64urlpad = base64urlpad;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nconst base256emoji = base.from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});\n\nexports.base256emoji = base256emoji;\n", "'use strict';\n\nvar encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nvar varint$1 = _brrp_varint;\n\nmodule.exports = varint$1;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar varint$1 = require('../vendor/varint.js');\n\nconst decode = (data, offset = 0) => {\n  const code = varint$1.decode(data, offset);\n  return [\n    code,\n    varint$1.decode.bytes\n  ];\n};\nconst encodeTo = (int, target, offset = 0) => {\n  varint$1.encode(int, target, offset);\n  return target;\n};\nconst encodingLength = int => {\n  return varint$1.encodingLength(int);\n};\n\nexports.decode = decode;\nexports.encodeTo = encodeTo;\nexports.encodingLength = encodingLength;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('../bytes.js');\nvar varint = require('../varint.js');\n\nconst create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nconst decode = multihash => {\n  const bytes$1 = bytes.coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes$1);\n  const [size, digestOffset] = varint.decode(bytes$1.subarray(sizeOffset));\n  const digest = bytes$1.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes$1);\n};\nconst equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && bytes.equals(a.bytes, b.bytes);\n  }\n};\nclass Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}\n\nexports.Digest = Digest;\nexports.create = create;\nexports.decode = decode;\nexports.equals = equals;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar digest = require('./digest.js');\n\nconst from = ({name, code, encode}) => new Hasher(name, code, encode);\nclass Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? digest.create(this.code, result) : result.then(digest$1 => digest.create(this.code, digest$1));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\n\nexports.Hasher = Hasher;\nexports.from = from;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar crypto = require('crypto');\nvar hasher = require('./hasher.js');\nvar bytes = require('../bytes.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar crypto__default = /*#__PURE__*/_interopDefaultLegacy(crypto);\n\nconst sha256 = hasher.from({\n  name: 'sha2-256',\n  code: 18,\n  encode: input => bytes.coerce(crypto__default[\"default\"].createHash('sha256').update(input).digest())\n});\nconst sha512 = hasher.from({\n  name: 'sha2-512',\n  code: 19,\n  encode: input => bytes.coerce(crypto__default[\"default\"].createHash('sha512').update(input).digest())\n});\n\nexports.sha256 = sha256;\nexports.sha512 = sha512;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('../bytes.js');\nvar digest$1 = require('./digest.js');\n\nconst code = 0;\nconst name = 'identity';\nconst encode = bytes.coerce;\nconst digest = input => digest$1.create(code, encode(input));\nconst identity = {\n  code,\n  name,\n  encode,\n  digest\n};\n\nexports.identity = identity;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('../bytes.js');\n\nconst name = 'raw';\nconst code = 85;\nconst encode = node => bytes.coerce(node);\nconst decode = data => bytes.coerce(data);\n\nexports.code = code;\nexports.decode = decode;\nexports.encode = encode;\nexports.name = name;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nconst name = 'json';\nconst code = 512;\nconst encode = node => textEncoder.encode(JSON.stringify(node));\nconst decode = data => JSON.parse(textDecoder.decode(data));\n\nexports.code = code;\nexports.decode = decode;\nexports.encode = encode;\nexports.name = name;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar varint = require('./varint.js');\nvar digest = require('./hashes/digest.js');\nvar base58 = require('./bases/base58.js');\nvar base32 = require('./bases/base32.js');\nvar bytes = require('./bytes.js');\n\nclass CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest: digest$1} = this.multihash;\n        const multihash = digest.create(code, digest$1);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58.base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest$1 = digest.decode(multihash);\n      return CID.create(version, code, digest$1);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes$1) {\n    const specs = CID.inspectBytes(bytes$1);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = bytes.coerce(bytes$1.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest$1 = new digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest$1) : CID.createV1(specs.codec, digest$1);\n    return [\n      cid,\n      bytes$1.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58.base58btc;\n      return [\n        base58.base58btc.prefix,\n        decoder.decode(`${ base58.base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58.base58btc.prefix: {\n      const decoder = base || base58.base58btc;\n      return [\n        base58.base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.base32.prefix: {\n      const decoder = base || base32.base32;\n      return [\n        base32.base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58.base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;\n\nexports.CID = CID;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('./cid.js');\nvar varint = require('./varint.js');\nvar bytes = require('./bytes.js');\nvar hasher = require('./hashes/hasher.js');\nvar digest = require('./hashes/digest.js');\n\n\n\nexports.CID = cid.CID;\nexports.varint = varint;\nexports.bytes = bytes;\nexports.hasher = hasher;\nexports.digest = digest;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar identity = require('./bases/identity.js');\nvar base2 = require('./bases/base2.js');\nvar base8 = require('./bases/base8.js');\nvar base10 = require('./bases/base10.js');\nvar base16 = require('./bases/base16.js');\nvar base32 = require('./bases/base32.js');\nvar base36 = require('./bases/base36.js');\nvar base58 = require('./bases/base58.js');\nvar base64 = require('./bases/base64.js');\nvar base256emoji = require('./bases/base256emoji.js');\nvar sha2 = require('./hashes/sha2.js');\nvar identity$1 = require('./hashes/identity.js');\nvar raw = require('./codecs/raw.js');\nvar json = require('./codecs/json.js');\nrequire('./index.js');\nvar cid = require('./cid.js');\nvar hasher = require('./hashes/hasher.js');\nvar digest = require('./hashes/digest.js');\nvar varint = require('./varint.js');\nvar bytes = require('./bytes.js');\n\nconst bases = {\n  ...identity,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity$1\n};\nconst codecs = {\n  raw,\n  json\n};\n\nexports.CID = cid.CID;\nexports.hasher = hasher;\nexports.digest = digest;\nexports.varint = varint;\nexports.bytes = bytes;\nexports.bases = bases;\nexports.codecs = codecs;\nexports.hashes = hashes;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}\n\nexports.asUint8Array = asUint8Array;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar asUint8array = require('./util/as-uint8array.js');\n\nfunction alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8array.asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8array.asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}\n\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\n", "'use strict';\n\nvar basics = require('multiformats/basics');\nvar alloc = require('../alloc.js');\n\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = alloc.allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: basics.bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...basics.bases\n};\n\nmodule.exports = BASES;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bases = require('./util/bases.js');\n\nfunction toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}\n\nexports.toString = toString;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bases = require('./util/bases.js');\nvar asUint8array = require('./util/as-uint8array.js');\n\nfunction fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8array.asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}\n\nexports.fromString = fromString;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar alloc = require('./alloc.js');\nvar asUint8array = require('./util/as-uint8array.js');\n\nfunction concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = alloc.allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return asUint8array.asUint8Array(output);\n}\n\nexports.concat = concat;\n", "/**\n * Multihash implementation in JavaScript.\n */\n'use strict'\n\nconst multibase = require('multibase')\nconst varint = require('varint')\nconst { names } = require('./constants')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\nconst { concat: uint8ArrayConcat } = require('uint8arrays/concat')\n\nconst codes = /** @type {import('./types').CodeNameMap} */({})\n\n// eslint-disable-next-line guard-for-in\nfor (const key in names) {\n  const name = /** @type {HashName} */(key)\n  codes[names[name]] = name\n}\nObject.freeze(codes)\n\n/**\n * Convert the given multihash to a hex encoded string.\n *\n * @param {Uint8Array} hash\n * @returns {string}\n */\nfunction toHexString (hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array')\n  }\n\n  return uint8ArrayToString(hash, 'base16')\n}\n\n/**\n * Convert the given hex encoded string to a multihash.\n *\n * @param {string} hash\n * @returns {Uint8Array}\n */\nfunction fromHexString (hash) {\n  return uint8ArrayFromString(hash, 'base16')\n}\n\n/**\n * Convert the given multihash to a base58 encoded string.\n *\n * @param {Uint8Array} hash\n * @returns {string}\n */\nfunction toB58String (hash) {\n  if (!(hash instanceof Uint8Array)) {\n    throw new Error('must be passed a Uint8Array')\n  }\n\n  return uint8ArrayToString(multibase.encode('base58btc', hash)).slice(1)\n}\n\n/**\n * Convert the given base58 encoded string to a multihash.\n *\n * @param {string|Uint8Array} hash\n * @returns {Uint8Array}\n */\nfunction fromB58String (hash) {\n  const encoded = hash instanceof Uint8Array\n    ? uint8ArrayToString(hash)\n    : hash\n\n  return multibase.decode('z' + encoded)\n}\n\n/**\n * Decode a hash from the given multihash.\n *\n * @param {Uint8Array} bytes\n * @returns {{code: HashCode, name: HashName, length: number, digest: Uint8Array}} result\n */\nfunction decode (bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new Error('multihash must be a Uint8Array')\n  }\n\n  if (bytes.length < 2) {\n    throw new Error('multihash too short. must be > 2 bytes.')\n  }\n\n  const code = /** @type {HashCode} */(varint.decode(bytes))\n  if (!isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\n  }\n  bytes = bytes.slice(varint.decode.bytes)\n\n  const len = varint.decode(bytes)\n  if (len < 0) {\n    throw new Error(`multihash invalid length: ${len}`)\n  }\n  bytes = bytes.slice(varint.decode.bytes)\n\n  if (bytes.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${uint8ArrayToString(bytes, 'base16')}`)\n  }\n\n  return {\n    code,\n    name: codes[code],\n    length: len,\n    digest: bytes\n  }\n}\n\n/**\n * Encode a hash digest along with the specified function code.\n *\n * > **Note:** the length is derived from the length of the digest itself.\n *\n * @param {Uint8Array} digest\n * @param {HashName | HashCode} code\n * @param {number} [length]\n * @returns {Uint8Array}\n */\nfunction encode (digest, code, length) {\n  if (!digest || code === undefined) {\n    throw new Error('multihash encode requires at least two args: digest, code')\n  }\n\n  // ensure it's a hashfunction code.\n  const hashfn = coerceCode(code)\n\n  if (!(digest instanceof Uint8Array)) {\n    throw new Error('digest should be a Uint8Array')\n  }\n\n  if (length == null) {\n    length = digest.length\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.')\n  }\n\n  const hash = varint.encode(hashfn)\n  const len = varint.encode(length)\n  return uint8ArrayConcat([hash, len, digest], hash.length + len.length + digest.length)\n}\n\n/**\n * Converts a hash function name into the matching code.\n * If passed a number it will return the number if it's a valid code.\n *\n * @param {HashName | number} name\n * @returns {number}\n */\nfunction coerceCode (name) {\n  let code = name\n\n  if (typeof name === 'string') {\n    if (names[name] === undefined) {\n      throw new Error(`Unrecognized hash function named: ${name}`)\n    }\n    code = names[name]\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\n  }\n\n  // @ts-ignore\n  if (codes[code] === undefined && !isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`)\n  }\n\n  return code\n}\n\n/**\n * Checks if a code is part of the app range\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction isAppCode (code) {\n  return code > 0 && code < 0x10\n}\n\n/**\n * Checks whether a multihash code is valid.\n *\n * @param {HashCode} code\n * @returns {boolean}\n */\nfunction isValidCode (code) {\n  if (isAppCode(code)) {\n    return true\n  }\n\n  if (codes[code]) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\n *\n * @param {Uint8Array} multihash\n * @returns {void}\n * @throws {Error}\n */\nfunction validate (multihash) {\n  decode(multihash) // throws if bad.\n}\n\n/**\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\n *\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n * @throws {Error}\n */\nfunction prefix (multihash) {\n  validate(multihash)\n\n  return multihash.subarray(0, 2)\n}\n\nmodule.exports = {\n  names,\n  codes,\n  toHexString,\n  fromHexString,\n  toB58String,\n  fromB58String,\n  decode,\n  encode,\n  coerceCode,\n  isAppCode,\n  validate,\n  prefix,\n  isValidCode\n}\n\n/**\n * @typedef { import(\"./constants\").HashCode } HashCode\n * @typedef { import(\"./constants\").HashName } HashName\n */\n", "export * from './dht.js';\nexport * from './did-dht.js';\nexport * from './did-ion.js';\nexport * from './did-key.js';\nexport * from './did-resolver.js';\nexport * from './resolver-cache-level.js';\nexport * from './resolver-cache-noop.js';\nexport * from './types.js';\nexport * as utils from './utils.js';", "import type { Packet, TxtAnswer } from 'dns-packet';\nimport type { PublicKeyJwk, Web5Crypto} from '@web5/crypto';\n\nimport { Jose } from '@web5/crypto';\nimport { Convert } from '@web5/common';\nimport { Pkarr, SignedPacket, z32 } from 'pkarr';\nimport dns, { AUTHORITATIVE_ANSWER } from 'dns-packet';\n\nimport type { DidDocument } from './types.js';\n\nconst PKARR_RELAY = 'https://diddht.tbddev.org';\nconst TTL = 7200;\n\n/**\n * A class to handle operations related to DHT-based Decentralized Identifiers (DIDs).\n * It provides methods to:\n * - Parse a DNS packet into a DID Document.\n * - Retrieve a DID Document from the DHT.\n * - Publish a DID Document to the DHT.\n * - Convert a DID Document to a DNS packet.\n *\n * The class assumes that DIDs and DID Documents are compliant with the did:dht specification.\n */\nexport class DidDht {\n\n  /**\n   * Parses a DNS packet into a DID Document.\n   * @param did The DID of the document.\n   * @param packet A DNS packet to parse into a DID Document.\n   * @returns A Promise that resolves to the parsed DidDocument.\n   */\n  public static async fromDnsPacket({ did, packet }: {\n    did: string,\n    packet: Packet\n  }): Promise<DidDocument> {\n    const document: Partial<DidDocument> = {\n      id: did,\n    };\n\n    const keyLookup = new Map<string, string>();\n\n    for (const answer of packet.answers) {\n      if (answer.type !== 'TXT') continue;\n\n      const dataStr = answer.data?.toString();\n      // Extracts 'k' or 's' from \"_k0._did\" or \"_s0._did\"\n      const recordType = answer.name?.split('.')[0].substring(1, 2);\n\n      /*eslint-disable no-case-declarations*/\n      switch (recordType) {\n        case 'k': {\n          const { id, t, k } = DidDht.parseTxtData({ data: dataStr });\n          const keyConfigurations: { [keyType: string]: Partial<PublicKeyJwk> } = {\n            '0': {\n              crv : 'Ed25519',\n              kty : 'OKP',\n              alg : 'EdDSA'\n            },\n            '1': {\n              crv : 'secp256k1',\n              kty : 'EC',\n              alg : 'ES256K'\n            }\n          };\n          const keyConfig = keyConfigurations[t];\n          if (!keyConfig) {\n            throw new Error('Unsupported key type');\n          }\n\n          const publicKeyJwk = await Jose.keyToJwk({\n            ...keyConfig,\n            kid         : id,\n            keyMaterial : Convert.base64Url(k).toUint8Array(),\n            keyType     : 'public'\n          }) as PublicKeyJwk;\n\n          if (!document.verificationMethod) {\n            document.verificationMethod = [];\n          }\n          document.verificationMethod.push({\n            id           : `${did}#${id}`,\n            type         : 'JsonWebKey2020',\n            controller   : did,\n            publicKeyJwk : publicKeyJwk,\n          });\n          keyLookup.set(answer.name, id);\n\n          break;\n        }\n\n        case 's': {\n          const {id: sId, t: sType, uri} = DidDht.parseTxtData({ data: dataStr });\n\n          if (!document.service) {\n            document.service = [];\n          }\n          document.service.push({\n            id              : `${did}#${sId}`,\n            type            : sType,\n            serviceEndpoint : uri\n          });\n\n          break;\n        }\n      }\n    }\n\n    // Extract relationships from root record\n    const didSuffix = did.split('did:dht:')[1];\n    const potentialRootNames = ['_did', `_did.${didSuffix}`];\n\n    let actualRootName = null;\n    const root = packet.answers\n      .filter(answer => {\n        if (potentialRootNames.includes(answer.name)) {\n          actualRootName = answer.name;\n          return true;\n        }\n        return false;\n      }) as dns.TxtAnswer[];\n\n    if (root.length === 0) {\n      throw new Error('No root record found');\n    }\n\n    if (root.length > 1) {\n      throw new Error('Multiple root records found');\n    }\n    const singleRoot = root[0] as dns.TxtAnswer;\n    const rootRecord = singleRoot.data?.toString().split(';');\n    rootRecord?.forEach(record => {\n      const [type, ids] = record.split('=');\n      let idList = ids?.split(',').map(id => `#${keyLookup.get(`_${id}.${actualRootName}`)}`);\n      switch (type) {\n        case 'auth':\n          document.authentication = idList;\n          break;\n        case 'asm':\n          document.assertionMethod = idList;\n          break;\n        case 'agm':\n          document.keyAgreement = idList;\n          break;\n        case 'inv':\n          document.capabilityInvocation = idList;\n          break;\n        case 'del':\n          document.capabilityDelegation = idList;\n          break;\n      }\n    });\n\n    return document as DidDocument;\n  }\n\n  /**\n   * Retrieves a DID Document from the DHT.\n   *\n   * @param did The DID of the document to retrieve.\n   * @param relay The relay to use to retrieve the document; defaults to `PKARR_RELAY`.\n   * @returns A Promise that resolves to the retrieved DidDocument.\n   */\n  public static async getDidDocument({ did, relay = PKARR_RELAY }: {\n      did: string,\n      relay?: string\n    }): Promise<DidDocument> {\n    const didFragment = did.replace('did:dht:', '');\n    const publicKeyBytes = new Uint8Array(z32.decode(didFragment));\n    const resolved = await Pkarr.relayGet(relay, publicKeyBytes);\n    if (resolved) {\n      return await DidDht.fromDnsPacket({ did, packet: resolved.packet() });\n    }\n    throw new Error('No packet found');\n  }\n\n  /**\n   * Publishes a DID Document to the DHT.\n   *\n   * @param keyPair The key pair to sign the document with.\n   * @param didDocument The DID Document to publish.\n   * @param relay The relay to use to retrieve the document; defaults to `PKARR_RELAY`.\n   * @returns A boolean indicating the success of the publishing operation.\n   */\n  public static async publishDidDocument({ keyPair, didDocument, relay = PKARR_RELAY }: {\n    didDocument: DidDocument,\n    keyPair: Web5Crypto.CryptoKeyPair,\n    relay?: string\n  }): Promise<boolean> {\n    const packet = await DidDht.toDnsPacket({ didDocument });\n    const pkarrKeypair = {\n      publicKey : keyPair.publicKey.material,\n      secretKey : new Uint8Array([...keyPair.privateKey.material, ...keyPair.publicKey.material])\n    };\n    const signedPacket = SignedPacket.fromPacket(pkarrKeypair, packet);\n    const results = await Pkarr.relayPut(relay, signedPacket);\n\n    return results.ok;\n  }\n\n  /**\n   * Converts a DID Document to a DNS packet according to the did:dht spec.\n   *\n   * @param didDocument The DID Document to convert.\n   * @returns A DNS packet converted from the DID Document.\n   */\n  public static async toDnsPacket({ didDocument }: { didDocument: DidDocument }): Promise<Packet> {\n    const packet: Partial<Packet> = {\n      id      : 0,\n      type    : 'response',\n      flags   : AUTHORITATIVE_ANSWER,\n      answers : []\n    };\n\n    const vmIds: string[] = [];\n    const svcIds: string[] = [];\n    const rootRecord: string[] = [];\n    const keyLookup = new Map<string, string>();\n\n    // Add key records for each verification method\n    for (const vm of didDocument.verificationMethod) {\n      const index = didDocument.verificationMethod.indexOf(vm);\n      const recordIdentifier = `k${index}`;\n      let vmId = DidDht.identifierFragment({ identifier: vm.id });\n      keyLookup.set(vmId, recordIdentifier);\n\n      let keyType: number;\n      switch (vm.publicKeyJwk.alg) {\n        case 'EdDSA':\n          keyType = 0;\n          break;\n        case 'ES256K':\n          keyType = 1;\n          break;\n        default:\n          keyType = 0; // Default value or throw an error if needed\n      }\n\n      const cryptoKey = await Jose.jwkToCryptoKey({ key: vm.publicKeyJwk });\n      const keyBase64Url = Convert.uint8Array(cryptoKey.material).toBase64Url();\n\n      const keyRecord: TxtAnswer = {\n        type : 'TXT',\n        name : `_${recordIdentifier}._did`,\n        ttl  : TTL,\n        data : `id=${vmId},t=${keyType},k=${keyBase64Url}`\n      };\n\n      packet.answers.push(keyRecord);\n      vmIds.push(recordIdentifier);\n    }\n\n    // Add service records\n    didDocument.service?.forEach((service, index) => {\n      const recordIdentifier = `s${index}`;\n      let sId = DidDht.identifierFragment({ identifier: service.id });\n      const serviceRecord: TxtAnswer = {\n        type : 'TXT',\n        name : `_${recordIdentifier}._did`,\n        ttl  : TTL,\n        data : `id=${sId},t=${service.type},uri=${service.serviceEndpoint}`\n      };\n\n      packet.answers.push(serviceRecord);\n      svcIds.push(recordIdentifier);\n    });\n\n    // add root record for vms and svcs\n    if (vmIds.length) {\n      rootRecord.push(`vm=${vmIds.join(',')}`);\n    }\n    if (svcIds.length) {\n      rootRecord.push(`svc=${svcIds.join(',')}`);\n    }\n\n    // add verification relationships\n    if (didDocument.authentication) {\n      const authIds: string[] = didDocument.authentication\n        .map(id => DidDht.identifierFragment({ identifier: id }))\n        .filter(id => keyLookup.has(id))\n        .map(id => keyLookup.get(id) as string);\n      if (authIds.length) {\n        rootRecord.push(`auth=${authIds.join(',')}`);\n      }\n    }\n    if (didDocument.assertionMethod) {\n      const authIds: string[] = didDocument.assertionMethod\n        .map(id => DidDht.identifierFragment({ identifier: id }))\n        .filter(id => keyLookup.has(id))\n        .map(id => keyLookup.get(id) as string);\n      if (authIds.length) {\n        rootRecord.push(`asm=${authIds.join(',')}`);\n      }\n    }\n    if (didDocument.keyAgreement) {\n      const authIds: string[] = didDocument.keyAgreement\n        .map(id => DidDht.identifierFragment({ identifier: id }))\n        .filter(id => keyLookup.has(id))\n        .map(id => keyLookup.get(id) as string);\n      if (authIds.length) {\n        rootRecord.push(`agm=${authIds.join(',')}`);\n      }\n    }\n    if (didDocument.capabilityInvocation) {\n      const authIds: string[] = didDocument.capabilityInvocation\n        .map(id => DidDht.identifierFragment({ identifier: id }))\n        .filter(id => keyLookup.has(id))\n        .map(id => keyLookup.get(id) as string);\n      if (authIds.length) {\n        rootRecord.push(`inv=${authIds.join(',')}`);\n      }\n    }\n    if (didDocument.capabilityDelegation) {\n      const authIds: string[] = didDocument.capabilityDelegation\n        .map(id => DidDht.identifierFragment({ identifier: id }))\n        .filter(id => keyLookup.has(id))\n        .map(id => keyLookup.get(id) as string);\n      if (authIds.length) {\n        rootRecord.push(`del=${authIds.join(',')}`);\n      }\n    }\n\n    // Add root record\n    packet.answers.push({\n      type : 'TXT',\n      name : '_did',\n      ttl  : TTL,\n      data : rootRecord.join(';')\n    });\n\n    return packet as Packet;\n  }\n\n  /**\n   * Extracts the fragment from a DID.\n   *\n   * @param identifier The DID to extract the fragment from.\n   * @returns The fragment from the DID or the complete DID if no fragment exists.\n   */\n  private static identifierFragment({ identifier }: { identifier: string }): string {\n    return identifier.includes('#') ? identifier.substring(identifier.indexOf('#') + 1) : identifier;\n  }\n\n  /**\n   * Parses TXT data from a DNS answer to extract key or service information.\n   *\n   * @param data The TXT record string data containing key-value pairs separated by commas.\n   * @returns An object containing parsed attributes such as 'id', 't', 'k', and 'uri'.\n  */\n  private static parseTxtData({ data }: { data: string }): { [key: string]: string } {\n    return data.split(',').reduce((acc, pair) => {\n      const [key, value] = pair.split('=');\n      acc[key] = value;\n      return acc;\n    }, {} as { [key: string]: string });\n  }\n}", "import { EventEmitter } from 'events'\nimport bencode from 'bencode'\nimport Debug from 'debug'\nimport KBucket from 'k-bucket'\nimport krpc from 'k-rpc'\nimport low from 'last-one-wins'\nimport LRU from 'lru'\nimport randombytes from 'randombytes'\nimport records from 'record-cache'\nimport crypto from 'crypto'\n\nconst debug = Debug('bittorrent-dht')\n\nconst ROTATE_INTERVAL = 5 * 60 * 1000 // rotate secrets every 5 minutes\nconst BUCKET_OUTDATED_TIMESPAN = 15 * 60 * 1000 // check nodes in bucket in 15 minutes old buckets\n\nclass DHT extends EventEmitter {\n  constructor (opts = {}) {\n    super()\n\n    this._tables = new LRU({ maxAge: ROTATE_INTERVAL, max: opts.maxTables || 1000 })\n    this._values = new LRU(opts.maxValues || 1000)\n    this._peers = records({\n      maxAge: opts.maxAge || 0,\n      maxSize: opts.maxPeers || 10000\n    })\n\n    this._secrets = null\n    this._hash = opts.hash || sha1\n    this._hashLength = this._hash(Buffer.from('')).length\n    this._rpc = opts.krpc || krpc(Object.assign({ idLength: this._hashLength }, opts))\n    this._rpc.on('query', onquery)\n    this._rpc.on('node', onnode)\n    this._rpc.on('warning', onwarning)\n    this._rpc.on('error', onerror)\n    this._rpc.on('listening', onlistening)\n    this._rotateSecrets()\n    this._verify = opts.verify || null\n    this._host = opts.host || null\n    this._interval = setInterval(rotateSecrets, ROTATE_INTERVAL)\n    this._runningBucketCheck = false\n    this._bucketCheckTimeout = null\n    this._bucketOutdatedTimeSpan = opts.timeBucketOutdated || BUCKET_OUTDATED_TIMESPAN\n\n    this.listening = false\n    this.destroyed = false\n    this.nodeId = this._rpc.id\n    this.nodes = this._rpc.nodes\n\n    // ensure only *one* ping it running at the time to avoid infinite async\n    // ping recursion, and make the latest one is always ran, but inbetween ones\n    // are disregarded\n    const onping = low(ping)\n\n    this._rpc.on('ping', (older, swap) => {\n      onping({ older, swap })\n    })\n\n    process.nextTick(bootstrap)\n\n    this._debug('new DHT %s', this.nodeId)\n\n    const self = this\n\n    function ping (opts, cb) {\n      const older = opts.older\n      const swap = opts.swap\n\n      self._debug('received ping', older)\n      self._checkNodes(older, false, (_, deadNode) => {\n        if (deadNode) {\n          self._debug('swaping dead node with newer', deadNode)\n          swap(deadNode)\n          return cb()\n        }\n\n        self._debug('no node added, all other nodes ok')\n        cb()\n      })\n    }\n\n    function onlistening () {\n      self.listening = true\n      self._debug('listening %d', self.address().port)\n      self.updateBucketTimestamp()\n      self._setBucketCheckInterval()\n      self.emit('listening')\n    }\n\n    function onquery (query, peer) {\n      self._onquery(query, peer)\n    }\n\n    function rotateSecrets () {\n      self._rotateSecrets()\n    }\n\n    function bootstrap () {\n      if (!self.destroyed) self._bootstrap(opts.bootstrap !== false)\n    }\n\n    function onwarning (err) {\n      self.emit('warning', err)\n    }\n\n    function onerror (err) {\n      self.emit('error', err)\n    }\n\n    function onnode (node) {\n      self.emit('node', node)\n    }\n  }\n\n  _setBucketCheckInterval () {\n    const self = this\n    const interval = 1 * 60 * 1000 // check age of bucket every minute\n\n    this._runningBucketCheck = true\n    queueNext()\n\n    function checkBucket () {\n      const diff = Date.now() - self._rpc.nodes.metadata.lastChange\n\n      if (diff < self._bucketOutdatedTimeSpan) return queueNext()\n\n      self._pingAll(() => {\n        if (self.destroyed) return\n\n        if (self.nodes.toArray().length < 1) {\n          // node is currently isolated,\n          // retry with initial bootstrap nodes\n          self._bootstrap(true)\n        }\n\n        queueNext()\n      })\n    }\n\n    function queueNext () {\n      if (!self._runningBucketCheck || self.destroyed) return\n      const nextTimeout = Math.floor(Math.random() * interval + interval / 2)\n      self._bucketCheckTimeout = setTimeout(checkBucket, nextTimeout)\n    }\n  }\n\n  _pingAll (cb) {\n    this._checkAndRemoveNodes(this.nodes.toArray(), cb)\n  }\n\n  removeBucketCheckInterval () {\n    this._runningBucketCheck = false\n    clearTimeout(this._bucketCheckTimeout)\n  }\n\n  updateBucketTimestamp () {\n    this._rpc.nodes.metadata.lastChange = Date.now()\n  }\n\n  _checkAndRemoveNodes (nodes, cb) {\n    const self = this\n\n    this._checkNodes(nodes, true, (_, node) => {\n      if (node) self.removeNode(node.id)\n      cb(null, node)\n    })\n  }\n\n  _checkNodes (nodes, force, cb) {\n    const self = this\n\n    test(nodes)\n\n    function test (acc) {\n      let current = null\n\n      while (acc.length) {\n        current = acc.pop()\n        if (!current.id || force) break\n        if (Date.now() - (current.seen || 0) > 10000) break // not pinged within 10s\n        current = null\n      }\n\n      if (!current) return cb(null)\n\n      self._sendPing(current, err => {\n        if (!err) {\n          self.updateBucketTimestamp()\n          return test(acc)\n        }\n        cb(null, current)\n      })\n    }\n  }\n\n  addNode (node) {\n    const self = this\n    if (node.id) {\n      node.id = toBuffer(node.id)\n      const old = !!this._rpc.nodes.get(node.id)\n      this._rpc.nodes.add(node)\n      if (!old) {\n        this.emit('node', node)\n        this.updateBucketTimestamp()\n      }\n      return\n    }\n    this._sendPing(node, (_, node) => {\n      if (node) self.addNode(node)\n    })\n  }\n\n  removeNode (id) {\n    this._rpc.nodes.remove(toBuffer(id))\n  }\n\n  _sendPing (node, cb) {\n    const self = this\n    const expectedId = node.id\n    this._rpc.query(node, { q: 'ping' }, (err, pong, node) => {\n      if (err) return cb(err)\n      if (!pong.r || !pong.r.id || !Buffer.isBuffer(pong.r.id) || pong.r.id.length !== self._hashLength) {\n        return cb(new Error('Bad reply'))\n      }\n      if (Buffer.isBuffer(expectedId) && !expectedId.equals(pong.r.id)) {\n        return cb(new Error('Unexpected node id'))\n      }\n\n      self.updateBucketTimestamp()\n      cb(null, {\n        id: pong.r.id,\n        host: node.host || node.address,\n        port: node.port\n      })\n    })\n  }\n\n  toJSON () {\n    const self = this\n    const values = {}\n    Object.keys(this._values.cache).forEach(key => {\n      const value = self._values.cache[key].value\n      values[key] = {\n        v: value.v.toString('hex'),\n        id: value.id.toString('hex')\n      }\n      if (value.seq != null) values[key].seq = value.seq\n      if (value.sig != null) values[key].sig = value.sig.toString('hex')\n      if (value.k != null) values[key].k = value.k.toString('hex')\n    })\n    return {\n      nodes: this._rpc.nodes.toArray().map(toNode),\n      values\n    }\n  }\n\n  put (opts, cb) {\n    if (Buffer.isBuffer(opts) || typeof opts === 'string') opts = { v: opts }\n    const isMutable = !!opts.k\n    if (opts.v === undefined) {\n      throw new Error('opts.v not given')\n    }\n    if (opts.v.length >= 1000) {\n      throw new Error('v must be less than 1000 bytes in put()')\n    }\n    if (isMutable && opts.cas !== undefined && typeof opts.cas !== 'number') {\n      throw new Error('opts.cas must be an integer if provided')\n    }\n    if (isMutable && opts.k.length !== 32) {\n      throw new Error('opts.k ed25519 public key must be 32 bytes')\n    }\n    if (isMutable && typeof opts.sign !== 'function' && !Buffer.isBuffer(opts.sig)) {\n      throw new Error('opts.sign function or options.sig signature is required for mutable put')\n    }\n    if (isMutable && opts.salt && opts.salt.length > 64) {\n      throw new Error('opts.salt is > 64 bytes long')\n    }\n    if (isMutable && opts.seq === undefined) {\n      throw new Error('opts.seq not provided for a mutable update')\n    }\n    if (isMutable && typeof opts.seq !== 'number') {\n      throw new Error('opts.seq not an integer')\n    }\n\n    return this._put(opts, cb)\n  }\n\n  _put (opts, cb) {\n    if (!cb) cb = noop\n\n    const isMutable = !!opts.k\n    const v = typeof opts.v === 'string' ? Buffer.from(opts.v) : opts.v\n    const key = isMutable\n      ? this._hash(opts.salt ? Buffer.concat([opts.k, opts.salt]) : opts.k)\n      : this._hash(bencode.encode(v))\n\n    const table = this._tables.get(key.toString('hex'))\n    if (!table) return this._preput(key, opts, cb)\n\n    const message = {\n      q: 'put',\n      a: {\n        id: this._rpc.id,\n        token: null, // queryAll sets this\n        v\n      }\n    }\n\n    if (isMutable) {\n      if (typeof opts.cas === 'number') message.a.cas = opts.cas\n      if (opts.salt) message.a.salt = opts.salt\n      message.a.k = opts.k\n      message.a.seq = opts.seq\n      if (typeof opts.sign === 'function') message.a.sig = opts.sign(encodeSigData(message.a))\n      else if (Buffer.isBuffer(opts.sig)) message.a.sig = opts.sig\n    } else {\n      this._values.set(key.toString('hex'), message.a)\n    }\n\n    this._rpc.queryAll(table.closest(key), message, null, (err, n) => {\n      if (err) return cb(err, key, n)\n      cb(null, key, n)\n    })\n\n    return key\n  }\n\n  _preput (key, opts, cb) {\n    const self = this\n\n    this._closest(key, {\n      q: 'get',\n      a: {\n        id: this._rpc.id,\n        target: key\n      }\n    }, null, (err, n) => {\n      if (err) return cb(err)\n      self.put(opts, cb)\n    })\n\n    return key\n  }\n\n  get (key, opts, cb) {\n    key = toBuffer(key)\n    if (typeof opts === 'function') {\n      cb = opts\n      opts = null\n    }\n\n    if (!opts) opts = {}\n    const verify = opts.verify || this._verify\n    const hash = this._hash\n    let value = this._values.get(key.toString('hex')) || null\n\n    if (value && (opts.cache !== false)) {\n      value = createGetResponse(this._rpc.id, null, value)\n      return process.nextTick(done)\n    }\n\n    this._closest(key, {\n      q: 'get',\n      a: {\n        id: this._rpc.id,\n        target: key\n      }\n    }, onreply, done)\n\n    function done (err) {\n      if (err) return cb(err)\n      cb(null, value)\n    }\n\n    function onreply (message) {\n      const r = message.r\n      if (!r || !r.v) return true\n\n      const isMutable = r.k || r.sig\n\n      if (opts.salt) r.salt = Buffer.from(opts.salt)\n\n      if (isMutable) {\n        if (!verify || !r.sig || !r.k) return true\n        if (!verify(r.sig, encodeSigData(r), r.k)) return true\n        if (hash(r.salt ? Buffer.concat([r.k, r.salt]) : r.k).equals(key)) {\n          if (!value || r.seq > value.seq) value = r\n        }\n      } else {\n        if (hash(bencode.encode(r.v)).equals(key)) {\n          value = r\n          return false\n        }\n      }\n\n      return true\n    }\n  }\n\n  announce (infoHash, port, cb) {\n    if (typeof port === 'function') return this.announce(infoHash, 0, port)\n    infoHash = toBuffer(infoHash)\n    if (!cb) cb = noop\n\n    const table = this._tables.get(infoHash.toString('hex'))\n    if (!table) return this._preannounce(infoHash, port, cb)\n\n    if (this._host) {\n      const dhtPort = this.listening ? this.address().port : 0\n      this._addPeer(\n        { host: this._host, port: port || dhtPort },\n        infoHash,\n        { host: this._host, port: dhtPort }\n      )\n    }\n\n    const message = {\n      q: 'announce_peer',\n      a: {\n        id: this._rpc.id,\n        token: null, // queryAll sets this\n        info_hash: infoHash,\n        port,\n        implied_port: port ? 0 : 1\n      }\n    }\n\n    this._debug('announce %s %d', infoHash, port)\n    this._rpc.queryAll(table.closest(infoHash), message, null, cb)\n  }\n\n  _preannounce (infoHash, port, cb) {\n    const self = this\n\n    this.lookup(infoHash, err => {\n      if (self.destroyed) return cb(new Error('dht is destroyed'))\n      if (err) return cb(err)\n      self.announce(infoHash, port, cb)\n    })\n  }\n\n  lookup (infoHash, cb) {\n    infoHash = toBuffer(infoHash)\n    if (!cb) cb = noop\n    const self = this\n    let aborted = false\n\n    this._debug('lookup %s', infoHash)\n    process.nextTick(emit)\n    this._closest(infoHash, {\n      q: 'get_peers',\n      a: {\n        id: this._rpc.id,\n        info_hash: infoHash\n      }\n    }, onreply, cb)\n\n    function emit (values, from) {\n      if (!values) values = self._peers.get(infoHash.toString('hex'), 100)\n      const peers = decodePeers(values)\n      for (let i = 0; i < peers.length; i++) {\n        self.emit('peer', peers[i], infoHash, from || null)\n      }\n    }\n\n    function onreply (message, node) {\n      if (aborted) return false\n      if (message.r.values) emit(message.r.values, node)\n    }\n\n    return function abort () { aborted = true }\n  }\n\n  address () {\n    return this._rpc.address()\n  }\n\n  // listen([port], [address], [onlistening])\n  listen (...args) {\n    this._rpc.bind(...args)\n  }\n\n  destroy (cb) {\n    if (this.destroyed) {\n      if (cb) process.nextTick(cb)\n      return\n    }\n    this.destroyed = true\n    const self = this\n    clearInterval(this._interval)\n    this.removeBucketCheckInterval()\n    this._peers.destroy()\n    this._debug('destroying')\n    this._rpc.destroy(() => {\n      self.emit('close')\n      if (cb) cb()\n    })\n  }\n\n  _onquery (query, peer) {\n    if (query.q === undefined || query.q === null) return\n\n    const q = query.q.toString()\n    this._debug('received %s query from %s:%d', q, peer.address, peer.port)\n    if (!query.a) return\n\n    switch (q) {\n      case 'ping':\n        return this._rpc.response(peer, query, { id: this._rpc.id })\n\n      case 'find_node':\n        return this._onfindnode(query, peer)\n\n      case 'get_peers':\n        return this._ongetpeers(query, peer)\n\n      case 'announce_peer':\n        return this._onannouncepeer(query, peer)\n\n      case 'get':\n        return this._onget(query, peer)\n\n      case 'put':\n        return this._onput(query, peer)\n    }\n  }\n\n  _onfindnode (query, peer) {\n    const target = query.a.target\n    if (!target) return this._rpc.error(peer, query, [203, '`find_node` missing required `a.target` field'])\n\n    this.emit('find_node', target)\n\n    const nodes = this._rpc.nodes.closest(target)\n    this._rpc.response(peer, query, { id: this._rpc.id }, nodes)\n  }\n\n  _ongetpeers (query, peer) {\n    const host = peer.address || peer.host\n    const infoHash = query.a.info_hash\n    if (!infoHash) return this._rpc.error(peer, query, [203, '`get_peers` missing required `a.info_hash` field'])\n\n    this.emit('get_peers', infoHash)\n\n    const r = { id: this._rpc.id, token: this._generateToken(host) }\n    const peers = this._peers.get(infoHash.toString('hex'))\n\n    if (peers.length) {\n      r.values = peers\n      this._rpc.response(peer, query, r)\n    } else {\n      this._rpc.response(peer, query, r, this._rpc.nodes.closest(infoHash))\n    }\n  }\n\n  _onannouncepeer (query, peer) {\n    const host = peer.address || peer.host\n    const port = query.a.implied_port ? peer.port : query.a.port\n    if (!port || typeof port !== 'number' || port <= 0 || port > 65535) return\n    const infoHash = query.a.info_hash\n    const token = query.a.token\n    if (!infoHash || !token) return\n\n    if (!this._validateToken(host, token)) {\n      return this._rpc.error(peer, query, [203, 'cannot `announce_peer` with bad token'])\n    }\n\n    this.emit('announce_peer', infoHash, { host, port: peer.port })\n\n    this._addPeer({ host, port }, infoHash, { host, port: peer.port })\n    this._rpc.response(peer, query, { id: this._rpc.id })\n  }\n\n  _addPeer (peer, infoHash, from) {\n    this._peers.add(infoHash.toString('hex'), encodePeer(peer.host, peer.port))\n    this.emit('announce', peer, infoHash, from)\n  }\n\n  _onget (query, peer) {\n    const host = peer.address || peer.host\n    const target = query.a.target\n    if (!target) return\n    const token = this._generateToken(host)\n    const value = this._values.get(target.toString('hex'))\n\n    this.emit('get', target, value)\n\n    if (!value) {\n      const nodes = this._rpc.nodes.closest(target)\n      this._rpc.response(peer, query, { id: this._rpc.id, token }, nodes)\n    } else {\n      this._rpc.response(peer, query, createGetResponse(this._rpc.id, token, value))\n    }\n  }\n\n  _onput (query, peer) {\n    const host = peer.address || peer.host\n\n    const a = query.a\n    if (!a) return\n    const v = query.a.v\n    if (!v) return\n    const id = query.a.id\n    if (!id) return\n\n    const token = a.token\n    if (!token) return\n\n    if (!this._validateToken(host, token)) {\n      return this._rpc.error(peer, query, [203, 'cannot `put` with bad token'])\n    }\n    if (v.length > 1000) {\n      return this._rpc.error(peer, query, [205, 'data payload too large'])\n    }\n\n    const isMutable = !!(a.k || a.sig)\n    if (isMutable && !a.k && !a.sig) return\n\n    const key = isMutable\n      ? this._hash(a.salt ? Buffer.concat([a.k, a.salt]) : a.k)\n      : this._hash(bencode.encode(v))\n    const keyHex = key.toString('hex')\n\n    this.emit('put', key, v)\n\n    if (isMutable) {\n      if (!this._verify) return this._rpc.error(peer, query, [400, 'verification not supported'])\n      if (!this._verify(a.sig, encodeSigData(a), a.k)) return\n      const prev = this._values.get(keyHex)\n      if (prev && typeof a.cas === 'number' && prev.seq !== a.cas) {\n        return this._rpc.error(peer, query, [301, 'CAS mismatch, re-read and try again'])\n      }\n      if (prev && typeof prev.seq === 'number' && !(a.seq > prev.seq)) {\n        return this._rpc.error(peer, query, [302, 'sequence number less than current'])\n      }\n      this._values.set(keyHex, { v, k: a.k, salt: a.salt, sig: a.sig, seq: a.seq, id })\n    } else {\n      this._values.set(keyHex, { v, id })\n    }\n\n    this._rpc.response(peer, query, { id: this._rpc.id })\n  }\n\n  _bootstrap (populate) {\n    const self = this\n    if (!populate) return process.nextTick(ready)\n\n    this._rpc.populate(self._rpc.id, {\n      q: 'find_node',\n      a: {\n        id: self._rpc.id,\n        target: self._rpc.id\n      }\n    }, ready)\n\n    function ready () {\n      if (self.ready) return\n\n      self._debug('emit ready')\n      self.ready = true\n      self.emit('ready')\n    }\n  }\n\n  _closest (target, message, onmessage, cb) {\n    const self = this\n\n    const table = new KBucket({\n      localNodeId: target,\n      numberOfNodesPerKBucket: this._rpc.k\n    })\n\n    this._rpc.closest(target, message, onreply, done)\n\n    function done (err, n) {\n      if (err) return cb(err)\n      self._tables.set(target.toString('hex'), table)\n      self._debug('visited %d nodes', n)\n      cb(null, n)\n    }\n\n    function onreply (message, node) {\n      if (!message.r) return true\n\n      if (message.r.token && message.r.id && Buffer.isBuffer(message.r.id) && message.r.id.length === self._hashLength) {\n        self._debug('found node %s (target: %s)', message.r.id, target)\n        table.add({\n          id: message.r.id,\n          host: node.host || node.address,\n          port: node.port,\n          token: message.r.token\n        })\n      }\n\n      if (!onmessage) return true\n      return onmessage(message, node)\n    }\n  }\n\n  _debug () {\n    if (!debug.enabled) return\n    const args = [].slice.call(arguments)\n    args[0] = `[${this.nodeId.toString('hex').substring(0, 7)}] ${args[0]}`\n    for (let i = 1; i < args.length; i++) {\n      if (Buffer.isBuffer(args[i])) args[i] = args[i].toString('hex')\n    }\n    debug(...args)\n  }\n\n  _validateToken (host, token) {\n    const tokenA = this._generateToken(host, this._secrets[0])\n    const tokenB = this._generateToken(host, this._secrets[1])\n    return token.equals(tokenA) || token.equals(tokenB)\n  }\n\n  _generateToken (host, secret) {\n    if (!secret) secret = this._secrets[0]\n    return this._hash(Buffer.concat([Buffer.from(host), secret]))\n  }\n\n  _rotateSecrets () {\n    if (!this._secrets) {\n      this._secrets = [randombytes(this._hashLength), randombytes(this._hashLength)]\n    } else {\n      this._secrets[1] = this._secrets[0]\n      this._secrets[0] = randombytes(this._hashLength)\n    }\n  }\n}\n\nfunction noop () {}\n\nfunction sha1 (buf) {\n  return crypto.createHash('sha1').update(buf).digest()\n}\n\nfunction createGetResponse (id, token, value) {\n  const r = { id, token, v: value.v }\n  if (value.sig) {\n    r.sig = value.sig\n    r.k = value.k\n    if (typeof value.seq === 'number') r.seq = value.seq\n  }\n  return r\n}\n\nfunction encodePeer (host, port) {\n  const buf = Buffer.allocUnsafe(6)\n  const ip = host.split('.')\n  for (let i = 0; i < 4; i++) buf[i] = parseInt(ip[i] || 0, 10)\n  buf.writeUInt16BE(port, 4)\n  return buf\n}\n\nfunction decodePeers (buf) {\n  const peers = []\n\n  try {\n    for (let i = 0; i < buf.length; i++) {\n      const port = buf[i].readUInt16BE(4)\n      if (!port) continue\n      peers.push({\n        host: parseIp(buf[i], 0),\n        port\n      })\n    }\n  } catch (err) {\n    // do nothing\n  }\n\n  return peers\n}\n\nfunction parseIp (buf, offset) {\n  return `${buf[offset++]}.${buf[offset++]}.${buf[offset++]}.${buf[offset++]}`\n}\n\nfunction encodeSigData (msg) {\n  const ref = { seq: msg.seq || 0, v: msg.v }\n  if (msg.salt) ref.salt = msg.salt\n  return bencode.encode(ref).slice(1, -1)\n}\n\nfunction toNode (node) {\n  return {\n    host: node.host,\n    port: node.port\n  }\n}\n\nfunction toBuffer (str) {\n  if (Buffer.isBuffer(str)) return str\n  if (ArrayBuffer.isView(str)) return Buffer.from(str.buffer, str.byteOffset, str.byteLength)\n  if (typeof str === 'string') return Buffer.from(str, 'hex')\n  throw new Error('Pass a buffer or a string')\n}\n\nexport default DHT\n", "/* Common package for dealing with hex/string/uint8 conversions (and sha1 hashing)\r\n*\r\n* @author   Jimmy W\u00E4rting <jimmy@warting.se> (https://jimmy.warting.se/opensource)\r\n* @license  MIT\r\n*/\r\nexport const alphabet = '0123456789abcdef'\r\nconst encodeLookup = []\r\nconst decodeLookup = []\r\n\r\nfor (let i = 0; i < 256; i++) {\r\n  encodeLookup[i] = alphabet[i >> 4 & 0xf] + alphabet[i & 0xf]\r\n  if (i < 16) {\r\n    if (i < 10) {\r\n      decodeLookup[0x30 + i] = i\r\n    } else {\r\n      decodeLookup[0x61 - 10 + i] = i\r\n    }\r\n  }\r\n}\r\n\r\nexport const arr2hex = data => {\r\n  const length = data.length\r\n  let string = ''\r\n  let i = 0\r\n  while (i < length) {\r\n    string += encodeLookup[data[i++]]\r\n  }\r\n  return string\r\n}\r\n\r\nexport const hex2arr = str => {\r\n  const sizeof = str.length >> 1\r\n  const length = sizeof << 1\r\n  const array = new Uint8Array(sizeof)\r\n  let n = 0\r\n  let i = 0\r\n  while (i < length) {\r\n    array[n++] = decodeLookup[str.charCodeAt(i++)] << 4 | decodeLookup[str.charCodeAt(i++)]\r\n  }\r\n  return array\r\n}\r\n\r\nexport const concat = (chunks, size = 0) => {\r\n  const length = chunks.length || 0\r\n  if (!size) {\r\n    let i = length\r\n    while (i--) size += chunks[i].length\r\n  }\r\n  const b = new Uint8Array(size)\r\n  let offset = size\r\n  let i = length\r\n  while (i--) {\r\n    offset -= chunks[i].length\r\n    b.set(chunks[i], offset)\r\n  }\r\n\r\n  return b\r\n}\r\n\r\nexport const equal = (a, b) => {\r\n  if (a.length !== b.length) return false\r\n  for (let i = a.length; i > -1; i -= 1) {\r\n    if ((a[i] !== b[i])) return false\r\n  }\r\n  return true\r\n}\r\n", "import { createHash, randomBytes as rand } from 'node:crypto'\r\n\r\nconst decoder = new TextDecoder()\r\nexport const arr2text = (data, enc) => {\r\n  if (data.byteLength > 1024) {\r\n    if (!enc) return decoder.decode(data)\r\n    const dec = new TextDecoder(enc)\r\n    return dec.decode(data)\r\n  }\r\n  return Buffer.from(data).toString(enc || 'utf8')\r\n}\r\n\r\nexport const text2arr = str => new Uint8Array(Buffer.from(str, 'utf8'))\r\n\r\nexport const arr2base = data => Buffer.from(data).toString('base64')\r\n\r\nexport const base2arr = str => new Uint8Array(Buffer.from(str, 'base64'))\r\n\r\nexport const hex2bin = hex => Buffer.from(hex, 'hex').toString('binary')\r\n\r\nexport const bin2hex = bin => Buffer.from(bin, 'binary').toString('hex')\r\n\r\nexport const hash = async (data, format, algo = 'sha1') => {\r\n  algo = algo.replace('sha-', 'sha')\r\n  const out = createHash(algo).update(data)\r\n  return format ? out.digest(format) : new Uint8Array(out.digest().buffer)\r\n}\r\n\r\nexport const randomBytes = size => {\r\n  return new Uint8Array(rand(size))\r\n}\r\n\r\nexport * from './util.js'\r\n", "export function digitCount (value) {\n  // Add a digit for negative numbers, as the sign will be prefixed\n  const sign = value < 0 ? 1 : 0\n  // Guard against negative numbers & zero going into log10(),\n  // as that would return -Infinity\n  value = Math.abs(Number(value || 1))\n  return Math.floor(Math.log10(value)) + 1 + sign\n}\n\nexport function getType (value) {\n  if (ArrayBuffer.isView(value)) return 'arraybufferview'\n  if (Array.isArray(value)) return 'array'\n  if (value instanceof Number) return 'number'\n  if (value instanceof Boolean) return 'boolean'\n  if (value instanceof Set) return 'set'\n  if (value instanceof Map) return 'map'\n  if (value instanceof String) return 'string'\n  if (value instanceof ArrayBuffer) return 'arraybuffer'\n  return typeof value\n}\n", "import { concat, text2arr } from 'uint8-util'\nimport { getType } from './util.js'\n\n/**\n * Encodes data in bencode.\n *\n * @param  {Uint8Array|Array|String|Object|Number|Boolean} data\n * @return {Uint8Array}\n */\nfunction encode (data, buffer, offset) {\n  const buffers = []\n  let result = null\n\n  encode._encode(buffers, data)\n  result = concat(buffers)\n  encode.bytes = result.length\n\n  if (ArrayBuffer.isView(buffer)) {\n    buffer.set(result, offset)\n    return buffer\n  }\n\n  return result\n}\n\nencode.bytes = -1\nencode._floatConversionDetected = false\n\nencode._encode = function (buffers, data) {\n  if (data == null) { return }\n\n  switch (getType(data)) {\n    case 'object': encode.dict(buffers, data); break\n    case 'map': encode.dictMap(buffers, data); break\n    case 'array': encode.list(buffers, data); break\n    case 'set': encode.listSet(buffers, data); break\n    case 'string': encode.string(buffers, data); break\n    case 'number': encode.number(buffers, data); break\n    case 'boolean': encode.number(buffers, data); break\n    case 'arraybufferview': encode.buffer(buffers, new Uint8Array(data.buffer, data.byteOffset, data.byteLength)); break\n    case 'arraybuffer': encode.buffer(buffers, new Uint8Array(data)); break\n  }\n}\n\nconst buffE = new Uint8Array([0x65])\nconst buffD = new Uint8Array([0x64])\nconst buffL = new Uint8Array([0x6C])\n\nencode.buffer = function (buffers, data) {\n  buffers.push(text2arr(data.length + ':'), data)\n}\n\nencode.string = function (buffers, data) {\n  buffers.push(text2arr(text2arr(data).byteLength + ':' + data))\n}\n\nencode.number = function (buffers, data) {\n  if (Number.isInteger(data)) return buffers.push(text2arr('i' + BigInt(data) + 'e'))\n\n  const maxLo = 0x80000000\n  const hi = (data / maxLo) << 0\n  const lo = (data % maxLo) << 0\n  const val = hi * maxLo + lo\n\n  buffers.push(text2arr('i' + val + 'e'))\n\n  if (val !== data && !encode._floatConversionDetected) {\n    encode._floatConversionDetected = true\n    console.warn(\n      'WARNING: Possible data corruption detected with value \"' + data + '\":',\n      'Bencoding only defines support for integers, value was converted to \"' + val + '\"'\n    )\n    console.trace()\n  }\n}\n\nencode.dict = function (buffers, data) {\n  buffers.push(buffD)\n\n  let j = 0\n  let k\n  // fix for issue #13 - sorted dicts\n  const keys = Object.keys(data).sort()\n  const kl = keys.length\n\n  for (; j < kl; j++) {\n    k = keys[j]\n    if (data[k] == null) continue\n    encode.string(buffers, k)\n    encode._encode(buffers, data[k])\n  }\n\n  buffers.push(buffE)\n}\n\nencode.dictMap = function (buffers, data) {\n  buffers.push(buffD)\n\n  const keys = Array.from(data.keys()).sort()\n\n  for (const key of keys) {\n    if (data.get(key) == null) continue\n    ArrayBuffer.isView(key)\n      ? encode._encode(buffers, key)\n      : encode.string(buffers, String(key))\n    encode._encode(buffers, data.get(key))\n  }\n\n  buffers.push(buffE)\n}\n\nencode.list = function (buffers, data) {\n  let i = 0\n  const c = data.length\n  buffers.push(buffL)\n\n  for (; i < c; i++) {\n    if (data[i] == null) continue\n    encode._encode(buffers, data[i])\n  }\n\n  buffers.push(buffE)\n}\n\nencode.listSet = function (buffers, data) {\n  buffers.push(buffL)\n\n  for (const item of data) {\n    if (item == null) continue\n    encode._encode(buffers, item)\n  }\n\n  buffers.push(buffE)\n}\n\nexport default encode\n", "import { arr2text, text2arr, arr2hex } from 'uint8-util'\n\nconst INTEGER_START = 0x69 // 'i'\nconst STRING_DELIM = 0x3A // ':'\nconst DICTIONARY_START = 0x64 // 'd'\nconst LIST_START = 0x6C // 'l'\nconst END_OF_TYPE = 0x65 // 'e'\n\n/**\n * replaces parseInt(buffer.toString('ascii', start, end)).\n * For strings with less then ~30 charachters, this is actually a lot faster.\n *\n * @param {Uint8Array} data\n * @param {Number} start\n * @param {Number} end\n * @return {Number} calculated number\n */\nfunction getIntFromBuffer (buffer, start, end) {\n  let sum = 0\n  let sign = 1\n\n  for (let i = start; i < end; i++) {\n    const num = buffer[i]\n\n    if (num < 58 && num >= 48) {\n      sum = sum * 10 + (num - 48)\n      continue\n    }\n\n    if (i === start && num === 43) { // +\n      continue\n    }\n\n    if (i === start && num === 45) { // -\n      sign = -1\n      continue\n    }\n\n    if (num === 46) { // .\n      // its a float. break here.\n      break\n    }\n\n    throw new Error('not a number: buffer[' + i + '] = ' + num)\n  }\n\n  return sum * sign\n}\n\n/**\n * Decodes bencoded data.\n *\n * @param  {Uint8Array} data\n * @param  {Number} start (optional)\n * @param  {Number} end (optional)\n * @param  {String} encoding (optional)\n * @return {Object|Array|Uint8Array|String|Number}\n */\nfunction decode (data, start, end, encoding) {\n  if (data == null || data.length === 0) {\n    return null\n  }\n\n  if (typeof start !== 'number' && encoding == null) {\n    encoding = start\n    start = undefined\n  }\n\n  if (typeof end !== 'number' && encoding == null) {\n    encoding = end\n    end = undefined\n  }\n\n  decode.position = 0\n  decode.encoding = encoding || null\n\n  decode.data = !(ArrayBuffer.isView(data))\n    ? text2arr(data)\n    : new Uint8Array(data.slice(start, end))\n\n  decode.bytes = decode.data.length\n\n  return decode.next()\n}\n\ndecode.bytes = 0\ndecode.position = 0\ndecode.data = null\ndecode.encoding = null\n\ndecode.next = function () {\n  switch (decode.data[decode.position]) {\n    case DICTIONARY_START:\n      return decode.dictionary()\n    case LIST_START:\n      return decode.list()\n    case INTEGER_START:\n      return decode.integer()\n    default:\n      return decode.buffer()\n  }\n}\n\ndecode.find = function (chr) {\n  let i = decode.position\n  const c = decode.data.length\n  const d = decode.data\n\n  while (i < c) {\n    if (d[i] === chr) return i\n    i++\n  }\n\n  throw new Error(\n    'Invalid data: Missing delimiter \"' +\n    String.fromCharCode(chr) + '\" [0x' +\n    chr.toString(16) + ']'\n  )\n}\n\ndecode.dictionary = function () {\n  decode.position++\n\n  const dict = {}\n\n  while (decode.data[decode.position] !== END_OF_TYPE) {\n    const buffer = decode.buffer()\n    let key = arr2text(buffer)\n    if (key.includes('\\uFFFD')) key = arr2hex(buffer)\n    dict[key] = decode.next()\n  }\n\n  decode.position++\n\n  return dict\n}\n\ndecode.list = function () {\n  decode.position++\n\n  const lst = []\n\n  while (decode.data[decode.position] !== END_OF_TYPE) {\n    lst.push(decode.next())\n  }\n\n  decode.position++\n\n  return lst\n}\n\ndecode.integer = function () {\n  const end = decode.find(END_OF_TYPE)\n  const number = getIntFromBuffer(decode.data, decode.position + 1, end)\n\n  decode.position += end + 1 - decode.position\n\n  return number\n}\n\ndecode.buffer = function () {\n  let sep = decode.find(STRING_DELIM)\n  const length = getIntFromBuffer(decode.data, decode.position, sep)\n  const end = ++sep + length\n\n  decode.position = end\n\n  return decode.encoding\n    ? arr2text(decode.data.slice(sep, end))\n    : decode.data.slice(sep, end)\n}\n\nexport default decode\n", "import { text2arr } from 'uint8-util'\nimport { digitCount, getType } from './util.js'\n\nfunction listLength (list) {\n  let length = 1 + 1 // type marker + end-of-type marker\n\n  for (const value of list) {\n    length += encodingLength(value)\n  }\n\n  return length\n}\n\nfunction mapLength (map) {\n  let length = 1 + 1 // type marker + end-of-type marker\n\n  for (const [key, value] of map) {\n    const keyLength = text2arr(key).byteLength\n    length += digitCount(keyLength) + 1 + keyLength\n    length += encodingLength(value)\n  }\n\n  return length\n}\n\nfunction objectLength (value) {\n  let length = 1 + 1 // type marker + end-of-type marker\n  const keys = Object.keys(value)\n\n  for (let i = 0; i < keys.length; i++) {\n    const keyLength = text2arr(keys[i]).byteLength\n    length += digitCount(keyLength) + 1 + keyLength\n    length += encodingLength(value[keys[i]])\n  }\n\n  return length\n}\n\nfunction stringLength (value) {\n  const length = text2arr(value).byteLength\n  return digitCount(length) + 1 + length\n}\n\nfunction arrayBufferLength (value) {\n  const length = value.byteLength - value.byteOffset\n  return digitCount(length) + 1 + length\n}\n\nfunction encodingLength (value) {\n  const length = 0\n\n  if (value == null) return length\n\n  const type = getType(value)\n\n  switch (type) {\n    case 'arraybufferview': return arrayBufferLength(value)\n    case 'string': return stringLength(value)\n    case 'array': case 'set': return listLength(value)\n    case 'number': return 1 + digitCount(Math.floor(value)) + 1\n    case 'bigint': return 1 + value.toString().length + 1\n    case 'object': return objectLength(value)\n    case 'map': return mapLength(value)\n    default:\n      throw new TypeError(`Unsupported value of type \"${type}\"`)\n  }\n}\n\nexport default encodingLength\n", "import encode from './lib/encode.js'\nimport decode from './lib/decode.js'\nimport byteLength from './lib/encoding-length.js'\n/**\n * Determines the amount of bytes\n * needed to encode the given value\n * @param  {Object|Array|Uint8Array|String|Number|Boolean} value\n * @return {Number} byteCount\n */\nconst encodingLength = byteLength\nexport default { encode, decode, byteLength, encodingLength }\n", "import _DHT from 'bittorrent-dht'\nimport sodium from 'sodium-universal'\nimport crypto from 'crypto'\nimport goodbye from 'graceful-goodbye'\nimport fs from 'fs'\nimport { homedir } from 'os'\nimport path from 'path'\n\nimport { encodeSigData } from './tools.js'\n\nconst verify = sodium.crypto_sign_verify_detached\n\nconst DEFAULT_BOOTSTRAP = [\n  'router.magnets.im:6881',\n  'router.bittorrent.com:6881',\n  'router.utorrent.com:6881',\n  'dht.transmissionbt.com:6881',\n  'router.nuh.dev:6881'\n].map(addr => {\n  const [host, port] = addr.split(':')\n  return { host, port: Number(port) }\n})\n\nconst DEFAULT_STORAGE_LOCATION = path.join(homedir(), '.config', 'pkarr')\n\nexport class DHT {\n  /**\n   * @param {object} [options]\n   * @param {{host:string, port:number}[]} [options.bootstrap] - List of bootstrap nodes. example [{host: \"router.utorrent.com\", port: 6881}]\n   * @param {Storage} [options.storage]\n   * @param {string} [options.storageLocation] - location to store bootstrap nodes at\n   */\n  constructor (options = {}) {\n    const _storage = options.storage || new Storage(options.storageLocation)\n    options.bootstrap = options.bootstrap || DEFAULT_BOOTSTRAP\n\n    this._dht = new _DHT(options)\n\n    _storage?.loadRoutingTable(this._dht)\n\n    goodbye(() => {\n      _storage?.saveRoutingTable(this._dht)\n      this.destroy()\n    })\n  }\n\n  /**\n   * Reguest a mutable value from the DHT.\n   *\n   * @param {Uint8Array} key\n   * @param {object} [options]\n   * @param {boolean} [options.fullLookup] - If true, will perform a full lookup, otherwise return the first valid result.\n   *\n   * @returns {Promise<{\n   *  id: Uint8Array,\n   *  k: Uint8Array,\n   *  seq: number,\n   *  v: Uint8Array,\n   *  sig: Uint8Array,\n   *  nodes?: Array<{ host: string, port: number, client?: string }>\n   * }>}\n   */\n  async get (key, options = {}) {\n    const target = hash(key)\n    const targetHex = target.toString('hex')\n\n    let value = this._dht._values.get(targetHex) || null\n    const nodes = []\n\n    return new Promise((resolve, reject) => {\n      if (value) {\n        // If value was directly stored in this node in put request\n        value = createGetResponse(this._dht._rpc.id, value)\n        return process.nextTick(done)\n      }\n\n      this._dht._closest(\n        target,\n        {\n          q: 'get',\n          a: {\n            id: this._dht._rpc.id,\n            target\n          }\n        },\n        onreply,\n        done\n      )\n\n      /**\n       * @param {Error} [err]\n       */\n      function done (err) {\n        if (err) reject(err)\n        else resolve(value && { ...value, nodes })\n      }\n\n      /**\n       * @param {MutableGetResponse} message\n       * @param {Node} from\n       */\n      function onreply (message, from) {\n        const r = message.r\n        if (!r.sig || !r.k) return true\n\n        const msg = encodeSigData(r)\n        if (!verify(r.sig, msg, r.k)) return true\n\n        if (hash(r.k).equals(target)) {\n          if (!value || r.seq >= value.seq) {\n            nodes.push({\n              host: from.host || from.address,\n              port: from.port,\n              client: message.v?.toString().slice(0, 2)\n            })\n            value = r\n            if (!options.fullLookup) {\n              resolve({ ...value, nodes })\n            }\n          }\n        }\n        return true\n      }\n    })\n  }\n\n  /**\n   * @param  {object} args\n   * @param  {Uint8Array} args.k\n   * @param  {Uint8Array} args.v\n   * @param  {Uint8Array} args.sig\n   * @param  {number} args.seq\n   *\n   * @returns {Promise<{\n   *  target: Uint8Array,\n   *  nodes: Array<{ id: Uint8Array, host: string, port: number }>\n   * }>}\n   */\n  async put (args) {\n    const key = args.k\n    validate(key, args)\n    const target = hash(key)\n\n    let closestNodes = this._dht._tables.get(target.toString('hex'))?.closest(target)\n\n    if (!closestNodes) {\n      await new Promise((resolve, reject) => {\n        this._dht._closest(\n          target,\n          {\n            q: 'get',\n            a: {\n              id: this._dht._rpc.id,\n              target\n            }\n          },\n          null,\n          /**\n           * @param {Error} [err]\n           * @param {number} [n]\n           */\n          (err, n) => {\n            if (err) reject(err)\n            else resolve(n)\n          }\n        )\n      })\n\n      closestNodes = this._dht._tables.get(target.toString('hex'))?.closest(target)\n    }\n\n    const message = {\n      q: 'put',\n      a: {\n        id: this._dht._rpc.id,\n        token: null, // queryAll sets this\n        v: args.v,\n        k: key,\n        seq: args.seq,\n        sig: args.sig\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      this._dht._rpc.queryAll(\n        closestNodes,\n        message,\n        null,\n        /**\n         * @param {Error} [err]\n         * @param {number} [_n]\n         */\n        (err, _n) => {\n          if (err) reject(err)\n          else resolve({ target, nodes: closestNodes })\n        }\n      )\n    })\n  }\n\n  destroy () {\n    return new Promise((resolve, reject) => {\n      try {\n        this._dht.destroy(resolve)\n      } catch (error) {\n        reject(error)\n      }\n    })\n  }\n}\n\n/**\n * @param {Uint8Array} key\n * @param {object} request\n * @param {number} request.seq\n * @param {Uint8Array} request.v\n * @param {Uint8Array} request.sig\n */\nfunction validate (key, request) {\n  if (request.v === undefined) {\n    throw new Error('request.v not given')\n  }\n  if (request.v.length >= 1000) {\n    throw new Error('v must be less than 1000 bytes in put()')\n  }\n  if (key.length !== 32) {\n    throw new Error('key ed25519 public key must be 32 bytes')\n  }\n  if (!Buffer.isBuffer(request.sig)) {\n    throw new Error('request.sig signature is required for mutable put')\n  }\n  if (request.seq === undefined) {\n    throw new Error('request.seq not provided for a mutable update')\n  }\n  if (typeof request.seq !== 'number') {\n    throw new Error('request.seq not an integer')\n  }\n\n  if (!verify(request.sig, encodeSigData(request), key)) {\n    throw new Error('invalid signature')\n  }\n}\n\n/**\n * @param {Uint8Array} input\n */\nfunction hash (input) {\n  return crypto.createHash('sha1').update(input).digest()\n}\n\n/**\n * @param {Uint8Array} id\n * @param {{v:Uint8Array, sig:Uint8Array, k:Uint8Array, seq:number}} value\n * @param {{host:string, port:number}[]} [nodes]\n */\nfunction createGetResponse (id, value, nodes) {\n  return {\n    id,\n    v: value.v,\n    sig: value.sig,\n    k: value.k,\n    seq: value.seq,\n    nodes\n  }\n}\n\nclass Storage {\n  /**\n   * @param {string} location\n   */\n  constructor (location) {\n    this._location = location || DEFAULT_STORAGE_LOCATION\n\n    this._loaded = []\n  }\n\n  /**\n   * @param {_DHT} dht\n   */\n  loadRoutingTable (dht) {\n    const filepath = path.join(this._location, 'routing-table.json')\n\n    try {\n      const data = fs.readFileSync(filepath)\n      const string = data.toString()\n      const nodes = JSON.parse(string)\n\n      for (const node of nodes) {\n        dht.addNode(node)\n      }\n    } catch (error) {\n      if (error.code !== 'ENOENT') throw error\n    }\n  }\n\n  /**\n   * @param {_DHT} dht\n   */\n  saveRoutingTable (dht) {\n    const filePath = path.join(this._location, 'routing-table.json')\n\n    const nodes = dht.toJSON().nodes\n    const json = JSON.stringify(nodes)\n\n    try {\n      fs.writeFileSync(filePath, json)\n    } catch (error) {\n      if (error.code !== 'ENOENT') throw error\n      fs.mkdirSync(this._location)\n      fs.writeFileSync(filePath, json)\n    }\n  }\n}\n\nexport default DHT\n\n/**\n * @typedef {{host:string, port:number, address?: string}} Node\n * @typedef {{v: string, r: any}} GenericResponse\n * @typedef {{sig:Uint8Array, k:Uint8Array, seq:number, v: Uint8Array}} PutRequest\n * @typedef {GenericResponse & {r: PutRequest}} MutableGetResponse\n */\n", "import sodium from 'sodium-universal'\nimport bencode from 'bencode'\nimport z32 from 'z32'\n\nexport const verify = sodium.crypto_sign_verify_detached\n\nexport function randomBytes (n = 32) {\n  const buf = Buffer.alloc(n)\n  sodium.randombytes_buf(buf)\n  return buf\n}\n\n// Copied from bittorrent-dht\n/**\n * @param {{seq: number, v: Uint8Array}} msg\n */\nexport const encodeSigData = (msg) => {\n  const ref = { seq: msg.seq || 0, v: msg.v }\n  const bencoded = bencode.encode(ref).subarray(1, -1)\n  return bencoded\n}\n\n/**\n * @param {Uint8Array} sigData\n *\n * @returns {{seq:number, v: Uint8Array}}\n */\nexport const decodeSigData = (sigData) => {\n  const dict = new Uint8Array(sigData.length + 2)\n  dict[0] = 100 // d\n  dict.set(sigData, 1)\n  dict[sigData.length + 1] = 101 // e\n\n  return bencode.decode(dict)\n}\n\n/**\n * Generate a keypair\n * @param {Uint8Array} [seed]\n *\n * @returns {KeyPair}\n */\nexport const generateKeyPair = (seed) => {\n  const publicKey = Buffer.allocUnsafe(sodium.crypto_sign_PUBLICKEYBYTES)\n  const secretKey = Buffer.allocUnsafe(sodium.crypto_sign_SECRETKEYBYTES)\n\n  if (seed) sodium.crypto_sign_seed_keypair(publicKey, secretKey, seed)\n  else sodium.crypto_sign_keypair(publicKey, secretKey)\n\n  return {\n    publicKey,\n    secretKey\n  }\n}\n\n/**\n * @param {string | Uint8Array} url\n *\n * @returns {Uint8Array}\n */\nexport const decodeKey = (url) => {\n  if (typeof url !== 'string') return url\n\n  const keyBytes = z32.decode(url.replace('pk:', ''))\n\n  if (keyBytes.byteLength !== 32) {\n    throw new Error('Invalid key')\n  }\n\n  return keyBytes\n}\n\n/**\n * @typedef {{secretKey: Uint8Array, publicKey: Uint8Array}} KeyPair\n */\n", "export function digitCount (value) {\n  // Add a digit for negative numbers, as the sign will be prefixed\n  const sign = value < 0 ? 1 : 0\n  // Guard against negative numbers & zero going into log10(),\n  // as that would return -Infinity\n  value = Math.abs(Number(value || 1))\n  return Math.floor(Math.log10(value)) + 1 + sign\n}\n\nexport function getType (value) {\n  if (ArrayBuffer.isView(value)) return 'arraybufferview'\n  if (Array.isArray(value)) return 'array'\n  if (value instanceof Number) return 'number'\n  if (value instanceof Boolean) return 'boolean'\n  if (value instanceof Set) return 'set'\n  if (value instanceof Map) return 'map'\n  if (value instanceof String) return 'string'\n  if (value instanceof ArrayBuffer) return 'arraybuffer'\n  return typeof value\n}\n", "import { concat, text2arr } from 'uint8-util'\nimport { getType } from './util.js'\n\n/**\n * Encodes data in bencode.\n *\n * @param  {Uint8Array|Array|String|Object|Number|Boolean} data\n * @return {Uint8Array}\n */\nfunction encode (data, buffer, offset) {\n  const buffers = []\n  let result = null\n\n  encode._encode(buffers, data)\n  result = concat(buffers)\n  encode.bytes = result.length\n\n  if (ArrayBuffer.isView(buffer)) {\n    buffer.set(result, offset)\n    return buffer\n  }\n\n  return result\n}\n\nencode.bytes = -1\nencode._floatConversionDetected = false\n\nencode._encode = function (buffers, data) {\n  if (data == null) { return }\n\n  switch (getType(data)) {\n    case 'object': encode.dict(buffers, data); break\n    case 'map': encode.dictMap(buffers, data); break\n    case 'array': encode.list(buffers, data); break\n    case 'set': encode.listSet(buffers, data); break\n    case 'string': encode.string(buffers, data); break\n    case 'number': encode.number(buffers, data); break\n    case 'boolean': encode.number(buffers, data); break\n    case 'arraybufferview': encode.buffer(buffers, new Uint8Array(data.buffer, data.byteOffset, data.byteLength)); break\n    case 'arraybuffer': encode.buffer(buffers, new Uint8Array(data)); break\n  }\n}\n\nconst buffE = new Uint8Array([0x65])\nconst buffD = new Uint8Array([0x64])\nconst buffL = new Uint8Array([0x6C])\n\nencode.buffer = function (buffers, data) {\n  buffers.push(text2arr(data.length + ':'), data)\n}\n\nencode.string = function (buffers, data) {\n  buffers.push(text2arr(text2arr(data).byteLength + ':' + data))\n}\n\nencode.number = function (buffers, data) {\n  const maxLo = 0x80000000\n  const hi = (data / maxLo) << 0\n  const lo = (data % maxLo) << 0\n  const val = hi * maxLo + lo\n\n  buffers.push(text2arr('i' + val + 'e'))\n\n  if (val !== data && !encode._floatConversionDetected) {\n    encode._floatConversionDetected = true\n    console.warn(\n      'WARNING: Possible data corruption detected with value \"' + data + '\":',\n      'Bencoding only defines support for integers, value was converted to \"' + val + '\"'\n    )\n    console.trace()\n  }\n}\n\nencode.dict = function (buffers, data) {\n  buffers.push(buffD)\n\n  let j = 0\n  let k\n  // fix for issue #13 - sorted dicts\n  const keys = Object.keys(data).sort()\n  const kl = keys.length\n\n  for (; j < kl; j++) {\n    k = keys[j]\n    if (data[k] == null) continue\n    encode.string(buffers, k)\n    encode._encode(buffers, data[k])\n  }\n\n  buffers.push(buffE)\n}\n\nencode.dictMap = function (buffers, data) {\n  buffers.push(buffD)\n\n  const keys = Array.from(data.keys()).sort()\n\n  for (const key of keys) {\n    if (data.get(key) == null) continue\n    ArrayBuffer.isView(key)\n      ? encode._encode(buffers, key)\n      : encode.string(buffers, String(key))\n    encode._encode(buffers, data.get(key))\n  }\n\n  buffers.push(buffE)\n}\n\nencode.list = function (buffers, data) {\n  let i = 0\n  const c = data.length\n  buffers.push(buffL)\n\n  for (; i < c; i++) {\n    if (data[i] == null) continue\n    encode._encode(buffers, data[i])\n  }\n\n  buffers.push(buffE)\n}\n\nencode.listSet = function (buffers, data) {\n  buffers.push(buffL)\n\n  for (const item of data) {\n    if (item == null) continue\n    encode._encode(buffers, item)\n  }\n\n  buffers.push(buffE)\n}\n\nexport default encode\n", "import { arr2text, text2arr } from 'uint8-util'\n\nconst INTEGER_START = 0x69 // 'i'\nconst STRING_DELIM = 0x3A // ':'\nconst DICTIONARY_START = 0x64 // 'd'\nconst LIST_START = 0x6C // 'l'\nconst END_OF_TYPE = 0x65 // 'e'\n\n/**\n * replaces parseInt(buffer.toString('ascii', start, end)).\n * For strings with less then ~30 charachters, this is actually a lot faster.\n *\n * @param {Uint8Array} data\n * @param {Number} start\n * @param {Number} end\n * @return {Number} calculated number\n */\nfunction getIntFromBuffer (buffer, start, end) {\n  let sum = 0\n  let sign = 1\n\n  for (let i = start; i < end; i++) {\n    const num = buffer[i]\n\n    if (num < 58 && num >= 48) {\n      sum = sum * 10 + (num - 48)\n      continue\n    }\n\n    if (i === start && num === 43) { // +\n      continue\n    }\n\n    if (i === start && num === 45) { // -\n      sign = -1\n      continue\n    }\n\n    if (num === 46) { // .\n      // its a float. break here.\n      break\n    }\n\n    throw new Error('not a number: buffer[' + i + '] = ' + num)\n  }\n\n  return sum * sign\n}\n\n/**\n * Decodes bencoded data.\n *\n * @param  {Uint8Array} data\n * @param  {Number} start (optional)\n * @param  {Number} end (optional)\n * @param  {String} encoding (optional)\n * @return {Object|Array|Uint8Array|String|Number}\n */\nfunction decode (data, start, end, encoding) {\n  if (data == null || data.length === 0) {\n    return null\n  }\n\n  if (typeof start !== 'number' && encoding == null) {\n    encoding = start\n    start = undefined\n  }\n\n  if (typeof end !== 'number' && encoding == null) {\n    encoding = end\n    end = undefined\n  }\n\n  decode.position = 0\n  decode.encoding = encoding || null\n\n  decode.data = !(ArrayBuffer.isView(data))\n    ? text2arr(data)\n    : new Uint8Array(data.slice(start, end))\n\n  decode.bytes = decode.data.length\n\n  return decode.next()\n}\n\ndecode.bytes = 0\ndecode.position = 0\ndecode.data = null\ndecode.encoding = null\n\ndecode.next = function () {\n  switch (decode.data[decode.position]) {\n    case DICTIONARY_START:\n      return decode.dictionary()\n    case LIST_START:\n      return decode.list()\n    case INTEGER_START:\n      return decode.integer()\n    default:\n      return decode.buffer()\n  }\n}\n\ndecode.find = function (chr) {\n  let i = decode.position\n  const c = decode.data.length\n  const d = decode.data\n\n  while (i < c) {\n    if (d[i] === chr) return i\n    i++\n  }\n\n  throw new Error(\n    'Invalid data: Missing delimiter \"' +\n    String.fromCharCode(chr) + '\" [0x' +\n    chr.toString(16) + ']'\n  )\n}\n\ndecode.dictionary = function () {\n  decode.position++\n\n  const dict = {}\n\n  while (decode.data[decode.position] !== END_OF_TYPE) {\n    dict[arr2text(decode.buffer())] = decode.next()\n  }\n\n  decode.position++\n\n  return dict\n}\n\ndecode.list = function () {\n  decode.position++\n\n  const lst = []\n\n  while (decode.data[decode.position] !== END_OF_TYPE) {\n    lst.push(decode.next())\n  }\n\n  decode.position++\n\n  return lst\n}\n\ndecode.integer = function () {\n  const end = decode.find(END_OF_TYPE)\n  const number = getIntFromBuffer(decode.data, decode.position + 1, end)\n\n  decode.position += end + 1 - decode.position\n\n  return number\n}\n\ndecode.buffer = function () {\n  let sep = decode.find(STRING_DELIM)\n  const length = getIntFromBuffer(decode.data, decode.position, sep)\n  const end = ++sep + length\n\n  decode.position = end\n\n  return decode.encoding\n    ? arr2text(decode.data.slice(sep, end))\n    : decode.data.slice(sep, end)\n}\n\nexport default decode\n", "import { text2arr } from 'uint8-util'\nimport { digitCount, getType } from './util.js'\n\nfunction listLength (list) {\n  let length = 1 + 1 // type marker + end-of-type marker\n\n  for (const value of list) {\n    length += encodingLength(value)\n  }\n\n  return length\n}\n\nfunction mapLength (map) {\n  let length = 1 + 1 // type marker + end-of-type marker\n\n  for (const [key, value] of map) {\n    const keyLength = text2arr(key).byteLength\n    length += digitCount(keyLength) + 1 + keyLength\n    length += encodingLength(value)\n  }\n\n  return length\n}\n\nfunction objectLength (value) {\n  let length = 1 + 1 // type marker + end-of-type marker\n  const keys = Object.keys(value)\n\n  for (let i = 0; i < keys.length; i++) {\n    const keyLength = text2arr(keys[i]).byteLength\n    length += digitCount(keyLength) + 1 + keyLength\n    length += encodingLength(value[keys[i]])\n  }\n\n  return length\n}\n\nfunction stringLength (value) {\n  const length = text2arr(value).byteLength\n  return digitCount(length) + 1 + length\n}\n\nfunction arrayBufferLength (value) {\n  const length = value.byteLength - value.byteOffset\n  return digitCount(length) + 1 + length\n}\n\nfunction encodingLength (value) {\n  const length = 0\n\n  if (value == null) return length\n\n  const type = getType(value)\n\n  switch (type) {\n    case 'arraybufferview': return arrayBufferLength(value)\n    case 'string': return stringLength(value)\n    case 'array': case 'set': return listLength(value)\n    case 'number': return 1 + digitCount(Math.floor(value)) + 1\n    case 'bigint': return 1 + value.toString().length + 1\n    case 'object': return objectLength(value)\n    case 'map': return mapLength(value)\n    default:\n      throw new TypeError(`Unsupported value of type \"${type}\"`)\n  }\n}\n\nexport default encodingLength\n", "import encode from './lib/encode.js'\nimport decode from './lib/decode.js'\nimport byteLength from './lib/encoding-length.js'\n/**\n * Determines the amount of bytes\n * needed to encode the given value\n * @param  {Object|Array|Uint8Array|String|Number|Boolean} value\n * @return {Number} byteCount\n */\nconst encodingLength = byteLength\nexport default { encode, decode, byteLength, encodingLength }\n", "import DHT from './lib/dht.js'\nimport _z32 from 'z32'\nimport _dns from 'dns-packet'\n\nimport { generateKeyPair as _generateKeyPair, randomBytes, decodeKey } from './lib/tools.js'\nimport _SignedPacket from './lib/signed_packet.js'\n\nexport const SignedPacket = _SignedPacket\nexport const z32 = _z32\nexport const dns = _dns\nexport const generateKeyPair = _generateKeyPair\n\nexport class Pkarr {\n  static generateKeyPair = _generateKeyPair\n  static generateSeed = randomBytes\n\n  /**\n   * Publishes a signed packet using relay. returns the Fetch response.\n   *\n   * @param {string} relay - Relay url\n   * @param {SignedPacket} signedPacket\n   */\n  static async relayPut (relay, signedPacket) {\n    const id = z32.encode(signedPacket.publicKey())\n    const url = relay.replace(/\\/+$/, '') + '/' + id\n\n    return fetch(\n      url,\n      { method: 'PUT', body: signedPacket.bytes() }\n    )\n  }\n\n  /**\n   * Publishes a signed packet using relay. returns the Fetch response.\n   *\n   * @param {string} relay - Relay url\n   * @param {Uint8Array} publicKey\n   */\n  static async relayGet (relay, publicKey) {\n    const id = z32.encode(publicKey)\n    const url = relay.replace(/\\/+$/, '') + '/' + id\n\n    const response = await fetch(url)\n    const bytes = Buffer.from(await response.arrayBuffer())\n\n    return SignedPacket.fromBytes(publicKey, bytes)\n  }\n\n  /**\n   * Publishes a signed packet to the DHT.\n   * Throws an error in browser environment.\n   *\n   * @param {SignedPacket} signedPacket\n   *\n   * @returns {Promise<boolean>}\n   */\n  static async publish (signedPacket) {\n    const dht = new DHT()\n\n    return dht.put(signedPacket.bep44Args())\n      .then(() => true)\n      .catch(() => false)\n      .finally(() => dht.destroy())\n  }\n\n  /**\n   * Resolves a signed packet from the DHT.\n   * Throws an error in browser environment.\n   *\n   * @param {Uint8Array | string} key\n   * @param {object} [options]\n   * @param {boolean} [options.fullLookup=false] - perform a full lookup through the DHT, defaults to false, meaning it will return the first result it finds\n   *\n   * @throws {Error<'Invalid key'>}\n   * @returns {Promise<{signedPacket: SignedPacket, nodes: {host: string, port: number}[]} | null>}\n   */\n  static async resolve (key, options = {}) {\n    const dht = new DHT()\n    try {\n      const result = await dht.get(decodeKey(key), options)\n        .finally(() => dht.destroy())\n\n      if (!result) return null\n\n      return {\n        signedPacket: SignedPacket.fromBep44Args(result),\n        nodes: result.nodes\n      }\n    } catch (error) {\n      dht.destroy()\n\n      throw error\n    }\n  }\n}\n\nexport default Pkarr\n\n/**\n * @typedef {import('./lib/signed_packet.js').Packet} Packet\n * @typedef {import('./lib/signed_packet.js').default} SignedPacket\n */\n", "import z32 from 'z32'\nimport dns from 'dns-packet'\nimport sodium from 'sodium-universal'\n\nimport { encodeSigData } from './tools.js'\n\nconst verify = sodium.crypto_sign_verify_detached\n\nexport default class SignedPacket {\n  /** @type {Uint8Array} */\n  #publicKey\n  /** @type {Packet} */\n  #packet\n  /** @type {Uint8Array} */\n  #bytes\n  /** @type {number} */\n  #timestamp\n\n  /**\n   * Creates a new SignedPacket from a Keypair and a DNS Packet.\n   *\n   * It will also normalize the names of the ResourceRecords to be relative to the origin, which would be the zbase32 encoded PublicKey of the Keypair used to sign the Packet.\n   *\n   * @param {Keypair} keypair\n   * @param {Packet} packet\n   *\n   * @param {object} [options] - Optional arguments mostly useful for unit testing\n   * @param {object} [options.timestamp] - timestamp in microseconds\n   *\n   * @returns {SignedPacket}\n   */\n  static fromPacket (keypair, packet, options = {}) {\n    const origin = z32.encode(keypair.publicKey)\n\n    packet.answers = packet.answers.map(answer => {\n      answer.name = normalizeName(origin, answer.name)\n      return answer\n    })\n\n    const signedPacket = new SignedPacket()\n    signedPacket.#packet = packet\n\n    const timestamp = Math.ceil(options.timestamp || (Date.now() * 1000)) // Micro seconds\n    const encodedPacket = dns.encode(packet)\n\n    const signable = encodeSigData({ seq: timestamp, v: encodedPacket })\n\n    const signature = Buffer.alloc(sodium.crypto_sign_BYTES)\n    sodium.crypto_sign_detached(signature, signable, keypair.secretKey)\n\n    signedPacket.#timestamp = timestamp\n    signedPacket.#publicKey = keypair.publicKey\n\n    const bytes = Buffer.alloc(encodedPacket.length + 72)\n    bytes.set(signature)\n    bytes.writeBigUInt64BE(BigInt(timestamp), 64)\n    bytes.set(encodedPacket, 72)\n\n    signedPacket.#bytes = bytes\n\n    return signedPacket\n  }\n\n  /**\n   * Creates a new [SignedPacket] from a [PublicKey] and the concatenated 64 bytes Signature,\n   * 8 bytes timestamp and encoded [Packet] as defined in the [relays](https://github.com/Nuhvi/pkarr/blob/main/design/relays.md) spec.\n   *\n   * @param {Uint8Array} publicKey\n   * @param {Uint8Array} bytes\n   */\n  static fromBytes (publicKey, bytes) {\n    const buffer = Buffer.from(bytes)\n\n    if (buffer.length < 72) {\n      throw new Error(`Invalid SignedPacket bytes length, expected at least 72 bytes but got: ${buffer.length}`)\n    }\n    if (buffer.length > 1072) {\n      throw new Error(`Encoded and compressed DNS Packet is too large, expected max 1000 bytes but got: ${buffer.length}`)\n    }\n\n    const seq = Number(buffer.readBigUInt64BE(64))\n    const v = buffer.subarray(72)\n    const sig = buffer.subarray(0, 64)\n\n    return SignedPacket.fromBep44Args({\n      k: publicKey,\n      seq,\n      v,\n      sig\n    })\n  }\n\n  /**\n   * @param {Bep44Args} args\n   */\n  static fromBep44Args (args) {\n    const publicKey = args.k\n    const signature = args.sig\n    const encodedPacket = Buffer.from(args.v)\n    const timestamp = args.seq\n\n    const signable = encodeSigData({ seq: timestamp, v: encodedPacket })\n\n    const valid = verify(signature, signable, publicKey)\n\n    if (!valid) {\n      throw Error('Invalid signature')\n    }\n\n    const packet = dns.decode(encodedPacket)\n\n    const signedPacket = new SignedPacket()\n\n    signedPacket.#publicKey = publicKey\n    signedPacket.#packet = packet\n    signedPacket.#timestamp = timestamp\n\n    const buffer = Buffer.alloc(args.v.length + 72)\n    buffer.set(signature)\n    buffer.writeBigUInt64BE(BigInt(timestamp), 64)\n    buffer.set(encodedPacket, 72)\n\n    signedPacket.#bytes = buffer\n\n    return signedPacket\n  }\n\n  /**\n   * Returns a list of resource records with the target `name`.\n   * `name` can be not normalized, for example `@` or `subdomain.`.\n   *\n   * @param {string} name\n   */\n  resourceRecords (name) {\n    const origin = z32.encode(this.publicKey())\n    const normalizedName = normalizeName(origin, name)\n\n    return this.packet()\n      .answers\n      .filter((rr) => rr.name === normalizedName)\n  }\n\n  /**\n   * Returns the publicKey singing this packet\n   *\n   * @returns{Uint8Array}\n   * */\n  publicKey () {\n    return this.#publicKey\n  }\n\n  /**\n   * Returns the DNS packet\n   *\n   * @returns{Packet}\n   * */\n  packet () {\n    return this.#packet\n  }\n\n  /**\n   * Returns the timestamp of the creation of the signed packet\n   *\n   * @returns {number}\n   */\n  timestamp () {\n    return this.#timestamp\n  }\n\n  /**\n   * Returns the signature over the encoded DNS packet and timestamp as defined by BEP44\n   *\n   * @returns{Uint8Array}\n   * */\n  signature () {\n    return this.#bytes.subarray(0, 64)\n  }\n\n  /**\n   * Returns the encoded signature, timestamp and packet as defined in the [relays](https://github.com/Nuhvi/pkarr/blob/main/design/relays.md) spec.\n   *\n   * @returns {Uint8Array}\n   */\n  bytes () {\n    return this.#bytes\n  }\n\n  /**\n   * Returns BEP0044 arguments { seq, v, sig }\n   *\n   * @returns {Bep44Args}\n   */\n  bep44Args () {\n    return {\n      k: this.publicKey(),\n      seq: this.timestamp(),\n      sig: this.signature(),\n      v: this.#bytes.subarray(72)\n    }\n  }\n\n  /**\n   * Returns the size of the encoded packet\n   */\n  size () {\n    return this.#bytes.length - 72\n  }\n}\n\n/**\n *\n * @param {string} origin\n * @param {string} name\n *\n * @returns {string}\n */\nfunction normalizeName (origin, name) {\n  if (name.endsWith('.')) {\n    name = name.slice(0, -1)\n  };\n\n  const parts = name.split('.')\n  const last = parts[parts.length - 1]\n\n  if (last === origin) {\n    // Already normalized.\n    return name\n  } else if (last === '@' || last.length === 0) {\n    // Shorthand of origin\n    return origin\n  }\n\n  return name.concat('.').concat(origin)\n}\n\n/**\n * @typedef {import('dns-packet').Packet} Packet\n * @typedef {{secretKey: Uint8Array, publicKey: Uint8Array}} Keypair\n * @typedef {{k:Uint8Array, seq: number, v: Uint8Array, sig: Uint8Array}} Bep44Args\n */\n", "import type { JwkKeyPair, PublicKeyJwk, Web5Crypto } from '@web5/crypto';\n\nimport z32 from 'z32';\nimport { EcdsaAlgorithm, EdDsaAlgorithm, Jose } from '@web5/crypto';\n\nimport type {\n  DidMethod,\n  DidService,\n  DidDocument,\n  PortableDid,\n  DidResolutionResult,\n  DidResolutionOptions,\n  VerificationRelationship,\n  DidKeySetVerificationMethodKey,\n} from './types.js';\n\nimport { DidDht } from './dht.js';\nimport { parseDid } from './utils.js';\n\nconst SupportedCryptoKeyTypes = [\n  'Ed25519',\n  'secp256k1'\n] as const;\n\nexport type DidDhtCreateOptions = {\n  publish?: boolean;\n  keySet?: DidDhtKeySet;\n  services?: DidService[];\n}\n\nexport type DidDhtKeySet = {\n  identityKey?: JwkKeyPair;\n  verificationMethodKeys?: DidKeySetVerificationMethodKey[];\n}\n\nexport class DidDhtMethod implements DidMethod {\n\n  public static methodName = 'dht';\n\n  /**\n   * Creates a new DID Document according to the did:dht spec.\n   * @param options The options to use when creating the DID Document, including whether to publish it.\n   * @returns A promise that resolves to a PortableDid object.\n   */\n  public static async create(options?: DidDhtCreateOptions): Promise<PortableDid> {\n    const { publish, keySet: initialKeySet, services } = options ?? {};\n\n    // Generate missing keys, if not provided in the options.\n    const keySet = await this.generateKeySet({ keySet: initialKeySet });\n\n    // Get the identifier and set it.\n    const id = await this.getDidIdentifier({ key: keySet.identityKey.publicKeyJwk });\n\n    // Add all other keys to the verificationMethod and relationship arrays.\n    const relationshipsMap: Partial<Record<VerificationRelationship, string[]>> = {};\n    const verificationMethods = keySet.verificationMethodKeys.map(key => {\n      for (const relationship of key.relationships) {\n        if (relationshipsMap[relationship]) {\n          relationshipsMap[relationship].push(`#${key.publicKeyJwk.kid}`);\n        } else {\n          relationshipsMap[relationship] = [`#${key.publicKeyJwk.kid}`];\n        }\n      }\n\n      return {\n        id           : `${id}#${key.publicKeyJwk.kid}`,\n        type         : 'JsonWebKey2020',\n        controller   : id,\n        publicKeyJwk : key.publicKeyJwk\n      };\n    });\n\n    // Add DID identifier to the service IDs.\n    services?.map(service => {\n      service.id = `${id}#${service.id}`;\n    });\n    const document: DidDocument = {\n      id,\n      verificationMethod: [...verificationMethods],\n      ...relationshipsMap,\n      ...services && {service: services}\n    };\n\n    if (publish) {\n      await this.publish({ keySet, didDocument: document });\n    }\n    return {\n      did      : document.id,\n      document : document,\n      keySet   : keySet\n    };\n  }\n\n\n  /**\n   * Generates a JWK key pair.\n   * @param options The key algorithm and key ID to use.\n   * @returns A promise that resolves to a JwkKeyPair object.\n   */\n  public static async generateJwkKeyPair(options: {\n    keyAlgorithm: typeof SupportedCryptoKeyTypes[number],\n    keyId?: string\n  }): Promise<JwkKeyPair> {\n    const {keyAlgorithm, keyId} = options;\n\n    let cryptoKeyPair: Web5Crypto.CryptoKeyPair;\n\n    switch (keyAlgorithm) {\n      case 'Ed25519': {\n        cryptoKeyPair = await new EdDsaAlgorithm().generateKey({\n          algorithm   : {name: 'EdDSA', namedCurve: 'Ed25519'},\n          extractable : true,\n          keyUsages   : ['sign', 'verify']\n        });\n        break;\n      }\n\n      case 'secp256k1': {\n        cryptoKeyPair = await new EcdsaAlgorithm().generateKey({\n          algorithm   : {name: 'ECDSA', namedCurve: 'secp256k1'},\n          extractable : true,\n          keyUsages   : ['sign', 'verify']\n        });\n        break;\n      }\n\n      default: {\n        throw new Error(`Unsupported crypto algorithm: '${keyAlgorithm}'`);\n      }\n    }\n\n    // Convert the CryptoKeyPair to JwkKeyPair.\n    const jwkKeyPair = await Jose.cryptoKeyToJwkPair({keyPair: cryptoKeyPair});\n\n    // Set kid values.\n    if (keyId) {\n      jwkKeyPair.privateKeyJwk.kid = keyId;\n      jwkKeyPair.publicKeyJwk.kid = keyId;\n    } else {\n    // If a key ID is not specified, generate RFC 7638 JWK thumbprint.\n      const jwkThumbprint = await Jose.jwkThumbprint({key: jwkKeyPair.publicKeyJwk});\n      jwkKeyPair.privateKeyJwk.kid = jwkThumbprint;\n      jwkKeyPair.publicKeyJwk.kid = jwkThumbprint;\n    }\n\n    return jwkKeyPair;\n  }\n\n  /**\n   * Generates a key set for a DID Document.\n   * @param options The key set to use when generating the key set.\n   * @returns A promise that resolves to a DidDhtKeySet object.\n   */\n  public static async generateKeySet(options?: {\n    keySet?: DidDhtKeySet\n  }): Promise<DidDhtKeySet> {\n    let { keySet = {} } = options ?? {};\n\n    if (!keySet.identityKey) {\n      keySet.identityKey = await this.generateJwkKeyPair({\n        keyAlgorithm : 'Ed25519',\n        keyId        : '0'\n      });\n\n\n    } else if (keySet.identityKey.publicKeyJwk.kid !== '0') {\n      throw new Error('The identity key must have a kid of 0');\n    }\n\n    // add verificationMethodKeys for the identity key\n    const identityKeySetVerificationMethod: DidKeySetVerificationMethodKey = {\n      ...keySet.identityKey,\n      relationships: ['authentication', 'assertionMethod', 'capabilityInvocation', 'capabilityDelegation']\n    };\n\n    if (!keySet.verificationMethodKeys) {\n      keySet.verificationMethodKeys = [identityKeySetVerificationMethod];\n    } else if (keySet.verificationMethodKeys.filter(key => key.publicKeyJwk.kid === '0').length === 0) {\n      keySet.verificationMethodKeys.push(identityKeySetVerificationMethod);\n    }\n\n    // Generate RFC 7638 JWK thumbprints if `kid` is missing from any key.\n    if (keySet.verificationMethodKeys) {\n      for (const key of keySet.verificationMethodKeys) {\n        if (key.publicKeyJwk) key.publicKeyJwk.kid ??= await Jose.jwkThumbprint({key: key.publicKeyJwk});\n        if (key.privateKeyJwk) key.privateKeyJwk.kid ??= await Jose.jwkThumbprint({key: key.privateKeyJwk});\n      }\n    }\n\n    return keySet;\n  }\n\n  /**\n   * Gets the identifier fragment from a DID.\n   * @param options The key to get the identifier fragment from.\n   * @returns A promise that resolves to a string containing the identifier.\n   */\n  public static async getDidIdentifier(options: {\n    key: PublicKeyJwk\n  }): Promise<string> {\n    const {key} = options;\n\n    const cryptoKey = await Jose.jwkToCryptoKey({key});\n    const identifier = z32.encode(cryptoKey.material);\n    return 'did:dht:' + identifier;\n  }\n\n  /**\n   * Gets the identifier fragment from a DID.\n   * @param options The key to get the identifier fragment from.\n   * @returns A promise that resolves to a string containing the identifier fragment.\n   */\n  public static async getDidIdentifierFragment(options: {\n    key: PublicKeyJwk\n  }): Promise<string> {\n    const {key} = options;\n    const cryptoKey = await Jose.jwkToCryptoKey({key});\n    return z32.encode(cryptoKey.material);\n  }\n\n  /**\n   * Publishes a DID Document to the DHT.\n   * @param keySet The key set to use to sign the DHT payload.\n   * @param didDocument The DID Document to publish.\n   * @returns A boolean indicating the success of the publishing operation.\n   */\n  public static async publish({ didDocument, keySet }: {\n    didDocument: DidDocument,\n    keySet: DidDhtKeySet\n  }): Promise<boolean> {\n    const publicCryptoKey = await Jose.jwkToCryptoKey({key: keySet.identityKey.publicKeyJwk});\n    const privateCryptoKey = await Jose.jwkToCryptoKey({key: keySet.identityKey.privateKeyJwk});\n\n    const isPublished = await DidDht.publishDidDocument({\n      keyPair: {\n        publicKey  : publicCryptoKey,\n        privateKey : privateCryptoKey\n      },\n      didDocument\n    });\n\n    return isPublished;\n  }\n\n  /**\n   * Resolves a DID Document based on the specified options.\n   *\n   * @param options - Configuration for resolving a DID Document.\n   * @param options.didUrl - The DID URL to resolve.\n   * @param options.resolutionOptions - Optional settings for the DID resolution process as defined in the DID Core specification.\n   * @returns A Promise that resolves to a `DidResolutionResult`, containing the resolved DID Document and associated metadata.\n   */\n  public static async resolve(options: {\n    didUrl: string,\n    resolutionOptions?: DidResolutionOptions\n  }): Promise<DidResolutionResult> {\n    const { didUrl, resolutionOptions: _ } = options;\n    // TODO: Implement resolutionOptions as defined in https://www.w3.org/TR/did-core/#did-resolution\n\n    const parsedDid = parseDid({ didUrl });\n    if (!parsedDid) {\n      return {\n        '@context'            : 'https://w3id.org/did-resolution/v1',\n        didDocument           : undefined,\n        didDocumentMetadata   : {},\n        didResolutionMetadata : {\n          contentType  : 'application/did+ld+json',\n          error        : 'invalidDid',\n          errorMessage : `Cannot parse DID: ${didUrl}`\n        }\n      };\n    }\n\n    if (parsedDid.method !== 'dht') {\n      return {\n        '@context'            : 'https://w3id.org/did-resolution/v1',\n        didDocument           : undefined,\n        didDocumentMetadata   : {},\n        didResolutionMetadata : {\n          contentType  : 'application/did+ld+json',\n          error        : 'methodNotSupported',\n          errorMessage : `Method not supported: ${parsedDid.method}`\n        }\n      };\n    }\n\n    const didDocument = await DidDht.getDidDocument({ did: parsedDid.did });\n\n    return {\n      '@context'            : 'https://w3id.org/did-resolution/v1',\n      didDocument,\n      didDocumentMetadata   : {},\n      didResolutionMetadata : {\n        contentType : 'application/did+ld+json',\n        did         : {\n          didString        : parsedDid.did,\n          methodSpecificId : parsedDid.id,\n          method           : parsedDid.method\n        }\n      }\n    };\n  }\n}", "import type { PublicKeyJwk } from '@web5/crypto';\nimport { parse, type ParsedDID } from 'did-resolver';\n\nimport type { DidDocument, DidService, DidServiceEndpoint, DwnServiceEndpoint } from './types.js';\n\nexport interface ParsedDid {\n  did: string\n  didUrl: string\n  method: string\n  id: string\n  path?: string\n  fragment?: string\n  query?: string\n  params?: ParsedDID['params']\n}\n\nexport const DID_REGEX = /^did:([a-z0-9]+):((?:(?:[a-zA-Z0-9._-]|(?:%[0-9a-fA-F]{2}))*:)*((?:[a-zA-Z0-9._-]|(?:%[0-9a-fA-F]{2}))+))((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\\/[^#?]*)?([?][^#]*)?(#.*)?$/;\n\n/**\n * Retrieves services from a given DID document based on provided options.\n * If no `id` or `type` filters are provided, all defined services are returned.\n *\n * Note: The DID document must adhere to the W3C DID specification.\n *\n * @param options - An object containing input parameters for retrieving services.\n * @param options.didDocument - The DID document from which services are retrieved.\n * @param options.id - Optional. A string representing the specific service ID to match. If provided, only the service with this ID will be returned.\n * @param options.type - Optional. A string representing the specific service type to match. If provided, only the service(s) of this type will be returned.\n *\n * @returns An array of services. If no matching service is found, an empty array is returned.\n *\n * @example\n *\n * const didDoc = { ... }; // W3C DID document\n * const services = getServices({ didDocument: didDoc, type: 'DecentralizedWebNode' });\n */\nexport function getServices(options: {\n  didDocument: DidDocument,\n  id?: string,\n  type?: string\n}): DidService[] {\n  const { didDocument, id, type } = options ?? {};\n\n  return didDocument?.service?.filter(service => {\n    if (id && service.id !== id) return false;\n    if (type && service.type !== type) return false;\n    return true;\n  }) ?? [ ];\n}\n\nexport function getVerificationMethodIds(options: {\n  didDocument: DidDocument,\n  publicKeyJwk?: PublicKeyJwk,\n  publicKeyMultibase?: string\n}): string | undefined {\n  const { didDocument, publicKeyJwk, publicKeyMultibase } = options;\n  if (!didDocument) throw new Error(`Required parameter missing: 'didDocument'`);\n  if (!didDocument.verificationMethod) throw new Error('Given `didDocument` is missing `verificationMethod` entries.');\n\n  for (let method of didDocument.verificationMethod) {\n    if (publicKeyMultibase && 'publicKeyMultibase' in method) {\n      if (publicKeyMultibase === method.publicKeyMultibase) {\n        return method.id;\n      }\n    } else if (publicKeyJwk && 'crv' in publicKeyJwk &&\n               'publicKeyJwk' in method && 'crv' in method.publicKeyJwk) {\n      if (publicKeyJwk.crv === method.publicKeyJwk.crv &&\n            publicKeyJwk.x === method.publicKeyJwk.x) {\n        return method.id;\n      }\n    }\n  }\n}\n\n/**\n * Retrieves DID verification method types from a given DID document.\n *\n * Note: The DID document must adhere to the W3C DID specification.\n *\n * @param options - An object containing input parameters for retrieving types.\n * @param options.didDocument - The DID document from which types are retrieved.\n *\n * @returns An array of types. If no types were found, an empty array is returned.\n */\nexport function getVerificationMethodTypes(options: {\n  didDocument: Record<string, any>\n}): string[] {\n  const { didDocument } = options;\n\n  let types: string[] = [];\n\n  for (let key in didDocument) {\n    if (typeof didDocument[key] === 'object') {\n      types = types.concat(getVerificationMethodTypes({\n        didDocument: didDocument[key]\n      }));\n\n    } else if (key === 'type') {\n      types.push(didDocument[key]);\n    }\n  }\n\n  return [...new Set(types)]; // return only unique types\n}\n\n/**\n * Type guard function to check if the given endpoint is a DwnServiceEndpoint.\n *\n * @param key The endpoint to check.\n * @returns True if the endpoint is a DwnServiceEndpoint, false otherwise.\n */\nexport function isDwnServiceEndpoint(endpoint: string | DidServiceEndpoint | DidServiceEndpoint[]): endpoint is DwnServiceEndpoint {\n  return endpoint !== undefined &&\n    typeof endpoint !== 'string' &&\n    !Array.isArray(endpoint) &&\n    'nodes' in endpoint &&\n    'signingKeys' in endpoint;\n}\n\nexport function parseDid({ didUrl }: { didUrl: string }): ParsedDid | undefined {\n  const parsedDid: ParsedDid = parse(didUrl);\n\n  return parsedDid;\n}", "import type { JwkKeyPair, PrivateKeyJwk, PublicKeyJwk, Web5Crypto } from '@web5/crypto';\nimport type { IonDocumentModel, IonPublicKeyModel, JwkEd25519, JwkEs256k } from '@decentralized-identity/ion-sdk';\n\nimport { Convert, universalTypeOf } from '@web5/common';\nimport IonProofOfWork from '@decentralized-identity/ion-pow-sdk';\n// import { IonProofOfWork } from '@decentralized-identity/ion-pow-sdk';\nimport { EcdsaAlgorithm, EdDsaAlgorithm, Jose } from '@web5/crypto';\nimport { IonDid, IonPublicKeyPurpose, IonRequest } from '@decentralized-identity/ion-sdk';\n\nimport type { DidDocument, DidKeySetVerificationMethodKey, DidMethod, DidResolutionOptions, DidResolutionResult, DidService, DwnServiceEndpoint, PortableDid } from './types.js';\n\nimport { getServices, isDwnServiceEndpoint, parseDid } from './utils.js';\n\nexport type DidIonAnchorOptions = {\n  challengeEnabled?: boolean;\n  challengeEndpoint?: string;\n  operationsEndpoint?: string;\n  keySet: DidIonKeySet;\n  services: DidService[];\n}\n\nexport type DidIonCreateOptions = {\n  anchor?: boolean;\n  keyAlgorithm?: typeof SupportedCryptoAlgorithms[number];\n  keySet?: DidIonKeySet;\n  services?: DidService[];\n}\n\nexport type DidIonKeySet = {\n  recoveryKey?: JwkKeyPair;\n  updateKey?: JwkKeyPair;\n  verificationMethodKeys?: DidKeySetVerificationMethodKey[];\n}\n\nenum OperationType {\n  Create = 'create',\n  Update = 'update',\n  Deactivate = 'deactivate',\n  Recover = 'recover'\n}\n\n/**\n * Data model representing a public key in the DID Document.\n */\nexport interface IonCreateRequestModel {\n  type: OperationType;\n  suffixData: {\n    deltaHash: string;\n    recoveryCommitment: string;\n  };\n  delta: {\n    updateCommitment: string;\n    patches: {\n      action: string;\n      document: IonDocumentModel;\n    }[];\n  }\n}\n\nconst SupportedCryptoAlgorithms = [\n  'Ed25519',\n  'secp256k1'\n] as const;\n\nconst VerificationRelationshipToIonPublicKeyPurpose = {\n  assertionMethod      : IonPublicKeyPurpose.AssertionMethod,\n  authentication       : IonPublicKeyPurpose.Authentication,\n  capabilityDelegation : IonPublicKeyPurpose.CapabilityDelegation,\n  capabilityInvocation : IonPublicKeyPurpose.CapabilityInvocation,\n  keyAgreement         : IonPublicKeyPurpose.KeyAgreement\n};\n\nexport class DidIonMethod implements DidMethod {\n  /**\n   * Name of the DID method\n  */\n  public static methodName = 'ion';\n\n  public static async anchor(options: {\n    services: DidService[],\n    keySet: DidIonKeySet,\n    challengeEnabled?: boolean,\n    challengeEndpoint?: string,\n    operationsEndpoint?: string\n  }): Promise<DidResolutionResult | undefined> {\n    const {\n      challengeEnabled = false,\n      challengeEndpoint = 'https://beta.ion.msidentity.com/api/v1.0/proof-of-work-challenge',\n      keySet,\n      services,\n      operationsEndpoint = 'https://ion.tbd.engineering/operations'\n    } = options;\n\n    // Create ION Document.\n    const ionDocument = await DidIonMethod.createIonDocument({\n      keySet: keySet,\n      services\n    });\n\n    const createRequest = await DidIonMethod.getIonCreateRequest({\n      ionDocument,\n      recoveryPublicKeyJwk : keySet.recoveryKey.publicKeyJwk,\n      updatePublicKeyJwk   : keySet.updateKey.publicKeyJwk\n    });\n\n    let resolutionResult: DidResolutionResult;\n\n    if (challengeEnabled) {\n      const response = await IonProofOfWork.submitIonRequest(\n        challengeEndpoint,\n        operationsEndpoint,\n        JSON.stringify(createRequest)\n      );\n\n      if (response !== undefined && universalTypeOf(response) === 'String') {\n        resolutionResult = JSON.parse(response);\n      }\n\n    } else {\n      const response = await fetch(operationsEndpoint, {\n        method  : 'POST',\n        mode    : 'cors',\n        body    : JSON.stringify(createRequest),\n        headers : {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        resolutionResult = await response.json();\n      }\n    }\n\n    return resolutionResult;\n  }\n\n  public static async create(options?: DidIonCreateOptions): Promise<PortableDid> {\n    let { anchor, keyAlgorithm, keySet, services } = options ?? { };\n\n    // Begin constructing a PortableDid.\n    const did: Partial<PortableDid> = {};\n\n    // If any member of the key set is missing, generate the keys.\n    did.keySet = await DidIonMethod.generateKeySet({ keyAlgorithm, keySet });\n\n    // Generate Long Form DID URI.\n    did.did = await DidIonMethod.getLongFormDid({\n      keySet: did.keySet,\n      services\n    });\n\n    // Get short form DID.\n    did.canonicalId = await DidIonMethod.getShortFormDid({ didUrl: did.did });\n\n    let didResolutionResult: DidResolutionResult | undefined;\n    if (anchor) {\n      // Attempt to anchor the DID.\n      didResolutionResult = await DidIonMethod.anchor({\n        keySet: did.keySet,\n        services\n      });\n\n    } else {\n      // If anchoring was not requested, then resolve the long form DID.\n      didResolutionResult = await DidIonMethod.resolve({ didUrl: did.did });\n    }\n\n    // Store the DID Document.\n    did.document = didResolutionResult.didDocument;\n\n    return did as PortableDid;\n  }\n\n  public static async decodeLongFormDid(options: {\n    didUrl: string\n  }): Promise<IonCreateRequestModel> {\n    const { didUrl } = options;\n\n    const parsedDid = parseDid({ didUrl });\n\n    if (!parsedDid) {\n      throw new Error(`DidIonMethod: Unable to parse DID: ${didUrl}`);\n    }\n\n    const decodedLongFormDid = Convert.base64Url(\n      parsedDid.id.split(':').pop()\n    ).toObject() as Pick<IonCreateRequestModel, 'delta' | 'suffixData'>;\n\n    const createRequest: IonCreateRequestModel = {\n      ...decodedLongFormDid,\n      type: OperationType.Create\n    };\n\n    return createRequest;\n  }\n\n  /**\n   * Generates two key pairs used for authorization and encryption purposes\n   * when interfacing with DWNs. The IDs of these keys are referenced in the\n   * service object that includes the dwnUrls provided.\n   */\n  public static async generateDwnOptions(options: {\n    encryptionKeyId?: string,\n    serviceEndpointNodes: string[],\n    serviceId?: string,\n    signingKeyAlgorithm?: typeof SupportedCryptoAlgorithms[number]\n    signingKeyId?: string,\n  }): Promise<DidIonCreateOptions> {\n    const {\n      signingKeyAlgorithm = 'Ed25519', // Generate Ed25519 key pairs, by default.\n      serviceId = '#dwn', // Use default ID value, unless overridden.\n      signingKeyId = '#dwn-sig', // Use default key ID value, unless overridden.\n      encryptionKeyId = '#dwn-enc', // Use default key ID value, unless overridden.\n      serviceEndpointNodes } = options;\n\n    const signingKeyPair = await DidIonMethod.generateJwkKeyPair({\n      keyAlgorithm : signingKeyAlgorithm,\n      keyId        : signingKeyId\n    });\n\n    /** Currently, `dwn-sdk-js` has only implemented support for record\n     * encryption using the `ECIES-ES256K` crypto algorithm. Until the\n     * DWN SDK supports ECIES with EdDSA, the encryption key pair must\n     * use secp256k1. */\n    const encryptionKeyPair = await DidIonMethod.generateJwkKeyPair({\n      keyAlgorithm : 'secp256k1',\n      keyId        : encryptionKeyId\n    });\n\n    const keySet: DidIonKeySet = {\n      verificationMethodKeys: [\n        { ...signingKeyPair, relationships: ['authentication'] },\n        { ...encryptionKeyPair, relationships: ['keyAgreement'] }\n      ]\n    };\n\n    const serviceEndpoint: DwnServiceEndpoint = {\n      encryptionKeys : [encryptionKeyId],\n      nodes          : serviceEndpointNodes,\n      signingKeys    : [signingKeyId]\n    };\n\n    const services: DidService[] = [{\n      id   : serviceId,\n      serviceEndpoint,\n      type : 'DecentralizedWebNode',\n    }];\n\n    return { keySet, services };\n  }\n\n  public static async generateJwkKeyPair(options: {\n    keyAlgorithm: typeof SupportedCryptoAlgorithms[number],\n    keyId?: string\n  }): Promise<JwkKeyPair> {\n    const { keyAlgorithm, keyId } = options;\n\n    let cryptoKeyPair: Web5Crypto.CryptoKeyPair;\n\n    switch (keyAlgorithm) {\n      case 'Ed25519': {\n        cryptoKeyPair = await new EdDsaAlgorithm().generateKey({\n          algorithm   : { name: 'EdDSA', namedCurve: 'Ed25519' },\n          extractable : true,\n          keyUsages   : ['sign', 'verify']\n        });\n        break;\n      }\n\n      case 'secp256k1': {\n        cryptoKeyPair = await new EcdsaAlgorithm().generateKey({\n          algorithm   : { name: 'ECDSA', namedCurve: 'secp256k1' },\n          extractable : true,\n          keyUsages   : ['sign', 'verify']\n        });\n        break;\n      }\n\n      default: {\n        throw new Error(`Unsupported crypto algorithm: '${keyAlgorithm}'`);\n      }\n    }\n\n    // Convert the CryptoKeyPair to JwkKeyPair.\n    const jwkKeyPair = await Jose.cryptoKeyToJwkPair({ keyPair: cryptoKeyPair });\n\n    // Set kid values.\n    if (keyId) {\n      jwkKeyPair.privateKeyJwk.kid = keyId;\n      jwkKeyPair.publicKeyJwk.kid = keyId;\n    } else {\n      // If a key ID is not specified, generate RFC 7638 JWK thumbprint.\n      const jwkThumbprint = await Jose.jwkThumbprint({ key: jwkKeyPair.publicKeyJwk });\n      jwkKeyPair.privateKeyJwk.kid = jwkThumbprint;\n      jwkKeyPair.publicKeyJwk.kid = jwkThumbprint;\n    }\n\n    return jwkKeyPair;\n  }\n\n  public static async generateKeySet(options?: {\n    keyAlgorithm?: typeof SupportedCryptoAlgorithms[number],\n    keySet?: DidIonKeySet\n  }): Promise<DidIonKeySet> {\n    // Generate Ed25519 authentication key pair, by default.\n    let { keyAlgorithm = 'Ed25519', keySet = {} } = options ?? {};\n\n    // If keySet lacks verification method keys, generate one.\n    if (keySet.verificationMethodKeys === undefined) {\n      const authenticationkeyPair = await DidIonMethod.generateJwkKeyPair({\n        keyAlgorithm,\n        keyId: 'dwn-sig'\n      });\n      keySet.verificationMethodKeys = [{\n        ...authenticationkeyPair,\n        relationships: ['authentication', 'assertionMethod']\n      }];\n    }\n\n    // If keySet lacks recovery key, generate one.\n    if (keySet.recoveryKey === undefined) {\n      // Note: ION/Sidetree only supports secp256k1 recovery keys.\n      keySet.recoveryKey = await DidIonMethod.generateJwkKeyPair({\n        keyAlgorithm : 'secp256k1',\n        keyId        : 'ion-recovery-1'\n      });\n    }\n\n    // If keySet lacks update key, generate one.\n    if (keySet.updateKey === undefined) {\n      // Note: ION/Sidetree only supports secp256k1 update keys.\n      keySet.updateKey = await DidIonMethod.generateJwkKeyPair({\n        keyAlgorithm : 'secp256k1',\n        keyId        : 'ion-update-1'\n      });\n    }\n\n    // Generate RFC 7638 JWK thumbprints if `kid` is missing from any key.\n    for (const key of [...keySet.verificationMethodKeys, keySet.recoveryKey, keySet.updateKey]) {\n      if ('publicKeyJwk' in key) key.publicKeyJwk.kid ??= await Jose.jwkThumbprint({ key: key.publicKeyJwk });\n      if ('privateKeyJwk' in key) key.privateKeyJwk.kid ??= await Jose.jwkThumbprint({ key: key.privateKeyJwk });\n    }\n\n    return keySet;\n  }\n\n  /**\n   * Given the W3C DID Document of a `did:ion` DID, return the identifier of\n   * the verification method key that will be used for signing messages and\n   * credentials, by default.\n   *\n   * @param document = DID Document to get the default signing key from.\n   * @returns Verification method identifier for the default signing key.\n   */\n  public static async getDefaultSigningKey(options: {\n      didDocument: DidDocument\n    }): Promise<string | undefined> {\n    const { didDocument } = options;\n\n    if (!didDocument.id) {\n      throw new Error(`DidIonMethod: DID document is missing 'id' property`);\n    }\n\n    /** If the DID document contains a DWN service endpoint in the expected\n     * format, return the first entry in the `signingKeys` array. */\n    const [dwnService] = getServices({ didDocument, type: 'DecentralizedWebNode' });\n    if (isDwnServiceEndpoint(dwnService?.serviceEndpoint)) {\n      const [verificationMethodId] = dwnService.serviceEndpoint.signingKeys;\n      const did = didDocument.id;\n      const signingKeyId = `${did}${verificationMethodId}`;\n      return signingKeyId;\n    }\n\n    /** Otherwise, fallback to a naive approach of returning the first key ID\n     * in the `authentication` verification relationships array. */\n    if (didDocument.authentication\n        && Array.isArray(didDocument.authentication)\n        && didDocument.authentication.length > 0\n        && typeof didDocument.authentication[0] === 'string') {\n      const [verificationMethodId] = didDocument.authentication;\n      const did = didDocument.id;\n      const signingKeyId = `${did}${verificationMethodId}`;\n      return signingKeyId;\n    }\n  }\n\n  public static async getLongFormDid(options: {\n    services: DidService[],\n    keySet: DidIonKeySet\n  }): Promise<string> {\n    const { services = [], keySet } = options;\n\n    // Create ION Document.\n    const ionDocument = await DidIonMethod.createIonDocument({\n      keySet: keySet,\n      services\n    });\n\n    // Filter JWK to only those properties expected by ION/Sidetree.\n    const recoveryKey = DidIonMethod.jwkToIonJwk({ key: keySet.recoveryKey.publicKeyJwk }) as JwkEs256k;\n    const updateKey = DidIonMethod.jwkToIonJwk({ key: keySet.updateKey.publicKeyJwk }) as JwkEs256k;\n\n    // Create an ION DID create request operation.\n    const did = await IonDid.createLongFormDid({\n      document: ionDocument,\n      recoveryKey,\n      updateKey\n    });\n\n    return did;\n  }\n\n  public static async getShortFormDid(options: {\n    didUrl: string\n  }): Promise<string> {\n    const { didUrl } = options;\n\n    const parsedDid = parseDid({ didUrl });\n\n    if (!parsedDid) {\n      throw new Error(`DidIonMethod: Unable to parse DID: ${didUrl}`);\n    }\n\n    const shortFormDid = parsedDid.did.split(':', 3).join(':');\n\n    return shortFormDid;\n  }\n\n  public static async resolve(options: {\n    didUrl: string,\n    resolutionOptions?: DidResolutionOptions\n  }): Promise<DidResolutionResult> {\n    // TODO: Implement resolutionOptions as defined in https://www.w3.org/TR/did-core/#did-resolution\n    const { didUrl, resolutionOptions = {} } = options;\n\n    const parsedDid = parseDid({ didUrl });\n    if (!parsedDid) {\n      return {\n        '@context'            : 'https://w3id.org/did-resolution/v1',\n        didDocument           : undefined,\n        didDocumentMetadata   : {},\n        didResolutionMetadata : {\n          contentType  : 'application/did+ld+json',\n          error        : 'invalidDid',\n          errorMessage : `Cannot parse DID: ${didUrl}`\n        }\n      };\n    }\n\n    if (parsedDid.method !== 'ion') {\n      return {\n        '@context'            : 'https://w3id.org/did-resolution/v1',\n        didDocument           : undefined,\n        didDocumentMetadata   : {},\n        didResolutionMetadata : {\n          contentType  : 'application/did+ld+json',\n          error        : 'methodNotSupported',\n          errorMessage : `Method not supported: ${parsedDid.method}`\n        }\n      };\n    }\n\n    const { resolutionEndpoint = 'https://ion.tbd.engineering/identifiers/' } = resolutionOptions;\n    const normalizeUrl = (url: string): string => url.endsWith('/') ? url : url + '/';\n    const resolutionUrl = `${normalizeUrl(resolutionEndpoint)}${parsedDid.did}`;\n\n    const response = await fetch(resolutionUrl);\n\n    let resolutionResult: DidResolutionResult | object;\n    try {\n      resolutionResult = await response.json();\n    } catch (error) {\n      resolutionResult = {};\n    }\n\n    if (response.ok) {\n      return resolutionResult as DidResolutionResult;\n    }\n\n    // Response was not \"OK\" (HTTP 4xx-5xx status code)\n\n    // Return result if it contains DID resolution metadata.\n    if ('didResolutionMetadata' in resolutionResult) {\n      return resolutionResult;\n    }\n\n    // Set default error code and message.\n    let error = 'internalError';\n    let errorMessage = `DID resolver responded with HTTP status code: ${response.status}`;\n\n    /** The Microsoft resolution endpoint does not return a valid DidResolutionResult\n       * when an ION DID is \"not found\" so normalization is needed. */\n    if ('error' in resolutionResult &&\n        typeof resolutionResult.error === 'object' &&\n        'code' in resolutionResult.error &&\n        typeof resolutionResult.error.code === 'string' &&\n        'message' in resolutionResult.error &&\n        typeof resolutionResult.error.message === 'string') {\n      error = resolutionResult.error.code.includes('not_found') ? 'notFound' : error;\n      errorMessage = resolutionResult.error.message ?? errorMessage;\n    }\n\n    return {\n      '@context'            : 'https://w3id.org/did-resolution/v1',\n      didDocument           : undefined,\n      didDocumentMetadata   : {},\n      didResolutionMetadata : {\n        contentType: 'application/did+ld+json',\n        error,\n        errorMessage\n      }\n    };\n  }\n\n  private static async createIonDocument(options: {\n    keySet: DidIonKeySet,\n    services?: DidService[]\n  }): Promise<IonDocumentModel> {\n    const { services = [], keySet } = options;\n\n    /**\n     * STEP 1: Convert key set verification method keys to ION SDK format.\n     */\n\n    const ionPublicKeys: IonPublicKeyModel[] = [];\n\n    for (const key of keySet.verificationMethodKeys) {\n      // Map W3C DID verification relationship names to ION public key purposes.\n      const ionPurposes: IonPublicKeyPurpose[] = [];\n      for (const relationship of key.relationships) {\n        ionPurposes.push(\n          VerificationRelationshipToIonPublicKeyPurpose[relationship]\n        );\n      }\n\n      /** During certain ION operations, JWK validation will throw an error\n       * if key IDs provided as input are prefixed with `#`. ION operation\n       * outputs and DID document resolution always include the `#` prefix\n       * for key IDs resulting in a confusing mismatch between inputs and\n       * outputs.  To improve the developer experience, this inconsistency\n       * is addressed by normalizing input key IDs before being passed\n       * to ION SDK methods. */\n      const publicKeyId = (key.publicKeyJwk.kid.startsWith('#'))\n        ? key.publicKeyJwk.kid.substring(1)\n        : key.publicKeyJwk.kid;\n\n      // Convert public key JWK to ION format.\n      const publicKey: IonPublicKeyModel = {\n        id           : publicKeyId,\n        publicKeyJwk : DidIonMethod.jwkToIonJwk({ key: key.publicKeyJwk }),\n        purposes     : ionPurposes,\n        type         : 'JsonWebKey2020'\n      };\n\n      ionPublicKeys.push(publicKey);\n    }\n\n    /**\n     * STEP 2: Convert service entries, if any, to ION SDK format.\n     */\n    const ionServices = services.map(service => ({\n      ...service,\n      id: service.id.startsWith('#') ? service.id.substring(1) : service.id\n    }));\n\n    /**\n     * STEP 3: Format as ION document.\n     */\n\n    const ionDocumentModel: IonDocumentModel = {\n      publicKeys : ionPublicKeys,\n      services   : ionServices\n    };\n\n    return ionDocumentModel;\n  }\n\n  private static async getIonCreateRequest(options: {\n    ionDocument: IonDocumentModel,\n    recoveryPublicKeyJwk: PublicKeyJwk,\n    updatePublicKeyJwk: PublicKeyJwk\n  }): Promise<IonCreateRequestModel> {\n    const { ionDocument, recoveryPublicKeyJwk, updatePublicKeyJwk } = options;\n\n    // Create an ION DID create request operation.\n    const createRequest = await IonRequest.createCreateRequest({\n      document    : ionDocument,\n      recoveryKey : DidIonMethod.jwkToIonJwk({ key: recoveryPublicKeyJwk }) as JwkEs256k,\n      updateKey   : DidIonMethod.jwkToIonJwk({ key: updatePublicKeyJwk }) as JwkEs256k\n    });\n\n    return createRequest;\n  }\n\n  private static jwkToIonJwk({ key }: { key: PrivateKeyJwk | PublicKeyJwk }): JwkEd25519 | JwkEs256k {\n    let ionJwk: Partial<JwkEd25519 | JwkEs256k> = { };\n\n    if ('crv' in key) {\n      ionJwk.crv = key.crv;\n      ionJwk.kty = key.kty;\n      ionJwk.x = key.x;\n      if ('d' in key) ionJwk.d = key.d;\n\n      if ('y' in key && key.y) {\n        // secp256k1 JWK.\n        return { ...ionJwk, y: key.y} as JwkEs256k;\n      }\n      // Ed25519 JWK.\n      return { ...ionJwk } as JwkEd25519;\n    }\n\n    throw new Error(`jwkToIonJwk: Unsupported key algorithm.`);\n  }\n}", "/**\n * ION SDK error codes.\n */\nexport default {\n  DeltaExceedsMaximumSize: 'DeltaExceedsMaximumSize',\n  DidDocumentPublicKeyIdDuplicated: 'DidDocumentPublicKeyIdDuplicated',\n  DidDocumentPublicKeyMissingOrIncorrectType: 'DidDocumentPublicKeyMissingOrIncorrectType',\n  DidDocumentServiceIdDuplicated: 'DidDocumentServiceIdDuplicated',\n  DidSuffixIncorrectLength: 'DidSuffixIncorrectLength',\n  EncodedStringIncorrectEncoding: 'EncodedStringIncorrectEncoding',\n  IdNotUsingBase64UrlCharacterSet: 'IdNotUsingBase64UrlCharacterSet',\n  IdTooLong: 'IdTooLong',\n  JwkEs256kMissingOrInvalidCrv: 'JwkEs256kMissingOrInvalidCrv',\n  JwkEs256kMissingOrInvalidKty: 'JwkEs256kMissingOrInvalidKty',\n  JwkEs256kHasIncorrectLengthOfX: 'JwkEs256kHasIncorrectLengthOfX',\n  JwkEs256kHasIncorrectLengthOfY: 'JwkEs256kHasIncorrectLengthOfY',\n  JwkEs256kHasIncorrectLengthOfD: 'JwkEs256kHasIncorrectLengthOfD',\n  MultihashStringNotAMultihash: 'MultihashStringNotAMultihash',\n  MultihashUnsupportedHashAlgorithm: 'MultihashUnsupportedHashAlgorithm',\n  PublicKeyJwkEs256kHasUnexpectedProperty: 'PublicKeyJwkEs256kHasUnexpectedProperty',\n  PublicKeyPurposeDuplicated: 'PublicKeyPurposeDuplicated',\n  ServiceEndpointCannotBeAnArray: 'ServiceEndpointCannotBeAnArray',\n  ServiceEndpointStringNotValidUri: 'ServiceEndpointStringNotValidUri',\n  ServiceTypeTooLong: 'ServiceTypeTooLong'\n};\n", "/**\n * A class that represents an ION error.\n */\nexport default class IonError extends Error {\n  constructor (public code: string, message: string) {\n    super(`${code}: ${message}`);\n\n    // NOTE: Extending 'Error' breaks prototype chain since TypeScript 2.1.\n    // The following line restores prototype chain.\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n", "const empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\nexport { equals, coerce, isBinary, fromHex, toHex, fromString, toString, empty }\n", "import basex from '../../vendor/base-x.js'\nimport { coerce } from '../bytes.js'\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nexport const or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nexport class Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nexport const from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nexport const baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => coerce(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nexport const rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n", "// @ts-check\n\nimport { rfc4648 } from './base.js'\n\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n", "import ErrorCode from './ErrorCode.js';\nimport IonError from './IonError.js';\nimport { base64url } from 'multiformats/bases/base64';\n\n/**\n * Class that encodes binary blobs into strings.\n * Note that the encode/decode methods may change underlying encoding scheme.\n */\nexport default class Encoder {\n  /**\n   * Encodes given bytes into a Base64URL string.\n   */\n  public static encode (content: Uint8Array): string {\n    const encodedContent = base64url.baseEncode(content);\n    return encodedContent;\n  }\n\n  /**\n   * Decodes the given Base64URL string into bytes.\n   */\n  public static decodeAsBytes (encodedContent: string, inputContextForErrorLogging: string): Uint8Array {\n    if (!Encoder.isBase64UrlString(encodedContent)) {\n      throw new IonError(ErrorCode.EncodedStringIncorrectEncoding, `Given ${inputContextForErrorLogging} must be base64url string.`);\n    }\n\n    return base64url.baseDecode(encodedContent);\n  }\n\n  /**\n   * Decodes the given Base64URL string into the original string.\n   */\n  public static decodeAsString (encodedContent: string, inputContextForErrorLogging: string): string {\n    const rawBytes = Encoder.decodeAsBytes(encodedContent, inputContextForErrorLogging);\n\n    return Encoder.bytesToString(rawBytes);\n  }\n\n  /**\n   * Tests if the given string is a Base64URL string.\n   */\n  public static isBase64UrlString (input: string): boolean {\n    // NOTE:\n    // /<expression>/ denotes regex.\n    // ^ denotes beginning of string.\n    // $ denotes end of string.\n    // + denotes one or more characters.\n    const isBase64UrlString = /^[A-Za-z0-9_-]+$/.test(input);\n    return isBase64UrlString;\n  }\n\n  /**\n   * Converts input string to bytes.\n   */\n  public static stringToBytes (input: string): Uint8Array {\n    const bytes = new TextEncoder().encode(input);\n    return bytes;\n  }\n\n  /**\n   * Converts bytes to string.\n   */\n  public static bytesToString (input: Uint8Array): string {\n    const output = new TextDecoder().decode(input);\n    return output;\n  }\n}\n", "import * as URI from 'uri-js';\nimport ErrorCode from './ErrorCode.js';\nimport ISigner from './interfaces/ISigner.js';\nimport InputValidator from './InputValidator.js';\nimport IonCreateRequestModel from './models/IonCreateRequestModel.js';\nimport IonDeactivateRequestModel from './models/IonDeactivateRequestModel.js';\nimport IonDocumentModel from './models/IonDocumentModel.js';\nimport IonError from './IonError.js';\nimport IonPublicKeyModel from './models/IonPublicKeyModel.js';\nimport IonRecoverRequestModel from './models/IonRecoverRequestModel.js';\nimport IonSdkConfig from './IonSdkConfig.js';\nimport IonServiceModel from './models/IonServiceModel.js';\nimport IonUpdateRequestModel from './models/IonUpdateRequestModel.js';\nimport JsonCanonicalizer from './JsonCanonicalizer.js';\nimport JwkEs256k from './models/JwkEs256k.js';\nimport Multihash from './Multihash.js';\nimport OperationKeyType from './enums/OperationKeyType.js';\nimport OperationType from './enums/OperationType.js';\nimport PatchAction from './enums/PatchAction.js';\n\n/**\n * Class containing operations related to ION requests.\n */\nexport default class IonRequest {\n  /**\n   * Creates an ION DID create request.\n   * @param input.document The initial state to be associate with the ION DID to be created using a `replace` document patch action.\n   */\n  public static async createCreateRequest (input: {\n    recoveryKey: JwkEs256k;\n    updateKey: JwkEs256k;\n    document: IonDocumentModel;\n  }): Promise<IonCreateRequestModel> {\n    const recoveryKey = input.recoveryKey;\n    const updateKey = input.updateKey;\n    const didDocumentKeys = input.document.publicKeys;\n    const services = input.document.services;\n\n    // Validate recovery and update public keys.\n    InputValidator.validateEs256kOperationKey(recoveryKey, OperationKeyType.Public);\n    InputValidator.validateEs256kOperationKey(updateKey, OperationKeyType.Public);\n\n    // Validate all given DID Document keys.\n    IonRequest.validateDidDocumentKeys(didDocumentKeys);\n\n    // Validate all given service.\n    IonRequest.validateServices(services);\n\n    const hashAlgorithmInMultihashCode = IonSdkConfig.hashAlgorithmInMultihashCode;\n\n    const patches = [{\n      action: PatchAction.Replace,\n      document: input.document\n    }];\n\n    const delta = {\n      updateCommitment: await Multihash.canonicalizeThenDoubleHashThenEncode(updateKey, hashAlgorithmInMultihashCode),\n      patches\n    };\n\n    IonRequest.validateDeltaSize(delta);\n\n    const deltaHash = await Multihash.canonicalizeThenHashThenEncode(delta, hashAlgorithmInMultihashCode);\n\n    const suffixData = {\n      deltaHash,\n      recoveryCommitment: await Multihash.canonicalizeThenDoubleHashThenEncode(recoveryKey, hashAlgorithmInMultihashCode)\n    };\n\n    const operationRequest = {\n      type: OperationType.Create,\n      suffixData: suffixData,\n      delta: delta\n    };\n\n    return operationRequest;\n  }\n\n  public static async createDeactivateRequest (input: {\n    didSuffix: string,\n    recoveryPublicKey: JwkEs256k,\n    signer: ISigner\n  }): Promise<IonDeactivateRequestModel> {\n    // Validate DID suffix\n    IonRequest.validateDidSuffix(input.didSuffix);\n\n    // Validates recovery public key\n    InputValidator.validateEs256kOperationKey(input.recoveryPublicKey, OperationKeyType.Public);\n\n    const hashAlgorithmInMultihashCode = IonSdkConfig.hashAlgorithmInMultihashCode;\n    const revealValue = await Multihash.canonicalizeThenHashThenEncode(input.recoveryPublicKey, hashAlgorithmInMultihashCode);\n\n    const dataToBeSigned = {\n      didSuffix: input.didSuffix,\n      recoveryKey: input.recoveryPublicKey\n    };\n\n    const compactJws = await input.signer.sign({ alg: 'ES256K' }, dataToBeSigned);\n\n    return {\n      type: OperationType.Deactivate,\n      didSuffix: input.didSuffix,\n      revealValue: revealValue,\n      signedData: compactJws\n    };\n  }\n\n  public static async createRecoverRequest (input: {\n    didSuffix: string,\n    recoveryPublicKey: JwkEs256k,\n    nextRecoveryPublicKey: JwkEs256k,\n    nextUpdatePublicKey: JwkEs256k,\n    document: IonDocumentModel,\n    signer: ISigner\n  }): Promise<IonRecoverRequestModel> {\n    // Validate DID suffix\n    IonRequest.validateDidSuffix(input.didSuffix);\n\n    // Validate recovery public key\n    InputValidator.validateEs256kOperationKey(input.recoveryPublicKey, OperationKeyType.Public);\n\n    // Validate next recovery public key\n    InputValidator.validateEs256kOperationKey(input.nextRecoveryPublicKey, OperationKeyType.Public);\n\n    // Validate next update public key\n    InputValidator.validateEs256kOperationKey(input.nextUpdatePublicKey, OperationKeyType.Public);\n\n    // Validate all given DID Document keys.\n    IonRequest.validateDidDocumentKeys(input.document.publicKeys);\n\n    // Validate all given service.\n    IonRequest.validateServices(input.document.services);\n\n    const hashAlgorithmInMultihashCode = IonSdkConfig.hashAlgorithmInMultihashCode;\n    const revealValue = await Multihash.canonicalizeThenHashThenEncode(input.recoveryPublicKey, hashAlgorithmInMultihashCode);\n\n    const patches = [{\n      action: PatchAction.Replace,\n      document: input.document\n    }];\n\n    const nextUpdateCommitmentHash = await Multihash.canonicalizeThenDoubleHashThenEncode(input.nextUpdatePublicKey, hashAlgorithmInMultihashCode);\n    const delta = {\n      patches,\n      updateCommitment: nextUpdateCommitmentHash\n    };\n\n    const deltaHash = await Multihash.canonicalizeThenHashThenEncode(delta, hashAlgorithmInMultihashCode);\n    const nextRecoveryCommitmentHash = await Multihash.canonicalizeThenDoubleHashThenEncode(input.nextRecoveryPublicKey, hashAlgorithmInMultihashCode);\n\n    const dataToBeSigned = {\n      recoveryCommitment: nextRecoveryCommitmentHash,\n      recoveryKey: input.recoveryPublicKey,\n      deltaHash: deltaHash\n    };\n\n    const compactJws = await input.signer.sign({ alg: 'ES256K' }, dataToBeSigned);\n\n    return {\n      type: OperationType.Recover,\n      didSuffix: input.didSuffix,\n      revealValue: revealValue,\n      delta: delta,\n      signedData: compactJws\n    };\n  }\n\n  public static async createUpdateRequest (input: {\n    didSuffix: string;\n    updatePublicKey: JwkEs256k;\n    nextUpdatePublicKey: JwkEs256k;\n    signer: ISigner;\n    servicesToAdd?: IonServiceModel[];\n    idsOfServicesToRemove?: string[];\n    publicKeysToAdd?: IonPublicKeyModel[];\n    idsOfPublicKeysToRemove?: string[];\n  }): Promise<IonUpdateRequestModel> {\n    // Validate DID suffix\n    IonRequest.validateDidSuffix(input.didSuffix);\n\n    // Validate update public key\n    InputValidator.validateEs256kOperationKey(input.updatePublicKey, OperationKeyType.Public);\n\n    // Validate next update public key\n    InputValidator.validateEs256kOperationKey(input.nextUpdatePublicKey, OperationKeyType.Public);\n\n    // Validate all given service.\n    IonRequest.validateServices(input.servicesToAdd);\n\n    // Validate all given DID Document keys.\n    IonRequest.validateDidDocumentKeys(input.publicKeysToAdd);\n\n    // Validate all given service id to remove.\n    if (input.idsOfServicesToRemove !== undefined) {\n      for (const id of input.idsOfServicesToRemove) {\n        InputValidator.validateId(id);\n      }\n    }\n\n    // Validate all given public key id to remove.\n    if (input.idsOfPublicKeysToRemove !== undefined) {\n      for (const id of input.idsOfPublicKeysToRemove) {\n        InputValidator.validateId(id);\n      }\n    }\n\n    const patches = [];\n    // Create patches for add services\n    const servicesToAdd = input.servicesToAdd;\n    if (servicesToAdd !== undefined && servicesToAdd.length > 0) {\n      const patch = {\n        action: PatchAction.AddServices,\n        services: servicesToAdd\n      };\n\n      patches.push(patch);\n    }\n\n    // Create patches for remove services\n    const idsOfServicesToRemove = input.idsOfServicesToRemove;\n    if (idsOfServicesToRemove !== undefined && idsOfServicesToRemove.length > 0) {\n      const patch = {\n        action: PatchAction.RemoveServices,\n        ids: idsOfServicesToRemove\n      };\n\n      patches.push(patch);\n    }\n\n    // Create patches for adding public keys\n    const publicKeysToAdd = input.publicKeysToAdd;\n    if (publicKeysToAdd !== undefined && publicKeysToAdd.length > 0) {\n      const patch = {\n        action: PatchAction.AddPublicKeys,\n        publicKeys: publicKeysToAdd\n      };\n\n      patches.push(patch);\n    }\n\n    // Create patch for removing public keys\n    const idsOfPublicKeysToRemove = input.idsOfPublicKeysToRemove;\n    if (idsOfPublicKeysToRemove !== undefined && idsOfPublicKeysToRemove.length > 0) {\n      const patch = {\n        action: PatchAction.RemovePublicKeys,\n        ids: idsOfPublicKeysToRemove\n      };\n\n      patches.push(patch);\n    }\n\n    const hashAlgorithmInMultihashCode = IonSdkConfig.hashAlgorithmInMultihashCode;\n    const revealValue = await Multihash.canonicalizeThenHashThenEncode(input.updatePublicKey, hashAlgorithmInMultihashCode);\n\n    const nextUpdateCommitmentHash = await Multihash.canonicalizeThenDoubleHashThenEncode(input.nextUpdatePublicKey, hashAlgorithmInMultihashCode);\n    const delta = {\n      patches,\n      updateCommitment: nextUpdateCommitmentHash\n    };\n    const deltaHash = await Multihash.canonicalizeThenHashThenEncode(delta, hashAlgorithmInMultihashCode);\n\n    const dataToBeSigned = {\n      updateKey: input.updatePublicKey,\n      deltaHash\n    };\n\n    const compactJws = await input.signer.sign({ alg: 'ES256K' }, dataToBeSigned);\n\n    return {\n      type: OperationType.Update,\n      didSuffix: input.didSuffix,\n      revealValue,\n      delta,\n      signedData: compactJws\n    };\n  }\n\n  private static validateDidSuffix (didSuffix: string) {\n    Multihash.validateEncodedHashComputedUsingSupportedHashAlgorithm(didSuffix, 'didSuffix');\n  }\n\n  private static validateDidDocumentKeys (publicKeys?: IonPublicKeyModel[]) {\n    if (publicKeys === undefined) {\n      return;\n    }\n\n    // Validate each public key.\n    const publicKeyIdSet: Set<string> = new Set();\n    for (const publicKey of publicKeys) {\n      if (Array.isArray(publicKey.publicKeyJwk)) {\n        throw new IonError(ErrorCode.DidDocumentPublicKeyMissingOrIncorrectType, `DID Document key 'publicKeyJwk' property is not a non-array object.`);\n      }\n\n      InputValidator.validateId(publicKey.id);\n\n      // 'id' must be unique across all given keys.\n      if (publicKeyIdSet.has(publicKey.id)) {\n        throw new IonError(ErrorCode.DidDocumentPublicKeyIdDuplicated, `DID Document key with ID '${publicKey.id}' already exists.`);\n      }\n      publicKeyIdSet.add(publicKey.id);\n\n      InputValidator.validatePublicKeyPurposes(publicKey.purposes);\n    }\n  }\n\n  private static validateServices (services?: IonServiceModel[]) {\n    if (services !== undefined && services.length !== 0) {\n      const serviceIdSet: Set<string> = new Set();\n      for (const service of services) {\n        IonRequest.validateService(service);\n        if (serviceIdSet.has(service.id)) {\n          throw new IonError(ErrorCode.DidDocumentServiceIdDuplicated, 'Service id has to be unique');\n        }\n        serviceIdSet.add(service.id);\n      }\n    }\n  }\n\n  private static validateService (service: IonServiceModel) {\n    InputValidator.validateId(service.id);\n\n    const maxTypeLength = 30;\n    if (service.type.length > maxTypeLength) {\n      const errorMessage = `Service endpoint type length ${service.type.length} exceeds max allowed length of ${maxTypeLength}.`;\n      throw new IonError(ErrorCode.ServiceTypeTooLong, errorMessage);\n    }\n\n    // Throw error if `serviceEndpoint` is an array.\n    if (Array.isArray(service.serviceEndpoint)) {\n      const errorMessage = 'Service endpoint value cannot be an array.';\n      throw new IonError(ErrorCode.ServiceEndpointCannotBeAnArray, errorMessage);\n    }\n\n    if (typeof service.serviceEndpoint === 'string') {\n      const uri = URI.parse(service.serviceEndpoint);\n      if (uri.error !== undefined) {\n        throw new IonError(ErrorCode.ServiceEndpointStringNotValidUri, `Service endpoint string '${service.serviceEndpoint}' is not a URI.`);\n      }\n    }\n  }\n\n  private static validateDeltaSize (delta: object) {\n    const deltaBytes = JsonCanonicalizer.canonicalizeAsBytes(delta);\n    if (deltaBytes.length > IonSdkConfig.maxCanonicalizedDeltaSizeInBytes) {\n      const errorMessage = `Delta of ${deltaBytes.length} bytes exceeded limit of ${IonSdkConfig.maxCanonicalizedDeltaSizeInBytes} bytes.`;\n      throw new IonError(ErrorCode.DeltaExceedsMaximumSize, errorMessage);\n    }\n  }\n}\n", "/**\n * Operation key type, indicates if a key is a public or private key.\n */\nenum OperationKeyType {\n    Public = 'public',\n    Private = 'private'\n  }\n\nexport default OperationKeyType;\n", "import Encoder from './Encoder.js';\nimport ErrorCode from './ErrorCode.js';\nimport IonError from './IonError.js';\nimport IonPublicKeyPurpose from './enums/IonPublicKeyPurpose.js';\nimport JwkEs256k from './models/JwkEs256k.js';\nimport OperationKeyType from './enums/OperationKeyType.js';\n\n/**\n * Class containing input validation methods.\n */\nexport default class InputValidator {\n  /**\n   * Validates the schema of a ES256K JWK key.\n   */\n  public static validateEs256kOperationKey (operationKeyJwk: JwkEs256k, operationKeyType: OperationKeyType) {\n    const allowedProperties = new Set(['kty', 'crv', 'x', 'y']);\n    if (operationKeyType === OperationKeyType.Private) {\n      allowedProperties.add('d');\n    }\n    for (const property in operationKeyJwk) {\n      if (!allowedProperties.has(property)) {\n        throw new IonError(ErrorCode.PublicKeyJwkEs256kHasUnexpectedProperty, `SECP256K1 JWK key has unexpected property '${property}'.`);\n      }\n    }\n\n    if (operationKeyJwk.crv !== 'secp256k1') {\n      throw new IonError(ErrorCode.JwkEs256kMissingOrInvalidCrv, `SECP256K1 JWK 'crv' property must be 'secp256k1' but got '${operationKeyJwk.crv}.'`);\n    }\n\n    if (operationKeyJwk.kty !== 'EC') {\n      throw new IonError(ErrorCode.JwkEs256kMissingOrInvalidKty, `SECP256K1 JWK 'kty' property must be 'EC' but got '${operationKeyJwk.kty}.'`);\n    }\n\n    // `x` and `y` need 43 Base64URL encoded bytes to contain 256 bits.\n    if (operationKeyJwk.x.length !== 43) {\n      throw new IonError(ErrorCode.JwkEs256kHasIncorrectLengthOfX, `SECP256K1 JWK 'x' property must be 43 bytes.`);\n    }\n\n    if (operationKeyJwk.y.length !== 43) {\n      throw new IonError(ErrorCode.JwkEs256kHasIncorrectLengthOfY, `SECP256K1 JWK 'y' property must be 43 bytes.`);\n    }\n\n    if (operationKeyType === OperationKeyType.Private && (operationKeyJwk.d === undefined || operationKeyJwk.d.length !== 43)) {\n      throw new IonError(ErrorCode.JwkEs256kHasIncorrectLengthOfD, `SECP256K1 JWK 'd' property must be 43 bytes.`);\n    }\n  }\n\n  /**\n   * Validates an `id` property (in `IonPublicKeyModel` and `IonServiceModel`).\n   */\n  public static validateId (id: string) {\n    const maxIdLength = 50;\n    if (id.length > maxIdLength) {\n      throw new IonError(ErrorCode.IdTooLong, `Key ID length ${id.length} exceed max allowed length of ${maxIdLength}.`);\n    }\n\n    if (!Encoder.isBase64UrlString(id)) {\n      throw new IonError(ErrorCode.IdNotUsingBase64UrlCharacterSet, `Key ID '${id}' is not a Base64URL string.`);\n    }\n  }\n\n  /**\n   * Validates the given public key purposes.\n   */\n  public static validatePublicKeyPurposes (purposes?: IonPublicKeyPurpose[]) {\n    // Nothing to validate if `purposes` is undefined.\n    if (purposes === undefined) {\n      return;\n    }\n\n    // Validate that all purposes are be unique.\n    const processedPurposes: Set<IonPublicKeyPurpose> = new Set();\n    for (const purpose of purposes) {\n      if (processedPurposes.has(purpose)) {\n        throw new IonError(ErrorCode.PublicKeyPurposeDuplicated, `Public key purpose '${purpose}' already specified.`);\n      }\n      processedPurposes.add(purpose);\n    }\n  }\n}\n", "import IonNetwork from './enums/IonNetwork.js';\n\n/**\n * Global configuration of the SDK.\n */\nexport default class IonSdkConfig {\n  /**\n   * Default hash algorithm used when hashing is performed.\n   */\n  public static hashAlgorithmInMultihashCode = 18; // SHA256\n\n  /**\n   * Maximum bytes for canonicalized delta.\n   */\n  public static maxCanonicalizedDeltaSizeInBytes: number = 1000;\n\n  /**\n   * Network name in ION DID, okay to leave as `undefined` if mainnet.\n   */\n  public static network: IonNetwork | undefined;\n}\n", "import * as canonicalize from 'canonicalize';\nimport Encoder from './Encoder.js';\n\n/**\n * Class containing reusable JSON canonicalization operations using JSON Canonicalization Scheme (JCS).\n */\nexport default class JsonCanonicalizer {\n  /**\n   * Canonicalizes the given content as bytes.\n   */\n  public static canonicalizeAsBytes (content: object): Uint8Array {\n    // We need to remove all properties with `undefined` as value so that JCS canonicalization will not produce invalid JSON.\n    const contentWithoutUndefinedProperties = JsonCanonicalizer.removeAllUndefinedProperties(content);\n    const canonicalizedString: string = canonicalize.default(contentWithoutUndefinedProperties)!;\n    const contentBytes = Encoder.stringToBytes(canonicalizedString);\n    return contentBytes;\n  }\n\n  /**\n   * Removes all properties within the given object with `undefined` as value.\n   */\n  private static removeAllUndefinedProperties (content: any): any {\n    for (const key in content) {\n      if (typeof content[key] === 'object') {\n        JsonCanonicalizer.removeAllUndefinedProperties(content[key]);\n      } else if (content[key] === undefined) {\n        delete content[key];\n      }\n    }\n\n    return content;\n  }\n}\n", "import * as multihashes from 'multihashes';\nimport Encoder from './Encoder.js';\nimport ErrorCode from './ErrorCode.js';\nimport { HashCode } from 'multihashes';\nimport IonError from './IonError.js';\nimport IonSdkConfig from './IonSdkConfig.js';\nimport JsonCanonicalizer from './JsonCanonicalizer.js';\nimport { sha256 } from 'multiformats/hashes/sha2';\n\n/**\n * Class that performs hashing operations using the multihash format.\n */\nexport default class Multihash {\n  /**\n   * Hashes the content using the hashing algorithm specified.\n   * @param hashAlgorithmInMultihashCode The hashing algorithm to use.\n   */\n  public static async hash (content: Uint8Array, hashAlgorithmInMultihashCode: number): Promise<Uint8Array> {\n    const conventionalHash = await this.hashAsNonMultihashBytes(content, hashAlgorithmInMultihashCode);\n    const multihash = multihashes.encode(conventionalHash, hashAlgorithmInMultihashCode as HashCode);\n\n    return multihash;\n  }\n\n  /**\n   * Hashes the content using the hashing algorithm specified as a generic (non-multihash) hash.\n   * @param hashAlgorithmInMultihashCode The hashing algorithm to use.\n   * @returns A multihash bytes.\n   */\n  public static async hashAsNonMultihashBytes (content: Uint8Array, hashAlgorithmInMultihashCode: number): Promise<Uint8Array> {\n    let hash;\n    switch (hashAlgorithmInMultihashCode) {\n      case 18: // SHA256\n        hash = await sha256.encode(content);\n        break;\n      default:\n        throw new IonError(\n          ErrorCode.MultihashUnsupportedHashAlgorithm,\n          `Hash algorithm defined in multihash code ${hashAlgorithmInMultihashCode} is not supported.`\n        );\n    }\n\n    return hash;\n  }\n\n  /**\n   * Canonicalize the given content, then double hashes the result using the latest supported hash algorithm, then encodes the multihash.\n   * Mainly used for testing purposes.\n   */\n  public static async canonicalizeThenHashThenEncode (content: object, hashAlgorithmInMultihashCode: number): Promise<string> {\n    const canonicalizedStringBytes = JsonCanonicalizer.canonicalizeAsBytes(content);\n\n    const multihashEncodedString = await Multihash.hashThenEncode(canonicalizedStringBytes, hashAlgorithmInMultihashCode);\n    return multihashEncodedString;\n  }\n\n  /**\n   * Canonicalize the given content, then double hashes the result using the latest supported hash algorithm, then encodes the multihash.\n   * Mainly used for testing purposes.\n   */\n  public static async canonicalizeThenDoubleHashThenEncode (content: object, hashAlgorithmInMultihashCode: number): Promise<string> {\n    const contentBytes = JsonCanonicalizer.canonicalizeAsBytes(content);\n\n    // Double hash.\n    const intermediateHashBytes = await Multihash.hashAsNonMultihashBytes(contentBytes, hashAlgorithmInMultihashCode);\n    const multihashEncodedString = await Multihash.hashThenEncode(intermediateHashBytes, hashAlgorithmInMultihashCode);\n    return multihashEncodedString;\n  }\n\n  /**\n   * Hashes the content using the hashing algorithm specified then encodes the multihash bytes as string.\n   * @param hashAlgorithmInMultihashCode The hashing algorithm to use.\n   */\n  public static async hashThenEncode (content: Uint8Array, hashAlgorithmInMultihashCode: number): Promise<string> {\n    const multihashBytes = await Multihash.hash(content, hashAlgorithmInMultihashCode);\n    const multihashEncodedString = Encoder.encode(multihashBytes);\n    return multihashEncodedString;\n  }\n\n  /**\n   * Checks if the given encoded hash is a multihash computed using the configured hashing algorithm.\n   */\n  public static validateEncodedHashComputedUsingSupportedHashAlgorithm (\n    encodedMultihash: string,\n    inputContextForErrorLogging: string\n  ) {\n    let multihash;\n    const multihashBytes = Encoder.decodeAsBytes(encodedMultihash, inputContextForErrorLogging);\n    try {\n      multihash = multihashes.decode(multihashBytes);\n    } catch {\n      throw new IonError(\n        ErrorCode.MultihashStringNotAMultihash,\n        `Given ${inputContextForErrorLogging} string '${encodedMultihash}' is not a multihash after decoding.`);\n    }\n\n    const hashAlgorithmInMultihashCode = IonSdkConfig.hashAlgorithmInMultihashCode;\n\n    if (hashAlgorithmInMultihashCode !== multihash.code) {\n      throw new IonError(\n        ErrorCode.MultihashUnsupportedHashAlgorithm,\n        `Given ${inputContextForErrorLogging} uses unsupported multihash algorithm with code ${multihash.code}, ` +\n        `should use ${hashAlgorithmInMultihashCode} or change IonSdkConfig to desired hashing algorithm.`\n      );\n    }\n  }\n}\n", "// @ts-check\n\nimport crypto from 'crypto'\nimport { coerce } from '../bytes.js'\nimport { from } from './hasher.js'\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: (input) => coerce(crypto.createHash('sha256').update(input).digest())\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: input => coerce(crypto.createHash('sha512').update(input).digest())\n})\n", "var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n", "import varint from '../vendor/varint.js'\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nexport const encodingLength = (int) => {\n  return varint.encodingLength(int)\n}\n", "import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nexport const create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nexport const decode = (multihash) => {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nexport class Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n", "import * as Digest from './digest.js'\n\n/**\n * @template {string} Name\n * @template {number} Code\n * @param {object} options\n * @param {Name} options.name\n * @param {Code} options.code\n * @param {(input: Uint8Array) => Await<Uint8Array>} options.encode\n */\nexport const from = ({ name, code, encode }) => new Hasher(name, code, encode)\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n *\n * @template {string} Name\n * @template {number} Code\n * @class\n * @implements {MultihashHasher<Code>}\n */\nexport class Hasher {\n  /**\n   *\n   * @param {Name} name\n   * @param {Code} code\n   * @param {(input: Uint8Array) => Await<Uint8Array>} encode\n   */\n  constructor (name, code, encode) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  /**\n   * @param {Uint8Array} input\n   * @returns {Await<Digest.Digest<Code, number>>}\n   */\n  digest (input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? Digest.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => Digest.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * @template {number} Alg\n * @typedef {import('./interface.js').MultihashHasher} MultihashHasher\n */\n\n/**\n * @template T\n * @typedef {Promise<T>|T} Await\n */\n", "/**\n * ION operation types.\n */\nenum OperationType {\n  Create = 'create',\n  Update = 'update',\n  Deactivate = 'deactivate',\n  Recover = 'recover'\n}\n\nexport default OperationType;\n", "/**\n * Sidetree patch actions. These are the valid values in the action property of a patch.\n */\nenum PatchAction {\n    Replace = 'replace',\n    AddPublicKeys = 'add-public-keys',\n    RemovePublicKeys = 'remove-public-keys',\n    AddServices = 'add-services',\n    RemoveServices = 'remove-services'\n}\n\nexport default PatchAction;\n", "import Encoder from './Encoder.js';\nimport IonDocumentModel from './models/IonDocumentModel.js';\nimport IonRequest from './IonRequest.js';\nimport IonSdkConfig from './IonSdkConfig.js';\nimport JsonCanonicalizer from './JsonCanonicalizer.js';\nimport JwkEs256k from './models/JwkEs256k.js';\nimport Multihash from './Multihash.js';\n\n/**\n * Class containing DID related operations.\n */\nexport default class IonDid {\n  /**\n   * Creates a long-form DID.\n   * @param input.document The initial state to be associate with the ION DID to be created using a `replace` document patch action.\n   */\n  public static async createLongFormDid (input: {\n    recoveryKey: JwkEs256k;\n    updateKey: JwkEs256k;\n    document: IonDocumentModel;\n  }): Promise<string> {\n    const createRequest = await IonRequest.createCreateRequest(input);\n\n    const didUniqueSuffix = await IonDid.computeDidUniqueSuffix(createRequest.suffixData);\n\n    // Add the network portion if not configured for mainnet.\n    let shortFormDid;\n    if (IonSdkConfig.network === undefined || IonSdkConfig.network === 'mainnet') {\n      shortFormDid = `did:ion:${didUniqueSuffix}`;\n    } else {\n      shortFormDid = `did:ion:${IonSdkConfig.network}:${didUniqueSuffix}`;\n    }\n\n    const initialState = {\n      suffixData: createRequest.suffixData,\n      delta: createRequest.delta\n    };\n\n    // Initial state must be canonicalized as per spec.\n    const canonicalizedInitialStateBytes = JsonCanonicalizer.canonicalizeAsBytes(initialState);\n    const encodedCanonicalizedInitialStateString = Encoder.encode(canonicalizedInitialStateBytes);\n\n    const longFormDid = `${shortFormDid}:${encodedCanonicalizedInitialStateString}`;\n    return longFormDid;\n  }\n\n  /**\n   * Computes the DID unique suffix given the encoded suffix data string.\n   */\n  private static async computeDidUniqueSuffix (suffixData: object): Promise<string> {\n    const canonicalizedStringBytes = JsonCanonicalizer.canonicalizeAsBytes(suffixData);\n    const multihash = await Multihash.hash(canonicalizedStringBytes, IonSdkConfig.hashAlgorithmInMultihashCode);\n    const encodedMultihash = Encoder.encode(multihash);\n    return encodedMultihash;\n  }\n}\n", "/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nconst P = 2n ** 255n - 19n; // ed25519 is twisted edwards curve\nconst N = 2n ** 252n + 27742317777372353535851937790883648493n; // curve's (group) order\nconst Gx = 0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51an; // base point x\nconst Gy = 0x6666666666666666666666666666666666666666666666666666666666666658n; // base point y\nconst CURVE = {\n    a: -1n,\n    d: 37095705934669439343138083508754565189542113879843219016388785533085940283555n,\n    p: P, n: N, h: 8, Gx, Gy // field prime, curve (group) order, cofactor\n};\nconst err = (m = '') => { throw new Error(m); }; // error helper, messes-up stack trace\nconst str = (s) => typeof s === 'string'; // is string\nconst au8 = (a, l) => // is Uint8Array (of specific length)\n !(a instanceof Uint8Array) || (typeof l === 'number' && l > 0 && a.length !== l) ?\n    err('Uint8Array expected') : a;\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst toU8 = (a, len) => au8(str(a) ? h2b(a) : u8n(a), len); // norm(hex/u8a) to u8a\nconst mod = (a, b = P) => { let r = a % b; return r >= 0n ? r : b + r; }; // mod division\nconst isPoint = (p) => (p instanceof Point ? p : err('Point expected')); // is xyzt point\nlet Gpows = undefined; // precomputes for base point G\nclass Point {\n    constructor(ex, ey, ez, et) {\n        this.ex = ex;\n        this.ey = ey;\n        this.ez = ez;\n        this.et = et;\n    }\n    static fromAffine(p) { return new Point(p.x, p.y, 1n, mod(p.x * p.y)); }\n    static fromHex(hex, strict = true) {\n        const { d } = CURVE;\n        hex = toU8(hex, 32);\n        const normed = hex.slice(); // copy the array to not mess it up\n        normed[31] = hex[31] & ~0x80; // adjust first LE byte = last BE byte\n        const y = b2n_LE(normed); // decode as little-endian, convert to num\n        if (y === 0n) { // y=0 is valid, proceed\n        }\n        else {\n            if (strict && !(0n < y && y < P))\n                err('bad y coord 1'); // strict=true [1..P-1]\n            if (!strict && !(0n < y && y < 2n ** 256n))\n                err('bad y coord 2'); // strict=false [1..2^256-1]\n        }\n        const y2 = mod(y * y); // y\u00B2\n        const u = mod(y2 - 1n); // u=y\u00B2-1\n        const v = mod(d * y2 + 1n); // v=dy\u00B2+1\n        let { isValid, value: x } = uvRatio(u, v); // (uv\u00B3)(uv\u2077)^(p-5)/8; square root\n        if (!isValid)\n            err('bad y coordinate 3'); // not square root: bad point\n        const isXOdd = (x & 1n) === 1n; // adjust sign of x coordinate\n        const isHeadOdd = (hex[31] & 0x80) !== 0;\n        if (isHeadOdd !== isXOdd)\n            x = mod(-x);\n        return new Point(x, y, 1n, mod(x * y)); // Z=1, T=xy\n    }\n    get x() { return this.toAffine().x; } // .x, .y will call expensive toAffine.\n    get y() { return this.toAffine().y; } // Should be used with care.\n    equals(other) {\n        const { ex: X1, ey: Y1, ez: Z1 } = this;\n        const { ex: X2, ey: Y2, ez: Z2 } = isPoint(other); // isPoint() checks class equality\n        const X1Z2 = mod(X1 * Z2), X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2), Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    is0() { return this.equals(I); }\n    negate() {\n        return new Point(mod(-this.ex), this.ey, this.ez, mod(-this.et));\n    }\n    double() {\n        const { ex: X1, ey: Y1, ez: Z1 } = this; // Cost: 4M + 4S + 1*a + 6add + 1*2\n        const { a } = CURVE; // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new Point(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this; // Cost: 8M + 1*k + 8add + 1*2.\n        const { ex: X2, ey: Y2, ez: Z2, et: T2 } = isPoint(other); // doesn't check if other on-curve\n        const { a, d } = CURVE; // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-3\n        const A = mod(X1 * X2);\n        const B = mod(Y1 * Y2);\n        const C = mod(T1 * d * T2);\n        const D = mod(Z1 * Z2);\n        const E = mod((X1 + Y1) * (X2 + Y2) - A - B);\n        const F = mod(D - C);\n        const G = mod(D + C);\n        const H = mod(B - a * A);\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new Point(X3, Y3, Z3, T3);\n    }\n    mul(n, safe = true) {\n        if (n === 0n)\n            return safe === true ? err('cannot multiply by 0') : I;\n        if (!(typeof n === 'bigint' && 0n < n && n < N))\n            err('invalid scalar, must be < L');\n        if (!safe && this.is0() || n === 1n)\n            return this; // safe=true bans 0. safe=false allows 0.\n        if (this.equals(G))\n            return wNAF(n).p; // use wNAF precomputes for base points\n        let p = I, f = G; // init result point & fake point\n        for (let d = this; n > 0n; d = d.double(), n >>= 1n) { // double-and-add ladder\n            if (n & 1n)\n                p = p.add(d); // if bit is present, add to point\n            else if (safe)\n                f = f.add(d); // if not, add to fake for timing safety\n        }\n        return p;\n    }\n    multiply(scalar) { return this.mul(scalar); } // Aliases for compatibilty\n    clearCofactor() { return this.mul(BigInt(CURVE.h), false); } // multiply by cofactor\n    isSmallOrder() { return this.clearCofactor().is0(); } // check if P is small order\n    isTorsionFree() {\n        let p = this.mul(N / 2n, false).double(); // ensures the point is not \"bad\".\n        if (N % 2n)\n            p = p.add(this); // P^(N+1)             // P*N == (P*(N/2))*2+P\n        return p.is0();\n    }\n    toAffine() {\n        const { ex: x, ey: y, ez: z } = this; // (x, y, z, t) \u220B (x=x/z, y=y/z, t=xy)\n        if (this.is0())\n            return { x: 0n, y: 0n }; // fast-path for zero point\n        const iz = invert(z); // z^-1: invert z\n        if (mod(z * iz) !== 1n)\n            err('invalid inverse'); // (z * z^-1) must be 1, otherwise bad math\n        return { x: mod(x * iz), y: mod(y * iz) }; // x = x*z^-1; y = y*z^-1\n    }\n    toRawBytes() {\n        const { x, y } = this.toAffine(); // convert to affine 2d point\n        const b = n2b_32LE(y); // encode number to 32 bytes\n        b[31] |= x & 1n ? 0x80 : 0; // store sign in first LE byte\n        return b;\n    }\n    toHex() { return b2h(this.toRawBytes()); } // encode to hex string\n}\nPoint.BASE = new Point(Gx, Gy, 1n, mod(Gx * Gy)); // Generator / Base point\nPoint.ZERO = new Point(0n, 1n, 1n, 0n); // Identity / Zero point\nconst { BASE: G, ZERO: I } = Point; // Generator, identity points\nconst padh = (num, pad) => num.toString(16).padStart(pad, '0');\nconst b2h = (b) => Array.from(b).map(e => padh(e, 2)).join(''); // bytes to hex\nconst h2b = (hex) => {\n    const l = hex.length; // error if not string,\n    if (!str(hex) || l % 2)\n        err('hex invalid 1'); // or has odd length like 3, 5.\n    const arr = u8n(l / 2); // create result array\n    for (let i = 0; i < arr.length; i++) {\n        const j = i * 2;\n        const h = hex.slice(j, j + 2); // hexByte. slice is faster than substr\n        const b = Number.parseInt(h, 16); // byte, created from string part\n        if (Number.isNaN(b) || b < 0)\n            err('hex invalid 2'); // byte must be valid 0 <= byte < 256\n        arr[i] = b;\n    }\n    return arr;\n};\nconst n2b_32LE = (num) => h2b(padh(num, 32 * 2)).reverse(); // number to bytes LE\nconst b2n_LE = (b) => BigInt('0x' + b2h(u8n(au8(b)).reverse())); // bytes LE to num\nconst concatB = (...arrs) => {\n    const r = u8n(arrs.reduce((sum, a) => sum + au8(a).length, 0)); // create u8a of summed length\n    let pad = 0; // walk through each array,\n    arrs.forEach(a => { r.set(a, pad); pad += a.length; }); // ensure they have proper type\n    return r;\n};\nconst invert = (num, md = P) => {\n    if (num === 0n || md <= 0n)\n        err('no inverse n=' + num + ' mod=' + md); // no neg exponent for now\n    let a = mod(num, md), b = md, x = 0n, y = 1n, u = 1n, v = 0n;\n    while (a !== 0n) { // uses euclidean gcd algorithm\n        const q = b / a, r = b % a; // not constant-time\n        const m = x - u * q, n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    return b === 1n ? mod(x, md) : err('no inverse'); // b is gcd at this point\n};\nconst pow2 = (x, power) => {\n    let r = x;\n    while (power-- > 0n) {\n        r *= r;\n        r %= P;\n    }\n    return r;\n};\nconst pow_2_252_3 = (x) => {\n    const x2 = (x * x) % P; // x^2,       bits 1\n    const b2 = (x2 * x) % P; // x^3,       bits 11\n    const b4 = (pow2(b2, 2n) * b2) % P; // x^(2^4-1), bits 1111\n    const b5 = (pow2(b4, 1n) * x) % P; // x^(2^5-1), bits 11111\n    const b10 = (pow2(b5, 5n) * b5) % P; // x^(2^10)\n    const b20 = (pow2(b10, 10n) * b10) % P; // x^(2^20)\n    const b40 = (pow2(b20, 20n) * b20) % P; // x^(2^40)\n    const b80 = (pow2(b40, 40n) * b40) % P; // x^(2^80)\n    const b160 = (pow2(b80, 80n) * b80) % P; // x^(2^160)\n    const b240 = (pow2(b160, 80n) * b80) % P; // x^(2^240)\n    const b250 = (pow2(b240, 10n) * b10) % P; // x^(2^250)\n    const pow_p_5_8 = (pow2(b250, 2n) * x) % P; // < To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n};\nconst RM1 = 19681161376707505956807079304988542015446066515923890162744021073123829784752n; // \u221A-1\nconst uvRatio = (u, v) => {\n    const v3 = mod(v * v * v); // v\u00B3\n    const v7 = mod(v3 * v3 * v); // v\u2077\n    const pow = pow_2_252_3(u * v7).pow_p_5_8; // (uv\u2077)^(p-5)/8\n    let x = mod(u * v3 * pow); // (uv\u00B3)(uv\u2077)^(p-5)/8\n    const vx2 = mod(v * x * x); // vx\u00B2\n    const root1 = x; // First root candidate\n    const root2 = mod(x * RM1); // Second root candidate; RM1 is \u221A-1\n    const useRoot1 = vx2 === u; // If vx\u00B2 = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u); // If vx\u00B2 = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * RM1); // There is no valid root, vx\u00B2 = -u\u221A-1\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if ((mod(x) & 1n) === 1n)\n        x = mod(-x); // edIsNegative\n    return { isValid: useRoot1 || useRoot2, value: x };\n};\nconst modL_LE = (hash) => mod(b2n_LE(hash), N); // modulo L; but little-endian\nlet _shaS;\nconst sha512a = (...m) => etc.sha512Async(...m); // Async SHA512\nconst sha512s = (...m) => // Sync SHA512, not set by default\n typeof _shaS === 'function' ? _shaS(...m) : err('etc.sha512Sync not set');\nconst hash2extK = (hashed) => {\n    const head = hashed.slice(0, 32); // slice creates a copy, unlike subarray\n    head[0] &= 248; // Clamp bits: 0b1111_1000,\n    head[31] &= 127; // 0b0111_1111,\n    head[31] |= 64; // 0b0100_0000\n    const prefix = hashed.slice(32, 64); // private key \"prefix\"\n    const scalar = modL_LE(head); // modular division over curve order\n    const point = G.mul(scalar); // public key point\n    const pointBytes = point.toRawBytes(); // point serialized to Uint8Array\n    return { head, prefix, scalar, point, pointBytes };\n};\n// RFC8032 5.1.5; getPublicKey async, sync. Hash priv key and extract point.\nconst getExtendedPublicKeyAsync = (priv) => sha512a(toU8(priv, 32)).then(hash2extK);\nconst getExtendedPublicKey = (priv) => hash2extK(sha512s(toU8(priv, 32)));\nconst getPublicKeyAsync = (priv) => getExtendedPublicKeyAsync(priv).then(p => p.pointBytes);\nconst getPublicKey = (priv) => getExtendedPublicKey(priv).pointBytes;\nfunction hashFinish(asynchronous, res) {\n    if (asynchronous)\n        return sha512a(res.hashable).then(res.finish);\n    return res.finish(sha512s(res.hashable));\n}\nconst _sign = (e, rBytes, msg) => {\n    const { pointBytes: P, scalar: s } = e;\n    const r = modL_LE(rBytes); // r was created outside, reduce it modulo L\n    const R = G.mul(r).toRawBytes(); // R = [r]B\n    const hashable = concatB(R, P, msg); // dom2(F, C) || R || A || PH(M)\n    const finish = (hashed) => {\n        const S = mod(r + modL_LE(hashed) * s, N); // S = (r + k * s) mod L; 0 <= s < l\n        return au8(concatB(R, n2b_32LE(S)), 64); // 64-byte sig: 32b R.x + 32b LE(S)\n    };\n    return { hashable, finish };\n};\nconst signAsync = async (msg, privKey) => {\n    const m = toU8(msg); // RFC8032 5.1.6: sign msg with key async\n    const e = await getExtendedPublicKeyAsync(privKey); // pub,prfx\n    const rBytes = await sha512a(e.prefix, m); // r = SHA512(dom2(F, C) || prefix || PH(M))\n    return hashFinish(true, _sign(e, rBytes, m)); // gen R, k, S, then 64-byte signature\n};\nconst sign = (msg, privKey) => {\n    const m = toU8(msg); // RFC8032 5.1.6: sign msg with key sync\n    const e = getExtendedPublicKey(privKey); // pub,prfx\n    const rBytes = sha512s(e.prefix, m); // r = SHA512(dom2(F, C) || prefix || PH(M))\n    return hashFinish(false, _sign(e, rBytes, m)); // gen R, k, S, then 64-byte signature\n};\nconst _verify = (sig, msg, pub) => {\n    msg = toU8(msg); // Message hex str/Bytes\n    sig = toU8(sig, 64); // Signature hex str/Bytes, must be 64 bytes\n    const A = Point.fromHex(pub, false); // public key A decoded\n    const R = Point.fromHex(sig.slice(0, 32), false); // 0 <= R < 2^256: ZIP215 R can be >= P\n    const s = b2n_LE(sig.slice(32, 64)); // Decode second half as an integer S\n    const SB = G.mul(s, false); // in the range 0 <= s < L\n    const hashable = concatB(R.toRawBytes(), A.toRawBytes(), msg); // dom2(F, C) || R || A || PH(M)\n    const finish = (hashed) => {\n        const k = modL_LE(hashed); // decode in little-endian, modulo L\n        const RkA = R.add(A.mul(k, false)); // [8]R + [8][k]A'\n        return RkA.add(SB.negate()).clearCofactor().is0(); // [8][S]B = [8]R + [8][k]A'\n    };\n    return { hashable, finish };\n};\n// RFC8032 5.1.7: verification async, sync\nconst verifyAsync = async (s, m, p) => hashFinish(true, _verify(s, m, p));\nconst verify = (s, m, p) => hashFinish(false, _verify(s, m, p));\nconst cr = () => // We support: 1) browsers 2) node.js 19+\n typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\nconst etc = {\n    bytesToHex: b2h, hexToBytes: h2b, concatBytes: concatB,\n    mod, invert,\n    randomBytes: (len) => {\n        const crypto = cr(); // Can be shimmed in node.js <= 18 to prevent error:\n        // import { webcrypto } from 'node:crypto';\n        // if (!globalThis.crypto) globalThis.crypto = webcrypto;\n        if (!crypto)\n            err('crypto.getRandomValues must be defined');\n        return crypto.getRandomValues(u8n(len));\n    },\n    sha512Async: async (...messages) => {\n        const crypto = cr();\n        if (!crypto)\n            err('crypto.subtle or etc.sha512Async must be defined');\n        const m = concatB(...messages);\n        return u8n(await crypto.subtle.digest('SHA-512', m.buffer));\n    },\n    sha512Sync: undefined, // Actual logic below\n};\nObject.defineProperties(etc, { sha512Sync: {\n        configurable: false, get() { return _shaS; }, set(f) { if (!_shaS)\n            _shaS = f; },\n    } });\nconst utils = {\n    getExtendedPublicKeyAsync, getExtendedPublicKey,\n    randomPrivateKey: () => etc.randomBytes(32),\n    precompute(w = 8, p = G) { p.multiply(3n); return p; }, // no-op\n};\nconst W = 8; // Precomputes-related code. W = window size\nconst precompute = () => {\n    const points = []; // 10x sign(), 2x verify(). To achieve this,\n    const windows = 256 / W + 1; // app needs to spend 40ms+ to calculate\n    let p = G, b = p; // a lot of points related to base point G.\n    for (let w = 0; w < windows; w++) { // Points are stored in array and used\n        b = p; // any time Gx multiplication is done.\n        points.push(b); // They consume 16-32 MiB of RAM.\n        for (let i = 1; i < 2 ** (W - 1); i++) {\n            b = b.add(p);\n            points.push(b);\n        }\n        p = b.double(); // Precomputes don't speed-up getSharedKey,\n    } // which multiplies user point by scalar,\n    return points; // when precomputes are using base point\n};\nconst wNAF = (n) => {\n    // Compared to other point mult methods,\n    const comp = Gpows || (Gpows = precompute()); // stores 2x less points using subtraction\n    const neg = (cnd, p) => { let n = p.negate(); return cnd ? n : p; }; // negate\n    let p = I, f = G; // f must be G, or could become I in the end\n    const windows = 1 + 256 / W; // W=8 17 windows\n    const wsize = 2 ** (W - 1); // W=8 128 window size\n    const mask = BigInt(2 ** W - 1); // W=8 will create mask 0b11111111\n    const maxNum = 2 ** W; // W=8 256\n    const shiftBy = BigInt(W); // W=8 8\n    for (let w = 0; w < windows; w++) {\n        const off = w * wsize;\n        let wbits = Number(n & mask); // extract W bits.\n        n >>= shiftBy; // shift number by W bits.\n        if (wbits > wsize) {\n            wbits -= maxNum;\n            n += 1n;\n        } // split if bits > max: +224 => 256-32\n        const off1 = off, off2 = off + Math.abs(wbits) - 1; // offsets, evaluate both\n        const cnd1 = w % 2 !== 0, cnd2 = wbits < 0; // conditions, evaluate both\n        if (wbits === 0) {\n            f = f.add(neg(cnd1, comp[off1])); // bits are 0: add garbage to fake point\n        }\n        else { //          ^ can't add off2, off2 = I\n            p = p.add(neg(cnd2, comp[off2])); // bits are 1: add to result point\n        }\n    }\n    return { p, f }; // return both real and fake points for JIT\n}; // !! you can disable precomputes by commenting-out call of the wNAF() inside Point#mul()\nexport { getPublicKey, getPublicKeyAsync, sign, verify, // Remove the export to easily use in REPL\nsignAsync, verifyAsync, CURVE, etc, utils, Point as ExtendedPoint }; // envs like browser console\n", "/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nconst B256 = 2n ** 256n; // secp256k1 is short weierstrass curve\nconst P = B256 - 0x1000003d1n; // curve's field prime\nconst N = B256 - 0x14551231950b75fc4402da1732fc9bebfn; // curve (group) order\nconst Gx = 0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798n; // base point x\nconst Gy = 0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8n; // base point y\nconst CURVE = { p: P, n: N, a: 0n, b: 7n, Gx, Gy }; // exported variables incl. a, b\nconst fLen = 32; // field / group byte length\nconst crv = (x) => mod(mod(x * x) * x + CURVE.b); // x\u00B3 + ax + b weierstrass formula; no a\nconst err = (m = '') => { throw new Error(m); }; // error helper, messes-up stack trace\nconst big = (n) => typeof n === 'bigint'; // is big integer\nconst str = (s) => typeof s === 'string'; // is string\nconst fe = (n) => big(n) && 0n < n && n < P; // is field element (invertible)\nconst ge = (n) => big(n) && 0n < n && n < N; // is group element\nconst au8 = (a, l) => // is Uint8Array (of specific length)\n !(a instanceof Uint8Array) || (typeof l === 'number' && l > 0 && a.length !== l) ?\n    err('Uint8Array expected') : a;\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst toU8 = (a, len) => au8(str(a) ? h2b(a) : u8n(a), len); // norm(hex/u8a) to u8a\nconst mod = (a, b = P) => { let r = a % b; return r >= 0n ? r : b + r; }; // mod division\nconst isPoint = (p) => (p instanceof Point ? p : err('Point expected')); // is 3d point\nlet Gpows = undefined; // precomputes for base point G\nclass Point {\n    constructor(px, py, pz) {\n        this.px = px;\n        this.py = py;\n        this.pz = pz;\n    } //3d=less inversions\n    static fromAffine(p) { return new Point(p.x, p.y, 1n); }\n    static fromHex(hex) {\n        hex = toU8(hex); // convert hex string to Uint8Array\n        let p = undefined;\n        const head = hex[0], tail = hex.subarray(1); // first byte is prefix, rest is data\n        const x = slcNum(tail, 0, fLen), len = hex.length; // next 32 bytes are x coordinate\n        if (len === 33 && [0x02, 0x03].includes(head)) { // compressed points: 33b, start\n            if (!fe(x))\n                err('Point hex invalid: x not FE'); // with byte 0x02 or 0x03. Check if 0<x<P\n            let y = sqrt(crv(x)); // x\u00B3 + ax + b is right side of equation\n            const isYOdd = (y & 1n) === 1n; // y\u00B2 is equivalent left-side. Calculate y\u00B2:\n            const headOdd = (head & 1) === 1; // y = \u221Ay\u00B2; there are two solutions: y, -y\n            if (headOdd !== isYOdd)\n                y = mod(-y); // determine proper solution\n            p = new Point(x, y, 1n); // create point\n        } // Uncompressed points: 65b, start with 0x04\n        if (len === 65 && head === 0x04)\n            p = new Point(x, slcNum(tail, fLen, 2 * fLen), 1n);\n        return p ? p.ok() : err('Point is not on curve'); // Verify the result\n    }\n    static fromPrivateKey(k) { return G.mul(toPriv(k)); } // Create point from a private key.\n    get x() { return this.aff().x; } // .x, .y will call expensive toAffine:\n    get y() { return this.aff().y; } // should be used with care.\n    equals(other) {\n        const { px: X1, py: Y1, pz: Z1 } = this;\n        const { px: X2, py: Y2, pz: Z2 } = isPoint(other); // isPoint() checks class equality\n        const X1Z2 = mod(X1 * Z2), X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2), Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() { return new Point(this.px, mod(-this.py), this.pz); } // Flip point over y coord\n    double() { return this.add(this); } // Point doubling: P+P, complete formula.\n    add(other) {\n        const { px: X1, py: Y1, pz: Z1 } = this; // free formula from Renes-Costello-Batina\n        const { px: X2, py: Y2, pz: Z2 } = isPoint(other); // https://eprint.iacr.org/2015/1060, algo 1\n        const { a, b } = CURVE; // Cost: 12M + 0S + 3*a + 3*b3 + 23add\n        let X3 = 0n, Y3 = 0n, Z3 = 0n;\n        const b3 = mod(b * 3n);\n        let t0 = mod(X1 * X2), t1 = mod(Y1 * Y2), t2 = mod(Z1 * Z2), t3 = mod(X1 + Y1); // step 1\n        let t4 = mod(X2 + Y2); // step 5\n        t3 = mod(t3 * t4);\n        t4 = mod(t0 + t1);\n        t3 = mod(t3 - t4);\n        t4 = mod(X1 + Z1);\n        let t5 = mod(X2 + Z2); // step 10\n        t4 = mod(t4 * t5);\n        t5 = mod(t0 + t2);\n        t4 = mod(t4 - t5);\n        t5 = mod(Y1 + Z1);\n        X3 = mod(Y2 + Z2); // step 15\n        t5 = mod(t5 * X3);\n        X3 = mod(t1 + t2);\n        t5 = mod(t5 - X3);\n        Z3 = mod(a * t4);\n        X3 = mod(b3 * t2); // step 20\n        Z3 = mod(X3 + Z3);\n        X3 = mod(t1 - Z3);\n        Z3 = mod(t1 + Z3);\n        Y3 = mod(X3 * Z3);\n        t1 = mod(t0 + t0); // step 25\n        t1 = mod(t1 + t0);\n        t2 = mod(a * t2);\n        t4 = mod(b3 * t4);\n        t1 = mod(t1 + t2);\n        t2 = mod(t0 - t2); // step 30\n        t2 = mod(a * t2);\n        t4 = mod(t4 + t2);\n        t0 = mod(t1 * t4);\n        Y3 = mod(Y3 + t0);\n        t0 = mod(t5 * t4); // step 35\n        X3 = mod(t3 * X3);\n        X3 = mod(X3 - t0);\n        t0 = mod(t3 * t1);\n        Z3 = mod(t5 * Z3);\n        Z3 = mod(Z3 + t0); // step 40\n        return new Point(X3, Y3, Z3);\n    }\n    mul(n, safe = true) {\n        if (!safe && n === 0n)\n            return I; // in unsafe mode, allow zero\n        if (!ge(n))\n            err('invalid scalar'); // must be 0 < n < CURVE.n\n        if (this.equals(G))\n            return wNAF(n).p; // use precomputes for base point\n        let p = I, f = G; // init result point & fake point\n        for (let d = this; n > 0n; d = d.double(), n >>= 1n) { // double-and-add ladder\n            if (n & 1n)\n                p = p.add(d); // if bit is present, add to point\n            else if (safe)\n                f = f.add(d); // if not, add to fake for timing safety\n        }\n        return p;\n    }\n    mulAddQUns(R, u1, u2) {\n        return this.mul(u1, false).add(R.mul(u2, false)).ok(); // Unsafe: do NOT use for stuff related\n    } // to private keys. Doesn't use Shamir trick\n    toAffine() {\n        const { px: x, py: y, pz: z } = this; // (x, y, z) \u220B (x=x/z, y=y/z)\n        if (this.equals(I))\n            return { x: 0n, y: 0n }; // fast-path for zero point\n        if (z === 1n)\n            return { x, y }; // if z is 1, pass affine coordinates as-is\n        const iz = inv(z); // z^-1: invert z\n        if (mod(z * iz) !== 1n)\n            err('invalid inverse'); // (z * z^-1) must be 1, otherwise bad math\n        return { x: mod(x * iz), y: mod(y * iz) }; // x = x*z^-1; y = y*z^-1\n    }\n    assertValidity() {\n        const { x, y } = this.aff(); // convert to 2d xy affine point.\n        if (!fe(x) || !fe(y))\n            err('Point invalid: x or y'); // x and y must be in range 0 < n < P\n        return mod(y * y) === crv(x) ? // y\u00B2 = x\u00B3 + ax + b, must be equal\n            this : err('Point invalid: not on curve');\n    }\n    multiply(n) { return this.mul(n); } // Aliases to compress code\n    aff() { return this.toAffine(); }\n    ok() { return this.assertValidity(); }\n    toHex(isCompressed = true) {\n        const { x, y } = this.aff(); // convert to 2d xy affine point\n        const head = isCompressed ? ((y & 1n) === 0n ? '02' : '03') : '04'; // 0x02, 0x03, 0x04 prefix\n        return head + n2h(x) + (isCompressed ? '' : n2h(y)); // prefix||x and ||y\n    }\n    toRawBytes(isCompressed = true) {\n        return h2b(this.toHex(isCompressed)); // re-use toHex(), convert hex to bytes\n    }\n}\nPoint.BASE = new Point(Gx, Gy, 1n); // Generator / base point\nPoint.ZERO = new Point(0n, 1n, 0n); // Identity / zero point\nconst { BASE: G, ZERO: I } = Point; // Generator, identity points\nconst padh = (n, pad) => n.toString(16).padStart(pad, '0');\nconst b2h = (b) => Array.from(b).map(e => padh(e, 2)).join(''); // bytes to hex\nconst h2b = (hex) => {\n    const l = hex.length; // error if not string,\n    if (!str(hex) || l % 2)\n        err('hex invalid 1'); // or has odd length like 3, 5.\n    const arr = u8n(l / 2); // create result array\n    for (let i = 0; i < arr.length; i++) {\n        const j = i * 2;\n        const h = hex.slice(j, j + 2); // hexByte. slice is faster than substr\n        const b = Number.parseInt(h, 16); // byte, created from string part\n        if (Number.isNaN(b) || b < 0)\n            err('hex invalid 2'); // byte must be valid 0 <= byte < 256\n        arr[i] = b;\n    }\n    return arr;\n};\nconst b2n = (b) => BigInt('0x' + (b2h(b) || '0')); // bytes to number\nconst slcNum = (b, from, to) => b2n(b.slice(from, to)); // slice bytes num\nconst n2b = (num) => {\n    return big(num) && num >= 0n && num < B256 ? h2b(padh(num, 2 * fLen)) : err('bigint expected');\n};\nconst n2h = (num) => b2h(n2b(num)); // number to 32b hex\nconst concatB = (...arrs) => {\n    const r = u8n(arrs.reduce((sum, a) => sum + au8(a).length, 0)); // create u8a of summed length\n    let pad = 0; // walk through each array,\n    arrs.forEach(a => { r.set(a, pad); pad += a.length; }); // ensure they have proper type\n    return r;\n};\nconst inv = (num, md = P) => {\n    if (num === 0n || md <= 0n)\n        err('no inverse n=' + num + ' mod=' + md); // no neg exponent for now\n    let a = mod(num, md), b = md, x = 0n, y = 1n, u = 1n, v = 0n;\n    while (a !== 0n) { // uses euclidean gcd algorithm\n        const q = b / a, r = b % a; // not constant-time\n        const m = x - u * q, n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    return b === 1n ? mod(x, md) : err('no inverse'); // b is gcd at this point\n};\nconst sqrt = (n) => {\n    let r = 1n; // So, a special, fast case. Paper: \"Square Roots from 1;24,51,10 to Dan Shanks\".\n    for (let num = n, e = (P + 1n) / 4n; e > 0n; e >>= 1n) { // powMod: modular exponentiation.\n        if (e & 1n)\n            r = (r * num) % P; // Uses exponentiation by squaring.\n        num = (num * num) % P; // Not constant-time.\n    }\n    return mod(r * r) === n ? r : err('sqrt invalid'); // check if result is valid\n};\nconst toPriv = (p) => {\n    if (!big(p))\n        p = b2n(toU8(p, fLen)); // convert to bigint when bytes\n    return ge(p) ? p : err('private key out of range'); // check if bigint is in range\n};\nconst moreThanHalfN = (n) => n > (N >> 1n); // if a number is bigger than CURVE.n/2\nfunction getPublicKey(privKey, isCompressed = true) {\n    return Point.fromPrivateKey(privKey).toRawBytes(isCompressed); // 33b or 65b output\n}\nclass Signature {\n    constructor(r, s, recovery) {\n        this.r = r;\n        this.s = s;\n        this.recovery = recovery;\n        this.assertValidity(); // recovery bit is optional when\n    } // constructed outside.\n    static fromCompact(hex) {\n        hex = toU8(hex, 64); // compact repr is (32b r)||(32b s)\n        return new Signature(slcNum(hex, 0, fLen), slcNum(hex, fLen, 2 * fLen));\n    }\n    assertValidity() { return ge(this.r) && ge(this.s) ? this : err(); } // 0 < r or s < CURVE.n\n    addRecoveryBit(rec) { return new Signature(this.r, this.s, rec); }\n    hasHighS() { return moreThanHalfN(this.s); }\n    recoverPublicKey(msgh) {\n        const { r, s, recovery: rec } = this; // secg.org/sec1-v2.pdf 4.1.6\n        if (![0, 1, 2, 3].includes(rec))\n            err('recovery id invalid'); // check recovery id\n        const h = bits2int_modN(toU8(msgh, 32)); // Truncate hash\n        const radj = rec === 2 || rec === 3 ? r + N : r; // If rec was 2 or 3, q.x is bigger than n\n        if (radj >= P)\n            err('q.x invalid'); // ensure q.x is still a field element\n        const head = (rec & 1) === 0 ? '02' : '03'; // head is 0x02 or 0x03\n        const R = Point.fromHex(head + n2h(radj)); // concat head + hex repr of r\n        const ir = inv(radj, N); // r^-1\n        const u1 = mod(-h * ir, N); // -hr^-1\n        const u2 = mod(s * ir, N); // sr^-1\n        return G.mulAddQUns(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n    }\n    toCompactRawBytes() { return h2b(this.toCompactHex()); } // Uint8Array 64b compact repr\n    toCompactHex() { return n2h(this.r) + n2h(this.s); } // hex 64b compact repr\n}\nconst bits2int = (bytes) => {\n    const delta = bytes.length * 8 - 256; // RFC suggests optional truncating via bits2octets\n    const num = b2n(bytes); // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which\n    return delta > 0 ? num >> BigInt(delta) : num; // matches bits2int. bits2int can produce res>N.\n};\nconst bits2int_modN = (bytes) => {\n    return mod(bits2int(bytes), N); // with 0: BAD for trunc as per RFC vectors\n};\nconst i2o = (num) => n2b(num); // int to octets\nconst cr = () => // We support: 1) browsers 2) node.js 19+ 3) deno, other envs with crypto\n typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\nlet _hmacSync; // Can be redefined by use in utils; built-ins don't provide it\nconst optS = { lowS: true }; // opts for sign()\nconst optV = { lowS: true }; // standard opts for verify()\nfunction prepSig(msgh, priv, opts = optS) {\n    if (['der', 'recovered', 'canonical'].some(k => k in opts)) // Ban legacy options\n        err('sign() legacy options not supported');\n    let { lowS } = opts; // generates low-s sigs by default\n    if (lowS == null)\n        lowS = true; // RFC6979 3.2: we skip step A\n    const h1i = bits2int_modN(toU8(msgh)); // msg bigint\n    const h1o = i2o(h1i); // msg octets\n    const d = toPriv(priv); // validate private key, convert to bigint\n    const seed = [i2o(d), h1o]; // Step D of RFC6979 3.2\n    let ent = opts.extraEntropy; // RFC6979 3.6: additional k' (optional)\n    if (ent) { // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n        if (ent === true)\n            ent = etc.randomBytes(fLen); // if true, use CSPRNG to generate data\n        const e = toU8(ent); // convert Hex|Bytes to Bytes\n        if (e.length !== fLen)\n            err(); // Expected 32 bytes of extra data\n        seed.push(e);\n    }\n    const m = h1i; // convert msg to bigint\n    const k2sig = (kBytes) => {\n        const k = bits2int(kBytes); // RFC6979 method.\n        if (!ge(k))\n            return; // Check 0 < k < CURVE.n\n        const ik = inv(k, N); // k^-1 mod n, NOT mod P\n        const q = G.mul(k).aff(); // q = Gk\n        const r = mod(q.x, N); // r = q.x mod n\n        if (r === 0n)\n            return; // r=0 invalid\n        const s = mod(ik * mod(m + mod(d * r, N), N), N); // s = k^-1(m + rd) mod n\n        if (s === 0n)\n            return; // s=0 invalid\n        let normS = s; // normalized S\n        let rec = (q.x === r ? 0 : 2) | Number(q.y & 1n); // recovery bit\n        if (lowS && moreThanHalfN(s)) { // if lowS was passed, ensure s is always\n            normS = mod(-s, N); // in the bottom half of CURVE.n\n            rec ^= 1;\n        }\n        return new Signature(r, normS, rec); // use normS, not s\n    };\n    return { seed: concatB(...seed), k2sig };\n}\nfunction hmacDrbg(asynchronous) {\n    let v = u8n(fLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(fLen); // Steps B, C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => { v.fill(1); k.fill(0); i = 0; };\n    const _e = 'drbg: tried 1000 values';\n    if (asynchronous) { // asynchronous=true\n        const h = (...b) => etc.hmacSha256Async(k, v, ...b); // hmac(k)(v, ...values)\n        const reseed = async (seed = u8n()) => {\n            k = await h(u8n([0x00]), seed); // k = hmac(K || V || 0x00 || seed)\n            v = await h(); // v = hmac(K || V)\n            if (seed.length === 0)\n                return;\n            k = await h(u8n([0x01]), seed); // k = hmac(K || V || 0x01 || seed)\n            v = await h(); // v = hmac(K || V)\n        };\n        const gen = async () => {\n            if (i++ >= 1000)\n                err(_e);\n            v = await h(); // v = hmac(K || V)\n            return v;\n        };\n        return async (seed, pred) => {\n            reset(); // the returned fn, don't, it's: 1. slower (JIT). 2. unsafe (async race conditions)\n            await reseed(seed); // Steps D-G\n            let res = undefined; // Step H: grind until k is in [1..n-1]\n            while (!(res = pred(await gen())))\n                await reseed(); // test predicate until it returns ok\n            reset();\n            return res;\n        };\n    }\n    else {\n        const h = (...b) => {\n            const f = _hmacSync;\n            if (!f)\n                err('etc.hmacSha256Sync not set');\n            return f(k, v, ...b); // hmac(k)(v, ...values)\n        };\n        const reseed = (seed = u8n()) => {\n            k = h(u8n([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n            v = h(); // v = hmac(k || v)\n            if (seed.length === 0)\n                return;\n            k = h(u8n([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n            v = h(); // v = hmac(k || v)\n        };\n        const gen = () => {\n            if (i++ >= 1000)\n                err(_e);\n            v = h(); // v = hmac(k || v)\n            return v;\n        };\n        return (seed, pred) => {\n            reset();\n            reseed(seed); // Steps D-G\n            let res = undefined; // Step H: grind until k is in [1..n-1]\n            while (!(res = pred(gen())))\n                reseed(); // test predicate until it returns ok\n            reset();\n            return res;\n        };\n    }\n}\n// ECDSA signature generation. via secg.org/sec1-v2.pdf 4.1.2 + RFC6979 deterministic k\nasync function signAsync(msgh, priv, opts = optS) {\n    const { seed, k2sig } = prepSig(msgh, priv, opts); // Extract arguments for hmac-drbg\n    return hmacDrbg(true)(seed, k2sig); // Re-run hmac-drbg until k2sig returns ok\n}\nfunction sign(msgh, priv, opts = optS) {\n    const { seed, k2sig } = prepSig(msgh, priv, opts); // Extract arguments for hmac-drbg\n    return hmacDrbg(false)(seed, k2sig); // Re-run hmac-drbg until k2sig returns ok\n}\nfunction verify(sig, msgh, pub, opts = optV) {\n    let { lowS } = opts; // ECDSA signature verification\n    if (lowS == null)\n        lowS = true; // Default lowS=true\n    if ('strict' in opts)\n        err('verify() legacy options not supported'); // legacy param\n    let sig_, h, P; // secg.org/sec1-v2.pdf 4.1.4\n    const rs = sig && typeof sig === 'object' && 'r' in sig; // Previous ver supported DER sigs. We\n    if (!rs && (toU8(sig).length !== 2 * fLen)) // throw error when DER is suspected now.\n        err('signature must be 64 bytes');\n    try {\n        sig_ = rs ? new Signature(sig.r, sig.s).assertValidity() : Signature.fromCompact(sig);\n        h = bits2int_modN(toU8(msgh, fLen)); // Truncate hash\n        P = pub instanceof Point ? pub.ok() : Point.fromHex(pub); // Validate public key\n    }\n    catch (e) {\n        return false;\n    } // Check sig for validity in both cases\n    if (!sig_)\n        return false;\n    const { r, s } = sig_;\n    if (lowS && moreThanHalfN(s))\n        return false; // lowS bans sig.s >= CURVE.n/2\n    let R;\n    try {\n        const is = inv(s, N); // s^-1\n        const u1 = mod(h * is, N); // u1 = hs^-1 mod n\n        const u2 = mod(r * is, N); // u2 = rs^-1 mod n\n        R = G.mulAddQUns(P, u1, u2).aff(); // R = u1\u22C5G + u2\u22C5P\n    }\n    catch (error) {\n        return false;\n    }\n    if (!R)\n        return false; // stop if R is identity / zero point\n    const v = mod(R.x, N); // <== The weird ECDSA part. R.x must be in N's field, not P's\n    return v === r; // mod(R.x, n) == r\n}\nfunction getSharedSecret(privA, pubB, isCompressed = true) {\n    return Point.fromHex(pubB).mul(toPriv(privA)).toRawBytes(isCompressed); // ECDH\n}\nfunction hashToPrivateKey(hash) {\n    hash = toU8(hash); // produces private keys with modulo bias\n    const minLen = fLen + 8; // being neglible.\n    if (hash.length < minLen || hash.length > 1024)\n        err('expected proper params');\n    const num = mod(b2n(hash), N - 1n) + 1n; // takes at least n+8 bytes\n    return n2b(num);\n}\nconst etc = {\n    hexToBytes: h2b, bytesToHex: b2h,\n    concatBytes: concatB, bytesToNumberBE: b2n, numberToBytesBE: n2b,\n    mod, invert: inv,\n    hmacSha256Async: async (key, ...msgs) => {\n        const crypto = cr(); // HMAC-SHA256 async. No sync built-in!\n        if (!crypto)\n            return err('etc.hmacSha256Async not set'); // Uses webcrypto: native cryptography.\n        const s = crypto.subtle;\n        const k = await s.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n        return u8n(await s.sign('HMAC', k, concatB(...msgs)));\n    },\n    hmacSha256Sync: _hmacSync,\n    hashToPrivateKey,\n    randomBytes: (len) => {\n        const crypto = cr(); // Can be shimmed in node.js <= 18 to prevent error:\n        // import { webcrypto } from 'node:crypto';\n        // if (!globalThis.crypto) globalThis.crypto = webcrypto;\n        if (!crypto)\n            err('crypto.getRandomValues must be defined');\n        return crypto.getRandomValues(u8n(len));\n    },\n};\nconst utils = {\n    normPrivateKeyToScalar: toPriv,\n    isValidPrivateKey: (key) => { try {\n        return !!toPriv(key);\n    }\n    catch (e) {\n        return false;\n    } },\n    randomPrivateKey: () => hashToPrivateKey(etc.randomBytes(fLen + 8)),\n    precompute(w = 8, p = G) { p.multiply(3n); return p; }, // no-op\n};\nObject.defineProperties(etc, { hmacSha256Sync: {\n        configurable: false, get() { return _hmacSync; }, set(f) { if (!_hmacSync)\n            _hmacSync = f; },\n    } });\nconst W = 8; // Precomputes-related code. W = window size\nconst precompute = () => {\n    const points = []; // 10x sign(), 2x verify(). To achieve this,\n    const windows = 256 / W + 1; // app needs to spend 40ms+ to calculate\n    let p = G, b = p; // a lot of points related to base point G.\n    for (let w = 0; w < windows; w++) { // Points are stored in array and used\n        b = p; // any time Gx multiplication is done.\n        points.push(b); // They consume 16-32 MiB of RAM.\n        for (let i = 1; i < 2 ** (W - 1); i++) {\n            b = b.add(p);\n            points.push(b);\n        }\n        p = b.double(); // Precomputes don't speed-up getSharedKey,\n    } // which multiplies user point by scalar,\n    return points; // when precomputes are using base point\n};\nconst wNAF = (n) => {\n    // Compared to other point mult methods,\n    const comp = Gpows || (Gpows = precompute()); // stores 2x less points using subtraction\n    const neg = (cnd, p) => { let n = p.negate(); return cnd ? n : p; }; // negate\n    let p = I, f = G; // f must be G, or could become I in the end\n    const windows = 1 + 256 / W; // W=8 17 windows\n    const wsize = 2 ** (W - 1); // W=8 128 window size\n    const mask = BigInt(2 ** W - 1); // W=8 will create mask 0b11111111\n    const maxNum = 2 ** W; // W=8 256\n    const shiftBy = BigInt(W); // W=8 8\n    for (let w = 0; w < windows; w++) {\n        const off = w * wsize;\n        let wbits = Number(n & mask); // extract W bits.\n        n >>= shiftBy; // shift number by W bits.\n        if (wbits > wsize) {\n            wbits -= maxNum;\n            n += 1n;\n        } // split if bits > max: +224 => 256-32\n        const off1 = off, off2 = off + Math.abs(wbits) - 1; // offsets, evaluate both\n        const cnd1 = w % 2 !== 0, cnd2 = wbits < 0; // conditions, evaluate both\n        if (wbits === 0) {\n            f = f.add(neg(cnd1, comp[off1])); // bits are 0: add garbage to fake point\n        }\n        else { //          ^ can't add off2, off2 = I\n            p = p.add(neg(cnd2, comp[off2])); // bits are 1: add to result point\n        }\n    }\n    return { p, f }; // return both real and fake points for JIT\n}; // !! you can disable precomputes by commenting-out call of the wNAF() inside Point#mul()\nexport { getPublicKey, sign, signAsync, verify, CURVE, // Remove the export to easily use in REPL\ngetSharedSecret, etc, utils, Point as ProjectivePoint, Signature }; // envs like browser console\n", "/**\n * Supported ION networks.\n */\nenum IonNetwork {\n  Mainnet = 'mainnet',\n  Testnet = 'test'\n}\n\nexport default IonNetwork;\n", "/**\n * DID Document key purpose.\n */\nenum IonPublicKeyPurpose {\n  Authentication = 'authentication',\n  AssertionMethod = 'assertionMethod',\n  CapabilityInvocation = 'capabilityInvocation',\n  CapabilityDelegation = 'capabilityDelegation',\n  KeyAgreement = 'keyAgreement'\n}\n\nexport default IonPublicKeyPurpose;\n", "import type { PrivateKeyJwk, PublicKeyJwk, Web5Crypto } from '@web5/crypto';\n\nimport { universalTypeOf } from '@web5/common';\nimport {\n  Jose,\n  Ed25519,\n  Secp256k1,\n  EcdsaAlgorithm,\n  EdDsaAlgorithm,\n  utils as cryptoUtils,\n} from '@web5/crypto';\n\nimport type {\n  DidMethod,\n  DidDocument,\n  PortableDid,\n  VerificationMethod,\n  DidResolutionResult,\n  DidResolutionOptions,\n  DidKeySetVerificationMethodKey,\n} from './types.js';\n\nimport { getVerificationMethodTypes, parseDid } from './utils.js';\n\nconst SupportedCryptoAlgorithms = [\n  'Ed25519',\n  'secp256k1'\n] as const;\n\nconst SupportedPublicKeyFormats = [\n  'Ed25519VerificationKey2020',\n  'JsonWebKey2020',\n  'X25519KeyAgreementKey2020'\n];\n\nconst VERIFICATION_METHOD_TYPES: Record<string, string> = {\n  'Ed25519VerificationKey2020' : 'https://w3id.org/security/suites/ed25519-2020/v1',\n  'JsonWebKey2020'             : 'https://w3id.org/security/suites/jws-2020/v1',\n  'X25519KeyAgreementKey2020'  : 'https://w3id.org/security/suites/x25519-2020/v1',\n} as const;\n\nexport type DidVerificationMethodType = keyof typeof VERIFICATION_METHOD_TYPES;\n\nconst MULTICODEC_PUBLIC_KEY_LENGTH: Record<number, number> = {\n  // secp256k1-pub - Secp256k1 public key (compressed) - 33 bytes\n  0xe7: 33,\n\n  // x25519-pub - Curve25519 public key - 32 bytes\n  0xec: 32,\n\n  // ed25519-pub - Ed25519 public key - 32 bytes\n  0xed: 32\n};\n\nexport type DidKeyCreateOptions = {\n  enableEncryptionKeyDerivation?: boolean;\n  keyAlgorithm?: typeof SupportedCryptoAlgorithms[number];\n  keySet?: DidKeyKeySet;\n  publicKeyFormat?: DidVerificationMethodType;\n}\n\nexport type DidKeyCreateDocumentOptions = {\n  defaultContext?: string;\n  did: string;\n  enableEncryptionKeyDerivation?: boolean;\n  enableExperimentalPublicKeyTypes?: boolean;\n  publicKeyFormat?: DidVerificationMethodType;\n}\n\nexport type DidKeyDeriveEncryptionKeyResult = {\n  key: Uint8Array;\n  multicodecCode: number;\n}\n\nexport type DidKeyIdentifier = {\n  fragment: string;\n  method: string;\n  multibaseValue: string;\n  scheme: string;\n  version: string;\n}\n\nexport type DidKeyKeySet = {\n  verificationMethodKeys?: DidKeySetVerificationMethodKey[];\n}\n\nexport class DidKeyMethod implements DidMethod {\n  /**\n   * Name of the DID method\n  */\n  public static methodName = 'key';\n\n  public static async create(options?: DidKeyCreateOptions): Promise<PortableDid> {\n    let {\n      enableEncryptionKeyDerivation = false,\n      keyAlgorithm,\n      keySet,\n      publicKeyFormat = 'JsonWebKey2020'\n    } = options ?? { };\n\n    // If keySet not given, generate a default key set.\n    if (keySet === undefined) {\n      keySet = await DidKeyMethod.generateKeySet({ keyAlgorithm });\n    }\n\n    const portableDid: Partial<PortableDid> = {};\n    let multibaseId = '';\n\n    if (keySet.verificationMethodKeys?.[0]?.publicKeyJwk) {\n      // Compute the multibase identifier based on the JSON Web Key.\n      const publicKeyJwk = keySet.verificationMethodKeys[0].publicKeyJwk;\n      multibaseId = await Jose.jwkToMultibaseId({ key: publicKeyJwk });\n    }\n\n    if (!multibaseId) {\n      throw new Error('DidKeyMethod: Failed to create DID with given input.');\n    }\n\n    // Concatenate the DID identifier.\n    portableDid.did = `did:key:${multibaseId}`;\n\n    // Expand the DID identifier to a DID document.\n    portableDid.document = await DidKeyMethod.createDocument({\n      did: portableDid.did,\n      publicKeyFormat,\n      enableEncryptionKeyDerivation\n    });\n\n    // Return the given or generated key set.\n    portableDid.keySet = keySet;\n\n    return portableDid as PortableDid;\n  }\n\n  /**\n   * Expands a did:key identifier to a DID Document.\n   *\n   * Reference: https://w3c-ccg.github.io/did-method-key/#document-creation-algorithm\n   *\n   * @param options\n   * @returns - A DID dodcument.\n   */\n  public static async createDocument(options: DidKeyCreateDocumentOptions): Promise<DidDocument> {\n    const {\n      defaultContext = 'https://www.w3.org/ns/did/v1',\n      did,\n      enableEncryptionKeyDerivation = false,\n      enableExperimentalPublicKeyTypes = false,\n      publicKeyFormat = 'JsonWebKey2020'\n    } = options;\n\n    /**\n     * 1. Initialize document to an empty object.\n     */\n    const document: Partial<DidDocument> = {};\n\n    /**\n     * 2. Using a colon (:) as the delimiter, split the identifier into its\n     * components: a scheme, a method, a version, and a multibaseValue.\n     * If there are only three components set the version to the string\n     * value 1 and use the last value as the multibaseValue.\n     *\n     * Note: The W3C DID specification makes no mention of a version value\n     *       being part of the DID syntax.  Additionally, there does not\n     *       appear to be any real-world usage of the version number.\n     *       Consequently, this implementation will ignore the version\n     *       related guidance in the did:key specification.\n     */\n    let multibaseValue: string;\n    try {\n      ({ id: multibaseValue } = parseDid({ didUrl: did }));\n    } catch (error: any) {\n      throw new Error(`invalidDid: Unknown format: ${did}`);\n    }\n\n    /**\n     * 3. Check the validity of the input identifier.\n     * The scheme MUST be the value did. The method MUST be the value key.\n     * The version MUST be convertible to a positive integer value. The\n     * multibaseValue MUST be a string and begin with the letter z. If any\n     * of these requirements fail, an invalidDid error MUST be raised.\n     */\n    if (!DidKeyMethod.validateIdentifier({ did })) {\n      throw new Error(`invalidDid: Invalid identifier format: ${did}`);\n    }\n\n    /**\n     * 4. Initialize the signatureVerificationMethod to the result of passing\n     * identifier, multibaseValue, and options to a\n     *  {@link https://w3c-ccg.github.io/did-method-key/#signature-method-creation-algorithm | Signature Method Creation Algorithm}.\n     */\n    const signatureVerificationMethod = await DidKeyMethod.createSignatureMethod({\n      did,\n      enableExperimentalPublicKeyTypes,\n      multibaseValue,\n      publicKeyFormat\n    });\n\n    /**\n     * 5. Set document.id to identifier. If document.id is not a valid DID,\n     * an invalidDid error MUST be raised.\n     *\n     * Note: Identifier was already confirmed to be valid in Step 3, so\n     *       skipping the redundant validation.\n     */\n    document.id = did;\n\n    /**\n     * 6. Initialize the verificationMethod property in document to an array\n     * where the first value is the signatureVerificationMethod.\n     */\n    document.verificationMethod = [signatureVerificationMethod];\n\n    /**\n     * 7. Initialize the authentication, assertionMethod, capabilityInvocation,\n     * and the capabilityDelegation properties in document to an array where\n     * the first item is the value of the id property in\n     * signatureVerificationMethod.\n     */\n    document.authentication = [signatureVerificationMethod.id];\n    document.assertionMethod = [signatureVerificationMethod.id];\n    document.capabilityInvocation = [signatureVerificationMethod.id];\n    document.capabilityDelegation = [signatureVerificationMethod.id];\n\n    /**\n     * 8. If options.enableEncryptionKeyDerivation is set to true:\n     * Add the encryptionVerificationMethod value to the verificationMethod\n     * array. Initialize the keyAgreement property in document to an array\n     * where the first item is the value of the id property in\n     * encryptionVerificationMethod.\n     */\n    if (enableEncryptionKeyDerivation === true) {\n      /**\n       * Although not covered by the did:key method specification, a sensible\n       * default will be taken to use the 'X25519KeyAgreementKey2020'\n       * verification method type if the given publicKeyFormat is\n       * 'Ed25519VerificationKey2020' and 'JsonWebKey2020' otherwise.\n       */\n      const encryptionPublicKeyFormat =\n        (publicKeyFormat === 'Ed25519VerificationKey2020')\n          ? 'X25519KeyAgreementKey2020'\n          : 'JsonWebKey2020';\n\n      /**\n       * 8.1 Initialize the encryptionVerificationMethod to the result of\n       * passing identifier, multibaseValue, and options to an\n     * {@link https://w3c-ccg.github.io/did-method-key/#encryption-method-creation-algorithm | Encryption Method Creation Algorithm}.\n       */\n      const encryptionVerificationMethod = await this.createEncryptionMethod({\n        did,\n        enableExperimentalPublicKeyTypes,\n        multibaseValue,\n        publicKeyFormat: encryptionPublicKeyFormat\n      });\n\n      /**\n       * 8.2 Add the encryptionVerificationMethod value to the\n       * verificationMethod array.\n       */\n      document.verificationMethod.push(encryptionVerificationMethod);\n\n      /**\n       * 8.3. Initialize the keyAgreement property in document to an array\n       * where the first item is the value of the id property in\n       * encryptionVerificationMethod.\n       */\n      document.keyAgreement = [encryptionVerificationMethod.id];\n    }\n\n    /**\n     * 9. Initialize the @context property in document to the result of passing\n     * document and options to the Context Creation algorithm.\n     */\n    // Set contextArray to an array that is initialized to\n    // options.defaultContext.\n    const contextArray = [defaultContext];\n\n    // For every object in every verification relationship listed in document,\n    // add a string value to the contextArray based on the object type value,\n    // if it doesn't already exist, according to the following table:\n    // {@link https://w3c-ccg.github.io/did-method-key/#context-creation-algorithm | Context Type URL}\n    const verificationMethodTypes = getVerificationMethodTypes({ didDocument: document });\n    verificationMethodTypes.forEach((typeName: string) => {\n      const typeUrl = VERIFICATION_METHOD_TYPES[typeName];\n      contextArray.push(typeUrl);\n    });\n    document['@context'] = contextArray;\n\n    /**\n     * 10. Return document.\n     */\n    return document as DidDocument;\n  }\n\n  /**\n   * Decoding a multibase-encoded multicodec value into a verification method\n   * that is suitable for verifying that encrypted information will be\n   * received by the intended recipient.\n   */\n  public static async createEncryptionMethod(options: {\n    did: string,\n    enableExperimentalPublicKeyTypes: boolean,\n    multibaseValue: string,\n    publicKeyFormat: DidVerificationMethodType\n  }): Promise<VerificationMethod> {\n    const { did, enableExperimentalPublicKeyTypes, multibaseValue, publicKeyFormat } = options;\n\n    /**\n     * 1. Initialize verificationMethod to an empty object.\n     */\n    const verificationMethod: Partial<VerificationMethod> = {};\n\n    /**\n     * 2. Set multicodecValue and rawPublicKeyBytes to the result of passing\n     * multibaseValue and options to a Derive Encryption Key algorithm.\n     */\n    const {\n      key: rawPublicKeyBytes,\n      multicodecCode: multicodecValue,\n    } = await DidKeyMethod.deriveEncryptionKey({ multibaseValue });\n\n    /**\n     * 3. Ensure the proper key length of rawPublicKeyBytes based on the\n     * multicodecValue table provided below:\n     *\n     * Multicodec hexadecimal value: 0xec\n     *\n     * If the byte length of rawPublicKeyBytes\n     * does not match the expected public key length for the associated\n     * multicodecValue, an invalidPublicKeyLength error MUST be raised.\n     */\n    const actualLength = rawPublicKeyBytes.byteLength;\n    const expectedLength = MULTICODEC_PUBLIC_KEY_LENGTH[multicodecValue];\n    if (actualLength !== expectedLength) {\n      throw new Error(`invalidPublicKeyLength: Expected ${actualLength} bytes. Actual ${expectedLength} bytes.`);\n    }\n\n    /**\n     * 4. Create the multibaseValue by concatenating the letter 'z' and the\n     * base58-btc encoding of the concatenation of the multicodecValue and\n     * the rawPublicKeyBytes.\n     */\n    const kemMultibaseValue = cryptoUtils.keyToMultibaseId({\n      key            : rawPublicKeyBytes,\n      multicodecCode : multicodecValue\n    });\n\n    /**\n     * 5. Set the verificationMethod.id value by concatenating identifier,\n     * a hash character (#), and the multibaseValue. If verificationMethod.id\n     * is not a valid DID URL, an invalidDidUrl error MUST be raised.\n     */\n    verificationMethod.id = `${did}#${kemMultibaseValue}`;\n    try {\n      new URL(verificationMethod.id);\n    } catch (error: any) {\n      throw new Error('invalidDidUrl: Verification Method ID is not a valid DID URL.');\n    }\n\n    /**\n     * 6. Set the publicKeyFormat value to the options.publicKeyFormat value.\n     * 7. If publicKeyFormat is not known to the implementation, an\n     * unsupportedPublicKeyType error MUST be raised.\n     */\n    if (!(SupportedPublicKeyFormats.includes(publicKeyFormat))) {\n      throw new Error(`unsupportedPublicKeyType: Unsupported format: ${publicKeyFormat}`);\n    }\n\n    /**\n     * 8. If options.enableExperimentalPublicKeyTypes is set to false and\n     * publicKeyFormat is not Multikey, JsonWebKey2020, or\n     * X25519KeyAgreementKey2020, an invalidPublicKeyType error MUST be\n     * raised.\n     */\n    const StandardPublicKeyTypes = ['Multikey', 'JsonWebKey2020', 'X25519KeyAgreementKey2020'];\n    if (enableExperimentalPublicKeyTypes === false\n      && !(StandardPublicKeyTypes.includes(publicKeyFormat))) {\n      throw new Error(`invalidPublicKeyType: Specified '${publicKeyFormat}' without setting enableExperimentalPublicKeyTypes to true.`);\n    }\n\n    /**\n     * 9. Set verificationMethod.type to the publicKeyFormat value.\n     */\n    verificationMethod.type = publicKeyFormat;\n\n    /**\n     * 10. Set verificationMethod.controller to the identifier value.\n     * If verificationMethod.controller is not a valid DID, an invalidDid\n     * error MUST be raised.\n     */\n    verificationMethod.controller = did;\n    if (!DidKeyMethod.validateIdentifier({ did })) {\n      throw new Error(`invalidDid: Invalid identifier format: ${did}`);\n    }\n\n    /**\n     * 11. If publicKeyFormat is Multikey or X25519KeyAgreementKey2020,\n     * set the verificationMethod.publicKeyMultibase value to multibaseValue.\n     *\n     * Note: This implementation does not currently support the Multikey\n     *       format.\n     */\n    if (publicKeyFormat === 'X25519KeyAgreementKey2020') {\n      verificationMethod.publicKeyMultibase = kemMultibaseValue;\n    }\n\n    /**\n     * 12. If publicKeyFormat is JsonWebKey2020, set the\n     * verificationMethod.publicKeyJwk value to the result of passing\n     * multicodecValue and rawPublicKeyBytes to a JWK encoding algorithm.\n     */\n    if (publicKeyFormat === 'JsonWebKey2020') {\n      const jwkParams = await Jose.multicodecToJose({ code: multicodecValue });\n      const jsonWebKey = await Jose.keyToJwk({\n        keyMaterial : rawPublicKeyBytes,\n        keyType     : 'public',\n        ...jwkParams\n      });\n      // Ensure that \"d\" is NOT present.\n      if ('x' in jsonWebKey && !('d' in jsonWebKey)) {\n        verificationMethod.publicKeyJwk = jsonWebKey;\n      }\n    }\n\n    /**\n     * 13. Return verificationMethod.\n     */\n    return verificationMethod as VerificationMethod;\n  }\n\n  /**\n   * Transform a multibase-encoded multicodec value to public encryption key\n   * components that are suitable for encrypting messages to a receiver. A\n   * mathematical proof elaborating on the safety of performing this operation\n   * is available in:\n   * {@link https://eprint.iacr.org/2021/509.pdf | On using the same key pair for Ed25519 and an X25519 based KEM}\n   */\n  public static async deriveEncryptionKey(options: {\n    multibaseValue: string\n  }): Promise<DidKeyDeriveEncryptionKeyResult> {\n    const { multibaseValue } = options;\n\n    /**\n     * 1. Set publicEncryptionKey to an empty object.\n     */\n    let publicEncryptionKey: Partial<DidKeyDeriveEncryptionKeyResult> = {};\n\n    /**\n     * 2. Decode multibaseValue using the base58-btc multibase alphabet and\n     * set multicodecValue to the multicodec header for the decoded value.\n     * Implementers are cautioned to ensure that the multicodecValue is set\n     * to the result after performing varint decoding.\n     *\n     * 3. Set the rawPublicKeyBytes to the bytes remaining after the multicodec\n     * header.\n     */\n    const {\n      key: rawPublicKeyBytes,\n      multicodecCode: multicodecValue\n    } = cryptoUtils.multibaseIdToKey({ multibaseKeyId: multibaseValue });\n\n    /**\n     * 4. If the multicodecValue is 0xed, derive a public X25519 encryption key\n     * by using the rawPublicKeyBytes and the algorithm defined in\n     * {@link https://datatracker.ietf.org/doc/html/draft-ietf-core-oscore-groupcomm | Group OSCORE - Secure Group Communication for CoAP}\n     * for Curve25519 in Section 2.4.2: ECDH with Montgomery Coordinates and\n     * set generatedPublicEncryptionKeyBytes to the result.\n     */\n    if (multicodecValue === 0xed) {\n      const generatedPublicEncryptionKeyBytes = await Ed25519.convertPublicKeyToX25519({\n        publicKey: rawPublicKeyBytes\n      });\n\n      /**\n       * 5. Set multicodecValue in publicEncryptionKey to 0xec.\n       *\n       * 6. Set rawPublicKeyBytes in publicEncryptionKey to\n       * generatedPublicEncryptionKeyBytes.\n       */\n      publicEncryptionKey = {\n        key            : generatedPublicEncryptionKeyBytes,\n        multicodecCode : 0xec\n      };\n    }\n\n    /**\n     * 7. Return publicEncryptionKey.\n     */\n    return publicEncryptionKey as DidKeyDeriveEncryptionKeyResult;\n  }\n\n  /**\n   * Decodes a multibase-encoded multicodec value into a verification method\n   * that is suitable for verifying digital signatures.\n   * @param options - Signature method creation algorithm inputs.\n   * @returns - A verification method.\n   */\n  public static async createSignatureMethod(options: {\n    did: string,\n    enableExperimentalPublicKeyTypes: boolean,\n    multibaseValue: string,\n    publicKeyFormat: DidVerificationMethodType\n  }): Promise<VerificationMethod> {\n    const { did, enableExperimentalPublicKeyTypes, multibaseValue, publicKeyFormat } = options;\n\n    /**\n     * 1. Initialize verificationMethod to an empty object.\n     */\n    const verificationMethod: Partial<VerificationMethod> = {};\n\n    /**\n     * 2. Set multicodecValue and rawPublicKeyBytes to the result of passing\n     * multibaseValue and options to a Decode Public Key algorithm.\n     */\n    const {\n      key: rawPublicKeyBytes,\n      multicodecCode: multicodecValue,\n      multicodecName\n    } = cryptoUtils.multibaseIdToKey({ multibaseKeyId: multibaseValue });\n\n    /**\n     * 3. Ensure the proper key length of rawPublicKeyBytes based on the\n     * multicodecValue {@link https://w3c-ccg.github.io/did-method-key/#signature-method-creation-algorithm | table provided}.\n     * If the byte length of rawPublicKeyBytes does not match the expected\n     * public key length for the associated multicodecValue, an\n     * invalidPublicKeyLength error MUST be raised.\n     */\n    const actualLength = rawPublicKeyBytes.byteLength;\n    const expectedLength = MULTICODEC_PUBLIC_KEY_LENGTH[multicodecValue];\n    if (actualLength !== expectedLength) {\n      throw new Error(`invalidPublicKeyLength: Expected ${actualLength} bytes. Actual ${expectedLength} bytes.`);\n    }\n\n    /**\n     * 4. Ensure the rawPublicKeyBytes are a proper encoding of the public\n     * key type as specified by the multicodecValue. This validation is often\n     * done by a cryptographic library when importing the public key by,\n     * for example, ensuring that an Elliptic Curve public key is a specific\n     * coordinate that exists on the elliptic curve. If an invalid public key\n     * value is detected, an invalidPublicKey error MUST be raised.\n     */\n    let isValid = false;\n    switch (multicodecName) {\n      case 'secp256k1-pub':\n        isValid = await Secp256k1.validatePublicKey({ key: rawPublicKeyBytes });\n        break;\n      case 'ed25519-pub':\n        isValid = await Ed25519.validatePublicKey({ key: rawPublicKeyBytes });\n        break;\n      case 'x25519-pub':\n        // TODO: Validate key once/if X25519.validatePublicKey() is implemented.\n        // isValid = X25519.validatePublicKey({ key: rawPublicKeyBytes})\n        isValid = true;\n        break;\n    }\n    if (!isValid) {\n      throw new Error('invalidPublicKey: Invalid public key detected.');\n    }\n\n    /**\n     * 5. Set the verificationMethod.id value by concatenating identifier,\n     * a hash character (#), and the multibaseValue. If verificationMethod.id\n     * is not a valid DID URL, an invalidDidUrl error MUST be raised.\n     */\n    verificationMethod.id = `${did}#${multibaseValue}`;\n    try {\n      new URL(verificationMethod.id);\n    } catch (error: any) {\n      throw new Error('invalidDidUrl: Verification Method ID is not a valid DID URL.');\n    }\n\n    /**\n     * 6. Set the publicKeyFormat value to the options.publicKeyFormat value.\n     * 7. If publicKeyFormat is not known to the implementation, an\n     * unsupportedPublicKeyType error MUST be raised.\n     */\n    if (!(SupportedPublicKeyFormats.includes(publicKeyFormat))) {\n      throw new Error(`unsupportedPublicKeyType: Unsupported format: ${publicKeyFormat}`);\n    }\n\n    /**\n     * 8. If options.enableExperimentalPublicKeyTypes is set to false and\n     * publicKeyFormat is not Multikey, JsonWebKey2020, or\n     * Ed25519VerificationKey2020, an invalidPublicKeyType error MUST be\n     * raised.\n     */\n    const StandardPublicKeyTypes = ['Multikey', 'JsonWebKey2020', 'Ed25519VerificationKey2020'];\n    if (enableExperimentalPublicKeyTypes === false\n      && !(StandardPublicKeyTypes.includes(publicKeyFormat))) {\n      throw new Error(`invalidPublicKeyType: Specified '${publicKeyFormat}' without setting enableExperimentalPublicKeyTypes to true.`);\n    }\n\n    /**\n     * 9. Set verificationMethod.type to the publicKeyFormat value.\n     */\n    verificationMethod.type = publicKeyFormat;\n\n    /**\n     * 10. Set verificationMethod.controller to the identifier value.\n     * If verificationMethod.controller is not a valid DID, an invalidDid\n     * error MUST be raised.\n     */\n    verificationMethod.controller = did;\n    if (!DidKeyMethod.validateIdentifier({ did })) {\n      throw new Error(`invalidDid: Invalid identifier format: ${did}`);\n    }\n\n    /**\n     * 11. If publicKeyFormat is Multikey or Ed25519VerificationKey2020,\n     * set the verificationMethod.publicKeyMultibase value to multibaseValue.\n     *\n     * Note: This implementation does not currently support the Multikey\n     *       format.\n     */\n    if (publicKeyFormat === 'Ed25519VerificationKey2020') {\n      verificationMethod.publicKeyMultibase = multibaseValue;\n    }\n\n    /**\n     * 12. If publicKeyFormat is JsonWebKey2020, set the\n     * verificationMethod.publicKeyJwk value to the result of passing\n     * multicodecValue and rawPublicKeyBytes to a JWK encoding algorithm.\n     */\n    if (publicKeyFormat === 'JsonWebKey2020') {\n      const jwkParams = await Jose.multicodecToJose({ code: multicodecValue });\n      const jsonWebKey = await Jose.keyToJwk({\n        keyMaterial : rawPublicKeyBytes,\n        keyType     : 'public',\n        ...jwkParams\n      });\n      // Ensure that \"d\" is NOT present.\n      if ('x' in jsonWebKey && !('d' in jsonWebKey)) {\n        verificationMethod.publicKeyJwk = jsonWebKey;\n      }\n    }\n\n    /**\n     * 13. Return verificationMethod.\n     */\n    return verificationMethod as VerificationMethod;\n  }\n\n  public static async generateKeySet(options?: {\n    keyAlgorithm?: typeof SupportedCryptoAlgorithms[number]\n  }): Promise<DidKeyKeySet> {\n    // Generate Ed25519 keys, by default.\n    const { keyAlgorithm = 'Ed25519' } = options ?? {};\n\n    let keyPair: Web5Crypto.CryptoKeyPair;\n\n    switch (keyAlgorithm) {\n      case 'Ed25519': {\n        keyPair = await new EdDsaAlgorithm().generateKey({\n          algorithm   : { name: 'EdDSA', namedCurve: 'Ed25519' },\n          extractable : true,\n          keyUsages   : ['sign', 'verify']\n        });\n        break;\n      }\n\n      case 'secp256k1': {\n        keyPair = await new EcdsaAlgorithm().generateKey({\n          algorithm   : { name: 'ECDSA', namedCurve: 'secp256k1' },\n          extractable : true,\n          keyUsages   : ['sign', 'verify']\n        });\n        break;\n      }\n\n      default: {\n        throw new Error(`Unsupported crypto algorithm: '${keyAlgorithm}'`);\n      }\n    }\n\n    const publicKeyJwk = await Jose.cryptoKeyToJwk({ key: keyPair.publicKey }) as PublicKeyJwk;\n    const privateKeyJwk = await Jose.cryptoKeyToJwk({ key: keyPair.privateKey }) as PrivateKeyJwk;\n\n    const keySet: DidKeyKeySet = {\n      verificationMethodKeys: [{\n        publicKeyJwk,\n        privateKeyJwk,\n        relationships: ['authentication']\n      }]\n    };\n\n    return keySet;\n  }\n\n  /**\n   * Given the W3C DID Document of a `did:key` DID, return the identifier of\n   * the verification method key that will be used for signing messages and\n   * credentials, by default.\n   *\n   * @param document = DID Document to get the default signing key from.\n   * @returns Verification method identifier for the default signing key.\n   */\n  public static async getDefaultSigningKey(options: {\n    didDocument: DidDocument\n  }): Promise<string | undefined> {\n    const { didDocument } = options;\n\n    if (didDocument.authentication\n      && Array.isArray(didDocument.authentication)\n      && didDocument.authentication.length > 0\n      && typeof didDocument.authentication[0] === 'string') {\n\n      const [verificationMethodId] = didDocument.authentication;\n      const signingKeyId = verificationMethodId;\n\n      return signingKeyId;\n    }\n  }\n\n  public static async resolve(options: {\n    didUrl: string,\n    resolutionOptions?: DidResolutionOptions\n  }): Promise<DidResolutionResult> {\n    const { didUrl, resolutionOptions: _ } = options;\n    // TODO: Implement resolutionOptions as defined in https://www.w3.org/TR/did-core/#did-resolution\n\n    const parsedDid = parseDid({ didUrl });\n    if (!parsedDid) {\n      return {\n        '@context'            : 'https://w3id.org/did-resolution/v1',\n        didDocument           : undefined,\n        didDocumentMetadata   : {},\n        didResolutionMetadata : {\n          contentType  : 'application/did+ld+json',\n          error        : 'invalidDid',\n          errorMessage : `Cannot parse DID: ${didUrl}`\n        }\n      };\n    }\n\n    if (parsedDid.method !== 'key') {\n      return {\n        '@context'            : 'https://w3id.org/did-resolution/v1',\n        didDocument           : undefined,\n        didDocumentMetadata   : {},\n        didResolutionMetadata : {\n          contentType  : 'application/did+ld+json',\n          error        : 'methodNotSupported',\n          errorMessage : `Method not supported: ${parsedDid.method}`\n        }\n      };\n    }\n\n    const didDocument = await DidKeyMethod.createDocument({ did: parsedDid.did });\n\n    return {\n      '@context'            : 'https://w3id.org/did-resolution/v1',\n      didDocument,\n      didDocumentMetadata   : {},\n      didResolutionMetadata : {\n        contentType : 'application/did+ld+json',\n        did         : {\n          didString        : parsedDid.did,\n          methodSpecificId : parsedDid.id,\n          method           : parsedDid.method\n        }\n      }\n    };\n  }\n\n  public static validateIdentifier(options: {\n    did: string\n  }): boolean {\n    const { did } = options;\n\n    const { method, id: multibaseValue } = parseDid({ didUrl: did });\n    const [scheme] = did.split(':', 1);\n\n    /**\n     * Note: The W3C DID specification makes no mention of a version value\n     *       being part of the DID syntax.  Additionally, there does not\n     *       appear to be any real-world usage of the version number.\n     *       Consequently, this implementation will ignore the version\n     *       related guidance in the did:key specification.\n     */\n    const version = '1';\n\n    return (\n      scheme !== 'did' ||\n      method !== 'key' ||\n      parseInt(version) > 0 ||\n      universalTypeOf(multibaseValue) !== 'String' ||\n      !multibaseValue.startsWith('z')\n    );\n  }\n}", "import type { DidResolutionResult, DidResolverCache } from './types.js';\n\n/**\n * no-op cache that is used as the default cache for did-resolver.\n * The motivation behind using a no-op cache as the default stems from\n * the desire to maximize the potential for this library to be used\n * in as many JS runtimes as possible\n */\nexport const DidResolverCacheNoop: DidResolverCache = {\n  get: function (_key: string): Promise<DidResolutionResult> {\n    return null as any;\n  },\n  set: function (_key: string, _value: DidResolutionResult): Promise<void> {\n    return null as any;\n  },\n  delete: function (_key: string): Promise<void> {\n    return null as any;\n  },\n  clear: function (): Promise<void> {\n    return null as any;\n  },\n  close: function (): Promise<void> {\n    return null as any;\n  }\n};", "import type {\n  DidResolverCache,\n  DidMethodResolver,\n  DidResolutionResult,\n  DidResolutionOptions,\n} from './types.js';\n\nimport { parseDid } from './utils.js';\nimport { DidResolverCacheNoop } from './resolver-cache-noop.js';\n\nexport type DidResolverOptions = {\n  didResolvers: DidMethodResolver[];\n  cache?: DidResolverCache;\n}\n\n/**\n * The `DidResolver` class is responsible for resolving DIDs to DID documents.\n * It uses method resolvers to resolve DIDs of different methods and a cache\n * to store resolved DID documents.\n */\nexport class DidResolver {\n  /**\n   * A cache for storing resolved DID documents.\n   */\n  private cache: DidResolverCache;\n\n  /**\n   * A map to store method resolvers against method names.\n   */\n  private didResolvers: Map<string, DidMethodResolver> = new Map();\n\n  /**\n   * Constructs a new `DidResolver`.\n   *\n   * @param options - The options for constructing the `DidResolver`.\n   * @param options.didResolvers - An array of `DidMethodResolver` instances.\n   * @param options.cache - Optional. A cache for storing resolved DID documents. If not provided, a no-operation cache is used.\n   */\n  constructor(options: DidResolverOptions) {\n    this.cache = options.cache || DidResolverCacheNoop;\n\n    for (const resolver of options.didResolvers) {\n      this.didResolvers.set(resolver.methodName, resolver);\n    }\n  }\n\n  /**\n   * Resolves a DID to a DID Resolution Result.\n   * If the DID Resolution Result is present in the cache, it returns the cached\n   * result. Otherwise, it uses the appropriate method resolver to resolve\n   * the DID, stores the resolution result in the cache, and returns the\n   * resolultion result.\n   *\n   * Note: The method signature for resolve() in this implementation must match\n   * the `DidResolver` implementation in\n   * {@link https://github.com/TBD54566975/dwn-sdk-js | dwn-sdk-js} so that\n   * Web5 apps and the underlying DWN instance can share the same DID\n   * resolution cache.\n   *\n   * @param didUrl - The DID or DID URL to resolve.\n   * @returns A promise that resolves to the DID Resolution Result.\n   */\n  async resolve(didUrl: string, resolutionOptions?: DidResolutionOptions): Promise<DidResolutionResult> {\n\n    const parsedDid = parseDid({ didUrl });\n    if (!parsedDid) {\n      return {\n        '@context'            : 'https://w3id.org/did-resolution/v1',\n        didDocument           : undefined,\n        didDocumentMetadata   : {},\n        didResolutionMetadata : {\n          contentType  : 'application/did+ld+json',\n          error        : 'invalidDid',\n          errorMessage : `Cannot parse DID: ${didUrl}`\n        }\n      };\n    }\n\n    const resolver = this.didResolvers.get(parsedDid.method);\n    if (!resolver) {\n      return {\n        '@context'            : 'https://w3id.org/did-resolution/v1',\n        didDocument           : undefined,\n        didDocumentMetadata   : {},\n        didResolutionMetadata : {\n          contentType  : 'application/did+ld+json',\n          error        : 'methodNotSupported',\n          errorMessage : `Method not supported: ${parsedDid.method}`\n        }\n      };\n    }\n\n    const cachedResolutionResult = await this.cache.get(parsedDid.did);\n\n    if (cachedResolutionResult) {\n      return cachedResolutionResult;\n    } else {\n      const resolutionResult = await resolver.resolve({\n        didUrl: parsedDid.did,\n        resolutionOptions\n      });\n      await this.cache.set(parsedDid.did, resolutionResult);\n\n      return resolutionResult;\n    }\n  }\n}", "import type { DidResolutionResult, DidResolverCache } from './types.js';\n\nimport ms from 'ms';\nimport { Level } from 'level';\n\nexport type DidResolverCacheOptions = {\n  location?: string;\n  ttl?: string;\n}\n\ntype CacheWrapper = {\n  ttlMillis: number;\n  value: DidResolutionResult;\n}\n\n/**\n * Naive level-based cache for did resolution results. It just so happens that level aggressively keeps as much as it\n * can in memory when possible while also writing to the filesystem (in node runtime) and indexedDB (in browser runtime).\n * the persistent aspect is especially useful across page refreshes.\n */\nexport class DidResolverCacheLevel implements DidResolverCache {\n  private cache: Level<string, string>;\n  private ttl: number;\n\n  private static defaultOptions: Required<DidResolverCacheOptions> = {\n    location : 'DATA/AGENT/DID_RESOLVERCACHE',\n    ttl      : '15m'\n  };\n\n  constructor(options: DidResolverCacheOptions = {}) {\n    let { location, ttl } = options;\n\n    location ??= DidResolverCacheLevel.defaultOptions.location;\n    ttl ??= DidResolverCacheLevel.defaultOptions.ttl;\n\n    this.cache = new Level(location);\n    this.ttl = ms(ttl);\n  }\n\n  async get(did: string): Promise<DidResolutionResult | void> {\n    try {\n      const str = await this.cache.get(did);\n      const cacheWrapper: CacheWrapper = JSON.parse(str);\n\n      if (Date.now() >= cacheWrapper.ttlMillis) {\n        // defer deletion to be called in the next tick of the js event loop\n        this.cache.nextTick(() => this.cache.del(did));\n\n        return;\n      } else {\n        return cacheWrapper.value;\n      }\n\n    } catch(error: any) {\n      // Don't throw when a key wasn't found.\n      if (error.code === 'LEVEL_NOT_FOUND') {\n        return;\n      }\n\n      throw error;\n    }\n  }\n\n  set(did: string, value: DidResolutionResult): Promise<void> {\n    const cacheWrapper: CacheWrapper = { ttlMillis: Date.now() + this.ttl, value };\n    const str = JSON.stringify(cacheWrapper);\n\n    return this.cache.put(did, str);\n  }\n\n  delete(did: string): Promise<void> {\n    return this.cache.del(did);\n  }\n\n  clear(): Promise<void> {\n    return this.cache.clear();\n  }\n\n  close(): Promise<void> {\n    return this.cache.close();\n  }\n}"],
  "mappings": "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AAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,aAAa;AAAA,MACb,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,6BAA6B;AAAA,MAC7B,gCAAgC;AAAA,IAClC,CAAC;AAED,IAAAA,QAAO,UAAU,EAAE,MAAM;AAAA;AAAA;;;ACnXzB;AAAA,2FAAAC,SAAA;AAAA;AAEA,aAAS,KAAK,UAAU,MAAM;AAC5B,UAAI,SAAS,UAAU,KAAK;AAC1B,cAAM,IAAI,UAAU,mBAAmB;AAAA,MACzC;AACA,UAAI,WAAW,IAAI,WAAW,GAAG;AACjC,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,iBAAS,CAAC,IAAI;AAAA,MAChB;AACA,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,YAAI,IAAI,SAAS,OAAO,CAAC;AACzB,YAAI,KAAK,EAAE,WAAW,CAAC;AACvB,YAAI,SAAS,EAAE,MAAM,KAAK;AACxB,gBAAM,IAAI,UAAU,IAAI,eAAe;AAAA,QACzC;AACA,iBAAS,EAAE,IAAI;AAAA,MACjB;AACA,UAAI,OAAO,SAAS;AACpB,UAAI,SAAS,SAAS,OAAO,CAAC;AAC9B,UAAI,SAAS,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG;AAC1C,UAAI,UAAU,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,IAAI;AAC3C,eAASC,QAAO,QAAQ;AACtB,YAAI,kBAAkB;AAAW;AAAA,iBACxB,YAAY,OAAO,MAAM,GAAG;AACnC,mBAAS,IAAI,WAAW,OAAO,QAAQ,OAAO,YAAY,OAAO,UAAU;AAAA,QAC7E,WAAW,MAAM,QAAQ,MAAM,GAAG;AAChC,mBAAS,WAAW,KAAK,MAAM;AAAA,QACjC;AACA,YAAI,EAAE,kBAAkB,aAAa;AACnC,gBAAM,IAAI,UAAU,qBAAqB;AAAA,QAC3C;AACA,YAAI,OAAO,WAAW,GAAG;AACvB,iBAAO;AAAA,QACT;AACA,YAAI,SAAS;AACb,YAAIC,UAAS;AACb,YAAI,SAAS;AACb,YAAI,OAAO,OAAO;AAClB,eAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,GAAG;AAC9C;AACA;AAAA,QACF;AACA,YAAI,QAAQ,OAAO,UAAU,UAAU,MAAM;AAC7C,YAAI,MAAM,IAAI,WAAW,IAAI;AAC7B,eAAO,WAAW,MAAM;AACtB,cAAI,QAAQ,OAAO,MAAM;AACzB,cAAIC,KAAI;AACR,mBAAS,MAAM,OAAO,IAAI,UAAU,KAAKA,KAAID,YAAW,QAAQ,IAAI,OAAOC,MAAK;AAC9E,qBAAS,MAAM,IAAI,GAAG,MAAM;AAC5B,gBAAI,GAAG,IAAI,QAAQ,SAAS;AAC5B,oBAAQ,QAAQ,SAAS;AAAA,UAC3B;AACA,cAAI,UAAU,GAAG;AACf,kBAAM,IAAI,MAAM,gBAAgB;AAAA,UAClC;AACA,UAAAD,UAASC;AACT;AAAA,QACF;AACA,YAAI,MAAM,OAAOD;AACjB,eAAO,QAAQ,QAAQ,IAAI,GAAG,MAAM,GAAG;AACrC;AAAA,QACF;AACA,YAAIE,OAAM,OAAO,OAAO,MAAM;AAC9B,eAAO,MAAM,MAAM,EAAE,KAAK;AACxB,UAAAA,QAAO,SAAS,OAAO,IAAI,GAAG,CAAC;AAAA,QACjC;AACA,eAAOA;AAAA,MACT;AACA,eAAS,aAAa,QAAQ;AAC5B,YAAI,OAAO,WAAW,UAAU;AAC9B,gBAAM,IAAI,UAAU,iBAAiB;AAAA,QACvC;AACA,YAAI,OAAO,WAAW,GAAG;AACvB,iBAAO,IAAI,WAAW;AAAA,QACxB;AACA,YAAI,MAAM;AACV,YAAI,OAAO,GAAG,MAAM,KAAK;AACvB;AAAA,QACF;AACA,YAAI,SAAS;AACb,YAAIF,UAAS;AACb,eAAO,OAAO,GAAG,MAAM,QAAQ;AAC7B;AACA;AAAA,QACF;AACA,YAAI,QAAQ,OAAO,SAAS,OAAO,SAAS,MAAM;AAClD,YAAI,OAAO,IAAI,WAAW,IAAI;AAC9B,eAAO,OAAO,GAAG,GAAG;AAClB,cAAI,QAAQ,SAAS,OAAO,WAAW,GAAG,CAAC;AAC3C,cAAI,UAAU,KAAK;AACjB;AAAA,UACF;AACA,cAAIC,KAAI;AACR,mBAAS,MAAM,OAAO,IAAI,UAAU,KAAKA,KAAID,YAAW,QAAQ,IAAI,OAAOC,MAAK;AAC9E,qBAAS,OAAO,KAAK,GAAG,MAAM;AAC9B,iBAAK,GAAG,IAAI,QAAQ,QAAQ;AAC5B,oBAAQ,QAAQ,QAAQ;AAAA,UAC1B;AACA,cAAI,UAAU,GAAG;AACf,kBAAM,IAAI,MAAM,gBAAgB;AAAA,UAClC;AACA,UAAAD,UAASC;AACT;AAAA,QACF;AACA,YAAI,OAAO,GAAG,MAAM,KAAK;AACvB;AAAA,QACF;AACA,YAAI,MAAM,OAAOD;AACjB,eAAO,QAAQ,QAAQ,KAAK,GAAG,MAAM,GAAG;AACtC;AAAA,QACF;AACA,YAAI,MAAM,IAAI,WAAW,UAAU,OAAO,IAAI;AAC9C,YAAIG,KAAI;AACR,eAAO,QAAQ,MAAM;AACnB,cAAIA,IAAG,IAAI,KAAK,KAAK;AAAA,QACvB;AACA,eAAO;AAAA,MACT;AACA,eAASC,QAAO,QAAQ;AACtB,YAAI,SAAS,aAAa,MAAM;AAChC,YAAI,QAAQ;AACV,iBAAO;AAAA,QACT;AACA,cAAM,IAAI,MAAM,OAAQ,IAAK,YAAY;AAAA,MAC3C;AACA,aAAO;AAAA,QACL,QAAQL;AAAA,QACR;AAAA,QACA,QAAQK;AAAA,MACV;AAAA,IACF;AACA,QAAI,MAAM;AACV,QAAI,kCAAkC;AAEtC,IAAAN,QAAO,UAAU;AAAA;AAAA;;;ACvIjB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAMO,SAAQ,IAAI,WAAW,CAAC;AAC9B,QAAM,QAAQ,OAAK,EAAE,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,GAAG,EAAE;AACvF,QAAM,UAAU,SAAO;AACrB,YAAM,QAAQ,IAAI,MAAM,KAAK;AAC7B,aAAO,QAAQ,IAAI,WAAW,MAAM,IAAI,OAAK,SAAS,GAAG,EAAE,CAAC,CAAC,IAAIA;AAAA,IACnE;AACA,QAAMC,UAAS,CAAC,IAAI,OAAO;AACzB,UAAI,OAAO;AACT,eAAO;AACT,UAAI,GAAG,eAAe,GAAG,YAAY;AACnC,eAAO;AAAA,MACT;AACA,eAAS,KAAK,GAAG,KAAK,GAAG,YAAY,MAAM;AACzC,YAAI,GAAG,EAAE,MAAM,GAAG,EAAE,GAAG;AACrB,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AACA,QAAMC,UAAS,OAAK;AAClB,UAAI,aAAa,cAAc,EAAE,YAAY,SAAS;AACpD,eAAO;AACT,UAAI,aAAa;AACf,eAAO,IAAI,WAAW,CAAC;AACzB,UAAI,YAAY,OAAO,CAAC,GAAG;AACzB,eAAO,IAAI,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU;AAAA,MAC5D;AACA,YAAM,IAAI,MAAM,mCAAmC;AAAA,IACrD;AACA,QAAM,WAAW,OAAK,aAAa,eAAe,YAAY,OAAO,CAAC;AACtE,QAAM,aAAa,CAAAC,SAAO,IAAI,YAAY,EAAE,OAAOA,IAAG;AACtD,QAAM,WAAW,OAAK,IAAI,YAAY,EAAE,OAAO,CAAC;AAEhD,YAAQ,SAASD;AACjB,YAAQ,QAAQF;AAChB,YAAQ,SAASC;AACjB,YAAQ,UAAU;AAClB,YAAQ,aAAa;AACrB,YAAQ,WAAW;AACnB,YAAQ,QAAQ;AAChB,YAAQ,WAAW;AAAA;AAAA;;;AC5CnB,IAAAG,gBAAA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,UAAU;AACd,QAAI,QAAQ;AAEZ,QAAMC,WAAN,MAAc;AAAA,MACZ,YAAY,MAAM,QAAQ,YAAY;AACpC,aAAK,OAAO;AACZ,aAAK,SAAS;AACd,aAAK,aAAa;AAAA,MACpB;AAAA,MACA,OAAOC,QAAO;AACZ,YAAIA,kBAAiB,YAAY;AAC/B,iBAAO,GAAI,KAAK,MAAO,GAAI,KAAK,WAAWA,MAAK,CAAE;AAAA,QACpD,OAAO;AACL,gBAAM,MAAM,mCAAmC;AAAA,QACjD;AAAA,MACF;AAAA,IACF;AACA,QAAMC,WAAN,MAAc;AAAA,MACZ,YAAY,MAAM,QAAQ,YAAY;AACpC,aAAK,OAAO;AACZ,aAAK,SAAS;AACd,YAAI,OAAO,YAAY,CAAC,MAAM,QAAW;AACvC,gBAAM,IAAI,MAAM,0BAA0B;AAAA,QAC5C;AACA,aAAK,kBAAkB,OAAO,YAAY,CAAC;AAC3C,aAAK,aAAa;AAAA,MACpB;AAAA,MACA,OAAO,MAAM;AACX,YAAI,OAAO,SAAS,UAAU;AAC5B,cAAI,KAAK,YAAY,CAAC,MAAM,KAAK,iBAAiB;AAChD,kBAAM,MAAM,qCAAsC,KAAK,UAAU,IAAI,CAAE,KAAM,KAAK,IAAK,+CAAgD,KAAK,MAAO,EAAE;AAAA,UACvJ;AACA,iBAAO,KAAK,WAAW,KAAK,MAAM,KAAK,OAAO,MAAM,CAAC;AAAA,QACvD,OAAO;AACL,gBAAM,MAAM,mCAAmC;AAAA,QACjD;AAAA,MACF;AAAA,MACA,GAAGC,UAAS;AACV,eAAOC,IAAG,MAAMD,QAAO;AAAA,MACzB;AAAA,IACF;AACA,QAAME,mBAAN,MAAsB;AAAA,MACpB,YAAY,UAAU;AACpB,aAAK,WAAW;AAAA,MAClB;AAAA,MACA,GAAGF,UAAS;AACV,eAAOC,IAAG,MAAMD,QAAO;AAAA,MACzB;AAAA,MACA,OAAO,OAAO;AACZ,cAAM,SAAS,MAAM,CAAC;AACtB,cAAMA,WAAU,KAAK,SAAS,MAAM;AACpC,YAAIA,UAAS;AACX,iBAAOA,SAAQ,OAAO,KAAK;AAAA,QAC7B,OAAO;AACL,gBAAM,WAAW,qCAAsC,KAAK,UAAU,KAAK,CAAE,+BAAgC,OAAO,KAAK,KAAK,QAAQ,CAAE,gBAAgB;AAAA,QAC1J;AAAA,MACF;AAAA,IACF;AACA,QAAMC,MAAK,CAAC,MAAM,UAAU,IAAIC,iBAAgB;AAAA,MAC9C,GAAG,KAAK,YAAY,EAAE,CAAC,KAAK,MAAM,GAAG,KAAK;AAAA,MAC1C,GAAG,MAAM,YAAY,EAAE,CAAC,MAAM,MAAM,GAAG,MAAM;AAAA,IAC/C,CAAC;AACD,QAAMC,SAAN,MAAY;AAAA,MACV,YAAY,MAAM,QAAQ,YAAY,YAAY;AAChD,aAAK,OAAO;AACZ,aAAK,SAAS;AACd,aAAK,aAAa;AAClB,aAAK,aAAa;AAClB,aAAK,UAAU,IAAIN,SAAQ,MAAM,QAAQ,UAAU;AACnD,aAAK,UAAU,IAAIE,SAAQ,MAAM,QAAQ,UAAU;AAAA,MACrD;AAAA,MACA,OAAO,OAAO;AACZ,eAAO,KAAK,QAAQ,OAAO,KAAK;AAAA,MAClC;AAAA,MACA,OAAO,OAAO;AACZ,eAAO,KAAK,QAAQ,OAAO,KAAK;AAAA,MAClC;AAAA,IACF;AACA,QAAMK,QAAO,CAAC,EAAC,MAAM,QAAQ,QAAAC,SAAQ,QAAAC,QAAM,MAAM,IAAIH,OAAM,MAAM,QAAQE,SAAQC,OAAM;AACvF,QAAM,QAAQ,CAAC,EAAC,QAAQ,MAAM,UAAAC,UAAQ,MAAM;AAC1C,YAAM,EAAC,QAAAF,SAAQ,QAAAC,QAAM,IAAI,QAAQC,WAAU,IAAI;AAC/C,aAAOH,MAAK;AAAA,QACV;AAAA,QACA;AAAA,QACA,QAAAC;AAAA,QACA,QAAQ,UAAQ,MAAM,OAAOC,QAAO,IAAI,CAAC;AAAA,MAC3C,CAAC;AAAA,IACH;AACA,QAAMA,UAAS,CAAC,QAAQC,WAAU,aAAa,SAAS;AACtD,YAAM,QAAQ,CAAC;AACf,eAAS,IAAI,GAAG,IAAIA,UAAS,QAAQ,EAAE,GAAG;AACxC,cAAMA,UAAS,CAAC,CAAC,IAAI;AAAA,MACvB;AACA,UAAI,MAAM,OAAO;AACjB,aAAO,OAAO,MAAM,CAAC,MAAM,KAAK;AAC9B,UAAE;AAAA,MACJ;AACA,YAAM,MAAM,IAAI,WAAW,MAAM,cAAc,IAAI,CAAC;AACpD,UAAI,OAAO;AACX,UAAI,SAAS;AACb,UAAI,UAAU;AACd,eAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,cAAM,QAAQ,MAAM,OAAO,CAAC,CAAC;AAC7B,YAAI,UAAU,QAAW;AACvB,gBAAM,IAAI,YAAY,OAAQ,IAAK,YAAY;AAAA,QACjD;AACA,iBAAS,UAAU,cAAc;AACjC,gBAAQ;AACR,YAAI,QAAQ,GAAG;AACb,kBAAQ;AACR,cAAI,SAAS,IAAI,MAAM,UAAU;AAAA,QACnC;AAAA,MACF;AACA,UAAI,QAAQ,eAAe,MAAM,UAAU,IAAI,MAAM;AACnD,cAAM,IAAI,YAAY,wBAAwB;AAAA,MAChD;AACA,aAAO;AAAA,IACT;AACA,QAAMF,UAAS,CAAC,MAAME,WAAU,gBAAgB;AAC9C,YAAM,MAAMA,UAASA,UAAS,SAAS,CAAC,MAAM;AAC9C,YAAM,QAAQ,KAAK,eAAe;AAClC,UAAI,MAAM;AACV,UAAI,OAAO;AACX,UAAI,SAAS;AACb,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AACpC,iBAAS,UAAU,IAAI,KAAK,CAAC;AAC7B,gBAAQ;AACR,eAAO,OAAO,aAAa;AACzB,kBAAQ;AACR,iBAAOA,UAAS,OAAO,UAAU,IAAI;AAAA,QACvC;AAAA,MACF;AACA,UAAI,MAAM;AACR,eAAOA,UAAS,OAAO,UAAU,cAAc,IAAI;AAAA,MACrD;AACA,UAAI,KAAK;AACP,eAAO,IAAI,SAAS,cAAc,GAAG;AACnC,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AACA,QAAMC,WAAU,CAAC,EAAC,MAAM,QAAQ,aAAa,UAAAD,UAAQ,MAAM;AACzD,aAAOH,MAAK;AAAA,QACV;AAAA,QACA;AAAA,QACA,OAAO,OAAO;AACZ,iBAAOC,QAAO,OAAOE,WAAU,WAAW;AAAA,QAC5C;AAAA,QACA,OAAO,OAAO;AACZ,iBAAOD,QAAO,OAAOC,WAAU,aAAa,IAAI;AAAA,QAClD;AAAA,MACF,CAAC;AAAA,IACH;AAEA,YAAQ,QAAQJ;AAChB,YAAQ,QAAQ;AAChB,YAAQ,OAAOC;AACf,YAAQ,KAAKH;AACb,YAAQ,UAAUO;AAAA;AAAA;;;ACnKlB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,OAAO;AACX,QAAI,QAAQ;AAEZ,QAAM,WAAW,KAAK,KAAK;AAAA,MACzB,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ,SAAO,MAAM,SAAS,GAAG;AAAA,MACjC,QAAQ,CAAAC,SAAO,MAAM,WAAWA,IAAG;AAAA,IACrC,CAAC;AAED,YAAQ,WAAW;AAAA;AAAA;;;ACdnB,IAAAC,iBAAA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,OAAO;AAEX,QAAM,QAAQ,KAAK,QAAQ;AAAA,MACzB,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AAED,YAAQ,QAAQ;AAAA;AAAA;;;ACbhB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,OAAO;AAEX,QAAM,QAAQ,KAAK,QAAQ;AAAA,MACzB,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AAED,YAAQ,QAAQ;AAAA;AAAA;;;ACbhB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,OAAO;AAEX,QAAM,SAAS,KAAK,MAAM;AAAA,MACxB,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,IACZ,CAAC;AAED,YAAQ,SAAS;AAAA;AAAA;;;ACZjB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,OAAO;AAEX,QAAM,SAAS,KAAK,QAAQ;AAAA,MAC1B,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AACD,QAAM,cAAc,KAAK,QAAQ;AAAA,MAC/B,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AAED,YAAQ,SAAS;AACjB,YAAQ,cAAc;AAAA;AAAA;;;ACpBtB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,OAAO;AAEX,QAAM,SAAS,KAAK,QAAQ;AAAA,MAC1B,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AACD,QAAM,cAAc,KAAK,QAAQ;AAAA,MAC/B,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AACD,QAAM,YAAY,KAAK,QAAQ;AAAA,MAC7B,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AACD,QAAM,iBAAiB,KAAK,QAAQ;AAAA,MAClC,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AACD,QAAM,YAAY,KAAK,QAAQ;AAAA,MAC7B,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AACD,QAAM,iBAAiB,KAAK,QAAQ;AAAA,MAClC,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AACD,QAAM,eAAe,KAAK,QAAQ;AAAA,MAChC,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AACD,QAAM,oBAAoB,KAAK,QAAQ;AAAA,MACrC,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AACD,QAAM,UAAU,KAAK,QAAQ;AAAA,MAC3B,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AAED,YAAQ,SAAS;AACjB,YAAQ,YAAY;AACpB,YAAQ,eAAe;AACvB,YAAQ,oBAAoB;AAC5B,YAAQ,iBAAiB;AACzB,YAAQ,YAAY;AACpB,YAAQ,iBAAiB;AACzB,YAAQ,cAAc;AACtB,YAAQ,UAAU;AAAA;AAAA;;;ACrElB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,OAAO;AAEX,QAAM,SAAS,KAAK,MAAM;AAAA,MACxB,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,IACZ,CAAC;AACD,QAAM,cAAc,KAAK,MAAM;AAAA,MAC7B,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,IACZ,CAAC;AAED,YAAQ,SAAS;AACjB,YAAQ,cAAc;AAAA;AAAA;;;AClBtB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,OAAO;AAEX,QAAM,YAAY,KAAK,MAAM;AAAA,MAC3B,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,UAAU;AAAA,IACZ,CAAC;AACD,QAAM,eAAe,KAAK,MAAM;AAAA,MAC9B,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,UAAU;AAAA,IACZ,CAAC;AAED,YAAQ,YAAY;AACpB,YAAQ,eAAe;AAAA;AAAA;;;AClBvB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,OAAO;AAEX,QAAMC,UAAS,KAAK,QAAQ;AAAA,MAC1B,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AACD,QAAMC,aAAY,KAAK,QAAQ;AAAA,MAC7B,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AACD,QAAMC,aAAY,KAAK,QAAQ;AAAA,MAC7B,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AACD,QAAMC,gBAAe,KAAK,QAAQ;AAAA,MAChC,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf,CAAC;AAED,YAAQ,SAASH;AACjB,YAAQ,YAAYC;AACpB,YAAQ,YAAYC;AACpB,YAAQ,eAAeC;AAAA;AAAA;;;AClCvB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,OAAO;AAEX,QAAMC,YAAW,MAAM,KAAK,orEAAs2F;AACl4F,QAAM,uBAAuBA,UAAS,OAAO,CAAC,GAAG,GAAG,MAAM;AACxD,QAAE,CAAC,IAAI;AACP,aAAO;AAAA,IACT,GAAG,CAAC,CAAC;AACL,QAAM,uBAAuBA,UAAS,OAAO,CAAC,GAAG,GAAG,MAAM;AACxD,QAAE,EAAE,YAAY,CAAC,CAAC,IAAI;AACtB,aAAO;AAAA,IACT,GAAG,CAAC,CAAC;AACL,aAASC,QAAO,MAAM;AACpB,aAAO,KAAK,OAAO,CAAC,GAAG,MAAM;AAC3B,aAAK,qBAAqB,CAAC;AAC3B,eAAO;AAAA,MACT,GAAG,EAAE;AAAA,IACP;AACA,aAASC,QAAOC,MAAK;AACnB,YAAM,OAAO,CAAC;AACd,iBAAW,QAAQA,MAAK;AACtB,cAAM,MAAM,qBAAqB,KAAK,YAAY,CAAC,CAAC;AACpD,YAAI,QAAQ,QAAW;AACrB,gBAAM,IAAI,MAAM,+BAAgC,IAAK,EAAE;AAAA,QACzD;AACA,aAAK,KAAK,GAAG;AAAA,MACf;AACA,aAAO,IAAI,WAAW,IAAI;AAAA,IAC5B;AACA,QAAM,eAAe,KAAK,KAAK;AAAA,MAC7B,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAAF;AAAA,MACA,QAAAC;AAAA,IACF,CAAC;AAED,YAAQ,eAAe;AAAA;AAAA;;;ACvCvB,IAAAE,kBAAA;AAAA,2FAAAC,SAAA;AAAA;AAEA,QAAIC,YAAWC;AACf,QAAIC,OAAM;AAAV,QAAeC,QAAO;AAAtB,QAA2BC,UAAS,CAACD;AAArC,QAA2CE,OAAM,KAAK,IAAI,GAAG,EAAE;AAC/D,aAASJ,QAAO,KAAK,KAAK,QAAQ;AAChC,YAAM,OAAO,CAAC;AACd,eAAS,UAAU;AACnB,UAAI,YAAY;AAChB,aAAO,OAAOI,MAAK;AACjB,YAAI,QAAQ,IAAI,MAAM,MAAMH;AAC5B,eAAO;AAAA,MACT;AACA,aAAO,MAAME,SAAQ;AACnB,YAAI,QAAQ,IAAI,MAAM,MAAMF;AAC5B,iBAAS;AAAA,MACX;AACA,UAAI,MAAM,IAAI,MAAM;AACpB,MAAAD,QAAO,QAAQ,SAAS,YAAY;AACpC,aAAO;AAAA,IACT;AACA,QAAIK,UAASC;AACb,QAAIC,SAAQ;AAAZ,QAAiBC,UAAS;AAC1B,aAASF,MAAK,KAAK,QAAQ;AACzB,UAAI,MAAM,GAAG,SAAS,UAAU,GAAG,QAAQ,GAAG,UAAU,QAAQ,GAAG,IAAI,IAAI;AAC3E,SAAG;AACD,YAAI,WAAW,GAAG;AAChB,UAAAA,MAAK,QAAQ;AACb,gBAAM,IAAI,WAAW,yBAAyB;AAAA,QAChD;AACA,YAAI,IAAI,SAAS;AACjB,eAAO,QAAQ,MAAM,IAAIE,YAAW,SAAS,IAAIA,WAAU,KAAK,IAAI,GAAG,KAAK;AAC5E,iBAAS;AAAA,MACX,SAAS,KAAKD;AACd,MAAAD,MAAK,QAAQ,UAAU;AACvB,aAAO;AAAA,IACT;AACA,QAAIG,MAAK,KAAK,IAAI,GAAG,CAAC;AACtB,QAAIC,MAAK,KAAK,IAAI,GAAG,EAAE;AACvB,QAAIC,MAAK,KAAK,IAAI,GAAG,EAAE;AACvB,QAAIC,MAAK,KAAK,IAAI,GAAG,EAAE;AACvB,QAAIC,MAAK,KAAK,IAAI,GAAG,EAAE;AACvB,QAAIC,MAAK,KAAK,IAAI,GAAG,EAAE;AACvB,QAAIC,MAAK,KAAK,IAAI,GAAG,EAAE;AACvB,QAAIC,MAAK,KAAK,IAAI,GAAG,EAAE;AACvB,QAAIC,MAAK,KAAK,IAAI,GAAG,EAAE;AACvB,QAAIC,UAAS,SAAU,OAAO;AAC5B,aAAO,QAAQT,MAAK,IAAI,QAAQC,MAAK,IAAI,QAAQC,MAAK,IAAI,QAAQC,MAAK,IAAI,QAAQC,MAAK,IAAI,QAAQC,MAAK,IAAI,QAAQC,MAAK,IAAI,QAAQC,MAAK,IAAI,QAAQC,MAAK,IAAI;AAAA,IAClK;AACA,QAAIE,UAAS;AAAA,MACX,QAAQpB;AAAA,MACR,QAAQM;AAAA,MACR,gBAAgBa;AAAA,IAClB;AACA,QAAIE,gBAAeD;AACnB,QAAI,WAAWC;AAEf,IAAAtB,QAAO,UAAU;AAAA;AAAA;;;ACxDjB,IAAAuB,kBAAA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,WAAW;AAEf,QAAMC,UAAS,CAAC,MAAM,SAAS,MAAM;AACnC,YAAM,OAAO,SAAS,OAAO,MAAM,MAAM;AACzC,aAAO;AAAA,QACL;AAAA,QACA,SAAS,OAAO;AAAA,MAClB;AAAA,IACF;AACA,QAAMC,YAAW,CAAC,KAAK,QAAQ,SAAS,MAAM;AAC5C,eAAS,OAAO,KAAK,QAAQ,MAAM;AACnC,aAAO;AAAA,IACT;AACA,QAAMC,kBAAiB,SAAO;AAC5B,aAAO,SAAS,eAAe,GAAG;AAAA,IACpC;AAEA,YAAQ,SAASF;AACjB,YAAQ,WAAWC;AACnB,YAAQ,iBAAiBC;AAAA;AAAA;;;ACvBzB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,QAAQ;AACZ,QAAIC,UAAS;AAEb,QAAMC,UAAS,CAAC,MAAM,WAAW;AAC/B,YAAM,OAAO,OAAO;AACpB,YAAM,aAAaD,QAAO,eAAe,IAAI;AAC7C,YAAM,eAAe,aAAaA,QAAO,eAAe,IAAI;AAC5D,YAAME,SAAQ,IAAI,WAAW,eAAe,IAAI;AAChD,MAAAF,QAAO,SAAS,MAAME,QAAO,CAAC;AAC9B,MAAAF,QAAO,SAAS,MAAME,QAAO,UAAU;AACvC,MAAAA,OAAM,IAAI,QAAQ,YAAY;AAC9B,aAAO,IAAIC,QAAO,MAAM,MAAM,QAAQD,MAAK;AAAA,IAC7C;AACA,QAAME,UAAS,eAAa;AAC1B,YAAM,UAAU,MAAM,OAAO,SAAS;AACtC,YAAM,CAAC,MAAM,UAAU,IAAIJ,QAAO,OAAO,OAAO;AAChD,YAAM,CAAC,MAAM,YAAY,IAAIA,QAAO,OAAO,QAAQ,SAAS,UAAU,CAAC;AACvE,YAAM,SAAS,QAAQ,SAAS,aAAa,YAAY;AACzD,UAAI,OAAO,eAAe,MAAM;AAC9B,cAAM,IAAI,MAAM,kBAAkB;AAAA,MACpC;AACA,aAAO,IAAIG,QAAO,MAAM,MAAM,QAAQ,OAAO;AAAA,IAC/C;AACA,QAAME,UAAS,CAAC,GAAG,MAAM;AACvB,UAAI,MAAM,GAAG;AACX,eAAO;AAAA,MACT,OAAO;AACL,eAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,MAAM,OAAO,EAAE,OAAO,EAAE,KAAK;AAAA,MAChF;AAAA,IACF;AACA,QAAMF,UAAN,MAAa;AAAA,MACX,YAAY,MAAM,MAAM,QAAQD,QAAO;AACrC,aAAK,OAAO;AACZ,aAAK,OAAO;AACZ,aAAK,SAAS;AACd,aAAK,QAAQA;AAAA,MACf;AAAA,IACF;AAEA,YAAQ,SAASC;AACjB,YAAQ,SAASF;AACjB,YAAQ,SAASG;AACjB,YAAQ,SAASC;AAAA;AAAA;;;AC9CjB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,SAAS;AAEb,QAAMC,QAAO,CAAC,EAAC,MAAM,MAAM,QAAAC,QAAM,MAAM,IAAIC,QAAO,MAAM,MAAMD,OAAM;AACpE,QAAMC,UAAN,MAAa;AAAA,MACX,YAAY,MAAM,MAAMD,SAAQ;AAC9B,aAAK,OAAO;AACZ,aAAK,OAAO;AACZ,aAAK,SAASA;AAAA,MAChB;AAAA,MACA,OAAO,OAAO;AACZ,YAAI,iBAAiB,YAAY;AAC/B,gBAAM,SAAS,KAAK,OAAO,KAAK;AAChC,iBAAO,kBAAkB,aAAa,OAAO,OAAO,KAAK,MAAM,MAAM,IAAI,OAAO,KAAK,cAAY,OAAO,OAAO,KAAK,MAAM,QAAQ,CAAC;AAAA,QACrI,OAAO;AACL,gBAAM,MAAM,mCAAmC;AAAA,QACjD;AAAA,MACF;AAAA,IACF;AAEA,YAAQ,SAASC;AACjB,YAAQ,OAAOF;AAAA;AAAA;;;ACxBf;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAIG,UAAS,QAAQ,QAAQ;AAC7B,QAAI,SAAS;AACb,QAAI,QAAQ;AAEZ,aAAS,sBAAuB,GAAG;AAAE,aAAO,KAAK,OAAO,MAAM,YAAY,aAAa,IAAI,IAAI,EAAE,WAAW,EAAE;AAAA,IAAG;AAEjH,QAAI,kBAA+B,sCAAsBA,OAAM;AAE/D,QAAMC,UAAS,OAAO,KAAK;AAAA,MACzB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ,WAAS,MAAM,OAAO,gBAAgB,SAAS,EAAE,WAAW,QAAQ,EAAE,OAAO,KAAK,EAAE,OAAO,CAAC;AAAA,IACtG,CAAC;AACD,QAAMC,UAAS,OAAO,KAAK;AAAA,MACzB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ,WAAS,MAAM,OAAO,gBAAgB,SAAS,EAAE,WAAW,QAAQ,EAAE,OAAO,KAAK,EAAE,OAAO,CAAC;AAAA,IACtG,CAAC;AAED,YAAQ,SAASD;AACjB,YAAQ,SAASC;AAAA;AAAA;;;ACxBjB,IAAAC,oBAAA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,QAAQ;AACZ,QAAI,WAAW;AAEf,QAAM,OAAO;AACb,QAAM,OAAO;AACb,QAAMC,UAAS,MAAM;AACrB,QAAM,SAAS,WAAS,SAAS,OAAO,MAAMA,QAAO,KAAK,CAAC;AAC3D,QAAM,WAAW;AAAA,MACf;AAAA,MACA;AAAA,MACA,QAAAA;AAAA,MACA;AAAA,IACF;AAEA,YAAQ,WAAW;AAAA;AAAA;;;AClBnB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,QAAQ;AAEZ,QAAM,OAAO;AACb,QAAM,OAAO;AACb,QAAMC,UAAS,UAAQ,MAAM,OAAO,IAAI;AACxC,QAAMC,UAAS,UAAQ,MAAM,OAAO,IAAI;AAExC,YAAQ,OAAO;AACf,YAAQ,SAASA;AACjB,YAAQ,SAASD;AACjB,YAAQ,OAAO;AAAA;AAAA;;;ACdf;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAM,cAAc,IAAI,YAAY;AACpC,QAAM,cAAc,IAAI,YAAY;AACpC,QAAM,OAAO;AACb,QAAM,OAAO;AACb,QAAME,UAAS,UAAQ,YAAY,OAAO,KAAK,UAAU,IAAI,CAAC;AAC9D,QAAMC,UAAS,UAAQ,KAAK,MAAM,YAAY,OAAO,IAAI,CAAC;AAE1D,YAAQ,OAAO;AACf,YAAQ,SAASA;AACjB,YAAQ,SAASD;AACjB,YAAQ,OAAO;AAAA;AAAA;;;ACdf;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAIE,UAAS;AACb,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAI,QAAQ;AAEZ,QAAM,MAAN,MAAM,KAAI;AAAA,MACR,YAAYC,UAAS,MAAM,WAAWC,QAAO;AAC3C,aAAK,OAAO;AACZ,aAAK,UAAUD;AACf,aAAK,YAAY;AACjB,aAAK,QAAQC;AACb,aAAK,aAAaA,OAAM;AACxB,aAAK,aAAaA,OAAM;AACxB,aAAK,QAAQ;AACb,aAAK,aAAa,oBAAI,IAAI;AAC1B,eAAO,iBAAiB,MAAM;AAAA,UAC5B,YAAY;AAAA,UACZ,YAAY;AAAA,UACZ,MAAM;AAAA,UACN,SAAS;AAAA,UACT,WAAW;AAAA,UACX,OAAO;AAAA,UACP,YAAY;AAAA,UACZ,OAAO;AAAA,QACT,CAAC;AAAA,MACH;AAAA,MACA,OAAO;AACL,gBAAQ,KAAK,SAAS;AAAA,UACtB,KAAK,GAAG;AACJ,mBAAO;AAAA,UACT;AAAA,UACF,SAAS;AACL,kBAAM,EAAC,MAAM,UAAS,IAAI;AAC1B,gBAAI,SAAS,aAAa;AACxB,oBAAM,IAAI,MAAM,0CAA0C;AAAA,YAC5D;AACA,gBAAI,UAAU,SAAS,cAAc;AACnC,oBAAM,IAAI,MAAM,oDAAoD;AAAA,YACtE;AACA,mBAAO,KAAI,SAAS,SAAS;AAAA,UAC/B;AAAA,QACF;AAAA,MACF;AAAA,MACA,OAAO;AACL,gBAAQ,KAAK,SAAS;AAAA,UACtB,KAAK,GAAG;AACJ,kBAAM,EAAC,MAAM,QAAQ,SAAQ,IAAI,KAAK;AACtC,kBAAM,YAAY,OAAO,OAAO,MAAM,QAAQ;AAC9C,mBAAO,KAAI,SAAS,KAAK,MAAM,SAAS;AAAA,UAC1C;AAAA,UACF,KAAK,GAAG;AACJ,mBAAO;AAAA,UACT;AAAA,UACF,SAAS;AACL,kBAAM,MAAM,+BAAgC,KAAK,OAAQ,4CAA4C;AAAA,UACvG;AAAA,QACF;AAAA,MACF;AAAA,MACA,OAAO,OAAO;AACZ,eAAO,SAAS,KAAK,SAAS,MAAM,QAAQ,KAAK,YAAY,MAAM,WAAW,OAAO,OAAO,KAAK,WAAW,MAAM,SAAS;AAAA,MAC7H;AAAA,MACA,SAAS,MAAM;AACb,cAAM,EAAC,OAAAA,QAAO,SAAAD,UAAS,WAAU,IAAI;AACrC,gBAAQA,UAAS;AAAA,UACjB,KAAK;AACH,mBAAO,WAAWC,QAAO,YAAY,QAAQ,OAAO,UAAU,OAAO;AAAA,UACvE;AACE,mBAAO,WAAWA,QAAO,YAAY,QAAQ,OAAO,OAAO,OAAO;AAAA,QACpE;AAAA,MACF;AAAA,MACA,SAAS;AACP,eAAO;AAAA,UACL,MAAM,KAAK;AAAA,UACX,SAAS,KAAK;AAAA,UACd,MAAM,KAAK,UAAU;AAAA,QACvB;AAAA,MACF;AAAA,MACA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MACA,CAAC,OAAO,IAAI,4BAA4B,CAAC,IAAI;AAC3C,eAAO,SAAS,KAAK,SAAS,IAAI;AAAA,MACpC;AAAA,MACA,OAAO,MAAM,OAAO;AAClB,kBAAU,SAAS,kBAAkB;AACrC,eAAO,CAAC,EAAE,UAAU,MAAM,SAAS,KAAK,MAAM,UAAU;AAAA,MAC1D;AAAA,MACA,IAAI,sBAAsB;AACxB,cAAM,IAAI,MAAM,6BAA6B;AAAA,MAC/C;AAAA,MACA,IAAI,QAAQ;AACV,cAAM,IAAI,MAAM,qEAAqE;AAAA,MACvF;AAAA,MACA,IAAI,SAAS;AACX,cAAM,IAAI,MAAM,mEAAmE;AAAA,MACrF;AAAA,MACA,IAAI,gBAAgB;AAClB,cAAM,IAAI,MAAM,wCAAwC;AAAA,MAC1D;AAAA,MACA,IAAI,SAAS;AACX,cAAM,IAAI,MAAM,iCAAiC;AAAA,MACnD;AAAA,MACA,OAAO,MAAM,OAAO;AAClB,YAAI,iBAAiB,MAAK;AACxB,iBAAO;AAAA,QACT,WAAW,SAAS,QAAQ,MAAM,UAAU,OAAO;AACjD,gBAAM,EAAC,SAAAD,UAAS,MAAM,WAAW,OAAAC,OAAK,IAAI;AAC1C,iBAAO,IAAI,KAAID,UAAS,MAAM,WAAWC,UAAS,UAAUD,UAAS,MAAM,UAAU,KAAK,CAAC;AAAA,QAC7F,WAAW,SAAS,QAAQ,MAAM,SAAS,MAAM,MAAM;AACrD,gBAAM,EAAC,SAAAA,UAAS,WAAW,KAAI,IAAI;AACnC,gBAAM,WAAW,OAAO,OAAO,SAAS;AACxC,iBAAO,KAAI,OAAOA,UAAS,MAAM,QAAQ;AAAA,QAC3C,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA,OAAO,OAAOA,UAAS,MAAME,SAAQ;AACnC,YAAI,OAAO,SAAS,UAAU;AAC5B,gBAAM,IAAI,MAAM,uCAAuC;AAAA,QACzD;AACA,gBAAQF,UAAS;AAAA,UACjB,KAAK,GAAG;AACJ,gBAAI,SAAS,aAAa;AACxB,oBAAM,IAAI,MAAM,wCAAyC,WAAY,kBAAkB;AAAA,YACzF,OAAO;AACL,qBAAO,IAAI,KAAIA,UAAS,MAAME,SAAQA,QAAO,KAAK;AAAA,YACpD;AAAA,UACF;AAAA,UACF,KAAK,GAAG;AACJ,kBAAMD,SAAQ,UAAUD,UAAS,MAAME,QAAO,KAAK;AACnD,mBAAO,IAAI,KAAIF,UAAS,MAAME,SAAQD,MAAK;AAAA,UAC7C;AAAA,UACF,SAAS;AACL,kBAAM,IAAI,MAAM,iBAAiB;AAAA,UACnC;AAAA,QACF;AAAA,MACF;AAAA,MACA,OAAO,SAASC,SAAQ;AACtB,eAAO,KAAI,OAAO,GAAG,aAAaA,OAAM;AAAA,MAC1C;AAAA,MACA,OAAO,SAAS,MAAMA,SAAQ;AAC5B,eAAO,KAAI,OAAO,GAAG,MAAMA,OAAM;AAAA,MACnC;AAAA,MACA,OAAO,OAAOD,QAAO;AACnB,cAAM,CAAC,KAAK,SAAS,IAAI,KAAI,YAAYA,MAAK;AAC9C,YAAI,UAAU,QAAQ;AACpB,gBAAM,IAAI,MAAM,kBAAkB;AAAA,QACpC;AACA,eAAO;AAAA,MACT;AAAA,MACA,OAAO,YAAY,SAAS;AAC1B,cAAM,QAAQ,KAAI,aAAa,OAAO;AACtC,cAAM,aAAa,MAAM,OAAO,MAAM;AACtC,cAAM,iBAAiB,MAAM,OAAO,QAAQ,SAAS,YAAY,aAAa,MAAM,aAAa,CAAC;AAClG,YAAI,eAAe,eAAe,MAAM,eAAe;AACrD,gBAAM,IAAI,MAAM,kBAAkB;AAAA,QACpC;AACA,cAAM,cAAc,eAAe,SAAS,MAAM,gBAAgB,MAAM,UAAU;AAClF,cAAM,WAAW,IAAI,OAAO,OAAO,MAAM,eAAe,MAAM,YAAY,aAAa,cAAc;AACrG,cAAM,MAAM,MAAM,YAAY,IAAI,KAAI,SAAS,QAAQ,IAAI,KAAI,SAAS,MAAM,OAAO,QAAQ;AAC7F,eAAO;AAAA,UACL;AAAA,UACA,QAAQ,SAAS,MAAM,IAAI;AAAA,QAC7B;AAAA,MACF;AAAA,MACA,OAAO,aAAa,cAAc;AAChC,YAAI,SAAS;AACb,cAAM,OAAO,MAAM;AACjB,gBAAM,CAAC,GAAGE,OAAM,IAAIJ,QAAO,OAAO,aAAa,SAAS,MAAM,CAAC;AAC/D,oBAAUI;AACV,iBAAO;AAAA,QACT;AACA,YAAIH,WAAU,KAAK;AACnB,YAAI,QAAQ;AACZ,YAAIA,aAAY,IAAI;AAClB,UAAAA,WAAU;AACV,mBAAS;AAAA,QACX,WAAWA,aAAY,GAAG;AACxB,kBAAQ,KAAK;AAAA,QACf;AACA,YAAIA,aAAY,KAAKA,aAAY,GAAG;AAClC,gBAAM,IAAI,WAAW,uBAAwBA,QAAQ,EAAE;AAAA,QACzD;AACA,cAAM,aAAa;AACnB,cAAM,gBAAgB,KAAK;AAC3B,cAAM,aAAa,KAAK;AACxB,cAAM,OAAO,SAAS;AACtB,cAAM,gBAAgB,OAAO;AAC7B,eAAO;AAAA,UACL,SAAAA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,MACA,OAAO,MAAM,QAAQ,MAAM;AACzB,cAAM,CAAC,QAAQC,MAAK,IAAI,gBAAgB,QAAQ,IAAI;AACpD,cAAM,MAAM,KAAI,OAAOA,MAAK;AAC5B,YAAI,WAAW,IAAI,QAAQ,MAAM;AACjC,eAAO;AAAA,MACT;AAAA,IACF;AACA,QAAM,kBAAkB,CAAC,QAAQ,SAAS;AACxC,cAAQ,OAAO,CAAC,GAAG;AAAA,QACnB,KAAK,KAAK;AACN,gBAAMG,WAAU,QAAQ,OAAO;AAC/B,iBAAO;AAAA,YACL,OAAO,UAAU;AAAA,YACjBA,SAAQ,OAAO,GAAI,OAAO,UAAU,MAAO,GAAI,MAAO,EAAE;AAAA,UAC1D;AAAA,QACF;AAAA,QACF,KAAK,OAAO,UAAU,QAAQ;AAC1B,gBAAMA,WAAU,QAAQ,OAAO;AAC/B,iBAAO;AAAA,YACL,OAAO,UAAU;AAAA,YACjBA,SAAQ,OAAO,MAAM;AAAA,UACvB;AAAA,QACF;AAAA,QACF,KAAK,OAAO,OAAO,QAAQ;AACvB,gBAAMA,WAAU,QAAQ,OAAO;AAC/B,iBAAO;AAAA,YACL,OAAO,OAAO;AAAA,YACdA,SAAQ,OAAO,MAAM;AAAA,UACvB;AAAA,QACF;AAAA,QACF,SAAS;AACL,cAAI,QAAQ,MAAM;AAChB,kBAAM,MAAM,iFAAiF;AAAA,UAC/F;AACA,iBAAO;AAAA,YACL,OAAO,CAAC;AAAA,YACR,KAAK,OAAO,MAAM;AAAA,UACpB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,QAAM,aAAa,CAACH,QAAO,OAAO,SAAS;AACzC,YAAM,EAAC,OAAM,IAAI;AACjB,UAAI,WAAW,OAAO,UAAU,QAAQ;AACtC,cAAM,MAAM,8BAA+B,KAAK,IAAK,WAAW;AAAA,MAClE;AACA,YAAM,MAAM,MAAM,IAAI,MAAM;AAC5B,UAAI,OAAO,MAAM;AACf,cAAMI,OAAM,KAAK,OAAOJ,MAAK,EAAE,MAAM,CAAC;AACtC,cAAM,IAAI,QAAQI,IAAG;AACrB,eAAOA;AAAA,MACT,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF;AACA,QAAM,aAAa,CAACJ,QAAO,OAAO,SAAS;AACzC,YAAM,EAAC,OAAM,IAAI;AACjB,YAAM,MAAM,MAAM,IAAI,MAAM;AAC5B,UAAI,OAAO,MAAM;AACf,cAAMI,OAAM,KAAK,OAAOJ,MAAK;AAC7B,cAAM,IAAI,QAAQI,IAAG;AACrB,eAAOA;AAAA,MACT,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF;AACA,QAAM,cAAc;AACpB,QAAM,eAAe;AACrB,QAAM,YAAY,CAACL,UAAS,MAAM,cAAc;AAC9C,YAAM,aAAaD,QAAO,eAAeC,QAAO;AAChD,YAAM,aAAa,aAAaD,QAAO,eAAe,IAAI;AAC1D,YAAME,SAAQ,IAAI,WAAW,aAAa,UAAU,UAAU;AAC9D,MAAAF,QAAO,SAASC,UAASC,QAAO,CAAC;AACjC,MAAAF,QAAO,SAAS,MAAME,QAAO,UAAU;AACvC,MAAAA,OAAM,IAAI,WAAW,UAAU;AAC/B,aAAOA;AAAA,IACT;AACA,QAAM,YAAY,OAAO,IAAI,kBAAkB;AAC/C,QAAM,WAAW;AAAA,MACf,UAAU;AAAA,MACV,cAAc;AAAA,MACd,YAAY;AAAA,IACd;AACA,QAAM,SAAS;AAAA,MACb,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,cAAc;AAAA,IAChB;AACA,QAAM,UAAU;AAChB,QAAM,YAAY,CAAC,OAAO,YAAY;AACpC,UAAI,MAAM,KAAK,OAAO,GAAG;AACvB,gBAAQ,KAAK,OAAO;AAAA,MACtB,OAAO;AACL,cAAM,IAAI,MAAM,OAAO;AAAA,MACzB;AAAA,IACF;AACA,QAAM,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB3B,YAAQ,MAAM;AAAA;AAAA;;;AC1Td,IAAAK,eAAA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,MAAM;AACV,QAAIC,UAAS;AACb,QAAI,QAAQ;AACZ,QAAI,SAAS;AACb,QAAI,SAAS;AAIb,YAAQ,MAAM,IAAI;AAClB,YAAQ,SAASA;AACjB,YAAQ,QAAQ;AAChB,YAAQ,SAAS;AACjB,YAAQ,SAAS;AAAA;AAAA;;;AChBjB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,WAAW;AACf,QAAI,QAAQ;AACZ,QAAI,QAAQ;AACZ,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAIC,UAAS;AACb,QAAI,eAAe;AACnB,QAAI,OAAO;AACX,QAAI,aAAa;AACjB,QAAI,MAAM;AACV,QAAI,OAAO;AACX;AACA,QAAI,MAAM;AACV,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAIC,UAAS;AACb,QAAI,QAAQ;AAEZ,QAAM,QAAQ;AAAA,MACZ,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAGD;AAAA,MACH,GAAG;AAAA,IACL;AACA,QAAM,SAAS;AAAA,MACb,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AACA,QAAM,SAAS;AAAA,MACb;AAAA,MACA;AAAA,IACF;AAEA,YAAQ,MAAM,IAAI;AAClB,YAAQ,SAAS;AACjB,YAAQ,SAAS;AACjB,YAAQ,SAASC;AACjB,YAAQ,QAAQ;AAChB,YAAQ,QAAQ;AAChB,YAAQ,SAAS;AACjB,YAAQ,SAAS;AAAA;AAAA;;;ACrDjB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,aAAS,aAAa,KAAK;AACzB,UAAI,WAAW,UAAU,MAAM;AAC7B,eAAO,IAAI,WAAW,IAAI,QAAQ,IAAI,YAAY,IAAI,UAAU;AAAA,MAClE;AACA,aAAO;AAAA,IACT;AAEA,YAAQ,eAAe;AAAA;AAAA;;;ACXvB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,eAAe;AAEnB,aAAS,MAAM,OAAO,GAAG;AACvB,UAAI,WAAW,UAAU,QAAQ,WAAW,OAAO,SAAS,MAAM;AAChE,eAAO,aAAa,aAAa,WAAW,OAAO,MAAM,IAAI,CAAC;AAAA,MAChE;AACA,aAAO,IAAI,WAAW,IAAI;AAAA,IAC5B;AACA,aAAS,YAAY,OAAO,GAAG;AAC7B,UAAI,WAAW,UAAU,QAAQ,WAAW,OAAO,eAAe,MAAM;AACtE,eAAO,aAAa,aAAa,WAAW,OAAO,YAAY,IAAI,CAAC;AAAA,MACtE;AACA,aAAO,IAAI,WAAW,IAAI;AAAA,IAC5B;AAEA,YAAQ,QAAQ;AAChB,YAAQ,cAAc;AAAA;AAAA;;;ACpBtB;AAAA,kEAAAC,SAAA;AAAA;AAEA,QAAI,SAAS;AACb,QAAI,QAAQ;AAEZ,aAAS,YAAY,MAAM,QAAQC,SAAQC,SAAQ;AACjD,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA,SAAS;AAAA,UACP;AAAA,UACA;AAAA,UACA,QAAAD;AAAA,QACF;AAAA,QACA,SAAS,EAAE,QAAAC,QAAO;AAAA,MACpB;AAAA,IACF;AACA,QAAM,SAAS,YAAY,QAAQ,KAAK,SAAO;AAC7C,YAAMC,WAAU,IAAI,YAAY,MAAM;AACtC,aAAO,MAAMA,SAAQ,OAAO,GAAG;AAAA,IACjC,GAAG,CAAAC,SAAO;AACR,YAAM,UAAU,IAAI,YAAY;AAChC,aAAO,QAAQ,OAAOA,KAAI,UAAU,CAAC,CAAC;AAAA,IACxC,CAAC;AACD,QAAM,QAAQ,YAAY,SAAS,KAAK,SAAO;AAC7C,UAAIC,UAAS;AACb,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,QAAAA,WAAU,OAAO,aAAa,IAAI,CAAC,CAAC;AAAA,MACtC;AACA,aAAOA;AAAA,IACT,GAAG,CAAAD,SAAO;AACR,MAAAA,OAAMA,KAAI,UAAU,CAAC;AACrB,YAAM,MAAM,MAAM,YAAYA,KAAI,MAAM;AACxC,eAAS,IAAI,GAAG,IAAIA,KAAI,QAAQ,KAAK;AACnC,YAAI,CAAC,IAAIA,KAAI,WAAW,CAAC;AAAA,MAC3B;AACA,aAAO;AAAA,IACT,CAAC;AACD,QAAM,QAAQ;AAAA,MACZ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,KAAK,OAAO,MAAM;AAAA,MAClB,QAAQ;AAAA,MACR;AAAA,MACA,QAAQ;AAAA,MACR,GAAG,OAAO;AAAA,IACZ;AAEA,IAAAJ,QAAO,UAAU;AAAA;AAAA;;;AChDjB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,QAAQ;AAEZ,aAAS,SAAS,OAAO,WAAW,QAAQ;AAC1C,YAAM,OAAO,MAAM,QAAQ;AAC3B,UAAI,CAAC,MAAM;AACT,cAAM,IAAI,MAAM,yBAA0B,QAAS,GAAG;AAAA,MACxD;AACA,WAAK,aAAa,UAAU,aAAa,YAAY,WAAW,UAAU,QAAQ,WAAW,OAAO,QAAQ,MAAM;AAChH,eAAO,WAAW,OAAO,KAAK,MAAM,QAAQ,MAAM,YAAY,MAAM,UAAU,EAAE,SAAS,MAAM;AAAA,MACjG;AACA,aAAO,KAAK,QAAQ,OAAO,KAAK,EAAE,UAAU,CAAC;AAAA,IAC/C;AAEA,YAAQ,WAAW;AAAA;AAAA;;;ACjBnB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,QAAQ;AACZ,QAAI,eAAe;AAEnB,aAAS,WAAW,QAAQ,WAAW,QAAQ;AAC7C,YAAM,OAAO,MAAM,QAAQ;AAC3B,UAAI,CAAC,MAAM;AACT,cAAM,IAAI,MAAM,yBAA0B,QAAS,GAAG;AAAA,MACxD;AACA,WAAK,aAAa,UAAU,aAAa,YAAY,WAAW,UAAU,QAAQ,WAAW,OAAO,QAAQ,MAAM;AAChH,eAAO,aAAa,aAAa,WAAW,OAAO,KAAK,QAAQ,OAAO,CAAC;AAAA,MAC1E;AACA,aAAO,KAAK,QAAQ,OAAO,GAAI,KAAK,MAAO,GAAI,MAAO,EAAE;AAAA,IAC1D;AAEA,YAAQ,aAAa;AAAA;AAAA;;;AClBrB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAE5D,QAAI,QAAQ;AACZ,QAAI,eAAe;AAEnB,aAASM,QAAO,QAAQC,SAAQ;AAC9B,UAAI,CAACA,SAAQ;AACX,QAAAA,UAAS,OAAO,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,QAAQ,CAAC;AAAA,MAC5D;AACA,YAAM,SAAS,MAAM,YAAYA,OAAM;AACvC,UAAI,SAAS;AACb,iBAAW,OAAO,QAAQ;AACxB,eAAO,IAAI,KAAK,MAAM;AACtB,kBAAU,IAAI;AAAA,MAChB;AACA,aAAO,aAAa,aAAa,MAAM;AAAA,IACzC;AAEA,YAAQ,SAASD;AAAA;AAAA;;;ACpBjB,IAAAE,eAAA;AAAA,yDAAAC,SAAA;AAAA;AAKA,QAAM,YAAY;AAClB,QAAMC,UAAS;AACf,QAAM,EAAE,MAAM,IAAI;AAClB,QAAM,EAAE,UAAU,mBAAmB,IAAI;AACzC,QAAM,EAAE,YAAY,qBAAqB,IAAI;AAC7C,QAAM,EAAE,QAAQ,iBAAiB,IAAI;AAErC,QAAM;AAAA;AAAA,MAAqD,CAAC;AAAA;AAG5D,eAAW,OAAO,OAAO;AACvB,YAAM;AAAA;AAAA,QAA+B;AAAA;AACrC,YAAM,MAAM,IAAI,CAAC,IAAI;AAAA,IACvB;AACA,WAAO,OAAO,KAAK;AAQnB,aAAS,YAAaC,OAAM;AAC1B,UAAI,EAAEA,iBAAgB,aAAa;AACjC,cAAM,IAAI,MAAM,6BAA6B;AAAA,MAC/C;AAEA,aAAO,mBAAmBA,OAAM,QAAQ;AAAA,IAC1C;AAQA,aAAS,cAAeA,OAAM;AAC5B,aAAO,qBAAqBA,OAAM,QAAQ;AAAA,IAC5C;AAQA,aAAS,YAAaA,OAAM;AAC1B,UAAI,EAAEA,iBAAgB,aAAa;AACjC,cAAM,IAAI,MAAM,6BAA6B;AAAA,MAC/C;AAEA,aAAO,mBAAmB,UAAU,OAAO,aAAaA,KAAI,CAAC,EAAE,MAAM,CAAC;AAAA,IACxE;AAQA,aAAS,cAAeA,OAAM;AAC5B,YAAM,UAAUA,iBAAgB,aAC5B,mBAAmBA,KAAI,IACvBA;AAEJ,aAAO,UAAU,OAAO,MAAM,OAAO;AAAA,IACvC;AAQA,aAASC,QAAQ,OAAO;AACtB,UAAI,EAAE,iBAAiB,aAAa;AAClC,cAAM,IAAI,MAAM,gCAAgC;AAAA,MAClD;AAEA,UAAI,MAAM,SAAS,GAAG;AACpB,cAAM,IAAI,MAAM,yCAAyC;AAAA,MAC3D;AAEA,YAAM;AAAA;AAAA,QAA+BF,QAAO,OAAO,KAAK;AAAA;AACxD,UAAI,CAAC,YAAY,IAAI,GAAG;AACtB,cAAM,IAAI,MAAM,sCAAsC,KAAK,SAAS,EAAE,CAAC,EAAE;AAAA,MAC3E;AACA,cAAQ,MAAM,MAAMA,QAAO,OAAO,KAAK;AAEvC,YAAM,MAAMA,QAAO,OAAO,KAAK;AAC/B,UAAI,MAAM,GAAG;AACX,cAAM,IAAI,MAAM,6BAA6B,GAAG,EAAE;AAAA,MACpD;AACA,cAAQ,MAAM,MAAMA,QAAO,OAAO,KAAK;AAEvC,UAAI,MAAM,WAAW,KAAK;AACxB,cAAM,IAAI,MAAM,oCAAoC,mBAAmB,OAAO,QAAQ,CAAC,EAAE;AAAA,MAC3F;AAEA,aAAO;AAAA,QACL;AAAA,QACA,MAAM,MAAM,IAAI;AAAA,QAChB,QAAQ;AAAA,QACR,QAAQ;AAAA,MACV;AAAA,IACF;AAYA,aAASG,QAAQ,QAAQ,MAAMC,SAAQ;AACrC,UAAI,CAAC,UAAU,SAAS,QAAW;AACjC,cAAM,IAAI,MAAM,2DAA2D;AAAA,MAC7E;AAGA,YAAM,SAAS,WAAW,IAAI;AAE9B,UAAI,EAAE,kBAAkB,aAAa;AACnC,cAAM,IAAI,MAAM,+BAA+B;AAAA,MACjD;AAEA,UAAIA,WAAU,MAAM;AAClB,QAAAA,UAAS,OAAO;AAAA,MAClB;AAEA,UAAIA,WAAU,OAAO,WAAWA,SAAQ;AACtC,cAAM,IAAI,MAAM,oDAAoD;AAAA,MACtE;AAEA,YAAMH,QAAOD,QAAO,OAAO,MAAM;AACjC,YAAM,MAAMA,QAAO,OAAOI,OAAM;AAChC,aAAO,iBAAiB,CAACH,OAAM,KAAK,MAAM,GAAGA,MAAK,SAAS,IAAI,SAAS,OAAO,MAAM;AAAA,IACvF;AASA,aAAS,WAAY,MAAM;AACzB,UAAI,OAAO;AAEX,UAAI,OAAO,SAAS,UAAU;AAC5B,YAAI,MAAM,IAAI,MAAM,QAAW;AAC7B,gBAAM,IAAI,MAAM,qCAAqC,IAAI,EAAE;AAAA,QAC7D;AACA,eAAO,MAAM,IAAI;AAAA,MACnB;AAEA,UAAI,OAAO,SAAS,UAAU;AAC5B,cAAM,IAAI,MAAM,+CAA+C,IAAI,EAAE;AAAA,MACvE;AAGA,UAAI,MAAM,IAAI,MAAM,UAAa,CAAC,UAAU,IAAI,GAAG;AACjD,cAAM,IAAI,MAAM,+BAA+B,IAAI,EAAE;AAAA,MACvD;AAEA,aAAO;AAAA,IACT;AAQA,aAAS,UAAW,MAAM;AACxB,aAAO,OAAO,KAAK,OAAO;AAAA,IAC5B;AAQA,aAAS,YAAa,MAAM;AAC1B,UAAI,UAAU,IAAI,GAAG;AACnB,eAAO;AAAA,MACT;AAEA,UAAI,MAAM,IAAI,GAAG;AACf,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AASA,aAASI,UAAU,WAAW;AAC5B,MAAAH,QAAO,SAAS;AAAA,IAClB;AASA,aAAS,OAAQ,WAAW;AAC1B,MAAAG,UAAS,SAAS;AAElB,aAAO,UAAU,SAAS,GAAG,CAAC;AAAA,IAChC;AAEA,IAAAN,QAAO,UAAU;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAAG;AAAA,MACA,QAAAC;AAAA,MACA;AAAA,MACA;AAAA,MACA,UAAAE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;AClPA;;;;;;;;;;;;;;ACGA,IAAAC,iBAAqB;AACrB,oBAAwB;;;ACJxB,oBAA6B;;;ACKtB,IAAM,WAAW;AACxB,IAAM,eAAe,CAAC;AACtB,IAAM,eAAe,CAAC;AAEtB,SAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,eAAa,CAAC,IAAI,SAAS,KAAK,IAAI,EAAG,IAAI,SAAS,IAAI,EAAG;AAC3D,MAAI,IAAI,IAAI;AACV,QAAI,IAAI,IAAI;AACV,mBAAa,KAAO,CAAC,IAAI;AAAA,IAC3B,OAAO;AACL,mBAAa,KAAO,KAAK,CAAC,IAAI;AAAA,IAChC;AAAA,EACF;AACF;AAEO,IAAM,UAAU,UAAQ;AAC7B,QAAMC,UAAS,KAAK;AACpB,MAAI,SAAS;AACb,MAAI,IAAI;AACR,SAAO,IAAIA,SAAQ;AACjB,cAAU,aAAa,KAAK,GAAG,CAAC;AAAA,EAClC;AACA,SAAO;AACT;AAcO,IAAM,SAAS,CAAC,QAAQ,OAAO,MAAM;AAC1C,QAAMC,UAAS,OAAO,UAAU;AAChC,MAAI,CAAC,MAAM;AACT,QAAIC,KAAID;AACR,WAAOC;AAAK,cAAQ,OAAOA,EAAC,EAAE;AAAA,EAChC;AACA,QAAM,IAAI,IAAI,WAAW,IAAI;AAC7B,MAAI,SAAS;AACb,MAAI,IAAID;AACR,SAAO,KAAK;AACV,cAAU,OAAO,CAAC,EAAE;AACpB,MAAE,IAAI,OAAO,CAAC,GAAG,MAAM;AAAA,EACzB;AAEA,SAAO;AACT;;;ACvDA,IAAM,UAAU,IAAI,YAAY;AACzB,IAAM,WAAW,CAAC,MAAM,QAAQ;AACrC,MAAI,KAAK,aAAa,MAAM;AAC1B,QAAI,CAAC;AAAK,aAAO,QAAQ,OAAO,IAAI;AACpC,UAAM,MAAM,IAAI,YAAY,GAAG;AAC/B,WAAO,IAAI,OAAO,IAAI;AAAA,EACxB;AACA,SAAO,OAAO,KAAK,IAAI,EAAE,SAAS,OAAO,MAAM;AACjD;AAEO,IAAM,WAAW,CAAAE,SAAO,IAAI,WAAW,OAAO,KAAKA,MAAK,MAAM,CAAC;;;ACZ/D,SAAS,WAAY,OAAO;AAEjC,QAAM,OAAO,QAAQ,IAAI,IAAI;AAG7B,UAAQ,KAAK,IAAI,OAAO,SAAS,CAAC,CAAC;AACnC,SAAO,KAAK,MAAM,KAAK,MAAM,KAAK,CAAC,IAAI,IAAI;AAC7C;AAEO,SAAS,QAAS,OAAO;AAC9B,MAAI,YAAY,OAAO,KAAK;AAAG,WAAO;AACtC,MAAI,MAAM,QAAQ,KAAK;AAAG,WAAO;AACjC,MAAI,iBAAiB;AAAQ,WAAO;AACpC,MAAI,iBAAiB;AAAS,WAAO;AACrC,MAAI,iBAAiB;AAAK,WAAO;AACjC,MAAI,iBAAiB;AAAK,WAAO;AACjC,MAAI,iBAAiB;AAAQ,WAAO;AACpC,MAAI,iBAAiB;AAAa,WAAO;AACzC,SAAO,OAAO;AAChB;;;ACVA,SAAS,OAAQ,MAAM,QAAQ,QAAQ;AACrC,QAAM,UAAU,CAAC;AACjB,MAAI,SAAS;AAEb,SAAO,QAAQ,SAAS,IAAI;AAC5B,WAAS,OAAO,OAAO;AACvB,SAAO,QAAQ,OAAO;AAEtB,MAAI,YAAY,OAAO,MAAM,GAAG;AAC9B,WAAO,IAAI,QAAQ,MAAM;AACzB,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAEA,OAAO,QAAQ;AACf,OAAO,2BAA2B;AAElC,OAAO,UAAU,SAAU,SAAS,MAAM;AACxC,MAAI,QAAQ,MAAM;AAAE;AAAA,EAAO;AAE3B,UAAQ,QAAQ,IAAI,GAAG;AAAA,IACrB,KAAK;AAAU,aAAO,KAAK,SAAS,IAAI;AAAG;AAAA,IAC3C,KAAK;AAAO,aAAO,QAAQ,SAAS,IAAI;AAAG;AAAA,IAC3C,KAAK;AAAS,aAAO,KAAK,SAAS,IAAI;AAAG;AAAA,IAC1C,KAAK;AAAO,aAAO,QAAQ,SAAS,IAAI;AAAG;AAAA,IAC3C,KAAK;AAAU,aAAO,OAAO,SAAS,IAAI;AAAG;AAAA,IAC7C,KAAK;AAAU,aAAO,OAAO,SAAS,IAAI;AAAG;AAAA,IAC7C,KAAK;AAAW,aAAO,OAAO,SAAS,IAAI;AAAG;AAAA,IAC9C,KAAK;AAAmB,aAAO,OAAO,SAAS,IAAI,WAAW,KAAK,QAAQ,KAAK,YAAY,KAAK,UAAU,CAAC;AAAG;AAAA,IAC/G,KAAK;AAAe,aAAO,OAAO,SAAS,IAAI,WAAW,IAAI,CAAC;AAAG;AAAA,EACpE;AACF;AAEA,IAAM,QAAQ,IAAI,WAAW,CAAC,GAAI,CAAC;AACnC,IAAM,QAAQ,IAAI,WAAW,CAAC,GAAI,CAAC;AACnC,IAAM,QAAQ,IAAI,WAAW,CAAC,GAAI,CAAC;AAEnC,OAAO,SAAS,SAAU,SAAS,MAAM;AACvC,UAAQ,KAAK,SAAS,KAAK,SAAS,GAAG,GAAG,IAAI;AAChD;AAEA,OAAO,SAAS,SAAU,SAAS,MAAM;AACvC,UAAQ,KAAK,SAAS,SAAS,IAAI,EAAE,aAAa,MAAM,IAAI,CAAC;AAC/D;AAEA,OAAO,SAAS,SAAU,SAAS,MAAM;AACvC,MAAI,OAAO,UAAU,IAAI;AAAG,WAAO,QAAQ,KAAK,SAAS,MAAM,OAAO,IAAI,IAAI,GAAG,CAAC;AAElF,QAAM,QAAQ;AACd,QAAM,KAAM,OAAO,SAAU;AAC7B,QAAM,KAAM,OAAO,SAAU;AAC7B,QAAM,MAAM,KAAK,QAAQ;AAEzB,UAAQ,KAAK,SAAS,MAAM,MAAM,GAAG,CAAC;AAEtC,MAAI,QAAQ,QAAQ,CAAC,OAAO,0BAA0B;AACpD,WAAO,2BAA2B;AAClC,YAAQ;AAAA,MACN,4DAA4D,OAAO;AAAA,MACnE,0EAA0E,MAAM;AAAA,IAClF;AACA,YAAQ,MAAM;AAAA,EAChB;AACF;AAEA,OAAO,OAAO,SAAU,SAAS,MAAM;AACrC,UAAQ,KAAK,KAAK;AAElB,MAAI,IAAI;AACR,MAAI;AAEJ,QAAM,OAAO,OAAO,KAAK,IAAI,EAAE,KAAK;AACpC,QAAM,KAAK,KAAK;AAEhB,SAAO,IAAI,IAAI,KAAK;AAClB,QAAI,KAAK,CAAC;AACV,QAAI,KAAK,CAAC,KAAK;AAAM;AACrB,WAAO,OAAO,SAAS,CAAC;AACxB,WAAO,QAAQ,SAAS,KAAK,CAAC,CAAC;AAAA,EACjC;AAEA,UAAQ,KAAK,KAAK;AACpB;AAEA,OAAO,UAAU,SAAU,SAAS,MAAM;AACxC,UAAQ,KAAK,KAAK;AAElB,QAAM,OAAO,MAAM,KAAK,KAAK,KAAK,CAAC,EAAE,KAAK;AAE1C,aAAW,OAAO,MAAM;AACtB,QAAI,KAAK,IAAI,GAAG,KAAK;AAAM;AAC3B,gBAAY,OAAO,GAAG,IAClB,OAAO,QAAQ,SAAS,GAAG,IAC3B,OAAO,OAAO,SAAS,OAAO,GAAG,CAAC;AACtC,WAAO,QAAQ,SAAS,KAAK,IAAI,GAAG,CAAC;AAAA,EACvC;AAEA,UAAQ,KAAK,KAAK;AACpB;AAEA,OAAO,OAAO,SAAU,SAAS,MAAM;AACrC,MAAI,IAAI;AACR,QAAM,IAAI,KAAK;AACf,UAAQ,KAAK,KAAK;AAElB,SAAO,IAAI,GAAG,KAAK;AACjB,QAAI,KAAK,CAAC,KAAK;AAAM;AACrB,WAAO,QAAQ,SAAS,KAAK,CAAC,CAAC;AAAA,EACjC;AAEA,UAAQ,KAAK,KAAK;AACpB;AAEA,OAAO,UAAU,SAAU,SAAS,MAAM;AACxC,UAAQ,KAAK,KAAK;AAElB,aAAW,QAAQ,MAAM;AACvB,QAAI,QAAQ;AAAM;AAClB,WAAO,QAAQ,SAAS,IAAI;AAAA,EAC9B;AAEA,UAAQ,KAAK,KAAK;AACpB;AAEA,IAAO,iBAAQ;;;ACrIf,IAAM,gBAAgB;AACtB,IAAM,eAAe;AACrB,IAAM,mBAAmB;AACzB,IAAM,aAAa;AACnB,IAAM,cAAc;AAWpB,SAAS,iBAAkB,QAAQ,OAAO,KAAK;AAC7C,MAAI,MAAM;AACV,MAAI,OAAO;AAEX,WAAS,IAAI,OAAO,IAAI,KAAK,KAAK;AAChC,UAAM,MAAM,OAAO,CAAC;AAEpB,QAAI,MAAM,MAAM,OAAO,IAAI;AACzB,YAAM,MAAM,MAAM,MAAM;AACxB;AAAA,IACF;AAEA,QAAI,MAAM,SAAS,QAAQ,IAAI;AAC7B;AAAA,IACF;AAEA,QAAI,MAAM,SAAS,QAAQ,IAAI;AAC7B,aAAO;AACP;AAAA,IACF;AAEA,QAAI,QAAQ,IAAI;AAEd;AAAA,IACF;AAEA,UAAM,IAAI,MAAM,0BAA0B,IAAI,SAAS,GAAG;AAAA,EAC5D;AAEA,SAAO,MAAM;AACf;AAWA,SAAS,OAAQ,MAAM,OAAO,KAAK,UAAU;AAC3C,MAAI,QAAQ,QAAQ,KAAK,WAAW,GAAG;AACrC,WAAO;AAAA,EACT;AAEA,MAAI,OAAO,UAAU,YAAY,YAAY,MAAM;AACjD,eAAW;AACX,YAAQ;AAAA,EACV;AAEA,MAAI,OAAO,QAAQ,YAAY,YAAY,MAAM;AAC/C,eAAW;AACX,UAAM;AAAA,EACR;AAEA,SAAO,WAAW;AAClB,SAAO,WAAW,YAAY;AAE9B,SAAO,OAAO,CAAE,YAAY,OAAO,IAAI,IACnC,SAAS,IAAI,IACb,IAAI,WAAW,KAAK,MAAM,OAAO,GAAG,CAAC;AAEzC,SAAO,QAAQ,OAAO,KAAK;AAE3B,SAAO,OAAO,KAAK;AACrB;AAEA,OAAO,QAAQ;AACf,OAAO,WAAW;AAClB,OAAO,OAAO;AACd,OAAO,WAAW;AAElB,OAAO,OAAO,WAAY;AACxB,UAAQ,OAAO,KAAK,OAAO,QAAQ,GAAG;AAAA,IACpC,KAAK;AACH,aAAO,OAAO,WAAW;AAAA,IAC3B,KAAK;AACH,aAAO,OAAO,KAAK;AAAA,IACrB,KAAK;AACH,aAAO,OAAO,QAAQ;AAAA,IACxB;AACE,aAAO,OAAO,OAAO;AAAA,EACzB;AACF;AAEA,OAAO,OAAO,SAAU,KAAK;AAC3B,MAAI,IAAI,OAAO;AACf,QAAM,IAAI,OAAO,KAAK;AACtB,QAAM,IAAI,OAAO;AAEjB,SAAO,IAAI,GAAG;AACZ,QAAI,EAAE,CAAC,MAAM;AAAK,aAAO;AACzB;AAAA,EACF;AAEA,QAAM,IAAI;AAAA,IACR,sCACA,OAAO,aAAa,GAAG,IAAI,UAC3B,IAAI,SAAS,EAAE,IAAI;AAAA,EACrB;AACF;AAEA,OAAO,aAAa,WAAY;AAC9B,SAAO;AAEP,QAAM,OAAO,CAAC;AAEd,SAAO,OAAO,KAAK,OAAO,QAAQ,MAAM,aAAa;AACnD,UAAM,SAAS,OAAO,OAAO;AAC7B,QAAI,MAAM,SAAS,MAAM;AACzB,QAAI,IAAI,SAAS,QAAQ;AAAG,YAAM,QAAQ,MAAM;AAChD,SAAK,GAAG,IAAI,OAAO,KAAK;AAAA,EAC1B;AAEA,SAAO;AAEP,SAAO;AACT;AAEA,OAAO,OAAO,WAAY;AACxB,SAAO;AAEP,QAAM,MAAM,CAAC;AAEb,SAAO,OAAO,KAAK,OAAO,QAAQ,MAAM,aAAa;AACnD,QAAI,KAAK,OAAO,KAAK,CAAC;AAAA,EACxB;AAEA,SAAO;AAEP,SAAO;AACT;AAEA,OAAO,UAAU,WAAY;AAC3B,QAAM,MAAM,OAAO,KAAK,WAAW;AACnC,QAAM,SAAS,iBAAiB,OAAO,MAAM,OAAO,WAAW,GAAG,GAAG;AAErE,SAAO,YAAY,MAAM,IAAI,OAAO;AAEpC,SAAO;AACT;AAEA,OAAO,SAAS,WAAY;AAC1B,MAAI,MAAM,OAAO,KAAK,YAAY;AAClC,QAAMC,UAAS,iBAAiB,OAAO,MAAM,OAAO,UAAU,GAAG;AACjE,QAAM,MAAM,EAAE,MAAMA;AAEpB,SAAO,WAAW;AAElB,SAAO,OAAO,WACV,SAAS,OAAO,KAAK,MAAM,KAAK,GAAG,CAAC,IACpC,OAAO,KAAK,MAAM,KAAK,GAAG;AAChC;AAEA,IAAO,iBAAQ;;;ACzKf,SAAS,WAAY,MAAM;AACzB,MAAIC,UAAS,IAAI;AAEjB,aAAW,SAAS,MAAM;AACxB,IAAAA,WAAU,eAAe,KAAK;AAAA,EAChC;AAEA,SAAOA;AACT;AAEA,SAAS,UAAW,KAAK;AACvB,MAAIA,UAAS,IAAI;AAEjB,aAAW,CAAC,KAAK,KAAK,KAAK,KAAK;AAC9B,UAAM,YAAY,SAAS,GAAG,EAAE;AAChC,IAAAA,WAAU,WAAW,SAAS,IAAI,IAAI;AACtC,IAAAA,WAAU,eAAe,KAAK;AAAA,EAChC;AAEA,SAAOA;AACT;AAEA,SAAS,aAAc,OAAO;AAC5B,MAAIA,UAAS,IAAI;AACjB,QAAM,OAAO,OAAO,KAAK,KAAK;AAE9B,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,UAAM,YAAY,SAAS,KAAK,CAAC,CAAC,EAAE;AACpC,IAAAA,WAAU,WAAW,SAAS,IAAI,IAAI;AACtC,IAAAA,WAAU,eAAe,MAAM,KAAK,CAAC,CAAC,CAAC;AAAA,EACzC;AAEA,SAAOA;AACT;AAEA,SAAS,aAAc,OAAO;AAC5B,QAAMA,UAAS,SAAS,KAAK,EAAE;AAC/B,SAAO,WAAWA,OAAM,IAAI,IAAIA;AAClC;AAEA,SAAS,kBAAmB,OAAO;AACjC,QAAMA,UAAS,MAAM,aAAa,MAAM;AACxC,SAAO,WAAWA,OAAM,IAAI,IAAIA;AAClC;AAEA,SAAS,eAAgB,OAAO;AAC9B,QAAMA,UAAS;AAEf,MAAI,SAAS;AAAM,WAAOA;AAE1B,QAAM,OAAO,QAAQ,KAAK;AAE1B,UAAQ,MAAM;AAAA,IACZ,KAAK;AAAmB,aAAO,kBAAkB,KAAK;AAAA,IACtD,KAAK;AAAU,aAAO,aAAa,KAAK;AAAA,IACxC,KAAK;AAAA,IAAS,KAAK;AAAO,aAAO,WAAW,KAAK;AAAA,IACjD,KAAK;AAAU,aAAO,IAAI,WAAW,KAAK,MAAM,KAAK,CAAC,IAAI;AAAA,IAC1D,KAAK;AAAU,aAAO,IAAI,MAAM,SAAS,EAAE,SAAS;AAAA,IACpD,KAAK;AAAU,aAAO,aAAa,KAAK;AAAA,IACxC,KAAK;AAAO,aAAO,UAAU,KAAK;AAAA,IAClC;AACE,YAAM,IAAI,UAAU,8BAA8B,IAAI,GAAG;AAAA,EAC7D;AACF;AAEA,IAAO,0BAAQ;;;AC3Df,IAAMC,kBAAiB;AACvB,IAAO,kBAAQ,EAAE,wBAAQ,wBAAQ,qCAAY,gBAAAA,gBAAe;;;APR5D,mBAAkB;AAClB,sBAAoB;AACpB,mBAAiB;AACjB,2BAAgB;AAChB,iBAAgB;AAChB,yBAAwB;AACxB,0BAAoB;AACpB,oBAAmB;AAEnB,IAAM,YAAQ,aAAAC,SAAM,gBAAgB;AAEpC,IAAM,kBAAkB,IAAI,KAAK;AACjC,IAAM,2BAA2B,KAAK,KAAK;AAE3C,IAAM,MAAN,cAAkB,2BAAa;AAAA,EAC7B,YAAa,OAAO,CAAC,GAAG;AACtB,UAAM;AAEN,SAAK,UAAU,IAAI,WAAAC,QAAI,EAAE,QAAQ,iBAAiB,KAAK,KAAK,aAAa,IAAK,CAAC;AAC/E,SAAK,UAAU,IAAI,WAAAA,QAAI,KAAK,aAAa,GAAI;AAC7C,SAAK,aAAS,oBAAAC,SAAQ;AAAA,MACpB,QAAQ,KAAK,UAAU;AAAA,MACvB,SAAS,KAAK,YAAY;AAAA,IAC5B,CAAC;AAED,SAAK,WAAW;AAChB,SAAK,QAAQ,KAAK,QAAQ;AAC1B,SAAK,cAAc,KAAK,MAAM,OAAO,KAAK,EAAE,CAAC,EAAE;AAC/C,SAAK,OAAO,KAAK,YAAQ,aAAAC,SAAK,OAAO,OAAO,EAAE,UAAU,KAAK,YAAY,GAAG,IAAI,CAAC;AACjF,SAAK,KAAK,GAAG,SAAS,OAAO;AAC7B,SAAK,KAAK,GAAG,QAAQ,MAAM;AAC3B,SAAK,KAAK,GAAG,WAAW,SAAS;AACjC,SAAK,KAAK,GAAG,SAAS,OAAO;AAC7B,SAAK,KAAK,GAAG,aAAa,WAAW;AACrC,SAAK,eAAe;AACpB,SAAK,UAAU,KAAK,UAAU;AAC9B,SAAK,QAAQ,KAAK,QAAQ;AAC1B,SAAK,YAAY,YAAY,eAAe,eAAe;AAC3D,SAAK,sBAAsB;AAC3B,SAAK,sBAAsB;AAC3B,SAAK,0BAA0B,KAAK,sBAAsB;AAE1D,SAAK,YAAY;AACjB,SAAK,YAAY;AACjB,SAAK,SAAS,KAAK,KAAK;AACxB,SAAK,QAAQ,KAAK,KAAK;AAKvB,UAAM,aAAS,qBAAAC,SAAI,IAAI;AAEvB,SAAK,KAAK,GAAG,QAAQ,CAAC,OAAO,SAAS;AACpC,aAAO,EAAE,OAAO,KAAK,CAAC;AAAA,IACxB,CAAC;AAED,YAAQ,SAAS,SAAS;AAE1B,SAAK,OAAO,cAAc,KAAK,MAAM;AAErC,UAAM,OAAO;AAEb,aAAS,KAAMC,OAAM,IAAI;AACvB,YAAM,QAAQA,MAAK;AACnB,YAAM,OAAOA,MAAK;AAElB,WAAK,OAAO,iBAAiB,KAAK;AAClC,WAAK,YAAY,OAAO,OAAO,CAAC,GAAG,aAAa;AAC9C,YAAI,UAAU;AACZ,eAAK,OAAO,gCAAgC,QAAQ;AACpD,eAAK,QAAQ;AACb,iBAAO,GAAG;AAAA,QACZ;AAEA,aAAK,OAAO,mCAAmC;AAC/C,WAAG;AAAA,MACL,CAAC;AAAA,IACH;AAEA,aAAS,cAAe;AACtB,WAAK,YAAY;AACjB,WAAK,OAAO,gBAAgB,KAAK,QAAQ,EAAE,IAAI;AAC/C,WAAK,sBAAsB;AAC3B,WAAK,wBAAwB;AAC7B,WAAK,KAAK,WAAW;AAAA,IACvB;AAEA,aAAS,QAAS,OAAO,MAAM;AAC7B,WAAK,SAAS,OAAO,IAAI;AAAA,IAC3B;AAEA,aAAS,gBAAiB;AACxB,WAAK,eAAe;AAAA,IACtB;AAEA,aAAS,YAAa;AACpB,UAAI,CAAC,KAAK;AAAW,aAAK,WAAW,KAAK,cAAc,KAAK;AAAA,IAC/D;AAEA,aAAS,UAAWC,MAAK;AACvB,WAAK,KAAK,WAAWA,IAAG;AAAA,IAC1B;AAEA,aAAS,QAASA,MAAK;AACrB,WAAK,KAAK,SAASA,IAAG;AAAA,IACxB;AAEA,aAAS,OAAQ,MAAM;AACrB,WAAK,KAAK,QAAQ,IAAI;AAAA,IACxB;AAAA,EACF;AAAA,EAEA,0BAA2B;AACzB,UAAM,OAAO;AACb,UAAM,WAAW,IAAI,KAAK;AAE1B,SAAK,sBAAsB;AAC3B,cAAU;AAEV,aAAS,cAAe;AACtB,YAAM,OAAO,KAAK,IAAI,IAAI,KAAK,KAAK,MAAM,SAAS;AAEnD,UAAI,OAAO,KAAK;AAAyB,eAAO,UAAU;AAE1D,WAAK,SAAS,MAAM;AAClB,YAAI,KAAK;AAAW;AAEpB,YAAI,KAAK,MAAM,QAAQ,EAAE,SAAS,GAAG;AAGnC,eAAK,WAAW,IAAI;AAAA,QACtB;AAEA,kBAAU;AAAA,MACZ,CAAC;AAAA,IACH;AAEA,aAAS,YAAa;AACpB,UAAI,CAAC,KAAK,uBAAuB,KAAK;AAAW;AACjD,YAAM,cAAc,KAAK,MAAM,KAAK,OAAO,IAAI,WAAW,WAAW,CAAC;AACtE,WAAK,sBAAsB,WAAW,aAAa,WAAW;AAAA,IAChE;AAAA,EACF;AAAA,EAEA,SAAU,IAAI;AACZ,SAAK,qBAAqB,KAAK,MAAM,QAAQ,GAAG,EAAE;AAAA,EACpD;AAAA,EAEA,4BAA6B;AAC3B,SAAK,sBAAsB;AAC3B,iBAAa,KAAK,mBAAmB;AAAA,EACvC;AAAA,EAEA,wBAAyB;AACvB,SAAK,KAAK,MAAM,SAAS,aAAa,KAAK,IAAI;AAAA,EACjD;AAAA,EAEA,qBAAsB,OAAO,IAAI;AAC/B,UAAM,OAAO;AAEb,SAAK,YAAY,OAAO,MAAM,CAAC,GAAG,SAAS;AACzC,UAAI;AAAM,aAAK,WAAW,KAAK,EAAE;AACjC,SAAG,MAAM,IAAI;AAAA,IACf,CAAC;AAAA,EACH;AAAA,EAEA,YAAa,OAAO,OAAO,IAAI;AAC7B,UAAM,OAAO;AAEb,SAAK,KAAK;AAEV,aAAS,KAAM,KAAK;AAClB,UAAI,UAAU;AAEd,aAAO,IAAI,QAAQ;AACjB,kBAAU,IAAI,IAAI;AAClB,YAAI,CAAC,QAAQ,MAAM;AAAO;AAC1B,YAAI,KAAK,IAAI,KAAK,QAAQ,QAAQ,KAAK;AAAO;AAC9C,kBAAU;AAAA,MACZ;AAEA,UAAI,CAAC;AAAS,eAAO,GAAG,IAAI;AAE5B,WAAK,UAAU,SAAS,CAAAA,SAAO;AAC7B,YAAI,CAACA,MAAK;AACR,eAAK,sBAAsB;AAC3B,iBAAO,KAAK,GAAG;AAAA,QACjB;AACA,WAAG,MAAM,OAAO;AAAA,MAClB,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEA,QAAS,MAAM;AACb,UAAM,OAAO;AACb,QAAI,KAAK,IAAI;AACX,WAAK,KAAK,SAAS,KAAK,EAAE;AAC1B,YAAM,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,IAAI,KAAK,EAAE;AACzC,WAAK,KAAK,MAAM,IAAI,IAAI;AACxB,UAAI,CAAC,KAAK;AACR,aAAK,KAAK,QAAQ,IAAI;AACtB,aAAK,sBAAsB;AAAA,MAC7B;AACA;AAAA,IACF;AACA,SAAK,UAAU,MAAM,CAAC,GAAGC,UAAS;AAChC,UAAIA;AAAM,aAAK,QAAQA,KAAI;AAAA,IAC7B,CAAC;AAAA,EACH;AAAA,EAEA,WAAY,IAAI;AACd,SAAK,KAAK,MAAM,OAAO,SAAS,EAAE,CAAC;AAAA,EACrC;AAAA,EAEA,UAAW,MAAM,IAAI;AACnB,UAAM,OAAO;AACb,UAAM,aAAa,KAAK;AACxB,SAAK,KAAK,MAAM,MAAM,EAAE,GAAG,OAAO,GAAG,CAACD,MAAK,MAAMC,UAAS;AACxD,UAAID;AAAK,eAAO,GAAGA,IAAG;AACtB,UAAI,CAAC,KAAK,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,SAAS,KAAK,EAAE,EAAE,KAAK,KAAK,EAAE,GAAG,WAAW,KAAK,aAAa;AACjG,eAAO,GAAG,IAAI,MAAM,WAAW,CAAC;AAAA,MAClC;AACA,UAAI,OAAO,SAAS,UAAU,KAAK,CAAC,WAAW,OAAO,KAAK,EAAE,EAAE,GAAG;AAChE,eAAO,GAAG,IAAI,MAAM,oBAAoB,CAAC;AAAA,MAC3C;AAEA,WAAK,sBAAsB;AAC3B,SAAG,MAAM;AAAA,QACP,IAAI,KAAK,EAAE;AAAA,QACX,MAAMC,MAAK,QAAQA,MAAK;AAAA,QACxB,MAAMA,MAAK;AAAA,MACb,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EAEA,SAAU;AACR,UAAM,OAAO;AACb,UAAM,SAAS,CAAC;AAChB,WAAO,KAAK,KAAK,QAAQ,KAAK,EAAE,QAAQ,SAAO;AAC7C,YAAM,QAAQ,KAAK,QAAQ,MAAM,GAAG,EAAE;AACtC,aAAO,GAAG,IAAI;AAAA,QACZ,GAAG,MAAM,EAAE,SAAS,KAAK;AAAA,QACzB,IAAI,MAAM,GAAG,SAAS,KAAK;AAAA,MAC7B;AACA,UAAI,MAAM,OAAO;AAAM,eAAO,GAAG,EAAE,MAAM,MAAM;AAC/C,UAAI,MAAM,OAAO;AAAM,eAAO,GAAG,EAAE,MAAM,MAAM,IAAI,SAAS,KAAK;AACjE,UAAI,MAAM,KAAK;AAAM,eAAO,GAAG,EAAE,IAAI,MAAM,EAAE,SAAS,KAAK;AAAA,IAC7D,CAAC;AACD,WAAO;AAAA,MACL,OAAO,KAAK,KAAK,MAAM,QAAQ,EAAE,IAAI,MAAM;AAAA,MAC3C;AAAA,IACF;AAAA,EACF;AAAA,EAEA,IAAK,MAAM,IAAI;AACb,QAAI,OAAO,SAAS,IAAI,KAAK,OAAO,SAAS;AAAU,aAAO,EAAE,GAAG,KAAK;AACxE,UAAM,YAAY,CAAC,CAAC,KAAK;AACzB,QAAI,KAAK,MAAM,QAAW;AACxB,YAAM,IAAI,MAAM,kBAAkB;AAAA,IACpC;AACA,QAAI,KAAK,EAAE,UAAU,KAAM;AACzB,YAAM,IAAI,MAAM,yCAAyC;AAAA,IAC3D;AACA,QAAI,aAAa,KAAK,QAAQ,UAAa,OAAO,KAAK,QAAQ,UAAU;AACvE,YAAM,IAAI,MAAM,yCAAyC;AAAA,IAC3D;AACA,QAAI,aAAa,KAAK,EAAE,WAAW,IAAI;AACrC,YAAM,IAAI,MAAM,4CAA4C;AAAA,IAC9D;AACA,QAAI,aAAa,OAAO,KAAK,SAAS,cAAc,CAAC,OAAO,SAAS,KAAK,GAAG,GAAG;AAC9E,YAAM,IAAI,MAAM,yEAAyE;AAAA,IAC3F;AACA,QAAI,aAAa,KAAK,QAAQ,KAAK,KAAK,SAAS,IAAI;AACnD,YAAM,IAAI,MAAM,8BAA8B;AAAA,IAChD;AACA,QAAI,aAAa,KAAK,QAAQ,QAAW;AACvC,YAAM,IAAI,MAAM,4CAA4C;AAAA,IAC9D;AACA,QAAI,aAAa,OAAO,KAAK,QAAQ,UAAU;AAC7C,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAEA,WAAO,KAAK,KAAK,MAAM,EAAE;AAAA,EAC3B;AAAA,EAEA,KAAM,MAAM,IAAI;AACd,QAAI,CAAC;AAAI,WAAK;AAEd,UAAM,YAAY,CAAC,CAAC,KAAK;AACzB,UAAM,IAAI,OAAO,KAAK,MAAM,WAAW,OAAO,KAAK,KAAK,CAAC,IAAI,KAAK;AAClE,UAAM,MAAM,YACR,KAAK,MAAM,KAAK,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,IAClE,KAAK,MAAM,gBAAQ,OAAO,CAAC,CAAC;AAEhC,UAAM,QAAQ,KAAK,QAAQ,IAAI,IAAI,SAAS,KAAK,CAAC;AAClD,QAAI,CAAC;AAAO,aAAO,KAAK,QAAQ,KAAK,MAAM,EAAE;AAE7C,UAAM,UAAU;AAAA,MACd,GAAG;AAAA,MACH,GAAG;AAAA,QACD,IAAI,KAAK,KAAK;AAAA,QACd,OAAO;AAAA;AAAA,QACP;AAAA,MACF;AAAA,IACF;AAEA,QAAI,WAAW;AACb,UAAI,OAAO,KAAK,QAAQ;AAAU,gBAAQ,EAAE,MAAM,KAAK;AACvD,UAAI,KAAK;AAAM,gBAAQ,EAAE,OAAO,KAAK;AACrC,cAAQ,EAAE,IAAI,KAAK;AACnB,cAAQ,EAAE,MAAM,KAAK;AACrB,UAAI,OAAO,KAAK,SAAS;AAAY,gBAAQ,EAAE,MAAM,KAAK,KAAK,cAAc,QAAQ,CAAC,CAAC;AAAA,eAC9E,OAAO,SAAS,KAAK,GAAG;AAAG,gBAAQ,EAAE,MAAM,KAAK;AAAA,IAC3D,OAAO;AACL,WAAK,QAAQ,IAAI,IAAI,SAAS,KAAK,GAAG,QAAQ,CAAC;AAAA,IACjD;AAEA,SAAK,KAAK,SAAS,MAAM,QAAQ,GAAG,GAAG,SAAS,MAAM,CAACD,MAAK,MAAM;AAChE,UAAIA;AAAK,eAAO,GAAGA,MAAK,KAAK,CAAC;AAC9B,SAAG,MAAM,KAAK,CAAC;AAAA,IACjB,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,QAAS,KAAK,MAAM,IAAI;AACtB,UAAM,OAAO;AAEb,SAAK,SAAS,KAAK;AAAA,MACjB,GAAG;AAAA,MACH,GAAG;AAAA,QACD,IAAI,KAAK,KAAK;AAAA,QACd,QAAQ;AAAA,MACV;AAAA,IACF,GAAG,MAAM,CAACA,MAAK,MAAM;AACnB,UAAIA;AAAK,eAAO,GAAGA,IAAG;AACtB,WAAK,IAAI,MAAM,EAAE;AAAA,IACnB,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,IAAK,KAAK,MAAM,IAAI;AAClB,UAAM,SAAS,GAAG;AAClB,QAAI,OAAO,SAAS,YAAY;AAC9B,WAAK;AACL,aAAO;AAAA,IACT;AAEA,QAAI,CAAC;AAAM,aAAO,CAAC;AACnB,UAAME,UAAS,KAAK,UAAU,KAAK;AACnC,UAAMC,QAAO,KAAK;AAClB,QAAI,QAAQ,KAAK,QAAQ,IAAI,IAAI,SAAS,KAAK,CAAC,KAAK;AAErD,QAAI,SAAU,KAAK,UAAU,OAAQ;AACnC,cAAQ,kBAAkB,KAAK,KAAK,IAAI,MAAM,KAAK;AACnD,aAAO,QAAQ,SAAS,IAAI;AAAA,IAC9B;AAEA,SAAK,SAAS,KAAK;AAAA,MACjB,GAAG;AAAA,MACH,GAAG;AAAA,QACD,IAAI,KAAK,KAAK;AAAA,QACd,QAAQ;AAAA,MACV;AAAA,IACF,GAAG,SAAS,IAAI;AAEhB,aAAS,KAAMH,MAAK;AAClB,UAAIA;AAAK,eAAO,GAAGA,IAAG;AACtB,SAAG,MAAM,KAAK;AAAA,IAChB;AAEA,aAAS,QAAS,SAAS;AACzB,YAAM,IAAI,QAAQ;AAClB,UAAI,CAAC,KAAK,CAAC,EAAE;AAAG,eAAO;AAEvB,YAAM,YAAY,EAAE,KAAK,EAAE;AAE3B,UAAI,KAAK;AAAM,UAAE,OAAO,OAAO,KAAK,KAAK,IAAI;AAE7C,UAAI,WAAW;AACb,YAAI,CAACE,WAAU,CAAC,EAAE,OAAO,CAAC,EAAE;AAAG,iBAAO;AACtC,YAAI,CAACA,QAAO,EAAE,KAAK,cAAc,CAAC,GAAG,EAAE,CAAC;AAAG,iBAAO;AAClD,YAAIC,MAAK,EAAE,OAAO,OAAO,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,OAAO,GAAG,GAAG;AACjE,cAAI,CAAC,SAAS,EAAE,MAAM,MAAM;AAAK,oBAAQ;AAAA,QAC3C;AAAA,MACF,OAAO;AACL,YAAIA,MAAK,gBAAQ,OAAO,EAAE,CAAC,CAAC,EAAE,OAAO,GAAG,GAAG;AACzC,kBAAQ;AACR,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EAEA,SAAU,UAAU,MAAM,IAAI;AAC5B,QAAI,OAAO,SAAS;AAAY,aAAO,KAAK,SAAS,UAAU,GAAG,IAAI;AACtE,eAAW,SAAS,QAAQ;AAC5B,QAAI,CAAC;AAAI,WAAK;AAEd,UAAM,QAAQ,KAAK,QAAQ,IAAI,SAAS,SAAS,KAAK,CAAC;AACvD,QAAI,CAAC;AAAO,aAAO,KAAK,aAAa,UAAU,MAAM,EAAE;AAEvD,QAAI,KAAK,OAAO;AACd,YAAM,UAAU,KAAK,YAAY,KAAK,QAAQ,EAAE,OAAO;AACvD,WAAK;AAAA,QACH,EAAE,MAAM,KAAK,OAAO,MAAM,QAAQ,QAAQ;AAAA,QAC1C;AAAA,QACA,EAAE,MAAM,KAAK,OAAO,MAAM,QAAQ;AAAA,MACpC;AAAA,IACF;AAEA,UAAM,UAAU;AAAA,MACd,GAAG;AAAA,MACH,GAAG;AAAA,QACD,IAAI,KAAK,KAAK;AAAA,QACd,OAAO;AAAA;AAAA,QACP,WAAW;AAAA,QACX;AAAA,QACA,cAAc,OAAO,IAAI;AAAA,MAC3B;AAAA,IACF;AAEA,SAAK,OAAO,kBAAkB,UAAU,IAAI;AAC5C,SAAK,KAAK,SAAS,MAAM,QAAQ,QAAQ,GAAG,SAAS,MAAM,EAAE;AAAA,EAC/D;AAAA,EAEA,aAAc,UAAU,MAAM,IAAI;AAChC,UAAM,OAAO;AAEb,SAAK,OAAO,UAAU,CAAAH,SAAO;AAC3B,UAAI,KAAK;AAAW,eAAO,GAAG,IAAI,MAAM,kBAAkB,CAAC;AAC3D,UAAIA;AAAK,eAAO,GAAGA,IAAG;AACtB,WAAK,SAAS,UAAU,MAAM,EAAE;AAAA,IAClC,CAAC;AAAA,EACH;AAAA,EAEA,OAAQ,UAAU,IAAI;AACpB,eAAW,SAAS,QAAQ;AAC5B,QAAI,CAAC;AAAI,WAAK;AACd,UAAM,OAAO;AACb,QAAI,UAAU;AAEd,SAAK,OAAO,aAAa,QAAQ;AACjC,YAAQ,SAAS,IAAI;AACrB,SAAK,SAAS,UAAU;AAAA,MACtB,GAAG;AAAA,MACH,GAAG;AAAA,QACD,IAAI,KAAK,KAAK;AAAA,QACd,WAAW;AAAA,MACb;AAAA,IACF,GAAG,SAAS,EAAE;AAEd,aAAS,KAAM,QAAQI,OAAM;AAC3B,UAAI,CAAC;AAAQ,iBAAS,KAAK,OAAO,IAAI,SAAS,SAAS,KAAK,GAAG,GAAG;AACnE,YAAM,QAAQ,YAAY,MAAM;AAChC,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,aAAK,KAAK,QAAQ,MAAM,CAAC,GAAG,UAAUA,SAAQ,IAAI;AAAA,MACpD;AAAA,IACF;AAEA,aAAS,QAAS,SAAS,MAAM;AAC/B,UAAI;AAAS,eAAO;AACpB,UAAI,QAAQ,EAAE;AAAQ,aAAK,QAAQ,EAAE,QAAQ,IAAI;AAAA,IACnD;AAEA,WAAO,SAAS,QAAS;AAAE,gBAAU;AAAA,IAAK;AAAA,EAC5C;AAAA,EAEA,UAAW;AACT,WAAO,KAAK,KAAK,QAAQ;AAAA,EAC3B;AAAA;AAAA,EAGA,UAAW,MAAM;AACf,SAAK,KAAK,KAAK,GAAG,IAAI;AAAA,EACxB;AAAA,EAEA,QAAS,IAAI;AACX,QAAI,KAAK,WAAW;AAClB,UAAI;AAAI,gBAAQ,SAAS,EAAE;AAC3B;AAAA,IACF;AACA,SAAK,YAAY;AACjB,UAAM,OAAO;AACb,kBAAc,KAAK,SAAS;AAC5B,SAAK,0BAA0B;AAC/B,SAAK,OAAO,QAAQ;AACpB,SAAK,OAAO,YAAY;AACxB,SAAK,KAAK,QAAQ,MAAM;AACtB,WAAK,KAAK,OAAO;AACjB,UAAI;AAAI,WAAG;AAAA,IACb,CAAC;AAAA,EACH;AAAA,EAEA,SAAU,OAAO,MAAM;AACrB,QAAI,MAAM,MAAM,UAAa,MAAM,MAAM;AAAM;AAE/C,UAAM,IAAI,MAAM,EAAE,SAAS;AAC3B,SAAK,OAAO,gCAAgC,GAAG,KAAK,SAAS,KAAK,IAAI;AACtE,QAAI,CAAC,MAAM;AAAG;AAEd,YAAQ,GAAG;AAAA,MACT,KAAK;AACH,eAAO,KAAK,KAAK,SAAS,MAAM,OAAO,EAAE,IAAI,KAAK,KAAK,GAAG,CAAC;AAAA,MAE7D,KAAK;AACH,eAAO,KAAK,YAAY,OAAO,IAAI;AAAA,MAErC,KAAK;AACH,eAAO,KAAK,YAAY,OAAO,IAAI;AAAA,MAErC,KAAK;AACH,eAAO,KAAK,gBAAgB,OAAO,IAAI;AAAA,MAEzC,KAAK;AACH,eAAO,KAAK,OAAO,OAAO,IAAI;AAAA,MAEhC,KAAK;AACH,eAAO,KAAK,OAAO,OAAO,IAAI;AAAA,IAClC;AAAA,EACF;AAAA,EAEA,YAAa,OAAO,MAAM;AACxB,UAAM,SAAS,MAAM,EAAE;AACvB,QAAI,CAAC;AAAQ,aAAO,KAAK,KAAK,MAAM,MAAM,OAAO,CAAC,KAAK,+CAA+C,CAAC;AAEvG,SAAK,KAAK,aAAa,MAAM;AAE7B,UAAM,QAAQ,KAAK,KAAK,MAAM,QAAQ,MAAM;AAC5C,SAAK,KAAK,SAAS,MAAM,OAAO,EAAE,IAAI,KAAK,KAAK,GAAG,GAAG,KAAK;AAAA,EAC7D;AAAA,EAEA,YAAa,OAAO,MAAM;AACxB,UAAM,OAAO,KAAK,WAAW,KAAK;AAClC,UAAM,WAAW,MAAM,EAAE;AACzB,QAAI,CAAC;AAAU,aAAO,KAAK,KAAK,MAAM,MAAM,OAAO,CAAC,KAAK,kDAAkD,CAAC;AAE5G,SAAK,KAAK,aAAa,QAAQ;AAE/B,UAAM,IAAI,EAAE,IAAI,KAAK,KAAK,IAAI,OAAO,KAAK,eAAe,IAAI,EAAE;AAC/D,UAAM,QAAQ,KAAK,OAAO,IAAI,SAAS,SAAS,KAAK,CAAC;AAEtD,QAAI,MAAM,QAAQ;AAChB,QAAE,SAAS;AACX,WAAK,KAAK,SAAS,MAAM,OAAO,CAAC;AAAA,IACnC,OAAO;AACL,WAAK,KAAK,SAAS,MAAM,OAAO,GAAG,KAAK,KAAK,MAAM,QAAQ,QAAQ,CAAC;AAAA,IACtE;AAAA,EACF;AAAA,EAEA,gBAAiB,OAAO,MAAM;AAC5B,UAAM,OAAO,KAAK,WAAW,KAAK;AAClC,UAAM,OAAO,MAAM,EAAE,eAAe,KAAK,OAAO,MAAM,EAAE;AACxD,QAAI,CAAC,QAAQ,OAAO,SAAS,YAAY,QAAQ,KAAK,OAAO;AAAO;AACpE,UAAM,WAAW,MAAM,EAAE;AACzB,UAAM,QAAQ,MAAM,EAAE;AACtB,QAAI,CAAC,YAAY,CAAC;AAAO;AAEzB,QAAI,CAAC,KAAK,eAAe,MAAM,KAAK,GAAG;AACrC,aAAO,KAAK,KAAK,MAAM,MAAM,OAAO,CAAC,KAAK,uCAAuC,CAAC;AAAA,IACpF;AAEA,SAAK,KAAK,iBAAiB,UAAU,EAAE,MAAM,MAAM,KAAK,KAAK,CAAC;AAE9D,SAAK,SAAS,EAAE,MAAM,KAAK,GAAG,UAAU,EAAE,MAAM,MAAM,KAAK,KAAK,CAAC;AACjE,SAAK,KAAK,SAAS,MAAM,OAAO,EAAE,IAAI,KAAK,KAAK,GAAG,CAAC;AAAA,EACtD;AAAA,EAEA,SAAU,MAAM,UAAUA,OAAM;AAC9B,SAAK,OAAO,IAAI,SAAS,SAAS,KAAK,GAAG,WAAW,KAAK,MAAM,KAAK,IAAI,CAAC;AAC1E,SAAK,KAAK,YAAY,MAAM,UAAUA,KAAI;AAAA,EAC5C;AAAA,EAEA,OAAQ,OAAO,MAAM;AACnB,UAAM,OAAO,KAAK,WAAW,KAAK;AAClC,UAAM,SAAS,MAAM,EAAE;AACvB,QAAI,CAAC;AAAQ;AACb,UAAM,QAAQ,KAAK,eAAe,IAAI;AACtC,UAAM,QAAQ,KAAK,QAAQ,IAAI,OAAO,SAAS,KAAK,CAAC;AAErD,SAAK,KAAK,OAAO,QAAQ,KAAK;AAE9B,QAAI,CAAC,OAAO;AACV,YAAM,QAAQ,KAAK,KAAK,MAAM,QAAQ,MAAM;AAC5C,WAAK,KAAK,SAAS,MAAM,OAAO,EAAE,IAAI,KAAK,KAAK,IAAI,MAAM,GAAG,KAAK;AAAA,IACpE,OAAO;AACL,WAAK,KAAK,SAAS,MAAM,OAAO,kBAAkB,KAAK,KAAK,IAAI,OAAO,KAAK,CAAC;AAAA,IAC/E;AAAA,EACF;AAAA,EAEA,OAAQ,OAAO,MAAM;AACnB,UAAM,OAAO,KAAK,WAAW,KAAK;AAElC,UAAM,IAAI,MAAM;AAChB,QAAI,CAAC;AAAG;AACR,UAAM,IAAI,MAAM,EAAE;AAClB,QAAI,CAAC;AAAG;AACR,UAAM,KAAK,MAAM,EAAE;AACnB,QAAI,CAAC;AAAI;AAET,UAAM,QAAQ,EAAE;AAChB,QAAI,CAAC;AAAO;AAEZ,QAAI,CAAC,KAAK,eAAe,MAAM,KAAK,GAAG;AACrC,aAAO,KAAK,KAAK,MAAM,MAAM,OAAO,CAAC,KAAK,6BAA6B,CAAC;AAAA,IAC1E;AACA,QAAI,EAAE,SAAS,KAAM;AACnB,aAAO,KAAK,KAAK,MAAM,MAAM,OAAO,CAAC,KAAK,wBAAwB,CAAC;AAAA,IACrE;AAEA,UAAM,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE;AAC9B,QAAI,aAAa,CAAC,EAAE,KAAK,CAAC,EAAE;AAAK;AAEjC,UAAM,MAAM,YACR,KAAK,MAAM,EAAE,OAAO,OAAO,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,IACtD,KAAK,MAAM,gBAAQ,OAAO,CAAC,CAAC;AAChC,UAAM,SAAS,IAAI,SAAS,KAAK;AAEjC,SAAK,KAAK,OAAO,KAAK,CAAC;AAEvB,QAAI,WAAW;AACb,UAAI,CAAC,KAAK;AAAS,eAAO,KAAK,KAAK,MAAM,MAAM,OAAO,CAAC,KAAK,4BAA4B,CAAC;AAC1F,UAAI,CAAC,KAAK,QAAQ,EAAE,KAAK,cAAc,CAAC,GAAG,EAAE,CAAC;AAAG;AACjD,YAAM,OAAO,KAAK,QAAQ,IAAI,MAAM;AACpC,UAAI,QAAQ,OAAO,EAAE,QAAQ,YAAY,KAAK,QAAQ,EAAE,KAAK;AAC3D,eAAO,KAAK,KAAK,MAAM,MAAM,OAAO,CAAC,KAAK,qCAAqC,CAAC;AAAA,MAClF;AACA,UAAI,QAAQ,OAAO,KAAK,QAAQ,YAAY,EAAE,EAAE,MAAM,KAAK,MAAM;AAC/D,eAAO,KAAK,KAAK,MAAM,MAAM,OAAO,CAAC,KAAK,mCAAmC,CAAC;AAAA,MAChF;AACA,WAAK,QAAQ,IAAI,QAAQ,EAAE,GAAG,GAAG,EAAE,GAAG,MAAM,EAAE,MAAM,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,GAAG,CAAC;AAAA,IAClF,OAAO;AACL,WAAK,QAAQ,IAAI,QAAQ,EAAE,GAAG,GAAG,CAAC;AAAA,IACpC;AAEA,SAAK,KAAK,SAAS,MAAM,OAAO,EAAE,IAAI,KAAK,KAAK,GAAG,CAAC;AAAA,EACtD;AAAA,EAEA,WAAY,UAAU;AACpB,UAAM,OAAO;AACb,QAAI,CAAC;AAAU,aAAO,QAAQ,SAAS,KAAK;AAE5C,SAAK,KAAK,SAAS,KAAK,KAAK,IAAI;AAAA,MAC/B,GAAG;AAAA,MACH,GAAG;AAAA,QACD,IAAI,KAAK,KAAK;AAAA,QACd,QAAQ,KAAK,KAAK;AAAA,MACpB;AAAA,IACF,GAAG,KAAK;AAER,aAAS,QAAS;AAChB,UAAI,KAAK;AAAO;AAEhB,WAAK,OAAO,YAAY;AACxB,WAAK,QAAQ;AACb,WAAK,KAAK,OAAO;AAAA,IACnB;AAAA,EACF;AAAA,EAEA,SAAU,QAAQ,SAAS,WAAW,IAAI;AACxC,UAAM,OAAO;AAEb,UAAM,QAAQ,IAAI,gBAAAC,QAAQ;AAAA,MACxB,aAAa;AAAA,MACb,yBAAyB,KAAK,KAAK;AAAA,IACrC,CAAC;AAED,SAAK,KAAK,QAAQ,QAAQ,SAAS,SAAS,IAAI;AAEhD,aAAS,KAAML,MAAK,GAAG;AACrB,UAAIA;AAAK,eAAO,GAAGA,IAAG;AACtB,WAAK,QAAQ,IAAI,OAAO,SAAS,KAAK,GAAG,KAAK;AAC9C,WAAK,OAAO,oBAAoB,CAAC;AACjC,SAAG,MAAM,CAAC;AAAA,IACZ;AAEA,aAAS,QAASM,UAAS,MAAM;AAC/B,UAAI,CAACA,SAAQ;AAAG,eAAO;AAEvB,UAAIA,SAAQ,EAAE,SAASA,SAAQ,EAAE,MAAM,OAAO,SAASA,SAAQ,EAAE,EAAE,KAAKA,SAAQ,EAAE,GAAG,WAAW,KAAK,aAAa;AAChH,aAAK,OAAO,8BAA8BA,SAAQ,EAAE,IAAI,MAAM;AAC9D,cAAM,IAAI;AAAA,UACR,IAAIA,SAAQ,EAAE;AAAA,UACd,MAAM,KAAK,QAAQ,KAAK;AAAA,UACxB,MAAM,KAAK;AAAA,UACX,OAAOA,SAAQ,EAAE;AAAA,QACnB,CAAC;AAAA,MACH;AAEA,UAAI,CAAC;AAAW,eAAO;AACvB,aAAO,UAAUA,UAAS,IAAI;AAAA,IAChC;AAAA,EACF;AAAA,EAEA,SAAU;AACR,QAAI,CAAC,MAAM;AAAS;AACpB,UAAM,OAAO,CAAC,EAAE,MAAM,KAAK,SAAS;AACpC,SAAK,CAAC,IAAI,IAAI,KAAK,OAAO,SAAS,KAAK,EAAE,UAAU,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;AACrE,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,UAAI,OAAO,SAAS,KAAK,CAAC,CAAC;AAAG,aAAK,CAAC,IAAI,KAAK,CAAC,EAAE,SAAS,KAAK;AAAA,IAChE;AACA,UAAM,GAAG,IAAI;AAAA,EACf;AAAA,EAEA,eAAgB,MAAM,OAAO;AAC3B,UAAM,SAAS,KAAK,eAAe,MAAM,KAAK,SAAS,CAAC,CAAC;AACzD,UAAM,SAAS,KAAK,eAAe,MAAM,KAAK,SAAS,CAAC,CAAC;AACzD,WAAO,MAAM,OAAO,MAAM,KAAK,MAAM,OAAO,MAAM;AAAA,EACpD;AAAA,EAEA,eAAgB,MAAM,QAAQ;AAC5B,QAAI,CAAC;AAAQ,eAAS,KAAK,SAAS,CAAC;AACrC,WAAO,KAAK,MAAM,OAAO,OAAO,CAAC,OAAO,KAAK,IAAI,GAAG,MAAM,CAAC,CAAC;AAAA,EAC9D;AAAA,EAEA,iBAAkB;AAChB,QAAI,CAAC,KAAK,UAAU;AAClB,WAAK,WAAW,KAAC,mBAAAC,SAAY,KAAK,WAAW,OAAG,mBAAAA,SAAY,KAAK,WAAW,CAAC;AAAA,IAC/E,OAAO;AACL,WAAK,SAAS,CAAC,IAAI,KAAK,SAAS,CAAC;AAClC,WAAK,SAAS,CAAC,QAAI,mBAAAA,SAAY,KAAK,WAAW;AAAA,IACjD;AAAA,EACF;AACF;AAEA,SAAS,OAAQ;AAAC;AAElB,SAAS,KAAM,KAAK;AAClB,SAAO,cAAAC,QAAO,WAAW,MAAM,EAAE,OAAO,GAAG,EAAE,OAAO;AACtD;AAEA,SAAS,kBAAmB,IAAI,OAAO,OAAO;AAC5C,QAAM,IAAI,EAAE,IAAI,OAAO,GAAG,MAAM,EAAE;AAClC,MAAI,MAAM,KAAK;AACb,MAAE,MAAM,MAAM;AACd,MAAE,IAAI,MAAM;AACZ,QAAI,OAAO,MAAM,QAAQ;AAAU,QAAE,MAAM,MAAM;AAAA,EACnD;AACA,SAAO;AACT;AAEA,SAAS,WAAY,MAAM,MAAM;AAC/B,QAAM,MAAM,OAAO,YAAY,CAAC;AAChC,QAAM,KAAK,KAAK,MAAM,GAAG;AACzB,WAAS,IAAI,GAAG,IAAI,GAAG;AAAK,QAAI,CAAC,IAAI,SAAS,GAAG,CAAC,KAAK,GAAG,EAAE;AAC5D,MAAI,cAAc,MAAM,CAAC;AACzB,SAAO;AACT;AAEA,SAAS,YAAa,KAAK;AACzB,QAAM,QAAQ,CAAC;AAEf,MAAI;AACF,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,YAAM,OAAO,IAAI,CAAC,EAAE,aAAa,CAAC;AAClC,UAAI,CAAC;AAAM;AACX,YAAM,KAAK;AAAA,QACT,MAAM,QAAQ,IAAI,CAAC,GAAG,CAAC;AAAA,QACvB;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,SAASR,MAAK;AAAA,EAEd;AAEA,SAAO;AACT;AAEA,SAAS,QAAS,KAAK,QAAQ;AAC7B,SAAO,GAAG,IAAI,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC;AAC5E;AAEA,SAAS,cAAe,KAAK;AAC3B,QAAM,MAAM,EAAE,KAAK,IAAI,OAAO,GAAG,GAAG,IAAI,EAAE;AAC1C,MAAI,IAAI;AAAM,QAAI,OAAO,IAAI;AAC7B,SAAO,gBAAQ,OAAO,GAAG,EAAE,MAAM,GAAG,EAAE;AACxC;AAEA,SAAS,OAAQ,MAAM;AACrB,SAAO;AAAA,IACL,MAAM,KAAK;AAAA,IACX,MAAM,KAAK;AAAA,EACb;AACF;AAEA,SAAS,SAAUS,MAAK;AACtB,MAAI,OAAO,SAASA,IAAG;AAAG,WAAOA;AACjC,MAAI,YAAY,OAAOA,IAAG;AAAG,WAAO,OAAO,KAAKA,KAAI,QAAQA,KAAI,YAAYA,KAAI,UAAU;AAC1F,MAAI,OAAOA,SAAQ;AAAU,WAAO,OAAO,KAAKA,MAAK,KAAK;AAC1D,QAAM,IAAI,MAAM,2BAA2B;AAC7C;AAEA,IAAO,iBAAQ;;;AQ5xBf,IAAAC,2BAAmB;AACnB,IAAAC,iBAAmB;AACnB,8BAAoB;AACpB,gBAAe;AACf,gBAAwB;AACxB,kBAAiB;;;ACNjB,8BAAmB;;;ACAZ,SAASC,YAAY,OAAO;AAEjC,QAAM,OAAO,QAAQ,IAAI,IAAI;AAG7B,UAAQ,KAAK,IAAI,OAAO,SAAS,CAAC,CAAC;AACnC,SAAO,KAAK,MAAM,KAAK,MAAM,KAAK,CAAC,IAAI,IAAI;AAC7C;AAEO,SAASC,SAAS,OAAO;AAC9B,MAAI,YAAY,OAAO,KAAK;AAAG,WAAO;AACtC,MAAI,MAAM,QAAQ,KAAK;AAAG,WAAO;AACjC,MAAI,iBAAiB;AAAQ,WAAO;AACpC,MAAI,iBAAiB;AAAS,WAAO;AACrC,MAAI,iBAAiB;AAAK,WAAO;AACjC,MAAI,iBAAiB;AAAK,WAAO;AACjC,MAAI,iBAAiB;AAAQ,WAAO;AACpC,MAAI,iBAAiB;AAAa,WAAO;AACzC,SAAO,OAAO;AAChB;;;ACVA,SAASC,QAAQ,MAAM,QAAQ,QAAQ;AACrC,QAAM,UAAU,CAAC;AACjB,MAAI,SAAS;AAEb,EAAAA,QAAO,QAAQ,SAAS,IAAI;AAC5B,WAAS,OAAO,OAAO;AACvB,EAAAA,QAAO,QAAQ,OAAO;AAEtB,MAAI,YAAY,OAAO,MAAM,GAAG;AAC9B,WAAO,IAAI,QAAQ,MAAM;AACzB,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAEAA,QAAO,QAAQ;AACfA,QAAO,2BAA2B;AAElCA,QAAO,UAAU,SAAU,SAAS,MAAM;AACxC,MAAI,QAAQ,MAAM;AAAE;AAAA,EAAO;AAE3B,UAAQC,SAAQ,IAAI,GAAG;AAAA,IACrB,KAAK;AAAU,MAAAD,QAAO,KAAK,SAAS,IAAI;AAAG;AAAA,IAC3C,KAAK;AAAO,MAAAA,QAAO,QAAQ,SAAS,IAAI;AAAG;AAAA,IAC3C,KAAK;AAAS,MAAAA,QAAO,KAAK,SAAS,IAAI;AAAG;AAAA,IAC1C,KAAK;AAAO,MAAAA,QAAO,QAAQ,SAAS,IAAI;AAAG;AAAA,IAC3C,KAAK;AAAU,MAAAA,QAAO,OAAO,SAAS,IAAI;AAAG;AAAA,IAC7C,KAAK;AAAU,MAAAA,QAAO,OAAO,SAAS,IAAI;AAAG;AAAA,IAC7C,KAAK;AAAW,MAAAA,QAAO,OAAO,SAAS,IAAI;AAAG;AAAA,IAC9C,KAAK;AAAmB,MAAAA,QAAO,OAAO,SAAS,IAAI,WAAW,KAAK,QAAQ,KAAK,YAAY,KAAK,UAAU,CAAC;AAAG;AAAA,IAC/G,KAAK;AAAe,MAAAA,QAAO,OAAO,SAAS,IAAI,WAAW,IAAI,CAAC;AAAG;AAAA,EACpE;AACF;AAEA,IAAME,SAAQ,IAAI,WAAW,CAAC,GAAI,CAAC;AACnC,IAAMC,SAAQ,IAAI,WAAW,CAAC,GAAI,CAAC;AACnC,IAAMC,SAAQ,IAAI,WAAW,CAAC,GAAI,CAAC;AAEnCJ,QAAO,SAAS,SAAU,SAAS,MAAM;AACvC,UAAQ,KAAK,SAAS,KAAK,SAAS,GAAG,GAAG,IAAI;AAChD;AAEAA,QAAO,SAAS,SAAU,SAAS,MAAM;AACvC,UAAQ,KAAK,SAAS,SAAS,IAAI,EAAE,aAAa,MAAM,IAAI,CAAC;AAC/D;AAEAA,QAAO,SAAS,SAAU,SAAS,MAAM;AACvC,QAAM,QAAQ;AACd,QAAM,KAAM,OAAO,SAAU;AAC7B,QAAM,KAAM,OAAO,SAAU;AAC7B,QAAM,MAAM,KAAK,QAAQ;AAEzB,UAAQ,KAAK,SAAS,MAAM,MAAM,GAAG,CAAC;AAEtC,MAAI,QAAQ,QAAQ,CAACA,QAAO,0BAA0B;AACpD,IAAAA,QAAO,2BAA2B;AAClC,YAAQ;AAAA,MACN,4DAA4D,OAAO;AAAA,MACnE,0EAA0E,MAAM;AAAA,IAClF;AACA,YAAQ,MAAM;AAAA,EAChB;AACF;AAEAA,QAAO,OAAO,SAAU,SAAS,MAAM;AACrC,UAAQ,KAAKG,MAAK;AAElB,MAAI,IAAI;AACR,MAAI;AAEJ,QAAM,OAAO,OAAO,KAAK,IAAI,EAAE,KAAK;AACpC,QAAM,KAAK,KAAK;AAEhB,SAAO,IAAI,IAAI,KAAK;AAClB,QAAI,KAAK,CAAC;AACV,QAAI,KAAK,CAAC,KAAK;AAAM;AACrB,IAAAH,QAAO,OAAO,SAAS,CAAC;AACxB,IAAAA,QAAO,QAAQ,SAAS,KAAK,CAAC,CAAC;AAAA,EACjC;AAEA,UAAQ,KAAKE,MAAK;AACpB;AAEAF,QAAO,UAAU,SAAU,SAAS,MAAM;AACxC,UAAQ,KAAKG,MAAK;AAElB,QAAM,OAAO,MAAM,KAAK,KAAK,KAAK,CAAC,EAAE,KAAK;AAE1C,aAAW,OAAO,MAAM;AACtB,QAAI,KAAK,IAAI,GAAG,KAAK;AAAM;AAC3B,gBAAY,OAAO,GAAG,IAClBH,QAAO,QAAQ,SAAS,GAAG,IAC3BA,QAAO,OAAO,SAAS,OAAO,GAAG,CAAC;AACtC,IAAAA,QAAO,QAAQ,SAAS,KAAK,IAAI,GAAG,CAAC;AAAA,EACvC;AAEA,UAAQ,KAAKE,MAAK;AACpB;AAEAF,QAAO,OAAO,SAAU,SAAS,MAAM;AACrC,MAAI,IAAI;AACR,QAAM,IAAI,KAAK;AACf,UAAQ,KAAKI,MAAK;AAElB,SAAO,IAAI,GAAG,KAAK;AACjB,QAAI,KAAK,CAAC,KAAK;AAAM;AACrB,IAAAJ,QAAO,QAAQ,SAAS,KAAK,CAAC,CAAC;AAAA,EACjC;AAEA,UAAQ,KAAKE,MAAK;AACpB;AAEAF,QAAO,UAAU,SAAU,SAAS,MAAM;AACxC,UAAQ,KAAKI,MAAK;AAElB,aAAW,QAAQ,MAAM;AACvB,QAAI,QAAQ;AAAM;AAClB,IAAAJ,QAAO,QAAQ,SAAS,IAAI;AAAA,EAC9B;AAEA,UAAQ,KAAKE,MAAK;AACpB;AAEA,IAAOG,kBAAQL;;;ACnIf,IAAMM,iBAAgB;AACtB,IAAMC,gBAAe;AACrB,IAAMC,oBAAmB;AACzB,IAAMC,cAAa;AACnB,IAAMC,eAAc;AAWpB,SAASC,kBAAkB,QAAQ,OAAO,KAAK;AAC7C,MAAI,MAAM;AACV,MAAI,OAAO;AAEX,WAAS,IAAI,OAAO,IAAI,KAAK,KAAK;AAChC,UAAM,MAAM,OAAO,CAAC;AAEpB,QAAI,MAAM,MAAM,OAAO,IAAI;AACzB,YAAM,MAAM,MAAM,MAAM;AACxB;AAAA,IACF;AAEA,QAAI,MAAM,SAAS,QAAQ,IAAI;AAC7B;AAAA,IACF;AAEA,QAAI,MAAM,SAAS,QAAQ,IAAI;AAC7B,aAAO;AACP;AAAA,IACF;AAEA,QAAI,QAAQ,IAAI;AAEd;AAAA,IACF;AAEA,UAAM,IAAI,MAAM,0BAA0B,IAAI,SAAS,GAAG;AAAA,EAC5D;AAEA,SAAO,MAAM;AACf;AAWA,SAASC,QAAQ,MAAM,OAAO,KAAK,UAAU;AAC3C,MAAI,QAAQ,QAAQ,KAAK,WAAW,GAAG;AACrC,WAAO;AAAA,EACT;AAEA,MAAI,OAAO,UAAU,YAAY,YAAY,MAAM;AACjD,eAAW;AACX,YAAQ;AAAA,EACV;AAEA,MAAI,OAAO,QAAQ,YAAY,YAAY,MAAM;AAC/C,eAAW;AACX,UAAM;AAAA,EACR;AAEA,EAAAA,QAAO,WAAW;AAClB,EAAAA,QAAO,WAAW,YAAY;AAE9B,EAAAA,QAAO,OAAO,CAAE,YAAY,OAAO,IAAI,IACnC,SAAS,IAAI,IACb,IAAI,WAAW,KAAK,MAAM,OAAO,GAAG,CAAC;AAEzC,EAAAA,QAAO,QAAQA,QAAO,KAAK;AAE3B,SAAOA,QAAO,KAAK;AACrB;AAEAA,QAAO,QAAQ;AACfA,QAAO,WAAW;AAClBA,QAAO,OAAO;AACdA,QAAO,WAAW;AAElBA,QAAO,OAAO,WAAY;AACxB,UAAQA,QAAO,KAAKA,QAAO,QAAQ,GAAG;AAAA,IACpC,KAAKJ;AACH,aAAOI,QAAO,WAAW;AAAA,IAC3B,KAAKH;AACH,aAAOG,QAAO,KAAK;AAAA,IACrB,KAAKN;AACH,aAAOM,QAAO,QAAQ;AAAA,IACxB;AACE,aAAOA,QAAO,OAAO;AAAA,EACzB;AACF;AAEAA,QAAO,OAAO,SAAU,KAAK;AAC3B,MAAI,IAAIA,QAAO;AACf,QAAM,IAAIA,QAAO,KAAK;AACtB,QAAM,IAAIA,QAAO;AAEjB,SAAO,IAAI,GAAG;AACZ,QAAI,EAAE,CAAC,MAAM;AAAK,aAAO;AACzB;AAAA,EACF;AAEA,QAAM,IAAI;AAAA,IACR,sCACA,OAAO,aAAa,GAAG,IAAI,UAC3B,IAAI,SAAS,EAAE,IAAI;AAAA,EACrB;AACF;AAEAA,QAAO,aAAa,WAAY;AAC9B,EAAAA,QAAO;AAEP,QAAM,OAAO,CAAC;AAEd,SAAOA,QAAO,KAAKA,QAAO,QAAQ,MAAMF,cAAa;AACnD,SAAK,SAASE,QAAO,OAAO,CAAC,CAAC,IAAIA,QAAO,KAAK;AAAA,EAChD;AAEA,EAAAA,QAAO;AAEP,SAAO;AACT;AAEAA,QAAO,OAAO,WAAY;AACxB,EAAAA,QAAO;AAEP,QAAM,MAAM,CAAC;AAEb,SAAOA,QAAO,KAAKA,QAAO,QAAQ,MAAMF,cAAa;AACnD,QAAI,KAAKE,QAAO,KAAK,CAAC;AAAA,EACxB;AAEA,EAAAA,QAAO;AAEP,SAAO;AACT;AAEAA,QAAO,UAAU,WAAY;AAC3B,QAAM,MAAMA,QAAO,KAAKF,YAAW;AACnC,QAAM,SAASC,kBAAiBC,QAAO,MAAMA,QAAO,WAAW,GAAG,GAAG;AAErE,EAAAA,QAAO,YAAY,MAAM,IAAIA,QAAO;AAEpC,SAAO;AACT;AAEAA,QAAO,SAAS,WAAY;AAC1B,MAAI,MAAMA,QAAO,KAAKL,aAAY;AAClC,QAAMM,UAASF,kBAAiBC,QAAO,MAAMA,QAAO,UAAU,GAAG;AACjE,QAAM,MAAM,EAAE,MAAMC;AAEpB,EAAAD,QAAO,WAAW;AAElB,SAAOA,QAAO,WACV,SAASA,QAAO,KAAK,MAAM,KAAK,GAAG,CAAC,IACpCA,QAAO,KAAK,MAAM,KAAK,GAAG;AAChC;AAEA,IAAOE,kBAAQF;;;ACtKf,SAASG,YAAY,MAAM;AACzB,MAAIC,UAAS,IAAI;AAEjB,aAAW,SAAS,MAAM;AACxB,IAAAA,WAAUC,gBAAe,KAAK;AAAA,EAChC;AAEA,SAAOD;AACT;AAEA,SAASE,WAAW,KAAK;AACvB,MAAIF,UAAS,IAAI;AAEjB,aAAW,CAAC,KAAK,KAAK,KAAK,KAAK;AAC9B,UAAM,YAAY,SAAS,GAAG,EAAE;AAChC,IAAAA,WAAUG,YAAW,SAAS,IAAI,IAAI;AACtC,IAAAH,WAAUC,gBAAe,KAAK;AAAA,EAChC;AAEA,SAAOD;AACT;AAEA,SAASI,cAAc,OAAO;AAC5B,MAAIJ,UAAS,IAAI;AACjB,QAAM,OAAO,OAAO,KAAK,KAAK;AAE9B,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,UAAM,YAAY,SAAS,KAAK,CAAC,CAAC,EAAE;AACpC,IAAAA,WAAUG,YAAW,SAAS,IAAI,IAAI;AACtC,IAAAH,WAAUC,gBAAe,MAAM,KAAK,CAAC,CAAC,CAAC;AAAA,EACzC;AAEA,SAAOD;AACT;AAEA,SAASK,cAAc,OAAO;AAC5B,QAAML,UAAS,SAAS,KAAK,EAAE;AAC/B,SAAOG,YAAWH,OAAM,IAAI,IAAIA;AAClC;AAEA,SAASM,mBAAmB,OAAO;AACjC,QAAMN,UAAS,MAAM,aAAa,MAAM;AACxC,SAAOG,YAAWH,OAAM,IAAI,IAAIA;AAClC;AAEA,SAASC,gBAAgB,OAAO;AAC9B,QAAMD,UAAS;AAEf,MAAI,SAAS;AAAM,WAAOA;AAE1B,QAAM,OAAOO,SAAQ,KAAK;AAE1B,UAAQ,MAAM;AAAA,IACZ,KAAK;AAAmB,aAAOD,mBAAkB,KAAK;AAAA,IACtD,KAAK;AAAU,aAAOD,cAAa,KAAK;AAAA,IACxC,KAAK;AAAA,IAAS,KAAK;AAAO,aAAON,YAAW,KAAK;AAAA,IACjD,KAAK;AAAU,aAAO,IAAII,YAAW,KAAK,MAAM,KAAK,CAAC,IAAI;AAAA,IAC1D,KAAK;AAAU,aAAO,IAAI,MAAM,SAAS,EAAE,SAAS;AAAA,IACpD,KAAK;AAAU,aAAOC,cAAa,KAAK;AAAA,IACxC,KAAK;AAAO,aAAOF,WAAU,KAAK;AAAA,IAClC;AACE,YAAM,IAAI,UAAU,8BAA8B,IAAI,GAAG;AAAA,EAC7D;AACF;AAEA,IAAOM,2BAAQP;;;AC3Df,IAAMQ,kBAAiBC;AACvB,IAAOC,mBAAQ,EAAE,QAAAC,iBAAQ,QAAAC,iBAAQ,YAAAH,0BAAY,gBAAAD,gBAAe;;;ALR5D,iBAAgB;AAET,IAAM,SAAS,wBAAAK,QAAO;AAEtB,SAAS,YAAa,IAAI,IAAI;AACnC,QAAM,MAAM,OAAO,MAAM,CAAC;AAC1B,0BAAAA,QAAO,gBAAgB,GAAG;AAC1B,SAAO;AACT;AAMO,IAAMC,iBAAgB,CAAC,QAAQ;AACpC,QAAM,MAAM,EAAE,KAAK,IAAI,OAAO,GAAG,GAAG,IAAI,EAAE;AAC1C,QAAM,WAAWC,iBAAQ,OAAO,GAAG,EAAE,SAAS,GAAG,EAAE;AACnD,SAAO;AACT;AAsBO,IAAM,kBAAkB,CAAC,SAAS;AACvC,QAAM,YAAY,OAAO,YAAY,wBAAAC,QAAO,0BAA0B;AACtE,QAAM,YAAY,OAAO,YAAY,wBAAAA,QAAO,0BAA0B;AAEtE,MAAI;AAAM,4BAAAA,QAAO,yBAAyB,WAAW,WAAW,IAAI;AAAA;AAC/D,4BAAAA,QAAO,oBAAoB,WAAW,SAAS;AAEpD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAOO,IAAM,YAAY,CAAC,QAAQ;AAChC,MAAI,OAAO,QAAQ;AAAU,WAAO;AAEpC,QAAM,WAAW,WAAAC,QAAI,OAAO,IAAI,QAAQ,OAAO,EAAE,CAAC;AAElD,MAAI,SAAS,eAAe,IAAI;AAC9B,UAAM,IAAI,MAAM,aAAa;AAAA,EAC/B;AAEA,SAAO;AACT;;;AD5DA,IAAMC,UAAS,yBAAAC,QAAO;AAEtB,IAAM,oBAAoB;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,EAAE,IAAI,UAAQ;AACZ,QAAM,CAAC,MAAM,IAAI,IAAI,KAAK,MAAM,GAAG;AACnC,SAAO,EAAE,MAAM,MAAM,OAAO,IAAI,EAAE;AACpC,CAAC;AAED,IAAM,2BAA2B,YAAAC,QAAK,SAAK,mBAAQ,GAAG,WAAW,OAAO;AAEjE,IAAMC,OAAN,MAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOf,YAAa,UAAU,CAAC,GAAG;AACzB,UAAM,WAAW,QAAQ,WAAW,IAAI,QAAQ,QAAQ,eAAe;AACvE,YAAQ,YAAY,QAAQ,aAAa;AAEzC,SAAK,OAAO,IAAI,eAAK,OAAO;AAE5B,cAAU,iBAAiB,KAAK,IAAI;AAEpC,gCAAAC,SAAQ,MAAM;AACZ,gBAAU,iBAAiB,KAAK,IAAI;AACpC,WAAK,QAAQ;AAAA,IACf,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBA,MAAM,IAAK,KAAK,UAAU,CAAC,GAAG;AAC5B,UAAM,SAAS,KAAK,GAAG;AACvB,UAAM,YAAY,OAAO,SAAS,KAAK;AAEvC,QAAI,QAAQ,KAAK,KAAK,QAAQ,IAAI,SAAS,KAAK;AAChD,UAAM,QAAQ,CAAC;AAEf,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAI,OAAO;AAET,gBAAQC,mBAAkB,KAAK,KAAK,KAAK,IAAI,KAAK;AAClD,eAAO,QAAQ,SAAS,IAAI;AAAA,MAC9B;AAEA,WAAK,KAAK;AAAA,QACR;AAAA,QACA;AAAA,UACE,GAAG;AAAA,UACH,GAAG;AAAA,YACD,IAAI,KAAK,KAAK,KAAK;AAAA,YACnB;AAAA,UACF;AAAA,QACF;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAKA,eAAS,KAAMC,MAAK;AAClB,YAAIA;AAAK,iBAAOA,IAAG;AAAA;AACd,kBAAQ,SAAS,EAAE,GAAG,OAAO,MAAM,CAAC;AAAA,MAC3C;AAMA,eAAS,QAAS,SAASC,OAAM;AAC/B,cAAM,IAAI,QAAQ;AAClB,YAAI,CAAC,EAAE,OAAO,CAAC,EAAE;AAAG,iBAAO;AAE3B,cAAM,MAAMC,eAAc,CAAC;AAC3B,YAAI,CAACR,QAAO,EAAE,KAAK,KAAK,EAAE,CAAC;AAAG,iBAAO;AAErC,YAAI,KAAK,EAAE,CAAC,EAAE,OAAO,MAAM,GAAG;AAC5B,cAAI,CAAC,SAAS,EAAE,OAAO,MAAM,KAAK;AAChC,kBAAM,KAAK;AAAA,cACT,MAAMO,MAAK,QAAQA,MAAK;AAAA,cACxB,MAAMA,MAAK;AAAA,cACX,QAAQ,QAAQ,GAAG,SAAS,EAAE,MAAM,GAAG,CAAC;AAAA,YAC1C,CAAC;AACD,oBAAQ;AACR,gBAAI,CAAC,QAAQ,YAAY;AACvB,sBAAQ,EAAE,GAAG,OAAO,MAAM,CAAC;AAAA,YAC7B;AAAA,UACF;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,MAAM,IAAK,MAAM;AACf,UAAM,MAAM,KAAK;AACjB,aAAS,KAAK,IAAI;AAClB,UAAM,SAAS,KAAK,GAAG;AAEvB,QAAI,eAAe,KAAK,KAAK,QAAQ,IAAI,OAAO,SAAS,KAAK,CAAC,GAAG,QAAQ,MAAM;AAEhF,QAAI,CAAC,cAAc;AACjB,YAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AACrC,aAAK,KAAK;AAAA,UACR;AAAA,UACA;AAAA,YACE,GAAG;AAAA,YACH,GAAG;AAAA,cACD,IAAI,KAAK,KAAK,KAAK;AAAA,cACnB;AAAA,YACF;AAAA,UACF;AAAA,UACA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA,CAACD,MAAK,MAAM;AACV,gBAAIA;AAAK,qBAAOA,IAAG;AAAA;AACd,sBAAQ,CAAC;AAAA,UAChB;AAAA,QACF;AAAA,MACF,CAAC;AAED,qBAAe,KAAK,KAAK,QAAQ,IAAI,OAAO,SAAS,KAAK,CAAC,GAAG,QAAQ,MAAM;AAAA,IAC9E;AAEA,UAAM,UAAU;AAAA,MACd,GAAG;AAAA,MACH,GAAG;AAAA,QACD,IAAI,KAAK,KAAK,KAAK;AAAA,QACnB,OAAO;AAAA;AAAA,QACP,GAAG,KAAK;AAAA,QACR,GAAG;AAAA,QACH,KAAK,KAAK;AAAA,QACV,KAAK,KAAK;AAAA,MACZ;AAAA,IACF;AAEA,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,WAAK,KAAK,KAAK;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,CAACA,MAAK,OAAO;AACX,cAAIA;AAAK,mBAAOA,IAAG;AAAA;AACd,oBAAQ,EAAE,QAAQ,OAAO,aAAa,CAAC;AAAA,QAC9C;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,UAAW;AACT,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAI;AACF,aAAK,KAAK,QAAQ,OAAO;AAAA,MAC3B,SAAS,OAAO;AACd,eAAO,KAAK;AAAA,MACd;AAAA,IACF,CAAC;AAAA,EACH;AACF;AASA,SAAS,SAAU,KAAK,SAAS;AAC/B,MAAI,QAAQ,MAAM,QAAW;AAC3B,UAAM,IAAI,MAAM,qBAAqB;AAAA,EACvC;AACA,MAAI,QAAQ,EAAE,UAAU,KAAM;AAC5B,UAAM,IAAI,MAAM,yCAAyC;AAAA,EAC3D;AACA,MAAI,IAAI,WAAW,IAAI;AACrB,UAAM,IAAI,MAAM,yCAAyC;AAAA,EAC3D;AACA,MAAI,CAAC,OAAO,SAAS,QAAQ,GAAG,GAAG;AACjC,UAAM,IAAI,MAAM,mDAAmD;AAAA,EACrE;AACA,MAAI,QAAQ,QAAQ,QAAW;AAC7B,UAAM,IAAI,MAAM,+CAA+C;AAAA,EACjE;AACA,MAAI,OAAO,QAAQ,QAAQ,UAAU;AACnC,UAAM,IAAI,MAAM,4BAA4B;AAAA,EAC9C;AAEA,MAAI,CAACN,QAAO,QAAQ,KAAKQ,eAAc,OAAO,GAAG,GAAG,GAAG;AACrD,UAAM,IAAI,MAAM,mBAAmB;AAAA,EACrC;AACF;AAKA,SAAS,KAAM,OAAO;AACpB,SAAO,eAAAC,QAAO,WAAW,MAAM,EAAE,OAAO,KAAK,EAAE,OAAO;AACxD;AAOA,SAASJ,mBAAmB,IAAI,OAAO,OAAO;AAC5C,SAAO;AAAA,IACL;AAAA,IACA,GAAG,MAAM;AAAA,IACT,KAAK,MAAM;AAAA,IACX,GAAG,MAAM;AAAA,IACT,KAAK,MAAM;AAAA,IACX;AAAA,EACF;AACF;AAEA,IAAM,UAAN,MAAc;AAAA;AAAA;AAAA;AAAA,EAIZ,YAAa,UAAU;AACrB,SAAK,YAAY,YAAY;AAE7B,SAAK,UAAU,CAAC;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAkB,KAAK;AACrB,UAAM,WAAW,YAAAH,QAAK,KAAK,KAAK,WAAW,oBAAoB;AAE/D,QAAI;AACF,YAAM,OAAO,UAAAQ,QAAG,aAAa,QAAQ;AACrC,YAAM,SAAS,KAAK,SAAS;AAC7B,YAAM,QAAQ,KAAK,MAAM,MAAM;AAE/B,iBAAW,QAAQ,OAAO;AACxB,YAAI,QAAQ,IAAI;AAAA,MAClB;AAAA,IACF,SAAS,OAAO;AACd,UAAI,MAAM,SAAS;AAAU,cAAM;AAAA,IACrC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAkB,KAAK;AACrB,UAAM,WAAW,YAAAR,QAAK,KAAK,KAAK,WAAW,oBAAoB;AAE/D,UAAM,QAAQ,IAAI,OAAO,EAAE;AAC3B,UAAM,OAAO,KAAK,UAAU,KAAK;AAEjC,QAAI;AACF,gBAAAQ,QAAG,cAAc,UAAU,IAAI;AAAA,IACjC,SAAS,OAAO;AACd,UAAI,MAAM,SAAS;AAAU,cAAM;AACnC,gBAAAA,QAAG,UAAU,KAAK,SAAS;AAC3B,gBAAAA,QAAG,cAAc,UAAU,IAAI;AAAA,IACjC;AAAA,EACF;AACF;AAEA,IAAO,cAAQP;;;AOzTf,IAAAQ,cAAiB;AACjB,IAAAC,qBAAiB;;;ACFjB,IAAAC,cAAgB;AAChB,wBAAgB;AAChB,IAAAC,2BAAmB;AAInB,IAAMC,UAAS,yBAAAC,QAAO;AAEtB,IAAqB,eAArB,MAAqB,cAAa;AAAA;AAAA,EAEhC;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,OAAO,WAAY,SAAS,QAAQ,UAAU,CAAC,GAAG;AAChD,UAAM,SAAS,YAAAC,QAAI,OAAO,QAAQ,SAAS;AAE3C,WAAO,UAAU,OAAO,QAAQ,IAAI,YAAU;AAC5C,aAAO,OAAO,cAAc,QAAQ,OAAO,IAAI;AAC/C,aAAO;AAAA,IACT,CAAC;AAED,UAAM,eAAe,IAAI,cAAa;AACtC,iBAAa,UAAU;AAEvB,UAAM,YAAY,KAAK,KAAK,QAAQ,aAAc,KAAK,IAAI,IAAI,GAAK;AACpE,UAAM,gBAAgB,kBAAAC,QAAI,OAAO,MAAM;AAEvC,UAAM,WAAWC,eAAc,EAAE,KAAK,WAAW,GAAG,cAAc,CAAC;AAEnE,UAAM,YAAY,OAAO,MAAM,yBAAAH,QAAO,iBAAiB;AACvD,6BAAAA,QAAO,qBAAqB,WAAW,UAAU,QAAQ,SAAS;AAElE,iBAAa,aAAa;AAC1B,iBAAa,aAAa,QAAQ;AAElC,UAAM,QAAQ,OAAO,MAAM,cAAc,SAAS,EAAE;AACpD,UAAM,IAAI,SAAS;AACnB,UAAM,iBAAiB,OAAO,SAAS,GAAG,EAAE;AAC5C,UAAM,IAAI,eAAe,EAAE;AAE3B,iBAAa,SAAS;AAEtB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,OAAO,UAAW,WAAW,OAAO;AAClC,UAAM,SAAS,OAAO,KAAK,KAAK;AAEhC,QAAI,OAAO,SAAS,IAAI;AACtB,YAAM,IAAI,MAAM,0EAA0E,OAAO,MAAM,EAAE;AAAA,IAC3G;AACA,QAAI,OAAO,SAAS,MAAM;AACxB,YAAM,IAAI,MAAM,oFAAoF,OAAO,MAAM,EAAE;AAAA,IACrH;AAEA,UAAM,MAAM,OAAO,OAAO,gBAAgB,EAAE,CAAC;AAC7C,UAAM,IAAI,OAAO,SAAS,EAAE;AAC5B,UAAM,MAAM,OAAO,SAAS,GAAG,EAAE;AAEjC,WAAO,cAAa,cAAc;AAAA,MAChC,GAAG;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,cAAe,MAAM;AAC1B,UAAM,YAAY,KAAK;AACvB,UAAM,YAAY,KAAK;AACvB,UAAM,gBAAgB,OAAO,KAAK,KAAK,CAAC;AACxC,UAAM,YAAY,KAAK;AAEvB,UAAM,WAAWG,eAAc,EAAE,KAAK,WAAW,GAAG,cAAc,CAAC;AAEnE,UAAM,QAAQJ,QAAO,WAAW,UAAU,SAAS;AAEnD,QAAI,CAAC,OAAO;AACV,YAAM,MAAM,mBAAmB;AAAA,IACjC;AAEA,UAAM,SAAS,kBAAAG,QAAI,OAAO,aAAa;AAEvC,UAAM,eAAe,IAAI,cAAa;AAEtC,iBAAa,aAAa;AAC1B,iBAAa,UAAU;AACvB,iBAAa,aAAa;AAE1B,UAAM,SAAS,OAAO,MAAM,KAAK,EAAE,SAAS,EAAE;AAC9C,WAAO,IAAI,SAAS;AACpB,WAAO,iBAAiB,OAAO,SAAS,GAAG,EAAE;AAC7C,WAAO,IAAI,eAAe,EAAE;AAE5B,iBAAa,SAAS;AAEtB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,gBAAiB,MAAM;AACrB,UAAM,SAAS,YAAAD,QAAI,OAAO,KAAK,UAAU,CAAC;AAC1C,UAAM,iBAAiB,cAAc,QAAQ,IAAI;AAEjD,WAAO,KAAK,OAAO,EAChB,QACA,OAAO,CAAC,OAAO,GAAG,SAAS,cAAc;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAa;AACX,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,SAAU;AACR,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAa;AACX,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAa;AACX,WAAO,KAAK,OAAO,SAAS,GAAG,EAAE;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAAS;AACP,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAa;AACX,WAAO;AAAA,MACL,GAAG,KAAK,UAAU;AAAA,MAClB,KAAK,KAAK,UAAU;AAAA,MACpB,KAAK,KAAK,UAAU;AAAA,MACpB,GAAG,KAAK,OAAO,SAAS,EAAE;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAQ;AACN,WAAO,KAAK,OAAO,SAAS;AAAA,EAC9B;AACF;AASA,SAAS,cAAe,QAAQ,MAAM;AACpC,MAAI,KAAK,SAAS,GAAG,GAAG;AACtB,WAAO,KAAK,MAAM,GAAG,EAAE;AAAA,EACzB;AAAC;AAED,QAAM,QAAQ,KAAK,MAAM,GAAG;AAC5B,QAAM,OAAO,MAAM,MAAM,SAAS,CAAC;AAEnC,MAAI,SAAS,QAAQ;AAEnB,WAAO;AAAA,EACT,WAAW,SAAS,OAAO,KAAK,WAAW,GAAG;AAE5C,WAAO;AAAA,EACT;AAEA,SAAO,KAAK,OAAO,GAAG,EAAE,OAAO,MAAM;AACvC;;;ADlOO,IAAMG,gBAAe;AACrB,IAAMC,OAAM,YAAAC;AAIZ,IAAM,QAAN,MAAY;AAAA,EACjB,OAAO,kBAAkB;AAAA,EACzB,OAAO,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQtB,aAAa,SAAU,OAAO,cAAc;AAC1C,UAAM,KAAKC,KAAI,OAAO,aAAa,UAAU,CAAC;AAC9C,UAAM,MAAM,MAAM,QAAQ,QAAQ,EAAE,IAAI,MAAM;AAE9C,WAAO;AAAA,MACL;AAAA,MACA,EAAE,QAAQ,OAAO,MAAM,aAAa,MAAM,EAAE;AAAA,IAC9C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,aAAa,SAAU,OAAO,WAAW;AACvC,UAAM,KAAKA,KAAI,OAAO,SAAS;AAC/B,UAAM,MAAM,MAAM,QAAQ,QAAQ,EAAE,IAAI,MAAM;AAE9C,UAAM,WAAW,MAAM,MAAM,GAAG;AAChC,UAAM,QAAQ,OAAO,KAAK,MAAM,SAAS,YAAY,CAAC;AAEtD,WAAOC,cAAa,UAAU,WAAW,KAAK;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,aAAa,QAAS,cAAc;AAClC,UAAM,MAAM,IAAI,YAAI;AAEpB,WAAO,IAAI,IAAI,aAAa,UAAU,CAAC,EACpC,KAAK,MAAM,IAAI,EACf,MAAM,MAAM,KAAK,EACjB,QAAQ,MAAM,IAAI,QAAQ,CAAC;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,aAAa,QAAS,KAAK,UAAU,CAAC,GAAG;AACvC,UAAM,MAAM,IAAI,YAAI;AACpB,QAAI;AACF,YAAM,SAAS,MAAM,IAAI,IAAI,UAAU,GAAG,GAAG,OAAO,EACjD,QAAQ,MAAM,IAAI,QAAQ,CAAC;AAE9B,UAAI,CAAC;AAAQ,eAAO;AAEpB,aAAO;AAAA,QACL,cAAcA,cAAa,cAAc,MAAM;AAAA,QAC/C,OAAO,OAAO;AAAA,MAChB;AAAA,IACF,SAAS,OAAO;AACd,UAAI,QAAQ;AAEZ,YAAM;AAAA,IACR;AAAA,EACF;AACF;;;AhBxFA,IAAAC,qBAA0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAI1C,IAAM,cAAc;AACpB,IAAM,MAAM;AAYN,IAAO,SAAP,MAAO,QAAM;;;;;;;EAQV,OAAa,cAAc,EAAE,KAAK,OAAM,GAG9C;;;AACC,YAAMC,YAAiC;QACrC,IAAI;;AAGN,YAAM,YAAY,oBAAI,IAAG;AAEzB,iBAAW,UAAU,OAAO,SAAS;AACnC,YAAI,OAAO,SAAS;AAAO;AAE3B,cAAM,WAAU,KAAA,OAAO,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE,SAAQ;AAErC,cAAM,cAAa,KAAA,OAAO,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE,MAAM,GAAG,EAAE,CAAC,EAAE,UAAU,GAAG,CAAC;AAG5D,gBAAQ,YAAY;UAClB,KAAK,KAAK;AACR,kBAAM,EAAE,IAAI,GAAG,EAAC,IAAK,QAAO,aAAa,EAAE,MAAM,QAAO,CAAE;AAC1D,kBAAM,oBAAkE;cACtE,KAAK;gBACH,KAAM;gBACN,KAAM;gBACN,KAAM;;cAER,KAAK;gBACH,KAAM;gBACN,KAAM;gBACN,KAAM;;;AAGV,kBAAM,YAAY,kBAAkB,CAAC;AACrC,gBAAI,CAAC,WAAW;AACd,oBAAM,IAAI,MAAM,sBAAsB;;AAGxC,kBAAM,eAAe,MAAM,oBAAK,SAAQ,OAAA,OAAA,OAAA,OAAA,CAAA,GACnC,SAAS,GAAA,EACZ,KAAc,IACd,aAAc,sBAAQ,UAAU,CAAC,EAAE,aAAY,GAC/C,SAAc,SAAQ,CAAA,CAAA;AAGxB,gBAAI,CAACA,UAAS,oBAAoB;AAChC,cAAAA,UAAS,qBAAqB,CAAA;;AAEhC,YAAAA,UAAS,mBAAmB,KAAK;cAC/B,IAAe,GAAG,GAAG,IAAI,EAAE;cAC3B,MAAe;cACf,YAAe;cACf;aACD;AACD,sBAAU,IAAI,OAAO,MAAM,EAAE;AAE7B;;UAGF,KAAK,KAAK;AACR,kBAAM,EAAC,IAAI,KAAK,GAAG,OAAO,IAAG,IAAI,QAAO,aAAa,EAAE,MAAM,QAAO,CAAE;AAEtE,gBAAI,CAACA,UAAS,SAAS;AACrB,cAAAA,UAAS,UAAU,CAAA;;AAErB,YAAAA,UAAS,QAAQ,KAAK;cACpB,IAAkB,GAAG,GAAG,IAAI,GAAG;cAC/B,MAAkB;cAClB,iBAAkB;aACnB;AAED;;;;AAMN,YAAM,YAAY,IAAI,MAAM,UAAU,EAAE,CAAC;AACzC,YAAM,qBAAqB,CAAC,QAAQ,QAAQ,SAAS,EAAE;AAEvD,UAAI,iBAAiB;AACrB,YAAM,OAAO,OAAO,QACjB,OAAO,YAAS;AACf,YAAI,mBAAmB,SAAS,OAAO,IAAI,GAAG;AAC5C,2BAAiB,OAAO;AACxB,iBAAO;;AAET,eAAO;MACT,CAAC;AAEH,UAAI,KAAK,WAAW,GAAG;AACrB,cAAM,IAAI,MAAM,sBAAsB;;AAGxC,UAAI,KAAK,SAAS,GAAG;AACnB,cAAM,IAAI,MAAM,6BAA6B;;AAE/C,YAAM,aAAa,KAAK,CAAC;AACzB,YAAM,cAAa,KAAA,WAAW,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE,SAAQ,EAAG,MAAM,GAAG;AACxD,qBAAU,QAAV,eAAU,SAAA,SAAV,WAAY,QAAQ,YAAS;AAC3B,cAAM,CAAC,MAAM,GAAG,IAAI,OAAO,MAAM,GAAG;AACpC,YAAI,SAAS,QAAG,QAAH,QAAG,SAAA,SAAH,IAAK,MAAM,GAAG,EAAE,IAAI,QAAM,IAAI,UAAU,IAAI,IAAI,EAAE,IAAI,cAAc,EAAE,CAAC,EAAE;AACtF,gBAAQ,MAAM;UACZ,KAAK;AACH,YAAAA,UAAS,iBAAiB;AAC1B;UACF,KAAK;AACH,YAAAA,UAAS,kBAAkB;AAC3B;UACF,KAAK;AACH,YAAAA,UAAS,eAAe;AACxB;UACF,KAAK;AACH,YAAAA,UAAS,uBAAuB;AAChC;UACF,KAAK;AACH,YAAAA,UAAS,uBAAuB;AAChC;;MAEN,CAAC;AAED,aAAOA;;;;;;;;;;EAUF,OAAa,eAAe,EAAE,KAAK,QAAQ,YAAW,GAG1D;;AACD,YAAM,cAAc,IAAI,QAAQ,YAAY,EAAE;AAC9C,YAAM,iBAAiB,IAAI,WAAWC,KAAI,OAAO,WAAW,CAAC;AAC7D,YAAM,WAAW,MAAM,MAAM,SAAS,OAAO,cAAc;AAC3D,UAAI,UAAU;AACZ,eAAO,MAAM,QAAO,cAAc,EAAE,KAAK,QAAQ,SAAS,OAAM,EAAE,CAAE;;AAEtE,YAAM,IAAI,MAAM,iBAAiB;IACnC,CAAC;;;;;;;;;;EAUM,OAAa,mBAAmB,EAAE,SAAS,aAAa,QAAQ,YAAW,GAIjF;;AACC,YAAM,SAAS,MAAM,QAAO,YAAY,EAAE,YAAW,CAAE;AACvD,YAAM,eAAe;QACnB,WAAY,QAAQ,UAAU;QAC9B,WAAY,IAAI,WAAW,CAAC,GAAG,QAAQ,WAAW,UAAU,GAAG,QAAQ,UAAU,QAAQ,CAAC;;AAE5F,YAAM,eAAeC,cAAa,WAAW,cAAc,MAAM;AACjE,YAAM,UAAU,MAAM,MAAM,SAAS,OAAO,YAAY;AAExD,aAAO,QAAQ;IACjB,CAAC;;;;;;;;EAQM,OAAa,YAAY,EAAE,YAAW,GAAgC;;;AAC3E,YAAM,SAA0B;QAC9B,IAAU;QACV,MAAU;QACV,OAAU;QACV,SAAU,CAAA;;AAGZ,YAAM,QAAkB,CAAA;AACxB,YAAM,SAAmB,CAAA;AACzB,YAAM,aAAuB,CAAA;AAC7B,YAAM,YAAY,oBAAI,IAAG;AAGzB,iBAAW,MAAM,YAAY,oBAAoB;AAC/C,cAAM,QAAQ,YAAY,mBAAmB,QAAQ,EAAE;AACvD,cAAM,mBAAmB,IAAI,KAAK;AAClC,YAAI,OAAO,QAAO,mBAAmB,EAAE,YAAY,GAAG,GAAE,CAAE;AAC1D,kBAAU,IAAI,MAAM,gBAAgB;AAEpC,YAAI;AACJ,gBAAQ,GAAG,aAAa,KAAK;UAC3B,KAAK;AACH,sBAAU;AACV;UACF,KAAK;AACH,sBAAU;AACV;UACF;AACE,sBAAU;;AAGd,cAAM,YAAY,MAAM,oBAAK,eAAe,EAAE,KAAK,GAAG,aAAY,CAAE;AACpE,cAAM,eAAe,sBAAQ,WAAW,UAAU,QAAQ,EAAE,YAAW;AAEvE,cAAM,YAAuB;UAC3B,MAAO;UACP,MAAO,IAAI,gBAAgB;UAC3B,KAAO;UACP,MAAO,MAAM,IAAI,MAAM,OAAO,MAAM,YAAY;;AAGlD,eAAO,QAAQ,KAAK,SAAS;AAC7B,cAAM,KAAK,gBAAgB;;AAI7B,OAAA,KAAA,YAAY,aAAO,QAAA,OAAA,SAAA,SAAA,GAAE,QAAQ,CAAC,SAAS,UAAS;AAC9C,cAAM,mBAAmB,IAAI,KAAK;AAClC,YAAI,MAAM,QAAO,mBAAmB,EAAE,YAAY,QAAQ,GAAE,CAAE;AAC9D,cAAM,gBAA2B;UAC/B,MAAO;UACP,MAAO,IAAI,gBAAgB;UAC3B,KAAO;UACP,MAAO,MAAM,GAAG,MAAM,QAAQ,IAAI,QAAQ,QAAQ,eAAe;;AAGnE,eAAO,QAAQ,KAAK,aAAa;AACjC,eAAO,KAAK,gBAAgB;MAC9B,CAAC;AAGD,UAAI,MAAM,QAAQ;AAChB,mBAAW,KAAK,MAAM,MAAM,KAAK,GAAG,CAAC,EAAE;;AAEzC,UAAI,OAAO,QAAQ;AACjB,mBAAW,KAAK,OAAO,OAAO,KAAK,GAAG,CAAC,EAAE;;AAI3C,UAAI,YAAY,gBAAgB;AAC9B,cAAM,UAAoB,YAAY,eACnC,IAAI,QAAM,QAAO,mBAAmB,EAAE,YAAY,GAAE,CAAE,CAAC,EACvD,OAAO,QAAM,UAAU,IAAI,EAAE,CAAC,EAC9B,IAAI,QAAM,UAAU,IAAI,EAAE,CAAW;AACxC,YAAI,QAAQ,QAAQ;AAClB,qBAAW,KAAK,QAAQ,QAAQ,KAAK,GAAG,CAAC,EAAE;;;AAG/C,UAAI,YAAY,iBAAiB;AAC/B,cAAM,UAAoB,YAAY,gBACnC,IAAI,QAAM,QAAO,mBAAmB,EAAE,YAAY,GAAE,CAAE,CAAC,EACvD,OAAO,QAAM,UAAU,IAAI,EAAE,CAAC,EAC9B,IAAI,QAAM,UAAU,IAAI,EAAE,CAAW;AACxC,YAAI,QAAQ,QAAQ;AAClB,qBAAW,KAAK,OAAO,QAAQ,KAAK,GAAG,CAAC,EAAE;;;AAG9C,UAAI,YAAY,cAAc;AAC5B,cAAM,UAAoB,YAAY,aACnC,IAAI,QAAM,QAAO,mBAAmB,EAAE,YAAY,GAAE,CAAE,CAAC,EACvD,OAAO,QAAM,UAAU,IAAI,EAAE,CAAC,EAC9B,IAAI,QAAM,UAAU,IAAI,EAAE,CAAW;AACxC,YAAI,QAAQ,QAAQ;AAClB,qBAAW,KAAK,OAAO,QAAQ,KAAK,GAAG,CAAC,EAAE;;;AAG9C,UAAI,YAAY,sBAAsB;AACpC,cAAM,UAAoB,YAAY,qBACnC,IAAI,QAAM,QAAO,mBAAmB,EAAE,YAAY,GAAE,CAAE,CAAC,EACvD,OAAO,QAAM,UAAU,IAAI,EAAE,CAAC,EAC9B,IAAI,QAAM,UAAU,IAAI,EAAE,CAAW;AACxC,YAAI,QAAQ,QAAQ;AAClB,qBAAW,KAAK,OAAO,QAAQ,KAAK,GAAG,CAAC,EAAE;;;AAG9C,UAAI,YAAY,sBAAsB;AACpC,cAAM,UAAoB,YAAY,qBACnC,IAAI,QAAM,QAAO,mBAAmB,EAAE,YAAY,GAAE,CAAE,CAAC,EACvD,OAAO,QAAM,UAAU,IAAI,EAAE,CAAC,EAC9B,IAAI,QAAM,UAAU,IAAI,EAAE,CAAW;AACxC,YAAI,QAAQ,QAAQ;AAClB,qBAAW,KAAK,OAAO,QAAQ,KAAK,GAAG,CAAC,EAAE;;;AAK9C,aAAO,QAAQ,KAAK;QAClB,MAAO;QACP,MAAO;QACP,KAAO;QACP,MAAO,WAAW,KAAK,GAAG;OAC3B;AAED,aAAO;;;;;;;;;EASD,OAAO,mBAAmB,EAAE,WAAU,GAA0B;AACtE,WAAO,WAAW,SAAS,GAAG,IAAI,WAAW,UAAU,WAAW,QAAQ,GAAG,IAAI,CAAC,IAAI;EACxF;;;;;;;EAQQ,OAAO,aAAa,EAAE,KAAI,GAAoB;AACpD,WAAO,KAAK,MAAM,GAAG,EAAE,OAAO,CAAC,KAAK,SAAQ;AAC1C,YAAM,CAAC,KAAK,KAAK,IAAI,KAAK,MAAM,GAAG;AACnC,UAAI,GAAG,IAAI;AACX,aAAO;IACT,GAAG,CAAA,CAA+B;EACpC;;;;AkBhWF,IAAAC,cAAgB;AAChB,IAAAC,iBAAqD;;;ACFrD;;;;;;;;;0BAAsC;AAe/B,IAAM,YAAY;AAoBnB,SAAU,YAAY,SAI3B;;AACC,QAAM,EAAE,aAAa,IAAI,KAAI,IAAK,YAAO,QAAP,YAAO,SAAP,UAAW,CAAA;AAE7C,UAAO,MAAA,KAAA,gBAAW,QAAX,gBAAW,SAAA,SAAX,YAAa,aAAO,QAAA,OAAA,SAAA,SAAA,GAAE,OAAO,aAAU;AAC5C,QAAI,MAAM,QAAQ,OAAO;AAAI,aAAO;AACpC,QAAI,QAAQ,QAAQ,SAAS;AAAM,aAAO;AAC1C,WAAO;EACT,CAAC,OAAC,QAAA,OAAA,SAAA,KAAI,CAAA;AACR;AAEM,SAAU,yBAAyB,SAIxC;AACC,QAAM,EAAE,aAAa,cAAc,mBAAkB,IAAK;AAC1D,MAAI,CAAC;AAAa,UAAM,IAAI,MAAM,2CAA2C;AAC7E,MAAI,CAAC,YAAY;AAAoB,UAAM,IAAI,MAAM,8DAA8D;AAEnH,WAAS,UAAU,YAAY,oBAAoB;AACjD,QAAI,sBAAsB,wBAAwB,QAAQ;AACxD,UAAI,uBAAuB,OAAO,oBAAoB;AACpD,eAAO,OAAO;;eAEP,gBAAgB,SAAS,gBACzB,kBAAkB,UAAU,SAAS,OAAO,cAAc;AACnE,UAAI,aAAa,QAAQ,OAAO,aAAa,OACvC,aAAa,MAAM,OAAO,aAAa,GAAG;AAC9C,eAAO,OAAO;;;;AAItB;AAYM,SAAU,2BAA2B,SAE1C;AACC,QAAM,EAAE,YAAW,IAAK;AAExB,MAAI,QAAkB,CAAA;AAEtB,WAAS,OAAO,aAAa;AAC3B,QAAI,OAAO,YAAY,GAAG,MAAM,UAAU;AACxC,cAAQ,MAAM,OAAO,2BAA2B;QAC9C,aAAa,YAAY,GAAG;OAC7B,CAAC;eAEO,QAAQ,QAAQ;AACzB,YAAM,KAAK,YAAY,GAAG,CAAC;;;AAI/B,SAAO,CAAC,GAAG,IAAI,IAAI,KAAK,CAAC;AAC3B;AAQM,SAAU,qBAAqB,UAA4D;AAC/F,SAAO,aAAa,UAClB,OAAO,aAAa,YACpB,CAAC,MAAM,QAAQ,QAAQ,KACvB,WAAW,YACX,iBAAiB;AACrB;AAEM,SAAU,SAAS,EAAE,OAAM,GAAsB;AACrD,QAAM,gBAAuB,2BAAM,MAAM;AAEzC,SAAO;AACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ADxFM,IAAO,eAAP,MAAmB;;;;;;EAShB,OAAa,OAAO,SAA6B;;AACtD,YAAM,EAAE,SAAS,QAAQ,eAAe,SAAQ,IAAK,YAAO,QAAP,YAAO,SAAP,UAAW,CAAA;AAGhE,YAAM,SAAS,MAAM,KAAK,eAAe,EAAE,QAAQ,cAAa,CAAE;AAGlE,YAAM,KAAK,MAAM,KAAK,iBAAiB,EAAE,KAAK,OAAO,YAAY,aAAY,CAAE;AAG/E,YAAM,mBAAwE,CAAA;AAC9E,YAAM,sBAAsB,OAAO,uBAAuB,IAAI,SAAM;AAClE,mBAAW,gBAAgB,IAAI,eAAe;AAC5C,cAAI,iBAAiB,YAAY,GAAG;AAClC,6BAAiB,YAAY,EAAE,KAAK,IAAI,IAAI,aAAa,GAAG,EAAE;iBACzD;AACL,6BAAiB,YAAY,IAAI,CAAC,IAAI,IAAI,aAAa,GAAG,EAAE;;;AAIhE,eAAO;UACL,IAAe,GAAG,EAAE,IAAI,IAAI,aAAa,GAAG;UAC5C,MAAe;UACf,YAAe;UACf,cAAe,IAAI;;MAEvB,CAAC;AAGD,mBAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,IAAI,aAAU;AACtB,gBAAQ,KAAK,GAAG,EAAE,IAAI,QAAQ,EAAE;MAClC,CAAC;AACD,YAAMC,YAAQ,OAAA,OAAA,OAAA,OAAA,EACZ,IACA,oBAAoB,CAAC,GAAG,mBAAmB,EAAC,GACzC,gBAAgB,GAChB,YAAY,EAAC,SAAS,SAAQ,CAAC;AAGpC,UAAI,SAAS;AACX,cAAM,KAAK,QAAQ,EAAE,QAAQ,aAAaA,UAAQ,CAAE;;AAEtD,aAAO;QACL,KAAWA,UAAS;QACpB,UAAWA;QACX;;IAEJ,CAAC;;;;;;;EAQM,OAAa,mBAAmB,SAGtC;;AACC,YAAM,EAAC,cAAc,MAAK,IAAI;AAE9B,UAAI;AAEJ,cAAQ,cAAc;QACpB,KAAK,WAAW;AACd,0BAAgB,MAAM,IAAI,8BAAc,EAAG,YAAY;YACrD,WAAc,EAAC,MAAM,SAAS,YAAY,UAAS;YACnD,aAAc;YACd,WAAc,CAAC,QAAQ,QAAQ;WAChC;AACD;;QAGF,KAAK,aAAa;AAChB,0BAAgB,MAAM,IAAI,8BAAc,EAAG,YAAY;YACrD,WAAc,EAAC,MAAM,SAAS,YAAY,YAAW;YACrD,aAAc;YACd,WAAc,CAAC,QAAQ,QAAQ;WAChC;AACD;;QAGF,SAAS;AACP,gBAAM,IAAI,MAAM,kCAAkC,YAAY,GAAG;;;AAKrE,YAAM,aAAa,MAAM,oBAAK,mBAAmB,EAAC,SAAS,cAAa,CAAC;AAGzE,UAAI,OAAO;AACT,mBAAW,cAAc,MAAM;AAC/B,mBAAW,aAAa,MAAM;aACzB;AAEL,cAAM,gBAAgB,MAAM,oBAAK,cAAc,EAAC,KAAK,WAAW,aAAY,CAAC;AAC7E,mBAAW,cAAc,MAAM;AAC/B,mBAAW,aAAa,MAAM;;AAGhC,aAAO;IACT,CAAC;;;;;;;EAOM,OAAa,eAAe,SAElC;;;;AACC,UAAI,EAAE,SAAS,CAAA,EAAE,IAAK,YAAO,QAAP,YAAO,SAAP,UAAW,CAAA;AAEjC,UAAI,CAAC,OAAO,aAAa;AACvB,eAAO,cAAc,MAAM,KAAK,mBAAmB;UACjD,cAAe;UACf,OAAe;SAChB;iBAGQ,OAAO,YAAY,aAAa,QAAQ,KAAK;AACtD,cAAM,IAAI,MAAM,uCAAuC;;AAIzD,YAAM,mCAAgC,OAAA,OAAA,OAAA,OAAA,CAAA,GACjC,OAAO,WAAW,GAAA,EACrB,eAAe,CAAC,kBAAkB,mBAAmB,wBAAwB,sBAAsB,EAAC,CAAA;AAGtG,UAAI,CAAC,OAAO,wBAAwB;AAClC,eAAO,yBAAyB,CAAC,gCAAgC;iBACxD,OAAO,uBAAuB,OAAO,SAAO,IAAI,aAAa,QAAQ,GAAG,EAAE,WAAW,GAAG;AACjG,eAAO,uBAAuB,KAAK,gCAAgC;;AAIrE,UAAI,OAAO,wBAAwB;AACjC,mBAAW,OAAO,OAAO,wBAAwB;AAC/C,cAAI,IAAI;AAAc,aAAA,MAAA,KAAA,IAAI,cAAa,SAAG,QAAA,OAAA,SAAA,KAAA,GAAH,MAAQ,MAAM,oBAAK,cAAc,EAAC,KAAK,IAAI,aAAY,CAAC;AAC/F,cAAI,IAAI;AAAe,aAAA,MAAA,KAAA,IAAI,eAAc,SAAG,QAAA,OAAA,SAAA,KAAA,GAAH,MAAQ,MAAM,oBAAK,cAAc,EAAC,KAAK,IAAI,cAAa,CAAC;;;AAItG,aAAO;;;;;;;;EAQF,OAAa,iBAAiB,SAEpC;;AACC,YAAM,EAAC,IAAG,IAAI;AAEd,YAAM,YAAY,MAAM,oBAAK,eAAe,EAAC,IAAG,CAAC;AACjD,YAAM,aAAa,YAAAC,QAAI,OAAO,UAAU,QAAQ;AAChD,aAAO,aAAa;IACtB,CAAC;;;;;;;EAOM,OAAa,yBAAyB,SAE5C;;AACC,YAAM,EAAC,IAAG,IAAI;AACd,YAAM,YAAY,MAAM,oBAAK,eAAe,EAAC,IAAG,CAAC;AACjD,aAAO,YAAAA,QAAI,OAAO,UAAU,QAAQ;IACtC,CAAC;;;;;;;;EAQM,OAAa,QAAQ,EAAE,aAAa,OAAM,GAGhD;;AACC,YAAM,kBAAkB,MAAM,oBAAK,eAAe,EAAC,KAAK,OAAO,YAAY,aAAY,CAAC;AACxF,YAAM,mBAAmB,MAAM,oBAAK,eAAe,EAAC,KAAK,OAAO,YAAY,cAAa,CAAC;AAE1F,YAAM,cAAc,MAAM,OAAO,mBAAmB;QAClD,SAAS;UACP,WAAa;UACb,YAAa;;QAEf;OACD;AAED,aAAO;IACT,CAAC;;;;;;;;;;EAUM,OAAa,QAAQ,SAG3B;;AACC,YAAM,EAAE,QAAQ,mBAAmB,EAAC,IAAK;AAGzC,YAAM,YAAY,SAAS,EAAE,OAAM,CAAE;AACrC,UAAI,CAAC,WAAW;AACd,eAAO;UACL,YAAwB;UACxB,aAAwB;UACxB,qBAAwB,CAAA;UACxB,uBAAwB;YACtB,aAAe;YACf,OAAe;YACf,cAAe,qBAAqB,MAAM;;;;AAKhD,UAAI,UAAU,WAAW,OAAO;AAC9B,eAAO;UACL,YAAwB;UACxB,aAAwB;UACxB,qBAAwB,CAAA;UACxB,uBAAwB;YACtB,aAAe;YACf,OAAe;YACf,cAAe,yBAAyB,UAAU,MAAM;;;;AAK9D,YAAM,cAAc,MAAM,OAAO,eAAe,EAAE,KAAK,UAAU,IAAG,CAAE;AAEtE,aAAO;QACL,YAAwB;QACxB;QACA,qBAAwB,CAAA;QACxB,uBAAwB;UACtB,aAAc;UACd,KAAc;YACZ,WAAmB,UAAU;YAC7B,kBAAmB,UAAU;YAC7B,QAAmB,UAAU;;;;IAIrC,CAAC;;;AAxQa,aAAA,aAAa;;;AElC7B,IAAAC,iBAAyC;AACzC,yBAA2B;AAE3B,IAAAC,iBAAqD;;;ACHrD,IAAA,oBAAe;EACb,yBAAyB;EACzB,kCAAkC;EAClC,4CAA4C;EAC5C,gCAAgC;EAChC,0BAA0B;EAC1B,gCAAgC;EAChC,iCAAiC;EACjC,WAAW;EACX,8BAA8B;EAC9B,8BAA8B;EAC9B,gCAAgC;EAChC,gCAAgC;EAChC,gCAAgC;EAChC,8BAA8B;EAC9B,mCAAmC;EACnC,yCAAyC;EACzC,4BAA4B;EAC5B,gCAAgC;EAChC,kCAAkC;EAClC,oBAAoB;;;;ACpBtB,IAAqB,WAArB,cAAsC,MAAK;EACzC,YAAoB,MAAc,SAAe;AAC/C,UAAM,GAAG,IAAI,KAAK,OAAO,EAAE;AADT,SAAA,OAAA;AAKlB,WAAO,eAAe,MAAM,WAAW,SAAS;EAClD;;;;ACVF,IAAM,QAAQ,IAAI,WAAW,CAAC;AAsC9B,IAAM,SAAS,OAAK;AAClB,MAAI,aAAa,cAAc,EAAE,YAAY,SAAS;AAAc,WAAO;AAC3E,MAAI,aAAa;AAAa,WAAO,IAAI,WAAW,CAAC;AACrD,MAAI,YAAY,OAAO,CAAC,GAAG;AACzB,WAAO,IAAI,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU;AAAA,EAC5D;AACA,QAAM,IAAI,MAAM,mCAAmC;AACrD;;;AC5BA,IAAM,UAAN,MAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMZ,YAAa,MAAM,QAAQ,YAAY;AACrC,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,aAAa;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAQ,OAAO;AACb,QAAI,iBAAiB,YAAY;AAC/B,aAAO,GAAG,KAAK,MAAM,GAAG,KAAK,WAAW,KAAK,CAAC;AAAA,IAChD,OAAO;AACL,YAAM,MAAM,mCAAmC;AAAA,IACjD;AAAA,EACF;AACF;AAiBA,IAAM,UAAN,MAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMZ,YAAa,MAAM,QAAQ,YAAY;AACrC,SAAK,OAAO;AACZ,SAAK,SAAS;AAEd,QAAI,OAAO,YAAY,CAAC,MAAM,QAAW;AACvC,YAAM,IAAI,MAAM,0BAA0B;AAAA,IAC5C;AAEA,SAAK;AAAA,IAAyC,OAAO,YAAY,CAAC;AAClE,SAAK,aAAa;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAKA,OAAQ,MAAM;AACZ,QAAI,OAAO,SAAS,UAAU;AAC5B,UAAI,KAAK,YAAY,CAAC,MAAM,KAAK,iBAAiB;AAChD,cAAM,MAAM,qCAAqC,KAAK,UAAU,IAAI,CAAC,KAAK,KAAK,IAAI,+CAA+C,KAAK,MAAM,EAAE;AAAA,MACjJ;AACA,aAAO,KAAK,WAAW,KAAK,MAAM,KAAK,OAAO,MAAM,CAAC;AAAA,IACvD,OAAO;AACL,YAAM,MAAM,mCAAmC;AAAA,IACjD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,GAAIC,UAAS;AACX,WAAO,GAAG,MAAMA,QAAO;AAAA,EACzB;AACF;AAYA,IAAM,kBAAN,MAAsB;AAAA;AAAA;AAAA;AAAA,EAIpB,YAAa,UAAU;AACrB,SAAK,WAAW;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,GAAIA,UAAS;AACX,WAAO,GAAG,MAAMA,QAAO;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAQ,OAAO;AACb,UAAM;AAAA;AAAA,MAAgC,MAAM,CAAC;AAAA;AAC7C,UAAMA,WAAU,KAAK,SAAS,MAAM;AACpC,QAAIA,UAAS;AACX,aAAOA,SAAQ,OAAO,KAAK;AAAA,IAC7B,OAAO;AACL,YAAM,WAAW,qCAAqC,KAAK,UAAU,KAAK,CAAC,+BAA+B,OAAO,KAAK,KAAK,QAAQ,CAAC,gBAAgB;AAAA,IACtJ;AAAA,EACF;AACF;AASO,IAAM,KAAK,CAAC,MAAM,UAAU,IAAI;AAAA;AAAA,EAA6C;AAAA,IAClF,GAAI,KAAK,YAAY,EAAE;AAAA;AAAA,MAAoC,KAAM;AAAA,IAAM,GAAG,KAAK;AAAA,IAC/E,GAAI,MAAM,YAAY,EAAE;AAAA;AAAA,MAAoC,MAAO;AAAA,IAAM,GAAG,MAAM;AAAA,EACpF;AAAE;AAaK,IAAM,QAAN,MAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOjB,YAAa,MAAM,QAAQ,YAAY,YAAY;AACjD,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,aAAa;AAClB,SAAK,aAAa;AAClB,SAAK,UAAU,IAAI,QAAQ,MAAM,QAAQ,UAAU;AACnD,SAAK,UAAU,IAAI,QAAQ,MAAM,QAAQ,UAAU;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA,EAKA,OAAQ,OAAO;AACb,WAAO,KAAK,QAAQ,OAAO,KAAK;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA,EAKA,OAAQ,OAAO;AACb,WAAO,KAAK,QAAQ,OAAO,KAAK;AAAA,EAClC;AACF;AAYO,IAAM,OAAO,CAAC,EAAE,MAAM,QAAQ,QAAAC,SAAQ,QAAAC,QAAO,MAClD,IAAI,MAAM,MAAM,QAAQD,SAAQC,OAAM;AA+BxC,IAAMC,UAAS,CAAC,QAAQC,WAAU,aAAa,SAAS;AAGtD,QAAM,QAAQ,CAAC;AACf,WAAS,IAAI,GAAG,IAAIA,UAAS,QAAQ,EAAE,GAAG;AACxC,UAAMA,UAAS,CAAC,CAAC,IAAI;AAAA,EACvB;AAGA,MAAI,MAAM,OAAO;AACjB,SAAO,OAAO,MAAM,CAAC,MAAM,KAAK;AAC9B,MAAE;AAAA,EACJ;AAGA,QAAM,MAAM,IAAI,WAAY,MAAM,cAAc,IAAK,CAAC;AAGtD,MAAI,OAAO;AACX,MAAI,SAAS;AACb,MAAI,UAAU;AACd,WAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAE5B,UAAM,QAAQ,MAAM,OAAO,CAAC,CAAC;AAC7B,QAAI,UAAU,QAAW;AACvB,YAAM,IAAI,YAAY,OAAO,IAAI,YAAY;AAAA,IAC/C;AAGA,aAAU,UAAU,cAAe;AACnC,YAAQ;AAGR,QAAI,QAAQ,GAAG;AACb,cAAQ;AACR,UAAI,SAAS,IAAI,MAAQ,UAAU;AAAA,IACrC;AAAA,EACF;AAGA,MAAI,QAAQ,eAAe,MAAQ,UAAW,IAAI,MAAQ;AACxD,UAAM,IAAI,YAAY,wBAAwB;AAAA,EAChD;AAEA,SAAO;AACT;AAQA,IAAMC,UAAS,CAAC,MAAMD,WAAU,gBAAgB;AAC9C,QAAM,MAAMA,UAASA,UAAS,SAAS,CAAC,MAAM;AAC9C,QAAM,QAAQ,KAAK,eAAe;AAClC,MAAI,MAAM;AAEV,MAAI,OAAO;AACX,MAAI,SAAS;AACb,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAEpC,aAAU,UAAU,IAAK,KAAK,CAAC;AAC/B,YAAQ;AAGR,WAAO,OAAO,aAAa;AACzB,cAAQ;AACR,aAAOA,UAAS,OAAQ,UAAU,IAAK;AAAA,IACzC;AAAA,EACF;AAGA,MAAI,MAAM;AACR,WAAOA,UAAS,OAAQ,UAAW,cAAc,IAAM;AAAA,EACzD;AAGA,MAAI,KAAK;AACP,WAAQ,IAAI,SAAS,cAAe,GAAG;AACrC,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AAaO,IAAM,UAAU,CAAC,EAAE,MAAM,QAAQ,aAAa,UAAAA,UAAS,MAAM;AAClE,SAAO,KAAK;AAAA,IACV;AAAA,IACA;AAAA,IACA,OAAQ,OAAO;AACb,aAAOC,QAAO,OAAOD,WAAU,WAAW;AAAA,IAC5C;AAAA,IACA,OAAQ,OAAO;AACb,aAAOD,QAAO,OAAOC,WAAU,aAAa,IAAI;AAAA,IAClD;AAAA,EACF,CAAC;AACH;;;ACtVO,IAAM,SAAS,QAAQ;AAAA,EAC5B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AAEM,IAAM,YAAY,QAAQ;AAAA,EAC/B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AAEM,IAAM,YAAY,QAAQ;AAAA,EAC/B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AAEM,IAAM,eAAe,QAAQ;AAAA,EAClC,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;;;ACtBD,IAAqBE,WAArB,MAAqB,SAAO;;;;EAInB,OAAO,OAAQ,SAAmB;AACvC,UAAM,iBAAiB,UAAU,WAAW,OAAO;AACnD,WAAO;EACT;;;;EAKO,OAAO,cAAe,gBAAwB,6BAAmC;AACtF,QAAI,CAAC,SAAQ,kBAAkB,cAAc,GAAG;AAC9C,YAAM,IAAI,SAAS,kBAAU,gCAAgC,SAAS,2BAA2B,4BAA4B;;AAG/H,WAAO,UAAU,WAAW,cAAc;EAC5C;;;;EAKO,OAAO,eAAgB,gBAAwB,6BAAmC;AACvF,UAAM,WAAW,SAAQ,cAAc,gBAAgB,2BAA2B;AAElF,WAAO,SAAQ,cAAc,QAAQ;EACvC;;;;EAKO,OAAO,kBAAmB,OAAa;AAM5C,UAAM,oBAAoB,mBAAmB,KAAK,KAAK;AACvD,WAAO;EACT;;;;EAKO,OAAO,cAAe,OAAa;AACxC,UAAM,QAAQ,IAAI,YAAW,EAAG,OAAO,KAAK;AAC5C,WAAO;EACT;;;;EAKO,OAAO,cAAe,OAAiB;AAC5C,UAAM,SAAS,IAAI,YAAW,EAAG,OAAO,KAAK;AAC7C,WAAO;EACT;;;;AChEF,UAAqB;;;ACGrB,IAAK;CAAL,SAAKC,mBAAgB;AACjB,EAAAA,kBAAA,QAAA,IAAA;AACA,EAAAA,kBAAA,SAAA,IAAA;AACF,GAHG,qBAAA,mBAAgB,CAAA,EAAA;AAKrB,IAAA,2BAAe;;;ACEf,IAAqB,iBAArB,MAAmC;;;;EAI1B,OAAO,2BAA4B,iBAA4B,kBAAkC;AACtG,UAAM,oBAAoB,oBAAI,IAAI,CAAC,OAAO,OAAO,KAAK,GAAG,CAAC;AAC1D,QAAI,qBAAqB,yBAAiB,SAAS;AACjD,wBAAkB,IAAI,GAAG;;AAE3B,eAAW,YAAY,iBAAiB;AACtC,UAAI,CAAC,kBAAkB,IAAI,QAAQ,GAAG;AACpC,cAAM,IAAI,SAAS,kBAAU,yCAAyC,8CAA8C,QAAQ,IAAI;;;AAIpI,QAAI,gBAAgB,QAAQ,aAAa;AACvC,YAAM,IAAI,SAAS,kBAAU,8BAA8B,6DAA6D,gBAAgB,GAAG,IAAI;;AAGjJ,QAAI,gBAAgB,QAAQ,MAAM;AAChC,YAAM,IAAI,SAAS,kBAAU,8BAA8B,sDAAsD,gBAAgB,GAAG,IAAI;;AAI1I,QAAI,gBAAgB,EAAE,WAAW,IAAI;AACnC,YAAM,IAAI,SAAS,kBAAU,gCAAgC,8CAA8C;;AAG7G,QAAI,gBAAgB,EAAE,WAAW,IAAI;AACnC,YAAM,IAAI,SAAS,kBAAU,gCAAgC,8CAA8C;;AAG7G,QAAI,qBAAqB,yBAAiB,YAAY,gBAAgB,MAAM,UAAa,gBAAgB,EAAE,WAAW,KAAK;AACzH,YAAM,IAAI,SAAS,kBAAU,gCAAgC,8CAA8C;;EAE/G;;;;EAKO,OAAO,WAAY,IAAU;AAClC,UAAM,cAAc;AACpB,QAAI,GAAG,SAAS,aAAa;AAC3B,YAAM,IAAI,SAAS,kBAAU,WAAW,iBAAiB,GAAG,MAAM,iCAAiC,WAAW,GAAG;;AAGnH,QAAI,CAACC,SAAQ,kBAAkB,EAAE,GAAG;AAClC,YAAM,IAAI,SAAS,kBAAU,iCAAiC,WAAW,EAAE,8BAA8B;;EAE7G;;;;EAKO,OAAO,0BAA2B,UAAgC;AAEvE,QAAI,aAAa,QAAW;AAC1B;;AAIF,UAAM,oBAA8C,oBAAI,IAAG;AAC3D,eAAW,WAAW,UAAU;AAC9B,UAAI,kBAAkB,IAAI,OAAO,GAAG;AAClC,cAAM,IAAI,SAAS,kBAAU,4BAA4B,uBAAuB,OAAO,sBAAsB;;AAE/G,wBAAkB,IAAI,OAAO;;EAEjC;;;;ACzEF,IAAqB,eAArB,MAAiC;;AAIjB,aAAA,+BAA+B;AAK/B,aAAA,mCAA2C;;;ACd3D,mBAA8B;AAM9B,IAAqB,oBAArB,MAAqB,mBAAiB;;;;EAI7B,OAAO,oBAAqB,SAAe;AAEhD,UAAM,oCAAoC,mBAAkB,6BAA6B,OAAO;AAChG,UAAM,sBAA2C,qBAAQ,iCAAiC;AAC1F,UAAM,eAAeC,SAAQ,cAAc,mBAAmB;AAC9D,WAAO;EACT;;;;EAKQ,OAAO,6BAA8B,SAAY;AACvD,eAAW,OAAO,SAAS;AACzB,UAAI,OAAO,QAAQ,GAAG,MAAM,UAAU;AACpC,2BAAkB,6BAA6B,QAAQ,GAAG,CAAC;iBAClD,QAAQ,GAAG,MAAM,QAAW;AACrC,eAAO,QAAQ,GAAG;;;AAItB,WAAO;EACT;;;;AC/BF,kBAA6B;;;ACE7B,IAAAC,iBAAmB;;;ACFnB,IAAI,WAAWC;AAEf,IAAI,MAAM;AAAV,IACI,OAAO;AADX,IAEI,SAAS,CAAC;AAFd,IAGI,MAAM,KAAK,IAAI,GAAG,EAAE;AAExB,SAASA,QAAO,KAAK,KAAK,QAAQ;AAChC,QAAM,OAAO,CAAC;AACd,WAAS,UAAU;AACnB,MAAI,YAAY;AAEhB,SAAM,OAAO,KAAK;AAChB,QAAI,QAAQ,IAAK,MAAM,MAAQ;AAC/B,WAAO;AAAA,EACT;AACA,SAAM,MAAM,QAAQ;AAClB,QAAI,QAAQ,IAAK,MAAM,MAAQ;AAC/B,aAAS;AAAA,EACX;AACA,MAAI,MAAM,IAAI,MAAM;AAEpB,EAAAA,QAAO,QAAQ,SAAS,YAAY;AAEpC,SAAO;AACT;AAEA,IAAIC,UAAS;AAEb,IAAI,QAAQ;AAAZ,IACI,SAAS;AAEb,SAAS,KAAK,KAAK,QAAQ;AACzB,MAAI,MAAS,GACT,SAAS,UAAU,GACnB,QAAS,GACT,UAAU,QACV,GACA,IAAI,IAAI;AAEZ,KAAG;AACD,QAAI,WAAW,GAAG;AAChB,WAAK,QAAQ;AACb,YAAM,IAAI,WAAW,yBAAyB;AAAA,IAChD;AACA,QAAI,IAAI,SAAS;AACjB,WAAO,QAAQ,MACV,IAAI,WAAW,SACf,IAAI,UAAU,KAAK,IAAI,GAAG,KAAK;AACpC,aAAS;AAAA,EACX,SAAS,KAAK;AAEd,OAAK,QAAQ,UAAU;AAEvB,SAAO;AACT;AAEA,IAAI,KAAK,KAAK,IAAI,GAAI,CAAC;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AAEvB,IAAI,SAAS,SAAU,OAAO;AAC5B,SACE,QAAQ,KAAK,IACb,QAAQ,KAAK,IACb,QAAQ,KAAK,IACb,QAAQ,KAAK,IACb,QAAQ,KAAK,IACb,QAAQ,KAAK,IACb,QAAQ,KAAK,IACb,QAAQ,KAAK,IACb,QAAQ,KAAK,IACA;AAEjB;AAEA,IAAI,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,QAAQA;AAAA,EACR,gBAAgB;AACpB;AAEA,IAAI,eAAe;AAEnB,IAAO,iBAAQ;;;ACzER,IAAM,WAAW,CAAC,KAAK,QAAQ,SAAS,MAAM;AACnD,iBAAO,OAAO,KAAK,QAAQ,MAAM;AACjC,SAAO;AACT;AAMO,IAAMC,kBAAiB,CAAC,QAAQ;AACrC,SAAO,eAAO,eAAe,GAAG;AAClC;;;AClBO,IAAM,SAAS,CAAC,MAAM,WAAW;AACtC,QAAM,OAAO,OAAO;AACpB,QAAM,aAAoBC,gBAAe,IAAI;AAC7C,QAAM,eAAe,aAAoBA,gBAAe,IAAI;AAE5D,QAAM,QAAQ,IAAI,WAAW,eAAe,IAAI;AAChD,EAAO,SAAS,MAAM,OAAO,CAAC;AAC9B,EAAO,SAAS,MAAM,OAAO,UAAU;AACvC,QAAM,IAAI,QAAQ,YAAY;AAE9B,SAAO,IAAI,OAAO,MAAM,MAAM,QAAQ,KAAK;AAC7C;AAsDO,IAAM,SAAN,MAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASlB,YAAa,MAAM,MAAM,QAAQ,OAAO;AACtC,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,QAAQ;AAAA,EACf;AACF;;;AChFO,IAAMC,QAAO,CAAC,EAAE,MAAM,MAAM,QAAAC,QAAO,MAAM,IAAI,OAAO,MAAM,MAAMA,OAAM;AAWtE,IAAM,SAAN,MAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOlB,YAAa,MAAM,MAAMA,SAAQ;AAC/B,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,SAASA;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAQ,OAAO;AACb,QAAI,iBAAiB,YAAY;AAC/B,YAAM,SAAS,KAAK,OAAO,KAAK;AAChC,aAAO,kBAAkB,aACd,OAAO,KAAK,MAAM,MAAM,IAE/B,OAAO,KAAK,YAAiB,OAAO,KAAK,MAAM,MAAM,CAAC;AAAA,IAC5D,OAAO;AACL,YAAM,MAAM,mCAAmC;AAAA,IAEjD;AAAA,EACF;AACF;;;AJ5CO,IAAM,SAASC,MAAK;AAAA,EACzB,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,CAAC,UAAU,OAAO,eAAAC,QAAO,WAAW,QAAQ,EAAE,OAAO,KAAK,EAAE,OAAO,CAAC;AAC9E,CAAC;AAEM,IAAM,SAASD,MAAK;AAAA,EACzB,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,WAAS,OAAO,eAAAC,QAAO,WAAW,QAAQ,EAAE,OAAO,KAAK,EAAE,OAAO,CAAC;AAC5E,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ADJD,IAAqB,YAArB,MAAqB,WAAS;;;;;EAKrB,OAAa,KAAM,SAAqB,8BAAoC;;AACjF,YAAM,mBAAmB,MAAM,KAAK,wBAAwB,SAAS,4BAA4B;AACjG,YAAM,YAAwB,mBAAO,kBAAkB,4BAAwC;AAE/F,aAAO;IACT,CAAC;;;;;;;EAOM,OAAa,wBAAyB,SAAqB,8BAAoC;;AACpG,UAAIC;AACJ,cAAQ,8BAA8B;QACpC,KAAK;AACH,UAAAA,QAAO,MAAM,OAAO,OAAO,OAAO;AAClC;QACF;AACE,gBAAM,IAAI,SACR,kBAAU,mCACV,4CAA4C,4BAA4B,oBAAoB;;AAIlG,aAAOA;IACT,CAAC;;;;;;EAMM,OAAa,+BAAgC,SAAiB,8BAAoC;;AACvG,YAAM,2BAA2B,kBAAkB,oBAAoB,OAAO;AAE9E,YAAM,yBAAyB,MAAM,WAAU,eAAe,0BAA0B,4BAA4B;AACpH,aAAO;IACT,CAAC;;;;;;EAMM,OAAa,qCAAsC,SAAiB,8BAAoC;;AAC7G,YAAM,eAAe,kBAAkB,oBAAoB,OAAO;AAGlE,YAAM,wBAAwB,MAAM,WAAU,wBAAwB,cAAc,4BAA4B;AAChH,YAAM,yBAAyB,MAAM,WAAU,eAAe,uBAAuB,4BAA4B;AACjH,aAAO;IACT,CAAC;;;;;;EAMM,OAAa,eAAgB,SAAqB,8BAAoC;;AAC3F,YAAM,iBAAiB,MAAM,WAAU,KAAK,SAAS,4BAA4B;AACjF,YAAM,yBAAyBC,SAAQ,OAAO,cAAc;AAC5D,aAAO;IACT,CAAC;;;;;EAKM,OAAO,uDACZ,kBACA,6BAAmC;AAEnC,QAAI;AACJ,UAAM,iBAAiBA,SAAQ,cAAc,kBAAkB,2BAA2B;AAC1F,QAAI;AACF,kBAAwB,mBAAO,cAAc;aAC7C,IAAM;AACN,YAAM,IAAI,SACR,kBAAU,8BACV,SAAS,2BAA2B,YAAY,gBAAgB,sCAAsC;;AAG1G,UAAM,+BAA+B,aAAa;AAElD,QAAI,iCAAiC,UAAU,MAAM;AACnD,YAAM,IAAI,SACR,kBAAU,mCACV,SAAS,2BAA2B,mDAAmD,UAAU,IAAI,gBACvF,4BAA4B,uDAAuD;;EAGvG;;;;AMtGF,IAAK;CAAL,SAAKC,gBAAa;AAChB,EAAAA,eAAA,QAAA,IAAA;AACA,EAAAA,eAAA,QAAA,IAAA;AACA,EAAAA,eAAA,YAAA,IAAA;AACA,EAAAA,eAAA,SAAA,IAAA;AACF,GALK,kBAAA,gBAAa,CAAA,EAAA;AAOlB,IAAA,wBAAe;;;ACPf,IAAK;CAAL,SAAKC,cAAW;AACZ,EAAAA,aAAA,SAAA,IAAA;AACA,EAAAA,aAAA,eAAA,IAAA;AACA,EAAAA,aAAA,kBAAA,IAAA;AACA,EAAAA,aAAA,aAAA,IAAA;AACA,EAAAA,aAAA,gBAAA,IAAA;AACJ,GANK,gBAAA,cAAW,CAAA,EAAA;AAQhB,IAAA,sBAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AZYf,IAAqB,aAArB,MAAqB,YAAU;;;;;EAKtB,OAAa,oBAAqB,OAIxC;;AACC,YAAM,cAAc,MAAM;AAC1B,YAAM,YAAY,MAAM;AACxB,YAAM,kBAAkB,MAAM,SAAS;AACvC,YAAM,WAAW,MAAM,SAAS;AAGhC,qBAAe,2BAA2B,aAAa,yBAAiB,MAAM;AAC9E,qBAAe,2BAA2B,WAAW,yBAAiB,MAAM;AAG5E,kBAAW,wBAAwB,eAAe;AAGlD,kBAAW,iBAAiB,QAAQ;AAEpC,YAAM,+BAA+B,aAAa;AAElD,YAAM,UAAU,CAAC;QACf,QAAQ,oBAAY;QACpB,UAAU,MAAM;OACjB;AAED,YAAM,QAAQ;QACZ,kBAAkB,MAAM,UAAU,qCAAqC,WAAW,4BAA4B;QAC9G;;AAGF,kBAAW,kBAAkB,KAAK;AAElC,YAAM,YAAY,MAAM,UAAU,+BAA+B,OAAO,4BAA4B;AAEpG,YAAM,aAAa;QACjB;QACA,oBAAoB,MAAM,UAAU,qCAAqC,aAAa,4BAA4B;;AAGpH,YAAM,mBAAmB;QACvB,MAAM,sBAAc;QACpB;QACA;;AAGF,aAAO;IACT,CAAC;;EAEM,OAAa,wBAAyB,OAI5C;;AAEC,kBAAW,kBAAkB,MAAM,SAAS;AAG5C,qBAAe,2BAA2B,MAAM,mBAAmB,yBAAiB,MAAM;AAE1F,YAAM,+BAA+B,aAAa;AAClD,YAAM,cAAc,MAAM,UAAU,+BAA+B,MAAM,mBAAmB,4BAA4B;AAExH,YAAM,iBAAiB;QACrB,WAAW,MAAM;QACjB,aAAa,MAAM;;AAGrB,YAAM,aAAa,MAAM,MAAM,OAAO,KAAK,EAAE,KAAK,SAAQ,GAAI,cAAc;AAE5E,aAAO;QACL,MAAM,sBAAc;QACpB,WAAW,MAAM;QACjB;QACA,YAAY;;IAEhB,CAAC;;EAEM,OAAa,qBAAsB,OAOzC;;AAEC,kBAAW,kBAAkB,MAAM,SAAS;AAG5C,qBAAe,2BAA2B,MAAM,mBAAmB,yBAAiB,MAAM;AAG1F,qBAAe,2BAA2B,MAAM,uBAAuB,yBAAiB,MAAM;AAG9F,qBAAe,2BAA2B,MAAM,qBAAqB,yBAAiB,MAAM;AAG5F,kBAAW,wBAAwB,MAAM,SAAS,UAAU;AAG5D,kBAAW,iBAAiB,MAAM,SAAS,QAAQ;AAEnD,YAAM,+BAA+B,aAAa;AAClD,YAAM,cAAc,MAAM,UAAU,+BAA+B,MAAM,mBAAmB,4BAA4B;AAExH,YAAM,UAAU,CAAC;QACf,QAAQ,oBAAY;QACpB,UAAU,MAAM;OACjB;AAED,YAAM,2BAA2B,MAAM,UAAU,qCAAqC,MAAM,qBAAqB,4BAA4B;AAC7I,YAAM,QAAQ;QACZ;QACA,kBAAkB;;AAGpB,YAAM,YAAY,MAAM,UAAU,+BAA+B,OAAO,4BAA4B;AACpG,YAAM,6BAA6B,MAAM,UAAU,qCAAqC,MAAM,uBAAuB,4BAA4B;AAEjJ,YAAM,iBAAiB;QACrB,oBAAoB;QACpB,aAAa,MAAM;QACnB;;AAGF,YAAM,aAAa,MAAM,MAAM,OAAO,KAAK,EAAE,KAAK,SAAQ,GAAI,cAAc;AAE5E,aAAO;QACL,MAAM,sBAAc;QACpB,WAAW,MAAM;QACjB;QACA;QACA,YAAY;;IAEhB,CAAC;;EAEM,OAAa,oBAAqB,OASxC;;AAEC,kBAAW,kBAAkB,MAAM,SAAS;AAG5C,qBAAe,2BAA2B,MAAM,iBAAiB,yBAAiB,MAAM;AAGxF,qBAAe,2BAA2B,MAAM,qBAAqB,yBAAiB,MAAM;AAG5F,kBAAW,iBAAiB,MAAM,aAAa;AAG/C,kBAAW,wBAAwB,MAAM,eAAe;AAGxD,UAAI,MAAM,0BAA0B,QAAW;AAC7C,mBAAW,MAAM,MAAM,uBAAuB;AAC5C,yBAAe,WAAW,EAAE;;;AAKhC,UAAI,MAAM,4BAA4B,QAAW;AAC/C,mBAAW,MAAM,MAAM,yBAAyB;AAC9C,yBAAe,WAAW,EAAE;;;AAIhC,YAAM,UAAU,CAAA;AAEhB,YAAM,gBAAgB,MAAM;AAC5B,UAAI,kBAAkB,UAAa,cAAc,SAAS,GAAG;AAC3D,cAAM,QAAQ;UACZ,QAAQ,oBAAY;UACpB,UAAU;;AAGZ,gBAAQ,KAAK,KAAK;;AAIpB,YAAM,wBAAwB,MAAM;AACpC,UAAI,0BAA0B,UAAa,sBAAsB,SAAS,GAAG;AAC3E,cAAM,QAAQ;UACZ,QAAQ,oBAAY;UACpB,KAAK;;AAGP,gBAAQ,KAAK,KAAK;;AAIpB,YAAM,kBAAkB,MAAM;AAC9B,UAAI,oBAAoB,UAAa,gBAAgB,SAAS,GAAG;AAC/D,cAAM,QAAQ;UACZ,QAAQ,oBAAY;UACpB,YAAY;;AAGd,gBAAQ,KAAK,KAAK;;AAIpB,YAAM,0BAA0B,MAAM;AACtC,UAAI,4BAA4B,UAAa,wBAAwB,SAAS,GAAG;AAC/E,cAAM,QAAQ;UACZ,QAAQ,oBAAY;UACpB,KAAK;;AAGP,gBAAQ,KAAK,KAAK;;AAGpB,YAAM,+BAA+B,aAAa;AAClD,YAAM,cAAc,MAAM,UAAU,+BAA+B,MAAM,iBAAiB,4BAA4B;AAEtH,YAAM,2BAA2B,MAAM,UAAU,qCAAqC,MAAM,qBAAqB,4BAA4B;AAC7I,YAAM,QAAQ;QACZ;QACA,kBAAkB;;AAEpB,YAAM,YAAY,MAAM,UAAU,+BAA+B,OAAO,4BAA4B;AAEpG,YAAM,iBAAiB;QACrB,WAAW,MAAM;QACjB;;AAGF,YAAM,aAAa,MAAM,MAAM,OAAO,KAAK,EAAE,KAAK,SAAQ,GAAI,cAAc;AAE5E,aAAO;QACL,MAAM,sBAAc;QACpB,WAAW,MAAM;QACjB;QACA;QACA,YAAY;;IAEhB,CAAC;;EAEO,OAAO,kBAAmB,WAAiB;AACjD,cAAU,uDAAuD,WAAW,WAAW;EACzF;EAEQ,OAAO,wBAAyB,YAAgC;AACtE,QAAI,eAAe,QAAW;AAC5B;;AAIF,UAAM,iBAA8B,oBAAI,IAAG;AAC3C,eAAW,aAAa,YAAY;AAClC,UAAI,MAAM,QAAQ,UAAU,YAAY,GAAG;AACzC,cAAM,IAAI,SAAS,kBAAU,4CAA4C,qEAAqE;;AAGhJ,qBAAe,WAAW,UAAU,EAAE;AAGtC,UAAI,eAAe,IAAI,UAAU,EAAE,GAAG;AACpC,cAAM,IAAI,SAAS,kBAAU,kCAAkC,6BAA6B,UAAU,EAAE,mBAAmB;;AAE7H,qBAAe,IAAI,UAAU,EAAE;AAE/B,qBAAe,0BAA0B,UAAU,QAAQ;;EAE/D;EAEQ,OAAO,iBAAkB,UAA4B;AAC3D,QAAI,aAAa,UAAa,SAAS,WAAW,GAAG;AACnD,YAAM,eAA4B,oBAAI,IAAG;AACzC,iBAAW,WAAW,UAAU;AAC9B,oBAAW,gBAAgB,OAAO;AAClC,YAAI,aAAa,IAAI,QAAQ,EAAE,GAAG;AAChC,gBAAM,IAAI,SAAS,kBAAU,gCAAgC,6BAA6B;;AAE5F,qBAAa,IAAI,QAAQ,EAAE;;;EAGjC;EAEQ,OAAO,gBAAiB,SAAwB;AACtD,mBAAe,WAAW,QAAQ,EAAE;AAEpC,UAAM,gBAAgB;AACtB,QAAI,QAAQ,KAAK,SAAS,eAAe;AACvC,YAAM,eAAe,gCAAgC,QAAQ,KAAK,MAAM,kCAAkC,aAAa;AACvH,YAAM,IAAI,SAAS,kBAAU,oBAAoB,YAAY;;AAI/D,QAAI,MAAM,QAAQ,QAAQ,eAAe,GAAG;AAC1C,YAAM,eAAe;AACrB,YAAM,IAAI,SAAS,kBAAU,gCAAgC,YAAY;;AAG3E,QAAI,OAAO,QAAQ,oBAAoB,UAAU;AAC/C,YAAM,MAAU,UAAM,QAAQ,eAAe;AAC7C,UAAI,IAAI,UAAU,QAAW;AAC3B,cAAM,IAAI,SAAS,kBAAU,kCAAkC,4BAA4B,QAAQ,eAAe,iBAAiB;;;EAGzI;EAEQ,OAAO,kBAAmB,OAAa;AAC7C,UAAM,aAAa,kBAAkB,oBAAoB,KAAK;AAC9D,QAAI,WAAW,SAAS,aAAa,kCAAkC;AACrE,YAAM,eAAe,YAAY,WAAW,MAAM,4BAA4B,aAAa,gCAAgC;AAC3H,YAAM,IAAI,SAAS,kBAAU,yBAAyB,YAAY;;EAEtE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AahVF,IAAqB,SAArB,MAAqB,QAAM;;;;;EAKlB,OAAa,kBAAmB,OAItC;;AACC,YAAM,gBAAgB,MAAM,WAAW,oBAAoB,KAAK;AAEhE,YAAM,kBAAkB,MAAM,QAAO,uBAAuB,cAAc,UAAU;AAGpF,UAAI;AACJ,UAAI,aAAa,YAAY,UAAa,aAAa,YAAY,WAAW;AAC5E,uBAAe,WAAW,eAAe;aACpC;AACL,uBAAe,WAAW,aAAa,OAAO,IAAI,eAAe;;AAGnE,YAAM,eAAe;QACnB,YAAY,cAAc;QAC1B,OAAO,cAAc;;AAIvB,YAAM,iCAAiC,kBAAkB,oBAAoB,YAAY;AACzF,YAAM,yCAAyCC,SAAQ,OAAO,8BAA8B;AAE5F,YAAM,cAAc,GAAG,YAAY,IAAI,sCAAsC;AAC7E,aAAO;IACT,CAAC;;;;;EAKO,OAAa,uBAAwB,YAAkB;;AAC7D,YAAM,2BAA2B,kBAAkB,oBAAoB,UAAU;AACjF,YAAM,YAAY,MAAM,UAAU,KAAK,0BAA0B,aAAa,4BAA4B;AAC1G,YAAM,mBAAmBA,SAAQ,OAAO,SAAS;AACjD,aAAO;IACT,CAAC;;;;;ACrDH,IAAM,IAAI,MAAM,OAAO;AACvB,IAAM,IAAI,MAAM,OAAO;AACvB,IAAM,KAAK;AACX,IAAM,KAAK;AACX,IAAM,QAAQ;AAAA,EACV,GAAG,CAAC;AAAA,EACJ,GAAG;AAAA,EACH,GAAG;AAAA,EAAG,GAAG;AAAA,EAAG,GAAG;AAAA,EAAG;AAAA,EAAI;AAAA;AAC1B;AACA,IAAM,MAAM,CAAC,IAAI,OAAO;AAAE,QAAM,IAAI,MAAM,CAAC;AAAG;AAC9C,IAAM,MAAM,CAAC,MAAM,OAAO,MAAM;AAChC,IAAM,MAAM,CAAC,GAAG;AAAA;AAAA,EACf,EAAE,aAAa,eAAgB,OAAO,MAAM,YAAY,IAAI,KAAK,EAAE,WAAW,IAC3E,IAAI,qBAAqB,IAAI;AAAA;AACjC,IAAM,MAAM,CAAC,SAAS,IAAI,WAAW,IAAI;AACzC,IAAM,OAAO,CAAC,GAAG,QAAQ,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,GAAG;AAC1D,IAAM,MAAM,CAAC,GAAG,IAAI,MAAM;AAAE,MAAI,IAAI,IAAI;AAAG,SAAO,KAAK,KAAK,IAAI,IAAI;AAAG;AACvE,IAAM,UAAU,CAAC,MAAO,aAAa,QAAQ,IAAI,IAAI,gBAAgB;AACrE,IAAI,QAAQ;AACZ,IAAM,QAAN,MAAM,OAAM;AAAA,EACR,YAAY,IAAI,IAAI,IAAI,IAAI;AACxB,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;AAAA,EACd;AAAA,EACA,OAAO,WAAW,GAAG;AAAE,WAAO,IAAI,OAAM,EAAE,GAAG,EAAE,GAAG,IAAI,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;AAAA,EAAG;AAAA,EACvE,OAAO,QAAQ,KAAK,SAAS,MAAM;AAC/B,UAAM,EAAE,EAAE,IAAI;AACd,UAAM,KAAK,KAAK,EAAE;AAClB,UAAM,SAAS,IAAI,MAAM;AACzB,WAAO,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC;AACxB,UAAM,IAAI,OAAO,MAAM;AACvB,QAAI,MAAM,IAAI;AAAA,IACd,OACK;AACD,UAAI,UAAU,EAAE,KAAK,KAAK,IAAI;AAC1B,YAAI,eAAe;AACvB,UAAI,CAAC,UAAU,EAAE,KAAK,KAAK,IAAI,MAAM;AACjC,YAAI,eAAe;AAAA,IAC3B;AACA,UAAM,KAAK,IAAI,IAAI,CAAC;AACpB,UAAM,IAAI,IAAI,KAAK,EAAE;AACrB,UAAM,IAAI,IAAI,IAAI,KAAK,EAAE;AACzB,QAAI,EAAE,SAAS,OAAO,EAAE,IAAI,QAAQ,GAAG,CAAC;AACxC,QAAI,CAAC;AACD,UAAI,oBAAoB;AAC5B,UAAM,UAAU,IAAI,QAAQ;AAC5B,UAAM,aAAa,IAAI,EAAE,IAAI,SAAU;AACvC,QAAI,cAAc;AACd,UAAI,IAAI,CAAC,CAAC;AACd,WAAO,IAAI,OAAM,GAAG,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC;AAAA,EACzC;AAAA,EACA,IAAI,IAAI;AAAE,WAAO,KAAK,SAAS,EAAE;AAAA,EAAG;AAAA;AAAA,EACpC,IAAI,IAAI;AAAE,WAAO,KAAK,SAAS,EAAE;AAAA,EAAG;AAAA;AAAA,EACpC,OAAO,OAAO;AACV,UAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI;AACnC,UAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,QAAQ,KAAK;AAChD,UAAM,OAAO,IAAI,KAAK,EAAE,GAAG,OAAO,IAAI,KAAK,EAAE;AAC7C,UAAM,OAAO,IAAI,KAAK,EAAE,GAAG,OAAO,IAAI,KAAK,EAAE;AAC7C,WAAO,SAAS,QAAQ,SAAS;AAAA,EACrC;AAAA,EACA,MAAM;AAAE,WAAO,KAAK,OAAO,CAAC;AAAA,EAAG;AAAA,EAC/B,SAAS;AACL,WAAO,IAAI,OAAM,IAAI,CAAC,KAAK,EAAE,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;AAAA,EACnE;AAAA,EACA,SAAS;AACL,UAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI;AACnC,UAAM,EAAE,EAAE,IAAI;AACd,UAAM,IAAI,IAAI,KAAK,EAAE;AACrB,UAAM,IAAI,IAAI,KAAK,EAAE;AACrB,UAAM,IAAI,IAAI,KAAK,IAAI,KAAK,EAAE,CAAC;AAC/B,UAAM,IAAI,IAAI,IAAI,CAAC;AACnB,UAAM,OAAO,KAAK;AAClB,UAAM,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI,IAAI,CAAC;AACtC,UAAMC,KAAI,IAAI;AACd,UAAM,IAAIA,KAAI;AACd,UAAM,IAAI,IAAI;AACd,UAAM,KAAK,IAAI,IAAI,CAAC;AACpB,UAAM,KAAK,IAAIA,KAAI,CAAC;AACpB,UAAM,KAAK,IAAI,IAAI,CAAC;AACpB,UAAM,KAAK,IAAI,IAAIA,EAAC;AACpB,WAAO,IAAI,OAAM,IAAI,IAAI,IAAI,EAAE;AAAA,EACnC;AAAA,EACA,IAAI,OAAO;AACP,UAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI;AAC3C,UAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,QAAQ,KAAK;AACxD,UAAM,EAAE,GAAG,EAAE,IAAI;AACjB,UAAM,IAAI,IAAI,KAAK,EAAE;AACrB,UAAM,IAAI,IAAI,KAAK,EAAE;AACrB,UAAM,IAAI,IAAI,KAAK,IAAI,EAAE;AACzB,UAAM,IAAI,IAAI,KAAK,EAAE;AACrB,UAAM,IAAI,KAAK,KAAK,OAAO,KAAK,MAAM,IAAI,CAAC;AAC3C,UAAM,IAAI,IAAI,IAAI,CAAC;AACnB,UAAMA,KAAI,IAAI,IAAI,CAAC;AACnB,UAAM,IAAI,IAAI,IAAI,IAAI,CAAC;AACvB,UAAM,KAAK,IAAI,IAAI,CAAC;AACpB,UAAM,KAAK,IAAIA,KAAI,CAAC;AACpB,UAAM,KAAK,IAAI,IAAI,CAAC;AACpB,UAAM,KAAK,IAAI,IAAIA,EAAC;AACpB,WAAO,IAAI,OAAM,IAAI,IAAI,IAAI,EAAE;AAAA,EACnC;AAAA,EACA,IAAI,GAAG,OAAO,MAAM;AAChB,QAAI,MAAM;AACN,aAAO,SAAS,OAAO,IAAI,sBAAsB,IAAI;AACzD,QAAI,EAAE,OAAO,MAAM,YAAY,KAAK,KAAK,IAAI;AACzC,UAAI,6BAA6B;AACrC,QAAI,CAAC,QAAQ,KAAK,IAAI,KAAK,MAAM;AAC7B,aAAO;AACX,QAAI,KAAK,OAAO,CAAC;AACb,aAAO,KAAK,CAAC,EAAE;AACnB,QAAI,IAAI,GAAG,IAAI;AACf,aAAS,IAAI,MAAM,IAAI,IAAI,IAAI,EAAE,OAAO,GAAG,MAAM,IAAI;AACjD,UAAI,IAAI;AACJ,YAAI,EAAE,IAAI,CAAC;AAAA,eACN;AACL,YAAI,EAAE,IAAI,CAAC;AAAA,IACnB;AACA,WAAO;AAAA,EACX;AAAA,EACA,SAAS,QAAQ;AAAE,WAAO,KAAK,IAAI,MAAM;AAAA,EAAG;AAAA;AAAA,EAC5C,gBAAgB;AAAE,WAAO,KAAK,IAAI,OAAO,MAAM,CAAC,GAAG,KAAK;AAAA,EAAG;AAAA;AAAA,EAC3D,eAAe;AAAE,WAAO,KAAK,cAAc,EAAE,IAAI;AAAA,EAAG;AAAA;AAAA,EACpD,gBAAgB;AACZ,QAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE,OAAO;AACvC,QAAI,IAAI;AACJ,UAAI,EAAE,IAAI,IAAI;AAClB,WAAO,EAAE,IAAI;AAAA,EACjB;AAAA,EACA,WAAW;AACP,UAAM,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,EAAE,IAAI;AAChC,QAAI,KAAK,IAAI;AACT,aAAO,EAAE,GAAG,IAAI,GAAG,GAAG;AAC1B,UAAM,KAAK,OAAO,CAAC;AACnB,QAAI,IAAI,IAAI,EAAE,MAAM;AAChB,UAAI,iBAAiB;AACzB,WAAO,EAAE,GAAG,IAAI,IAAI,EAAE,GAAG,GAAG,IAAI,IAAI,EAAE,EAAE;AAAA,EAC5C;AAAA,EACA,aAAa;AACT,UAAM,EAAE,GAAG,EAAE,IAAI,KAAK,SAAS;AAC/B,UAAM,IAAI,SAAS,CAAC;AACpB,MAAE,EAAE,KAAK,IAAI,KAAK,MAAO;AACzB,WAAO;AAAA,EACX;AAAA,EACA,QAAQ;AAAE,WAAO,IAAI,KAAK,WAAW,CAAC;AAAA,EAAG;AAAA;AAC7C;AACA,MAAM,OAAO,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,KAAK,EAAE,CAAC;AAC/C,MAAM,OAAO,IAAI,MAAM,IAAI,IAAI,IAAI,EAAE;AACrC,IAAM,EAAE,MAAM,GAAG,MAAM,EAAE,IAAI;AAC7B,IAAM,OAAO,CAAC,KAAK,QAAQ,IAAI,SAAS,EAAE,EAAE,SAAS,KAAK,GAAG;AAC7D,IAAM,MAAM,CAAC,MAAM,MAAM,KAAK,CAAC,EAAE,IAAI,OAAK,KAAK,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE;AAC7D,IAAM,MAAM,CAAC,QAAQ;AACjB,QAAM,IAAI,IAAI;AACd,MAAI,CAAC,IAAI,GAAG,KAAK,IAAI;AACjB,QAAI,eAAe;AACvB,QAAM,MAAM,IAAI,IAAI,CAAC;AACrB,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,UAAM,IAAI,IAAI;AACd,UAAM,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC;AAC5B,UAAM,IAAI,OAAO,SAAS,GAAG,EAAE;AAC/B,QAAI,OAAO,MAAM,CAAC,KAAK,IAAI;AACvB,UAAI,eAAe;AACvB,QAAI,CAAC,IAAI;AAAA,EACb;AACA,SAAO;AACX;AACA,IAAM,WAAW,CAAC,QAAQ,IAAI,KAAK,KAAK,KAAK,CAAC,CAAC,EAAE,QAAQ;AACzD,IAAM,SAAS,CAAC,MAAM,OAAO,OAAO,IAAI,IAAI,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AAC9D,IAAM,UAAU,IAAI,SAAS;AACzB,QAAM,IAAI,IAAI,KAAK,OAAO,CAAC,KAAK,MAAM,MAAM,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;AAC7D,MAAI,MAAM;AACV,OAAK,QAAQ,OAAK;AAAE,MAAE,IAAI,GAAG,GAAG;AAAG,WAAO,EAAE;AAAA,EAAQ,CAAC;AACrD,SAAO;AACX;AACA,IAAM,SAAS,CAAC,KAAK,KAAK,MAAM;AAC5B,MAAI,QAAQ,MAAM,MAAM;AACpB,QAAI,kBAAkB,MAAM,UAAU,EAAE;AAC5C,MAAI,IAAI,IAAI,KAAK,EAAE,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAC1D,SAAO,MAAM,IAAI;AACb,UAAM,IAAI,IAAI,GAAG,IAAI,IAAI;AACzB,UAAM,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI;AACjC,QAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;AAAA,EAC3C;AACA,SAAO,MAAM,KAAK,IAAI,GAAG,EAAE,IAAI,IAAI,YAAY;AACnD;AACA,IAAM,OAAO,CAAC,GAAG,UAAU;AACvB,MAAI,IAAI;AACR,SAAO,UAAU,IAAI;AACjB,SAAK;AACL,SAAK;AAAA,EACT;AACA,SAAO;AACX;AACA,IAAM,cAAc,CAAC,MAAM;AACvB,QAAM,KAAM,IAAI,IAAK;AACrB,QAAM,KAAM,KAAK,IAAK;AACtB,QAAM,KAAM,KAAK,IAAI,EAAE,IAAI,KAAM;AACjC,QAAM,KAAM,KAAK,IAAI,EAAE,IAAI,IAAK;AAChC,QAAM,MAAO,KAAK,IAAI,EAAE,IAAI,KAAM;AAClC,QAAM,MAAO,KAAK,KAAK,GAAG,IAAI,MAAO;AACrC,QAAM,MAAO,KAAK,KAAK,GAAG,IAAI,MAAO;AACrC,QAAM,MAAO,KAAK,KAAK,GAAG,IAAI,MAAO;AACrC,QAAM,OAAQ,KAAK,KAAK,GAAG,IAAI,MAAO;AACtC,QAAM,OAAQ,KAAK,MAAM,GAAG,IAAI,MAAO;AACvC,QAAM,OAAQ,KAAK,MAAM,GAAG,IAAI,MAAO;AACvC,QAAM,YAAa,KAAK,MAAM,EAAE,IAAI,IAAK;AACzC,SAAO,EAAE,WAAW,GAAG;AAC3B;AACA,IAAM,MAAM;AACZ,IAAM,UAAU,CAAC,GAAG,MAAM;AACtB,QAAM,KAAK,IAAI,IAAI,IAAI,CAAC;AACxB,QAAM,KAAK,IAAI,KAAK,KAAK,CAAC;AAC1B,QAAM,MAAM,YAAY,IAAI,EAAE,EAAE;AAChC,MAAI,IAAI,IAAI,IAAI,KAAK,GAAG;AACxB,QAAM,MAAM,IAAI,IAAI,IAAI,CAAC;AACzB,QAAM,QAAQ;AACd,QAAM,QAAQ,IAAI,IAAI,GAAG;AACzB,QAAM,WAAW,QAAQ;AACzB,QAAM,WAAW,QAAQ,IAAI,CAAC,CAAC;AAC/B,QAAM,SAAS,QAAQ,IAAI,CAAC,IAAI,GAAG;AACnC,MAAI;AACA,QAAI;AACR,MAAI,YAAY;AACZ,QAAI;AACR,OAAK,IAAI,CAAC,IAAI,QAAQ;AAClB,QAAI,IAAI,CAAC,CAAC;AACd,SAAO,EAAE,SAAS,YAAY,UAAU,OAAO,EAAE;AACrD;AAEA,IAAI;AAkEJ,IAAM,KAAK;AAAA;AAAA,EACV,OAAO,eAAe,YAAY,YAAY,aAAa,WAAW,SAAS;AAAA;AAChF,IAAM,MAAM;AAAA,EACR,YAAY;AAAA,EAAK,YAAY;AAAA,EAAK,aAAa;AAAA,EAC/C;AAAA,EAAK;AAAA,EACL,aAAa,CAAC,QAAQ;AAClB,UAAMC,UAAS,GAAG;AAGlB,QAAI,CAACA;AACD,UAAI,wCAAwC;AAChD,WAAOA,QAAO,gBAAgB,IAAI,GAAG,CAAC;AAAA,EAC1C;AAAA,EACA,aAAa,UAAU,aAAa;AAChC,UAAMA,UAAS,GAAG;AAClB,QAAI,CAACA;AACD,UAAI,kDAAkD;AAC1D,UAAM,IAAI,QAAQ,GAAG,QAAQ;AAC7B,WAAO,IAAI,MAAMA,QAAO,OAAO,OAAO,WAAW,EAAE,MAAM,CAAC;AAAA,EAC9D;AAAA,EACA,YAAY;AAAA;AAChB;AACA,OAAO,iBAAiB,KAAK,EAAE,YAAY;AAAA,EACnC,cAAc;AAAA,EAAO,MAAM;AAAE,WAAO;AAAA,EAAO;AAAA,EAAG,IAAI,GAAG;AAAE,QAAI,CAAC;AACxD,cAAQ;AAAA,EAAG;AACnB,EAAE,CAAC;AAMP,IAAM,IAAI;AACV,IAAM,aAAa,MAAM;AACrB,QAAM,SAAS,CAAC;AAChB,QAAM,UAAU,MAAM,IAAI;AAC1B,MAAI,IAAI,GAAG,IAAI;AACf,WAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AAC9B,QAAI;AACJ,WAAO,KAAK,CAAC;AACb,aAAS,IAAI,GAAG,IAAI,MAAM,IAAI,IAAI,KAAK;AACnC,UAAI,EAAE,IAAI,CAAC;AACX,aAAO,KAAK,CAAC;AAAA,IACjB;AACA,QAAI,EAAE,OAAO;AAAA,EACjB;AACA,SAAO;AACX;AACA,IAAM,OAAO,CAAC,MAAM;AAEhB,QAAM,OAAO,UAAU,QAAQ,WAAW;AAC1C,QAAM,MAAM,CAAC,KAAKC,OAAM;AAAE,QAAIC,KAAID,GAAE,OAAO;AAAG,WAAO,MAAMC,KAAID;AAAA,EAAG;AAClE,MAAI,IAAI,GAAG,IAAI;AACf,QAAM,UAAU,IAAI,MAAM;AAC1B,QAAM,QAAQ,MAAM,IAAI;AACxB,QAAM,OAAO,OAAO,KAAK,IAAI,CAAC;AAC9B,QAAM,SAAS,KAAK;AACpB,QAAM,UAAU,OAAO,CAAC;AACxB,WAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AAC9B,UAAM,MAAM,IAAI;AAChB,QAAI,QAAQ,OAAO,IAAI,IAAI;AAC3B,UAAM;AACN,QAAI,QAAQ,OAAO;AACf,eAAS;AACT,WAAK;AAAA,IACT;AACA,UAAM,OAAO,KAAK,OAAO,MAAM,KAAK,IAAI,KAAK,IAAI;AACjD,UAAM,OAAO,IAAI,MAAM,GAAG,OAAO,QAAQ;AACzC,QAAI,UAAU,GAAG;AACb,UAAI,EAAE,IAAI,IAAI,MAAM,KAAK,IAAI,CAAC,CAAC;AAAA,IACnC,OACK;AACD,UAAI,EAAE,IAAI,IAAI,MAAM,KAAK,IAAI,CAAC,CAAC;AAAA,IACnC;AAAA,EACJ;AACA,SAAO,EAAE,GAAG,EAAE;AAClB;;;AClXA,IAAM,OAAO,MAAM;AACnB,IAAME,KAAI,OAAO;AACjB,IAAMC,MAAI,OAAO;AACjB,IAAMC,MAAK;AACX,IAAMC,MAAK;AACX,IAAMC,SAAQ,EAAE,GAAGJ,IAAG,GAAGC,KAAG,GAAG,IAAI,GAAG,IAAI,IAAAC,KAAI,IAAAC,IAAG;AACjD,IAAM,OAAO;AACb,IAAM,MAAM,CAAC,MAAME,KAAIA,KAAI,IAAI,CAAC,IAAI,IAAID,OAAM,CAAC;AAC/C,IAAME,OAAM,CAAC,IAAI,OAAO;AAAE,QAAM,IAAI,MAAM,CAAC;AAAG;AAC9C,IAAM,MAAM,CAAC,MAAM,OAAO,MAAM;AAChC,IAAMC,OAAM,CAAC,MAAM,OAAO,MAAM;AAChC,IAAM,KAAK,CAAC,MAAM,IAAI,CAAC,KAAK,KAAK,KAAK,IAAIP;AAC1C,IAAM,KAAK,CAAC,MAAM,IAAI,CAAC,KAAK,KAAK,KAAK,IAAIC;AAC1C,IAAMO,OAAM,CAAC,GAAG;AAAA;AAAA,EACf,EAAE,aAAa,eAAgB,OAAO,MAAM,YAAY,IAAI,KAAK,EAAE,WAAW,IAC3EF,KAAI,qBAAqB,IAAI;AAAA;AACjC,IAAMG,OAAM,CAAC,SAAS,IAAI,WAAW,IAAI;AACzC,IAAMC,QAAO,CAAC,GAAG,QAAQF,KAAID,KAAI,CAAC,IAAII,KAAI,CAAC,IAAIF,KAAI,CAAC,GAAG,GAAG;AAC1D,IAAMJ,OAAM,CAAC,GAAG,IAAIL,OAAM;AAAE,MAAI,IAAI,IAAI;AAAG,SAAO,KAAK,KAAK,IAAI,IAAI;AAAG;AACvE,IAAMY,WAAU,CAAC,MAAO,aAAaC,SAAQ,IAAIP,KAAI,gBAAgB;AACrE,IAAIQ,SAAQ;AACZ,IAAMD,SAAN,MAAM,OAAM;AAAA,EACR,YAAY,IAAI,IAAI,IAAI;AACpB,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;AAAA,EACd;AAAA;AAAA,EACA,OAAO,WAAW,GAAG;AAAE,WAAO,IAAI,OAAM,EAAE,GAAG,EAAE,GAAG,EAAE;AAAA,EAAG;AAAA,EACvD,OAAO,QAAQ,KAAK;AAChB,UAAMH,MAAK,GAAG;AACd,QAAI,IAAI;AACR,UAAM,OAAO,IAAI,CAAC,GAAG,OAAO,IAAI,SAAS,CAAC;AAC1C,UAAM,IAAI,OAAO,MAAM,GAAG,IAAI,GAAG,MAAM,IAAI;AAC3C,QAAI,QAAQ,MAAM,CAAC,GAAM,CAAI,EAAE,SAAS,IAAI,GAAG;AAC3C,UAAI,CAAC,GAAG,CAAC;AACL,QAAAJ,KAAI,6BAA6B;AACrC,UAAI,IAAI,KAAK,IAAI,CAAC,CAAC;AACnB,YAAM,UAAU,IAAI,QAAQ;AAC5B,YAAM,WAAW,OAAO,OAAO;AAC/B,UAAI,YAAY;AACZ,YAAID,KAAI,CAAC,CAAC;AACd,UAAI,IAAI,OAAM,GAAG,GAAG,EAAE;AAAA,IAC1B;AACA,QAAI,QAAQ,MAAM,SAAS;AACvB,UAAI,IAAI,OAAM,GAAG,OAAO,MAAM,MAAM,IAAI,IAAI,GAAG,EAAE;AACrD,WAAO,IAAI,EAAE,GAAG,IAAIC,KAAI,uBAAuB;AAAA,EACnD;AAAA,EACA,OAAO,eAAe,GAAG;AAAE,WAAOS,GAAE,IAAI,OAAO,CAAC,CAAC;AAAA,EAAG;AAAA;AAAA,EACpD,IAAI,IAAI;AAAE,WAAO,KAAK,IAAI,EAAE;AAAA,EAAG;AAAA;AAAA,EAC/B,IAAI,IAAI;AAAE,WAAO,KAAK,IAAI,EAAE;AAAA,EAAG;AAAA;AAAA,EAC/B,OAAO,OAAO;AACV,UAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI;AACnC,UAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAIH,SAAQ,KAAK;AAChD,UAAM,OAAOP,KAAI,KAAK,EAAE,GAAG,OAAOA,KAAI,KAAK,EAAE;AAC7C,UAAM,OAAOA,KAAI,KAAK,EAAE,GAAG,OAAOA,KAAI,KAAK,EAAE;AAC7C,WAAO,SAAS,QAAQ,SAAS;AAAA,EACrC;AAAA,EACA,SAAS;AAAE,WAAO,IAAI,OAAM,KAAK,IAAIA,KAAI,CAAC,KAAK,EAAE,GAAG,KAAK,EAAE;AAAA,EAAG;AAAA;AAAA,EAC9D,SAAS;AAAE,WAAO,KAAK,IAAI,IAAI;AAAA,EAAG;AAAA;AAAA,EAClC,IAAI,OAAO;AACP,UAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI;AACnC,UAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAIO,SAAQ,KAAK;AAChD,UAAM,EAAE,GAAG,EAAE,IAAIR;AACjB,QAAI,KAAK,IAAI,KAAK,IAAI,KAAK;AAC3B,UAAM,KAAKC,KAAI,IAAI,EAAE;AACrB,QAAI,KAAKA,KAAI,KAAK,EAAE,GAAG,KAAKA,KAAI,KAAK,EAAE,GAAG,KAAKA,KAAI,KAAK,EAAE,GAAG,KAAKA,KAAI,KAAK,EAAE;AAC7E,QAAI,KAAKA,KAAI,KAAK,EAAE;AACpB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,QAAI,KAAKA,KAAI,KAAK,EAAE;AACpB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,IAAI,EAAE;AACf,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,IAAI,EAAE;AACf,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,IAAI,EAAE;AACf,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,SAAKA,KAAI,KAAK,EAAE;AAChB,WAAO,IAAI,OAAM,IAAI,IAAI,EAAE;AAAA,EAC/B;AAAA,EACA,IAAI,GAAG,OAAO,MAAM;AAChB,QAAI,CAAC,QAAQ,MAAM;AACf,aAAOW;AACX,QAAI,CAAC,GAAG,CAAC;AACL,MAAAV,KAAI,gBAAgB;AACxB,QAAI,KAAK,OAAOS,EAAC;AACb,aAAOE,MAAK,CAAC,EAAE;AACnB,QAAI,IAAID,IAAG,IAAID;AACf,aAAS,IAAI,MAAM,IAAI,IAAI,IAAI,EAAE,OAAO,GAAG,MAAM,IAAI;AACjD,UAAI,IAAI;AACJ,YAAI,EAAE,IAAI,CAAC;AAAA,eACN;AACL,YAAI,EAAE,IAAI,CAAC;AAAA,IACnB;AACA,WAAO;AAAA,EACX;AAAA,EACA,WAAW,GAAG,IAAI,IAAI;AAClB,WAAO,KAAK,IAAI,IAAI,KAAK,EAAE,IAAI,EAAE,IAAI,IAAI,KAAK,CAAC,EAAE,GAAG;AAAA,EACxD;AAAA;AAAA,EACA,WAAW;AACP,UAAM,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,EAAE,IAAI;AAChC,QAAI,KAAK,OAAOC,EAAC;AACb,aAAO,EAAE,GAAG,IAAI,GAAG,GAAG;AAC1B,QAAI,MAAM;AACN,aAAO,EAAE,GAAG,EAAE;AAClB,UAAM,KAAK,IAAI,CAAC;AAChB,QAAIX,KAAI,IAAI,EAAE,MAAM;AAChB,MAAAC,KAAI,iBAAiB;AACzB,WAAO,EAAE,GAAGD,KAAI,IAAI,EAAE,GAAG,GAAGA,KAAI,IAAI,EAAE,EAAE;AAAA,EAC5C;AAAA,EACA,iBAAiB;AACb,UAAM,EAAE,GAAG,EAAE,IAAI,KAAK,IAAI;AAC1B,QAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;AACf,MAAAC,KAAI,uBAAuB;AAC/B,WAAOD,KAAI,IAAI,CAAC,MAAM,IAAI,CAAC;AAAA;AAAA,MACvB;AAAA,QAAOC,KAAI,6BAA6B;AAAA,EAChD;AAAA,EACA,SAAS,GAAG;AAAE,WAAO,KAAK,IAAI,CAAC;AAAA,EAAG;AAAA;AAAA,EAClC,MAAM;AAAE,WAAO,KAAK,SAAS;AAAA,EAAG;AAAA,EAChC,KAAK;AAAE,WAAO,KAAK,eAAe;AAAA,EAAG;AAAA,EACrC,MAAM,eAAe,MAAM;AACvB,UAAM,EAAE,GAAG,EAAE,IAAI,KAAK,IAAI;AAC1B,UAAM,OAAO,gBAAiB,IAAI,QAAQ,KAAK,OAAO,OAAQ;AAC9D,WAAO,OAAO,IAAI,CAAC,KAAK,eAAe,KAAK,IAAI,CAAC;AAAA,EACrD;AAAA,EACA,WAAW,eAAe,MAAM;AAC5B,WAAOK,KAAI,KAAK,MAAM,YAAY,CAAC;AAAA,EACvC;AACJ;AACAE,OAAM,OAAO,IAAIA,OAAMX,KAAIC,KAAI,EAAE;AACjCU,OAAM,OAAO,IAAIA,OAAM,IAAI,IAAI,EAAE;AACjC,IAAM,EAAE,MAAME,IAAG,MAAMC,GAAE,IAAIH;AAC7B,IAAMK,QAAO,CAAC,GAAG,QAAQ,EAAE,SAAS,EAAE,EAAE,SAAS,KAAK,GAAG;AACzD,IAAMC,OAAM,CAAC,MAAM,MAAM,KAAK,CAAC,EAAE,IAAI,OAAKD,MAAK,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE;AAC7D,IAAMP,OAAM,CAAC,QAAQ;AACjB,QAAM,IAAI,IAAI;AACd,MAAI,CAACJ,KAAI,GAAG,KAAK,IAAI;AACjB,IAAAD,KAAI,eAAe;AACvB,QAAM,MAAMG,KAAI,IAAI,CAAC;AACrB,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,UAAM,IAAI,IAAI;AACd,UAAM,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC;AAC5B,UAAM,IAAI,OAAO,SAAS,GAAG,EAAE;AAC/B,QAAI,OAAO,MAAM,CAAC,KAAK,IAAI;AACvB,MAAAH,KAAI,eAAe;AACvB,QAAI,CAAC,IAAI;AAAA,EACb;AACA,SAAO;AACX;AACA,IAAM,MAAM,CAAC,MAAM,OAAO,QAAQa,KAAI,CAAC,KAAK,IAAI;AAChD,IAAM,SAAS,CAAC,GAAGC,OAAM,OAAO,IAAI,EAAE,MAAMA,OAAM,EAAE,CAAC;AACrD,IAAM,MAAM,CAAC,QAAQ;AACjB,SAAO,IAAI,GAAG,KAAK,OAAO,MAAM,MAAM,OAAOT,KAAIO,MAAK,KAAK,IAAI,IAAI,CAAC,IAAIZ,KAAI,iBAAiB;AACjG;AACA,IAAM,MAAM,CAAC,QAAQa,KAAI,IAAI,GAAG,CAAC;AACjC,IAAME,WAAU,IAAI,SAAS;AACzB,QAAM,IAAIZ,KAAI,KAAK,OAAO,CAAC,KAAK,MAAM,MAAMD,KAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;AAC7D,MAAI,MAAM;AACV,OAAK,QAAQ,OAAK;AAAE,MAAE,IAAI,GAAG,GAAG;AAAG,WAAO,EAAE;AAAA,EAAQ,CAAC;AACrD,SAAO;AACX;AACA,IAAM,MAAM,CAAC,KAAK,KAAKR,OAAM;AACzB,MAAI,QAAQ,MAAM,MAAM;AACpB,IAAAM,KAAI,kBAAkB,MAAM,UAAU,EAAE;AAC5C,MAAI,IAAID,KAAI,KAAK,EAAE,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAC1D,SAAO,MAAM,IAAI;AACb,UAAM,IAAI,IAAI,GAAG,IAAI,IAAI;AACzB,UAAM,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI;AACjC,QAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;AAAA,EAC3C;AACA,SAAO,MAAM,KAAKA,KAAI,GAAG,EAAE,IAAIC,KAAI,YAAY;AACnD;AACA,IAAM,OAAO,CAAC,MAAM;AAChB,MAAI,IAAI;AACR,WAAS,MAAM,GAAG,KAAKN,KAAI,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI;AACnD,QAAI,IAAI;AACJ,UAAK,IAAI,MAAOA;AACpB,UAAO,MAAM,MAAOA;AAAA,EACxB;AACA,SAAOK,KAAI,IAAI,CAAC,MAAM,IAAI,IAAIC,KAAI,cAAc;AACpD;AACA,IAAM,SAAS,CAAC,MAAM;AAClB,MAAI,CAAC,IAAI,CAAC;AACN,QAAI,IAAII,MAAK,GAAG,IAAI,CAAC;AACzB,SAAO,GAAG,CAAC,IAAI,IAAIJ,KAAI,0BAA0B;AACrD;AA8CA,IAAMgB,MAAK;AAAA;AAAA,EACV,OAAO,eAAe,YAAY,YAAY,aAAa,WAAW,SAAS;AAAA;AAChF,IAAI;AA+JJ,SAAS,iBAAiBC,OAAM;AAC5B,EAAAA,QAAOC,MAAKD,KAAI;AAChB,QAAM,SAAS,OAAO;AACtB,MAAIA,MAAK,SAAS,UAAUA,MAAK,SAAS;AACtC,IAAAE,KAAI,wBAAwB;AAChC,QAAM,MAAMC,KAAI,IAAIH,KAAI,GAAGI,MAAI,EAAE,IAAI;AACrC,SAAO,IAAI,GAAG;AAClB;AACA,IAAMC,OAAM;AAAA,EACR,YAAYC;AAAA,EAAK,YAAYC;AAAA,EAC7B,aAAaC;AAAA,EAAS,iBAAiB;AAAA,EAAK,iBAAiB;AAAA,EAC7D,KAAAL;AAAA,EAAK,QAAQ;AAAA,EACb,iBAAiB,OAAO,QAAQ,SAAS;AACrC,UAAMM,UAASC,IAAG;AAClB,QAAI,CAACD;AACD,aAAOP,KAAI,6BAA6B;AAC5C,UAAM,IAAIO,QAAO;AACjB,UAAM,IAAI,MAAM,EAAE,UAAU,OAAO,KAAK,EAAE,MAAM,QAAQ,MAAM,EAAE,MAAM,UAAU,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC;AACpG,WAAOE,KAAI,MAAM,EAAE,KAAK,QAAQ,GAAGH,SAAQ,GAAG,IAAI,CAAC,CAAC;AAAA,EACxD;AAAA,EACA,gBAAgB;AAAA,EAChB;AAAA,EACA,aAAa,CAAC,QAAQ;AAClB,UAAMC,UAASC,IAAG;AAGlB,QAAI,CAACD;AACD,MAAAP,KAAI,wCAAwC;AAChD,WAAOO,QAAO,gBAAgBE,KAAI,GAAG,CAAC;AAAA,EAC1C;AACJ;AAYA,OAAO,iBAAiBC,MAAK,EAAE,gBAAgB;AAAA,EACvC,cAAc;AAAA,EAAO,MAAM;AAAE,WAAO;AAAA,EAAW;AAAA,EAAG,IAAI,GAAG;AAAE,QAAI,CAAC;AAC5D,kBAAY;AAAA,EAAG;AACvB,EAAE,CAAC;AACP,IAAMC,KAAI;AACV,IAAMC,cAAa,MAAM;AACrB,QAAM,SAAS,CAAC;AAChB,QAAM,UAAU,MAAMD,KAAI;AAC1B,MAAI,IAAIE,IAAG,IAAI;AACf,WAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AAC9B,QAAI;AACJ,WAAO,KAAK,CAAC;AACb,aAAS,IAAI,GAAG,IAAI,MAAMF,KAAI,IAAI,KAAK;AACnC,UAAI,EAAE,IAAI,CAAC;AACX,aAAO,KAAK,CAAC;AAAA,IACjB;AACA,QAAI,EAAE,OAAO;AAAA,EACjB;AACA,SAAO;AACX;AACA,IAAMG,QAAO,CAAC,MAAM;AAEhB,QAAM,OAAOC,WAAUA,SAAQH,YAAW;AAC1C,QAAM,MAAM,CAAC,KAAKI,OAAM;AAAE,QAAIC,KAAID,GAAE,OAAO;AAAG,WAAO,MAAMC,KAAID;AAAA,EAAG;AAClE,MAAI,IAAIE,IAAG,IAAIL;AACf,QAAM,UAAU,IAAI,MAAMF;AAC1B,QAAM,QAAQ,MAAMA,KAAI;AACxB,QAAM,OAAO,OAAO,KAAKA,KAAI,CAAC;AAC9B,QAAM,SAAS,KAAKA;AACpB,QAAM,UAAU,OAAOA,EAAC;AACxB,WAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AAC9B,UAAM,MAAM,IAAI;AAChB,QAAI,QAAQ,OAAO,IAAI,IAAI;AAC3B,UAAM;AACN,QAAI,QAAQ,OAAO;AACf,eAAS;AACT,WAAK;AAAA,IACT;AACA,UAAM,OAAO,KAAK,OAAO,MAAM,KAAK,IAAI,KAAK,IAAI;AACjD,UAAM,OAAO,IAAI,MAAM,GAAG,OAAO,QAAQ;AACzC,QAAI,UAAU,GAAG;AACb,UAAI,EAAE,IAAI,IAAI,MAAM,KAAK,IAAI,CAAC,CAAC;AAAA,IACnC,OACK;AACD,UAAI,EAAE,IAAI,IAAI,MAAM,KAAK,IAAI,CAAC,CAAC;AAAA,IACnC;AAAA,EACJ;AACA,SAAO,EAAE,GAAG,EAAE;AAClB;;;ACxfA,IAAK;CAAL,SAAKQ,aAAU;AACb,EAAAA,YAAA,SAAA,IAAA;AACA,EAAAA,YAAA,SAAA,IAAA;AACF,GAHK,eAAA,aAAU,CAAA,EAAA;;;ACAf,IAAK;CAAL,SAAKC,sBAAmB;AACtB,EAAAA,qBAAA,gBAAA,IAAA;AACA,EAAAA,qBAAA,iBAAA,IAAA;AACA,EAAAA,qBAAA,sBAAA,IAAA;AACA,EAAAA,qBAAA,sBAAA,IAAA;AACA,EAAAA,qBAAA,cAAA,IAAA;AACF,GANK,wBAAA,sBAAmB,CAAA,EAAA;AAQxB,IAAA,8BAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AxBuBf,IAAKC;CAAL,SAAKA,gBAAa;AAChB,EAAAA,eAAA,QAAA,IAAA;AACA,EAAAA,eAAA,QAAA,IAAA;AACA,EAAAA,eAAA,YAAA,IAAA;AACA,EAAAA,eAAA,SAAA,IAAA;AACF,GALKA,mBAAAA,iBAAa,CAAA,EAAA;AA8BlB,IAAM,gDAAgD;EACpD,iBAAuB,4BAAoB;EAC3C,gBAAuB,4BAAoB;EAC3C,sBAAuB,4BAAoB;EAC3C,sBAAuB,4BAAoB;EAC3C,cAAuB,4BAAoB;;AAGvC,IAAO,eAAP,MAAO,cAAY;EAMhB,OAAa,OAAO,SAM1B;;AACC,YAAM,EACJ,mBAAmB,OACnB,oBAAoB,oEACpB,QACA,UACA,qBAAqB,yCAAwC,IAC3D;AAGJ,YAAM,cAAc,MAAM,cAAa,kBAAkB;QACvD;QACA;OACD;AAED,YAAM,gBAAgB,MAAM,cAAa,oBAAoB;QAC3D;QACA,sBAAuB,OAAO,YAAY;QAC1C,oBAAuB,OAAO,UAAU;OACzC;AAED,UAAI;AAEJ,UAAI,kBAAkB;AACpB,cAAM,WAAW,MAAM,mBAAAC,QAAe,iBACpC,mBACA,oBACA,KAAK,UAAU,aAAa,CAAC;AAG/B,YAAI,aAAa,cAAa,gCAAgB,QAAQ,MAAM,UAAU;AACpE,6BAAmB,KAAK,MAAM,QAAQ;;aAGnC;AACL,cAAM,WAAW,MAAM,MAAM,oBAAoB;UAC/C,QAAU;UACV,MAAU;UACV,MAAU,KAAK,UAAU,aAAa;UACtC,SAAU;YACR,gBAAgB;;SAEnB;AAED,YAAI,SAAS,IAAI;AACf,6BAAmB,MAAM,SAAS,KAAI;;;AAI1C,aAAO;IACT,CAAC;;EAEM,OAAa,OAAO,SAA6B;;AACtD,UAAI,EAAE,QAAQ,cAAc,QAAQ,SAAQ,IAAK,YAAO,QAAP,YAAO,SAAP,UAAW,CAAA;AAG5D,YAAM,MAA4B,CAAA;AAGlC,UAAI,SAAS,MAAM,cAAa,eAAe,EAAE,cAAc,OAAM,CAAE;AAGvE,UAAI,MAAM,MAAM,cAAa,eAAe;QAC1C,QAAQ,IAAI;QACZ;OACD;AAGD,UAAI,cAAc,MAAM,cAAa,gBAAgB,EAAE,QAAQ,IAAI,IAAG,CAAE;AAExE,UAAI;AACJ,UAAI,QAAQ;AAEV,8BAAsB,MAAM,cAAa,OAAO;UAC9C,QAAQ,IAAI;UACZ;SACD;aAEI;AAEL,8BAAsB,MAAM,cAAa,QAAQ,EAAE,QAAQ,IAAI,IAAG,CAAE;;AAItE,UAAI,WAAW,oBAAoB;AAEnC,aAAO;IACT,CAAC;;EAEM,OAAa,kBAAkB,SAErC;;AACC,YAAM,EAAE,OAAM,IAAK;AAEnB,YAAM,YAAY,SAAS,EAAE,OAAM,CAAE;AAErC,UAAI,CAAC,WAAW;AACd,cAAM,IAAI,MAAM,sCAAsC,MAAM,EAAE;;AAGhE,YAAM,qBAAqB,uBAAQ,UACjC,UAAU,GAAG,MAAM,GAAG,EAAE,IAAG,CAAE,EAC7B,SAAQ;AAEV,YAAM,gBAAa,OAAA,OAAA,OAAA,OAAA,CAAA,GACd,kBAAkB,GAAA,EACrB,MAAMC,eAAc,OAAM,CAAA;AAG5B,aAAO;IACT,CAAC;;;;;;;EAOM,OAAa,mBAAmB,SAMtC;;AACC,YAAM;QACJ,sBAAsB;;QACtB,YAAY;;QACZ,eAAe;;QACf,kBAAkB;;QAClB;MAAoB,IAAK;AAE3B,YAAM,iBAAiB,MAAM,cAAa,mBAAmB;QAC3D,cAAe;QACf,OAAe;OAChB;AAMD,YAAM,oBAAoB,MAAM,cAAa,mBAAmB;QAC9D,cAAe;QACf,OAAe;OAChB;AAED,YAAM,SAAuB;QAC3B,wBAAwB;0CACjB,cAAc,GAAA,EAAE,eAAe,CAAC,gBAAgB,EAAC,CAAA;0CACjD,iBAAiB,GAAA,EAAE,eAAe,CAAC,cAAc,EAAC,CAAA;;;AAI3D,YAAM,kBAAsC;QAC1C,gBAAiB,CAAC,eAAe;QACjC,OAAiB;QACjB,aAAiB,CAAC,YAAY;;AAGhC,YAAM,WAAyB,CAAC;QAC9B,IAAO;QACP;QACA,MAAO;OACR;AAED,aAAO,EAAE,QAAQ,SAAQ;IAC3B,CAAC;;EAEM,OAAa,mBAAmB,SAGtC;;AACC,YAAM,EAAE,cAAc,MAAK,IAAK;AAEhC,UAAI;AAEJ,cAAQ,cAAc;QACpB,KAAK,WAAW;AACd,0BAAgB,MAAM,IAAI,8BAAc,EAAG,YAAY;YACrD,WAAc,EAAE,MAAM,SAAS,YAAY,UAAS;YACpD,aAAc;YACd,WAAc,CAAC,QAAQ,QAAQ;WAChC;AACD;;QAGF,KAAK,aAAa;AAChB,0BAAgB,MAAM,IAAI,8BAAc,EAAG,YAAY;YACrD,WAAc,EAAE,MAAM,SAAS,YAAY,YAAW;YACtD,aAAc;YACd,WAAc,CAAC,QAAQ,QAAQ;WAChC;AACD;;QAGF,SAAS;AACP,gBAAM,IAAI,MAAM,kCAAkC,YAAY,GAAG;;;AAKrE,YAAM,aAAa,MAAM,oBAAK,mBAAmB,EAAE,SAAS,cAAa,CAAE;AAG3E,UAAI,OAAO;AACT,mBAAW,cAAc,MAAM;AAC/B,mBAAW,aAAa,MAAM;aACzB;AAEL,cAAM,gBAAgB,MAAM,oBAAK,cAAc,EAAE,KAAK,WAAW,aAAY,CAAE;AAC/E,mBAAW,cAAc,MAAM;AAC/B,mBAAW,aAAa,MAAM;;AAGhC,aAAO;IACT,CAAC;;EAEM,OAAa,eAAe,SAGlC;;;;AAEC,UAAI,EAAE,eAAe,WAAW,SAAS,CAAA,EAAE,IAAK,YAAO,QAAP,YAAO,SAAP,UAAW,CAAA;AAG3D,UAAI,OAAO,2BAA2B,QAAW;AAC/C,cAAM,wBAAwB,MAAM,cAAa,mBAAmB;UAClE;UACA,OAAO;SACR;AACD,eAAO,yBAAyB,CAAA,OAAA,OAAA,OAAA,OAAA,CAAA,GAC3B,qBAAqB,GAAA,EACxB,eAAe,CAAC,kBAAkB,iBAAiB,EAAC,CAAA,CAAA;;AAKxD,UAAI,OAAO,gBAAgB,QAAW;AAEpC,eAAO,cAAc,MAAM,cAAa,mBAAmB;UACzD,cAAe;UACf,OAAe;SAChB;;AAIH,UAAI,OAAO,cAAc,QAAW;AAElC,eAAO,YAAY,MAAM,cAAa,mBAAmB;UACvD,cAAe;UACf,OAAe;SAChB;;AAIH,iBAAW,OAAO,CAAC,GAAG,OAAO,wBAAwB,OAAO,aAAa,OAAO,SAAS,GAAG;AAC1F,YAAI,kBAAkB;AAAK,WAAA,MAAA,KAAA,IAAI,cAAa,SAAG,QAAA,OAAA,SAAA,KAAA,GAAH,MAAQ,MAAM,oBAAK,cAAc,EAAE,KAAK,IAAI,aAAY,CAAE;AACtG,YAAI,mBAAmB;AAAK,WAAA,MAAA,KAAA,IAAI,eAAc,SAAG,QAAA,OAAA,SAAA,KAAA,GAAH,MAAQ,MAAM,oBAAK,cAAc,EAAE,KAAK,IAAI,cAAa,CAAE;;AAG3G,aAAO;;;;;;;;;;;EAWF,OAAa,qBAAqB,SAEtC;;AACD,YAAM,EAAE,YAAW,IAAK;AAExB,UAAI,CAAC,YAAY,IAAI;AACnB,cAAM,IAAI,MAAM,qDAAqD;;AAKvE,YAAM,CAAC,UAAU,IAAI,YAAY,EAAE,aAAa,MAAM,uBAAsB,CAAE;AAC9E,UAAI,qBAAqB,eAAU,QAAV,eAAU,SAAA,SAAV,WAAY,eAAe,GAAG;AACrD,cAAM,CAAC,oBAAoB,IAAI,WAAW,gBAAgB;AAC1D,cAAM,MAAM,YAAY;AACxB,cAAM,eAAe,GAAG,GAAG,GAAG,oBAAoB;AAClD,eAAO;;AAKT,UAAI,YAAY,kBACT,MAAM,QAAQ,YAAY,cAAc,KACxC,YAAY,eAAe,SAAS,KACpC,OAAO,YAAY,eAAe,CAAC,MAAM,UAAU;AACxD,cAAM,CAAC,oBAAoB,IAAI,YAAY;AAC3C,cAAM,MAAM,YAAY;AACxB,cAAM,eAAe,GAAG,GAAG,GAAG,oBAAoB;AAClD,eAAO;;IAEX,CAAC;;EAEM,OAAa,eAAe,SAGlC;;AACC,YAAM,EAAE,WAAW,CAAA,GAAI,OAAM,IAAK;AAGlC,YAAM,cAAc,MAAM,cAAa,kBAAkB;QACvD;QACA;OACD;AAGD,YAAM,cAAc,cAAa,YAAY,EAAE,KAAK,OAAO,YAAY,aAAY,CAAE;AACrF,YAAM,YAAY,cAAa,YAAY,EAAE,KAAK,OAAO,UAAU,aAAY,CAAE;AAGjF,YAAM,MAAM,MAAM,OAAO,kBAAkB;QACzC,UAAU;QACV;QACA;OACD;AAED,aAAO;IACT,CAAC;;EAEM,OAAa,gBAAgB,SAEnC;;AACC,YAAM,EAAE,OAAM,IAAK;AAEnB,YAAM,YAAY,SAAS,EAAE,OAAM,CAAE;AAErC,UAAI,CAAC,WAAW;AACd,cAAM,IAAI,MAAM,sCAAsC,MAAM,EAAE;;AAGhE,YAAM,eAAe,UAAU,IAAI,MAAM,KAAK,CAAC,EAAE,KAAK,GAAG;AAEzD,aAAO;IACT,CAAC;;EAEM,OAAa,QAAQ,SAG3B;;;AAEC,YAAM,EAAE,QAAQ,oBAAoB,CAAA,EAAE,IAAK;AAE3C,YAAM,YAAY,SAAS,EAAE,OAAM,CAAE;AACrC,UAAI,CAAC,WAAW;AACd,eAAO;UACL,YAAwB;UACxB,aAAwB;UACxB,qBAAwB,CAAA;UACxB,uBAAwB;YACtB,aAAe;YACf,OAAe;YACf,cAAe,qBAAqB,MAAM;;;;AAKhD,UAAI,UAAU,WAAW,OAAO;AAC9B,eAAO;UACL,YAAwB;UACxB,aAAwB;UACxB,qBAAwB,CAAA;UACxB,uBAAwB;YACtB,aAAe;YACf,OAAe;YACf,cAAe,yBAAyB,UAAU,MAAM;;;;AAK9D,YAAM,EAAE,qBAAqB,2CAA0C,IAAK;AAC5E,YAAM,eAAe,CAAC,QAAwB,IAAI,SAAS,GAAG,IAAI,MAAM,MAAM;AAC9E,YAAM,gBAAgB,GAAG,aAAa,kBAAkB,CAAC,GAAG,UAAU,GAAG;AAEzE,YAAM,WAAW,MAAM,MAAM,aAAa;AAE1C,UAAI;AACJ,UAAI;AACF,2BAAmB,MAAM,SAAS,KAAI;eAC/BC,QAAO;AACd,2BAAmB,CAAA;;AAGrB,UAAI,SAAS,IAAI;AACf,eAAO;;AAMT,UAAI,2BAA2B,kBAAkB;AAC/C,eAAO;;AAIT,UAAI,QAAQ;AACZ,UAAI,eAAe,iDAAiD,SAAS,MAAM;AAInF,UAAI,WAAW,oBACX,OAAO,iBAAiB,UAAU,YAClC,UAAU,iBAAiB,SAC3B,OAAO,iBAAiB,MAAM,SAAS,YACvC,aAAa,iBAAiB,SAC9B,OAAO,iBAAiB,MAAM,YAAY,UAAU;AACtD,gBAAQ,iBAAiB,MAAM,KAAK,SAAS,WAAW,IAAI,aAAa;AACzE,wBAAe,KAAA,iBAAiB,MAAM,aAAO,QAAA,OAAA,SAAA,KAAI;;AAGnD,aAAO;QACL,YAAwB;QACxB,aAAwB;QACxB,qBAAwB,CAAA;QACxB,uBAAwB;UACtB,aAAa;UACb;UACA;;;;;EAKE,OAAa,kBAAkB,SAGtC;;AACC,YAAM,EAAE,WAAW,CAAA,GAAI,OAAM,IAAK;AAMlC,YAAM,gBAAqC,CAAA;AAE3C,iBAAW,OAAO,OAAO,wBAAwB;AAE/C,cAAM,cAAqC,CAAA;AAC3C,mBAAW,gBAAgB,IAAI,eAAe;AAC5C,sBAAY,KACV,8CAA8C,YAAY,CAAC;;AAW/D,cAAM,cAAe,IAAI,aAAa,IAAI,WAAW,GAAG,IACpD,IAAI,aAAa,IAAI,UAAU,CAAC,IAChC,IAAI,aAAa;AAGrB,cAAM,YAA+B;UACnC,IAAe;UACf,cAAe,cAAa,YAAY,EAAE,KAAK,IAAI,aAAY,CAAE;UACjE,UAAe;UACf,MAAe;;AAGjB,sBAAc,KAAK,SAAS;;AAM9B,YAAM,cAAc,SAAS,IAAI,aAAW,OAAA,OAAA,OAAA,OAAA,CAAA,GACvC,OAAO,GAAA,EACV,IAAI,QAAQ,GAAG,WAAW,GAAG,IAAI,QAAQ,GAAG,UAAU,CAAC,IAAI,QAAQ,GAAE,CAAA,CACrE;AAMF,YAAM,mBAAqC;QACzC,YAAa;QACb,UAAa;;AAGf,aAAO;IACT,CAAC;;EAEO,OAAa,oBAAoB,SAIxC;;AACC,YAAM,EAAE,aAAa,sBAAsB,mBAAkB,IAAK;AAGlE,YAAM,gBAAgB,MAAM,WAAW,oBAAoB;QACzD,UAAc;QACd,aAAc,cAAa,YAAY,EAAE,KAAK,qBAAoB,CAAE;QACpE,WAAc,cAAa,YAAY,EAAE,KAAK,mBAAkB,CAAE;OACnE;AAED,aAAO;IACT,CAAC;;EAEO,OAAO,YAAY,EAAE,IAAG,GAAyC;AACvE,QAAI,SAA0C,CAAA;AAE9C,QAAI,SAAS,KAAK;AAChB,aAAO,MAAM,IAAI;AACjB,aAAO,MAAM,IAAI;AACjB,aAAO,IAAI,IAAI;AACf,UAAI,OAAO;AAAK,eAAO,IAAI,IAAI;AAE/B,UAAI,OAAO,OAAO,IAAI,GAAG;AAEvB,eAAO,OAAA,OAAA,OAAA,OAAA,CAAA,GAAK,MAAM,GAAA,EAAE,GAAG,IAAI,EAAC,CAAA;;AAG9B,aAAO,OAAA,OAAA,CAAA,GAAK,MAAM;;AAGpB,UAAM,IAAI,MAAM,yCAAyC;EAC3D;;AAxhBc,aAAA,aAAa;;;AyB1E7B,IAAAC,iBAAgC;AAChC,IAAAC,iBAOO;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBP,IAAM,4BAA4B;EAChC;EACA;EACA;;AAGF,IAAM,4BAAoD;EACxD,8BAA+B;EAC/B,kBAA+B;EAC/B,6BAA+B;;AAKjC,IAAM,+BAAuD;;EAE3D,KAAM;;EAGN,KAAM;;EAGN,KAAM;;AAmCF,IAAO,eAAP,MAAO,cAAY;EAMhB,OAAa,OAAO,SAA6B;;;AACtD,UAAI,EACF,gCAAgC,OAChC,cACA,QACA,kBAAkB,iBAAgB,IAChC,YAAO,QAAP,YAAO,SAAP,UAAW,CAAA;AAGf,UAAI,WAAW,QAAW;AACxB,iBAAS,MAAM,cAAa,eAAe,EAAE,aAAY,CAAE;;AAG7D,YAAM,cAAoC,CAAA;AAC1C,UAAI,cAAc;AAElB,WAAI,MAAA,KAAA,OAAO,4BAAsB,QAAA,OAAA,SAAA,SAAA,GAAG,CAAC,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,cAAc;AAEpD,cAAM,eAAe,OAAO,uBAAuB,CAAC,EAAE;AACtD,sBAAc,MAAM,oBAAK,iBAAiB,EAAE,KAAK,aAAY,CAAE;;AAGjE,UAAI,CAAC,aAAa;AAChB,cAAM,IAAI,MAAM,sDAAsD;;AAIxE,kBAAY,MAAM,WAAW,WAAW;AAGxC,kBAAY,WAAW,MAAM,cAAa,eAAe;QACvD,KAAK,YAAY;QACjB;QACA;OACD;AAGD,kBAAY,SAAS;AAErB,aAAO;;;;;;;;;;;EAWF,OAAa,eAAe,SAAoC;;AACrE,YAAM,EACJ,iBAAiB,gCACjB,KACA,gCAAgC,OAChC,mCAAmC,OACnC,kBAAkB,iBAAgB,IAChC;AAKJ,YAAMC,YAAiC,CAAA;AAcvC,UAAI;AACJ,UAAI;AACF,SAAC,EAAE,IAAI,eAAc,IAAK,SAAS,EAAE,QAAQ,IAAG,CAAE;eAC3C,OAAY;AACnB,cAAM,IAAI,MAAM,+BAA+B,GAAG,EAAE;;AAUtD,UAAI,CAAC,cAAa,mBAAmB,EAAE,IAAG,CAAE,GAAG;AAC7C,cAAM,IAAI,MAAM,0CAA0C,GAAG,EAAE;;AAQjE,YAAM,8BAA8B,MAAM,cAAa,sBAAsB;QAC3E;QACA;QACA;QACA;OACD;AASD,MAAAA,UAAS,KAAK;AAMd,MAAAA,UAAS,qBAAqB,CAAC,2BAA2B;AAQ1D,MAAAA,UAAS,iBAAiB,CAAC,4BAA4B,EAAE;AACzD,MAAAA,UAAS,kBAAkB,CAAC,4BAA4B,EAAE;AAC1D,MAAAA,UAAS,uBAAuB,CAAC,4BAA4B,EAAE;AAC/D,MAAAA,UAAS,uBAAuB,CAAC,4BAA4B,EAAE;AAS/D,UAAI,kCAAkC,MAAM;AAO1C,cAAM,4BACH,oBAAoB,+BACjB,8BACA;AAON,cAAM,+BAA+B,MAAM,KAAK,uBAAuB;UACrE;UACA;UACA;UACA,iBAAiB;SAClB;AAMD,QAAAA,UAAS,mBAAmB,KAAK,4BAA4B;AAO7D,QAAAA,UAAS,eAAe,CAAC,6BAA6B,EAAE;;AAS1D,YAAM,eAAe,CAAC,cAAc;AAMpC,YAAM,0BAA0B,2BAA2B,EAAE,aAAaA,UAAQ,CAAE;AACpF,8BAAwB,QAAQ,CAAC,aAAoB;AACnD,cAAM,UAAU,0BAA0B,QAAQ;AAClD,qBAAa,KAAK,OAAO;MAC3B,CAAC;AACD,MAAAA,UAAS,UAAU,IAAI;AAKvB,aAAOA;IACT,CAAC;;;;;;;EAOM,OAAa,uBAAuB,SAK1C;;AACC,YAAM,EAAE,KAAK,kCAAkC,gBAAgB,gBAAe,IAAK;AAKnF,YAAM,qBAAkD,CAAA;AAMxD,YAAM,EACJ,KAAK,mBACL,gBAAgB,gBAAe,IAC7B,MAAM,cAAa,oBAAoB,EAAE,eAAc,CAAE;AAY7D,YAAM,eAAe,kBAAkB;AACvC,YAAM,iBAAiB,6BAA6B,eAAe;AACnE,UAAI,iBAAiB,gBAAgB;AACnC,cAAM,IAAI,MAAM,oCAAoC,YAAY,kBAAkB,cAAc,SAAS;;AAQ3G,YAAM,oBAAoB,eAAAC,MAAY,iBAAiB;QACrD,KAAiB;QACjB,gBAAiB;OAClB;AAOD,yBAAmB,KAAK,GAAG,GAAG,IAAI,iBAAiB;AACnD,UAAI;AACF,YAAI,IAAI,mBAAmB,EAAE;eACtB,OAAY;AACnB,cAAM,IAAI,MAAM,+DAA+D;;AAQjF,UAAI,CAAE,0BAA0B,SAAS,eAAe,GAAI;AAC1D,cAAM,IAAI,MAAM,iDAAiD,eAAe,EAAE;;AASpF,YAAM,yBAAyB,CAAC,YAAY,kBAAkB,2BAA2B;AACzF,UAAI,qCAAqC,SACpC,CAAE,uBAAuB,SAAS,eAAe,GAAI;AACxD,cAAM,IAAI,MAAM,oCAAoC,eAAe,6DAA6D;;AAMlI,yBAAmB,OAAO;AAO1B,yBAAmB,aAAa;AAChC,UAAI,CAAC,cAAa,mBAAmB,EAAE,IAAG,CAAE,GAAG;AAC7C,cAAM,IAAI,MAAM,0CAA0C,GAAG,EAAE;;AAUjE,UAAI,oBAAoB,6BAA6B;AACnD,2BAAmB,qBAAqB;;AAQ1C,UAAI,oBAAoB,kBAAkB;AACxC,cAAM,YAAY,MAAM,oBAAK,iBAAiB,EAAE,MAAM,gBAAe,CAAE;AACvE,cAAM,aAAa,MAAM,oBAAK,SAAQ,OAAA,OAAA,EACpC,aAAc,mBACd,SAAc,SAAQ,GACnB,SAAS,CAAA;AAGd,YAAI,OAAO,cAAc,EAAE,OAAO,aAAa;AAC7C,6BAAmB,eAAe;;;AAOtC,aAAO;IACT,CAAC;;;;;;;;;EASM,OAAa,oBAAoB,SAEvC;;AACC,YAAM,EAAE,eAAc,IAAK;AAK3B,UAAI,sBAAgE,CAAA;AAWpE,YAAM,EACJ,KAAK,mBACL,gBAAgB,gBAAe,IAC7B,eAAAA,MAAY,iBAAiB,EAAE,gBAAgB,eAAc,CAAE;AASnE,UAAI,oBAAoB,KAAM;AAC5B,cAAM,oCAAoC,MAAM,uBAAQ,yBAAyB;UAC/E,WAAW;SACZ;AAQD,8BAAsB;UACpB,KAAiB;UACjB,gBAAiB;;;AAOrB,aAAO;IACT,CAAC;;;;;;;;EAQM,OAAa,sBAAsB,SAKzC;;AACC,YAAM,EAAE,KAAK,kCAAkC,gBAAgB,gBAAe,IAAK;AAKnF,YAAM,qBAAkD,CAAA;AAMxD,YAAM,EACJ,KAAK,mBACL,gBAAgB,iBAChB,eAAc,IACZ,eAAAA,MAAY,iBAAiB,EAAE,gBAAgB,eAAc,CAAE;AASnE,YAAM,eAAe,kBAAkB;AACvC,YAAM,iBAAiB,6BAA6B,eAAe;AACnE,UAAI,iBAAiB,gBAAgB;AACnC,cAAM,IAAI,MAAM,oCAAoC,YAAY,kBAAkB,cAAc,SAAS;;AAW3G,UAAI,UAAU;AACd,cAAQ,gBAAgB;QACtB,KAAK;AACH,oBAAU,MAAM,yBAAU,kBAAkB,EAAE,KAAK,kBAAiB,CAAE;AACtE;QACF,KAAK;AACH,oBAAU,MAAM,uBAAQ,kBAAkB,EAAE,KAAK,kBAAiB,CAAE;AACpE;QACF,KAAK;AAGH,oBAAU;AACV;;AAEJ,UAAI,CAAC,SAAS;AACZ,cAAM,IAAI,MAAM,gDAAgD;;AAQlE,yBAAmB,KAAK,GAAG,GAAG,IAAI,cAAc;AAChD,UAAI;AACF,YAAI,IAAI,mBAAmB,EAAE;eACtB,OAAY;AACnB,cAAM,IAAI,MAAM,+DAA+D;;AAQjF,UAAI,CAAE,0BAA0B,SAAS,eAAe,GAAI;AAC1D,cAAM,IAAI,MAAM,iDAAiD,eAAe,EAAE;;AASpF,YAAM,yBAAyB,CAAC,YAAY,kBAAkB,4BAA4B;AAC1F,UAAI,qCAAqC,SACpC,CAAE,uBAAuB,SAAS,eAAe,GAAI;AACxD,cAAM,IAAI,MAAM,oCAAoC,eAAe,6DAA6D;;AAMlI,yBAAmB,OAAO;AAO1B,yBAAmB,aAAa;AAChC,UAAI,CAAC,cAAa,mBAAmB,EAAE,IAAG,CAAE,GAAG;AAC7C,cAAM,IAAI,MAAM,0CAA0C,GAAG,EAAE;;AAUjE,UAAI,oBAAoB,8BAA8B;AACpD,2BAAmB,qBAAqB;;AAQ1C,UAAI,oBAAoB,kBAAkB;AACxC,cAAM,YAAY,MAAM,oBAAK,iBAAiB,EAAE,MAAM,gBAAe,CAAE;AACvE,cAAM,aAAa,MAAM,oBAAK,SAAQ,OAAA,OAAA,EACpC,aAAc,mBACd,SAAc,SAAQ,GACnB,SAAS,CAAA;AAGd,YAAI,OAAO,cAAc,EAAE,OAAO,aAAa;AAC7C,6BAAmB,eAAe;;;AAOtC,aAAO;IACT,CAAC;;EAEM,OAAa,eAAe,SAElC;;AAEC,YAAM,EAAE,eAAe,UAAS,IAAK,YAAO,QAAP,YAAO,SAAP,UAAW,CAAA;AAEhD,UAAI;AAEJ,cAAQ,cAAc;QACpB,KAAK,WAAW;AACd,oBAAU,MAAM,IAAI,8BAAc,EAAG,YAAY;YAC/C,WAAc,EAAE,MAAM,SAAS,YAAY,UAAS;YACpD,aAAc;YACd,WAAc,CAAC,QAAQ,QAAQ;WAChC;AACD;;QAGF,KAAK,aAAa;AAChB,oBAAU,MAAM,IAAI,8BAAc,EAAG,YAAY;YAC/C,WAAc,EAAE,MAAM,SAAS,YAAY,YAAW;YACtD,aAAc;YACd,WAAc,CAAC,QAAQ,QAAQ;WAChC;AACD;;QAGF,SAAS;AACP,gBAAM,IAAI,MAAM,kCAAkC,YAAY,GAAG;;;AAIrE,YAAM,eAAe,MAAM,oBAAK,eAAe,EAAE,KAAK,QAAQ,UAAS,CAAE;AACzE,YAAM,gBAAgB,MAAM,oBAAK,eAAe,EAAE,KAAK,QAAQ,WAAU,CAAE;AAE3E,YAAM,SAAuB;QAC3B,wBAAwB,CAAC;UACvB;UACA;UACA,eAAe,CAAC,gBAAgB;SACjC;;AAGH,aAAO;IACT,CAAC;;;;;;;;;;EAUM,OAAa,qBAAqB,SAExC;;AACC,YAAM,EAAE,YAAW,IAAK;AAExB,UAAI,YAAY,kBACX,MAAM,QAAQ,YAAY,cAAc,KACxC,YAAY,eAAe,SAAS,KACpC,OAAO,YAAY,eAAe,CAAC,MAAM,UAAU;AAEtD,cAAM,CAAC,oBAAoB,IAAI,YAAY;AAC3C,cAAM,eAAe;AAErB,eAAO;;IAEX,CAAC;;EAEM,OAAa,QAAQ,SAG3B;;AACC,YAAM,EAAE,QAAQ,mBAAmB,EAAC,IAAK;AAGzC,YAAM,YAAY,SAAS,EAAE,OAAM,CAAE;AACrC,UAAI,CAAC,WAAW;AACd,eAAO;UACL,YAAwB;UACxB,aAAwB;UACxB,qBAAwB,CAAA;UACxB,uBAAwB;YACtB,aAAe;YACf,OAAe;YACf,cAAe,qBAAqB,MAAM;;;;AAKhD,UAAI,UAAU,WAAW,OAAO;AAC9B,eAAO;UACL,YAAwB;UACxB,aAAwB;UACxB,qBAAwB,CAAA;UACxB,uBAAwB;YACtB,aAAe;YACf,OAAe;YACf,cAAe,yBAAyB,UAAU,MAAM;;;;AAK9D,YAAM,cAAc,MAAM,cAAa,eAAe,EAAE,KAAK,UAAU,IAAG,CAAE;AAE5E,aAAO;QACL,YAAwB;QACxB;QACA,qBAAwB,CAAA;QACxB,uBAAwB;UACtB,aAAc;UACd,KAAc;YACZ,WAAmB,UAAU;YAC7B,kBAAmB,UAAU;YAC7B,QAAmB,UAAU;;;;IAIrC,CAAC;;EAEM,OAAO,mBAAmB,SAEhC;AACC,UAAM,EAAE,IAAG,IAAK;AAEhB,UAAM,EAAE,QAAQ,IAAI,eAAc,IAAK,SAAS,EAAE,QAAQ,IAAG,CAAE;AAC/D,UAAM,CAAC,MAAM,IAAI,IAAI,MAAM,KAAK,CAAC;AASjC,UAAM,UAAU;AAEhB,WACE,WAAW,SACX,WAAW,SACX,SAAS,OAAO,IAAI,SACpB,gCAAgB,cAAc,MAAM,YACpC,CAAC,eAAe,WAAW,GAAG;EAElC;;AA1rBc,aAAA,aAAa;;;AClFtB,IAAM,uBAAyC;EACpD,KAAK,SAAU,MAAY;AACzB,WAAO;EACT;EACA,KAAK,SAAU,MAAc,QAA2B;AACtD,WAAO;EACT;EACA,QAAQ,SAAU,MAAY;AAC5B,WAAO;EACT;EACA,OAAO,WAAA;AACL,WAAO;EACT;EACA,OAAO,WAAA;AACL,WAAO;EACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHI,IAAO,cAAP,MAAkB;;;;;;;;EAkBtB,YAAY,SAA2B;AAT/B,SAAA,eAA+C,oBAAI,IAAG;AAU5D,SAAK,QAAQ,QAAQ,SAAS;AAE9B,eAAW,YAAY,QAAQ,cAAc;AAC3C,WAAK,aAAa,IAAI,SAAS,YAAY,QAAQ;;EAEvD;;;;;;;;;;;;;;;;;EAkBM,QAAQ,QAAgB,mBAAwC;;AAEpE,YAAM,YAAY,SAAS,EAAE,OAAM,CAAE;AACrC,UAAI,CAAC,WAAW;AACd,eAAO;UACL,YAAwB;UACxB,aAAwB;UACxB,qBAAwB,CAAA;UACxB,uBAAwB;YACtB,aAAe;YACf,OAAe;YACf,cAAe,qBAAqB,MAAM;;;;AAKhD,YAAM,WAAW,KAAK,aAAa,IAAI,UAAU,MAAM;AACvD,UAAI,CAAC,UAAU;AACb,eAAO;UACL,YAAwB;UACxB,aAAwB;UACxB,qBAAwB,CAAA;UACxB,uBAAwB;YACtB,aAAe;YACf,OAAe;YACf,cAAe,yBAAyB,UAAU,MAAM;;;;AAK9D,YAAM,yBAAyB,MAAM,KAAK,MAAM,IAAI,UAAU,GAAG;AAEjE,UAAI,wBAAwB;AAC1B,eAAO;aACF;AACL,cAAM,mBAAmB,MAAM,SAAS,QAAQ;UAC9C,QAAQ,UAAU;UAClB;SACD;AACD,cAAM,KAAK,MAAM,IAAI,UAAU,KAAK,gBAAgB;AAEpD,eAAO;;IAEX,CAAC;;;;;ACvGH,gBAAe;AACf,mBAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBhB,IAAO,wBAAP,MAAO,uBAAqB;EAShC,YAAY,UAAmC,CAAA,GAAE;AAC/C,QAAI,EAAE,UAAU,IAAG,IAAK;AAExB,iBAAQ,QAAR,aAAQ,SAAR,WAAA,WAAa,uBAAsB,eAAe;AAClD,YAAG,QAAH,QAAG,SAAH,MAAA,MAAQ,uBAAsB,eAAe;AAE7C,SAAK,QAAQ,IAAI,mBAAM,QAAQ;AAC/B,SAAK,UAAM,UAAAC,SAAG,GAAG;EACnB;EAEM,IAAI,KAAW;;AACnB,UAAI;AACF,cAAMC,OAAM,MAAM,KAAK,MAAM,IAAI,GAAG;AACpC,cAAM,eAA6B,KAAK,MAAMA,IAAG;AAEjD,YAAI,KAAK,IAAG,KAAM,aAAa,WAAW;AAExC,eAAK,MAAM,SAAS,MAAM,KAAK,MAAM,IAAI,GAAG,CAAC;AAE7C;eACK;AACL,iBAAO,aAAa;;eAGhB,OAAY;AAElB,YAAI,MAAM,SAAS,mBAAmB;AACpC;;AAGF,cAAM;;IAEV,CAAC;;EAED,IAAI,KAAa,OAA0B;AACzC,UAAM,eAA6B,EAAE,WAAW,KAAK,IAAG,IAAK,KAAK,KAAK,MAAK;AAC5E,UAAMA,OAAM,KAAK,UAAU,YAAY;AAEvC,WAAO,KAAK,MAAM,IAAI,KAAKA,IAAG;EAChC;EAEA,OAAO,KAAW;AAChB,WAAO,KAAK,MAAM,IAAI,GAAG;EAC3B;EAEA,QAAK;AACH,WAAO,KAAK,MAAM,MAAK;EACzB;EAEA,QAAK;AACH,WAAO,KAAK,MAAM,MAAK;EACzB;;AAxDe,sBAAA,iBAAoD;EACjE,UAAW;EACX,KAAW;;",
  "names": ["module", "coerce", "hash", "debug", "ms", "module", "module", "module", "module", "useColors", "debug", "str", "module", "module", "module", "randomBytes", "EventEmitter", "length", "KBucket", "module", "digitCount", "getType", "module", "getType", "encode", "buffE", "buffD", "buffL", "module", "INTEGER_START", "STRING_DELIM", "DICTIONARY_START", "LIST_START", "END_OF_TYPE", "getIntFromBuffer", "decode", "length", "module", "digitCount", "getType", "listLength", "length", "encodingLength", "mapLength", "objectLength", "stringLength", "arrayBufferLength", "module", "module", "dns", "err", "noop", "module", "KBucket", "randombytes", "toBuffer", "err", "noop", "parseIp", "str", "module", "noop", "err", "module", "module", "module", "LRU", "module", "fill", "concat", "toBuffer", "equals", "from", "length", "module", "module", "err", "module", "goodbye", "merge", "sets", "length", "slice", "xl", "x", "join", "subexp", "str", "typeOf", "o", "undefined", "Object", "prototype", "toString", "call", "split", "pop", "shift", "toLowerCase", "toUpperCase", "toArray", "obj", "Array", "setInterval", "assign", "target", "source", "key", "buildExps", "isIRI", "ALPHA$$", "CR$", "DIGIT$$", "DQUOTE$$", "HEXDIG$$", "SP$$", "PCT_ENCODED$", "SUB_DELIMS$$", "RESERVED$$", "GEN_DELIMS$$", "UCSCHAR$$", "SCHEME$", "USERINFO$", "UNRESERVED$$", "DEC_OCTET$", "DEC_OCTET_RELAXED$", "H16$", "LS32$", "IPV4ADDRESS$", "IPV6ADDRESS1$", "IPV6ADDRESS2$", "IPV6ADDRESS3$", "IPV6ADDRESS4$", "IPV6ADDRESS5$", "IPV6ADDRESS6$", "IPV6ADDRESS7$", "IPV6ADDRESS8$", "IPV6ADDRESS9$", "ZONEID$", "IPV6ADDRESS$", "IP_LITERAL$", "IPV6ADDRZ_RELAXED$", "IPVFUTURE$", "HOST$", "REG_NAME$", "PORT$", "AUTHORITY$", "PCHAR$", "SEGMENT$", "SEGMENT_NZ$", "SEGMENT_NZ_NC$", "PATH_ABEMPTY$", "PATH_ABSOLUTE$", "PATH$", "PATH_NOSCHEME$", "PATH_ROOTLESS$", "PATH_EMPTY$", "QUERY$", "IPRIVATE$$", "FRAGMENT$", "HIER_PART$", "URI$", "RELATIVE_PART$", "RELATIVE$", "URI_REFERENCE$", "ABSOLUTE_URI$", "GENERIC_REF$", "RELATIVE_REF$", "ABSOLUTE_REF$", "SAMEDOC_REF$", "AUTHORITY_REF$", "RegExp", "maxInt", "base", "tMin", "tMax", "skew", "damp", "initialBias", "initialN", "delimiter", "regexPunycode", "regexNonASCII", "regexSeparators", "errors", "baseMinusTMin", "floor", "Math", "stringFromCharCode", "String", "fromCharCode", "error", "type", "RangeError", "map", "array", "fn", "result", "mapDomain", "string", "parts", "replace", "labels", "encoded", "ucs2decode", "output", "counter", "value", "charCodeAt", "extra", "push", "ucs2encode", "fromCodePoint", "basicToDigit", "codePoint", "digitToBasic", "digit", "flag", "adapt", "delta", "numPoints", "firstTime", "k", "decode", "input", "inputLength", "i", "n", "bias", "basic", "lastIndexOf", "j", "index", "oldi", "w", "t", "baseMinusT", "out", "splice", "encode", "currentValue", "basicLength", "handledCPCount", "m", "handledCPCountPlusOne", "q", "qMinusT", "toUnicode", "test", "toASCII", "punycode", "SCHEMES", "pctEncChar", "chr", "c", "e", "pctDecChars", "newStr", "il", "parseInt", "substr", "c2", "c3", "_normalizeComponentEncoding", "components", "protocol", "decodeUnreserved", "decStr", "match", "UNRESERVED", "scheme", "PCT_ENCODED", "NOT_SCHEME", "userinfo", "NOT_USERINFO", "host", "NOT_HOST", "path", "NOT_PATH", "NOT_PATH_NOSCHEME", "query", "NOT_QUERY", "fragment", "NOT_FRAGMENT", "_stripLeadingZeros", "_normalizeIPv4", "matches", "IPV4ADDRESS", "address", "_normalizeIPv6", "IPV6ADDRESS", "zone", "reverse", "last", "first", "firstFields", "lastFields", "isLastFieldIPv4Address", "fieldCount", "lastFieldsStart", "fields", "allZeroFields", "reduce", "acc", "field", "lastLongest", "longestZeroFields", "sort", "a", "b", "newHost", "newFirst", "newLast", "URI_PARSE", "NO_MATCH_IS_UNDEFINED", "parse", "uriString", "options", "iri", "IRI_PROTOCOL", "URI_PROTOCOL", "reference", "port", "isNaN", "indexOf", "schemeHandler", "unicodeSupport", "domainHost", "_recomposeAuthority", "uriTokens", "_", "$1", "$2", "RDS1", "RDS2", "RDS3", "RDS5", "removeDotSegments", "im", "s", "Error", "serialize", "authority", "charAt", "absolutePath", "resolveComponents", "relative", "skipNormalization", "tolerant", "resolve", "baseURI", "relativeURI", "schemelessOptions", "normalize", "uri", "equal", "uriA", "uriB", "escapeComponent", "ESCAPE", "unescapeComponent", "handler", "secure", "http", "isSecure", "wsComponents", "resourceName", "ws", "O", "ATEXT$$", "QTEXT$$", "VCHAR$$", "SOME_DELIMS$$", "NOT_LOCAL_PART", "NOT_HFNAME", "NOT_HFVALUE", "mailtoComponents", "to", "unknownHeaders", "headers", "hfields", "hfield", "toAddrs", "subject", "body", "addr", "toAddr", "atIdx", "localPart", "domain", "name", "URN_PARSE", "urnComponents", "nid", "nss", "urnScheme", "uriComponents", "UUID", "uuidComponents", "uuid", "https", "wss", "mailto", "urn", "module", "values", "require_src", "module", "encode", "length", "i", "str", "j", "decode", "require_util", "module", "concat", "length", "module", "alphabet", "module", "decode", "alphabet", "encode", "rfc4648", "module", "rfc4648", "require_src", "module", "concat", "encode", "decode", "err", "require_encode", "module", "encode", "MSB", "REST", "MSBALL", "INT", "require_decode", "module", "read", "MSB", "REST", "module", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "module", "require_constants", "module", "module", "encode", "length", "i", "str", "j", "decode", "empty", "equals", "coerce", "str", "require_base", "Encoder", "bytes", "Decoder", "decoder", "or", "ComposedDecoder", "Codec", "from", "encode", "decode", "alphabet", "rfc4648", "str", "require_base2", "base64", "base64pad", "base64url", "base64urlpad", "alphabet", "encode", "decode", "str", "require_varint", "module", "encode_1", "encode", "MSB", "REST", "MSBALL", "INT", "decode", "read", "MSB$1", "REST$1", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "length", "varint", "_brrp_varint", "require_varint", "decode", "encodeTo", "encodingLength", "varint", "create", "bytes", "Digest", "decode", "equals", "from", "encode", "Hasher", "crypto", "sha256", "sha512", "require_identity", "encode", "encode", "decode", "encode", "decode", "varint", "version", "bytes", "digest", "length", "decoder", "cid", "require_src", "varint", "base64", "varint", "module", "encode", "decode", "decoder", "str", "string", "concat", "length", "require_src", "module", "varint", "hash", "decode", "encode", "length", "validate", "import_crypto", "length", "length", "i", "str", "length", "length", "encodingLength", "Debug", "LRU", "records", "krpc", "low", "opts", "err", "node", "verify", "hash", "from", "KBucket", "message", "randombytes", "crypto", "str", "import_sodium_universal", "import_crypto", "digitCount", "getType", "encode", "getType", "buffE", "buffD", "buffL", "encode_default", "INTEGER_START", "STRING_DELIM", "DICTIONARY_START", "LIST_START", "END_OF_TYPE", "getIntFromBuffer", "decode", "length", "decode_default", "listLength", "length", "encodingLength", "mapLength", "digitCount", "objectLength", "stringLength", "arrayBufferLength", "getType", "encoding_length_default", "encodingLength", "encoding_length_default", "bencode_default", "encode_default", "decode_default", "sodium", "encodeSigData", "bencode_default", "sodium", "z32", "verify", "sodium", "path", "DHT", "goodbye", "createGetResponse", "err", "from", "encodeSigData", "crypto", "fs", "import_z32", "import_dns_packet", "import_z32", "import_sodium_universal", "verify", "sodium", "z32", "dns", "encodeSigData", "SignedPacket", "z32", "_z32", "z32", "SignedPacket", "import_dns_packet", "document", "z32", "SignedPacket", "import_z32", "import_crypto", "document", "z32", "import_common", "import_crypto", "decoder", "encode", "decode", "decode", "alphabet", "encode", "Encoder", "OperationKeyType", "Encoder", "Encoder", "import_crypto", "encode", "decode", "encodingLength", "encodingLength", "from", "encode", "from", "crypto", "hash", "Encoder", "OperationType", "PatchAction", "Encoder", "G", "crypto", "p", "n", "P", "N", "Gx", "Gy", "CURVE", "mod", "err", "str", "au8", "u8n", "toU8", "h2b", "isPoint", "Point", "Gpows", "G", "I", "wNAF", "padh", "b2h", "from", "concatB", "cr", "hash", "toU8", "err", "mod", "N", "etc", "h2b", "b2h", "concatB", "crypto", "cr", "u8n", "etc", "W", "precompute", "G", "wNAF", "Gpows", "p", "n", "I", "IonNetwork", "IonPublicKeyPurpose", "OperationType", "IonProofOfWork", "OperationType", "error", "import_common", "import_crypto", "document", "cryptoUtils", "ms", "str"]
}
