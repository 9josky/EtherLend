// import type {
//   DidKeyOptions,
//   DidIonCreateOptions,
//   DidMethodApi,
//   DidMethodCreator,
//   DidMethodResolver,
//   DidResolverCache,
//   DidResolutionResult,
//   DidState
// } from '@web5/dids';
// import { DidResolver } from '@web5/dids';
// // Map method names to option types
// type CreateMethodOptions = {
//   ion: DidIonCreateOptions;
//   key: DidKeyOptions;
// };
// // A conditional type for inferring options based on the method name
// type CreateOptions<M extends keyof CreateMethodOptions> = CreateMethodOptions[M];
// export type DidApiOptions = {
//   didMethodApis: DidMethodApi[];
//   cache?: DidResolverCache;
// }
export class DidApi {
    constructor(options) {
        this.agent = options.agent;
        this.connectedDid = options.connectedDid;
    }
}
